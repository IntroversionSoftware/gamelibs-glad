/**
 * Loader generated by glad 2.0.8 on -
 *
 * SPDX-License-Identifier: (WTFPL OR CC0-1.0) AND Apache-2.0
 *
 * Generator: C/C++
 * Specification: gl
 * Extensions: 967
 *
 * APIs:
 *  - gl:core=4.6
 *  - gles2=3.2
 *
 * Options:
 *  - ALIAS = True
 *  - HEADER_ONLY = False
 *  - LOADER = True
 *  - USE_PFN_RANGES = True
 *
 * Commandline:
 *    --merge --api='gl:core=4.6,gles2=3.2' --extensions='GL_3DFX_multisample,GL_3DFX_tbuffer,GL_3DFX_texture_compression_FXT1,GL_AMD_blend_minmax_factor,GL_AMD_compressed_3DC_texture,GL_AMD_compressed_ATC_texture,GL_AMD_conservative_depth,GL_AMD_debug_output,GL_AMD_depth_clamp_separate,GL_AMD_draw_buffers_blend,GL_AMD_framebuffer_multisample_advanced,GL_AMD_framebuffer_sample_positions,GL_AMD_gcn_shader,GL_AMD_gpu_shader_half_float,GL_AMD_gpu_shader_int16,GL_AMD_gpu_shader_int64,GL_AMD_interleaved_elements,GL_AMD_multi_draw_indirect,GL_AMD_name_gen_delete,GL_AMD_occlusion_query_event,GL_AMD_performance_monitor,GL_AMD_pinned_memory,GL_AMD_program_binary_Z400,GL_AMD_query_buffer_object,GL_AMD_sample_positions,GL_AMD_seamless_cubemap_per_texture,GL_AMD_shader_atomic_counter_ops,GL_AMD_shader_ballot,GL_AMD_shader_explicit_vertex_parameter,GL_AMD_shader_fragment_mask,GL_AMD_shader_gpu_shader_half_float_fetch,GL_AMD_shader_image_load_store_lod,GL_AMD_shader_stencil_export,GL_AMD_shader_trinary_minmax,GL_AMD_sparse_texture,GL_AMD_stencil_operation_extended,GL_AMD_texture_gather_bias_lod,GL_AMD_texture_texture4,GL_AMD_transform_feedback3_lines_triangles,GL_AMD_transform_feedback4,GL_AMD_vertex_shader_layer,GL_AMD_vertex_shader_tessellator,GL_AMD_vertex_shader_viewport_index,GL_ANDROID_extension_pack_es31a,GL_ANGLE_base_vertex_base_instance,GL_ANGLE_blob_cache,GL_ANGLE_client_arrays,GL_ANGLE_clip_cull_distance,GL_ANGLE_copy_texture_3d,GL_ANGLE_depth_texture,GL_ANGLE_framebuffer_blit,GL_ANGLE_framebuffer_multisample,GL_ANGLE_get_image,GL_ANGLE_get_serialized_context_string,GL_ANGLE_get_tex_level_parameter,GL_ANGLE_instanced_arrays,GL_ANGLE_logic_op,GL_ANGLE_lossy_etc_decode,GL_ANGLE_memory_object_flags,GL_ANGLE_memory_object_fuchsia,GL_ANGLE_memory_size,GL_ANGLE_multi_draw,GL_ANGLE_pack_reverse_row_order,GL_ANGLE_polygon_mode,GL_ANGLE_program_binary,GL_ANGLE_program_binary_readiness_query,GL_ANGLE_program_cache_control,GL_ANGLE_provoking_vertex,GL_ANGLE_renderability_validation,GL_ANGLE_request_extension,GL_ANGLE_rgbx_internal_format,GL_ANGLE_robust_client_memory,GL_ANGLE_robust_fragment_shader_output,GL_ANGLE_robust_resource_initialization,GL_ANGLE_semaphore_fuchsia,GL_ANGLE_shader_binary,GL_ANGLE_shader_pixel_local_storage,GL_ANGLE_stencil_texturing,GL_ANGLE_texture_compression_dxt1,GL_ANGLE_texture_compression_dxt3,GL_ANGLE_texture_compression_dxt5,GL_ANGLE_texture_external_update,GL_ANGLE_texture_multisample,GL_ANGLE_texture_usage,GL_ANGLE_translated_shader_source,GL_ANGLE_vulkan_image,GL_ANGLE_yuv_internal_format,GL_APPLE_aux_depth_stencil,GL_APPLE_client_storage,GL_APPLE_clip_distance,GL_APPLE_color_buffer_packed_float,GL_APPLE_copy_texture_levels,GL_APPLE_element_array,GL_APPLE_fence,GL_APPLE_float_pixels,GL_APPLE_flush_buffer_range,GL_APPLE_framebuffer_multisample,GL_APPLE_object_purgeable,GL_APPLE_rgb_422,GL_APPLE_row_bytes,GL_APPLE_specular_vector,GL_APPLE_sync,GL_APPLE_texture_format_BGRA8888,GL_APPLE_texture_max_level,GL_APPLE_texture_packed_float,GL_APPLE_texture_range,GL_APPLE_transform_hint,GL_APPLE_vertex_array_object,GL_APPLE_vertex_array_range,GL_APPLE_vertex_program_evaluators,GL_APPLE_ycbcr_422,GL_ARB_ES2_compatibility,GL_ARB_ES3_1_compatibility,GL_ARB_ES3_2_compatibility,GL_ARB_ES3_compatibility,GL_ARB_arrays_of_arrays,GL_ARB_base_instance,GL_ARB_bindless_texture,GL_ARB_blend_func_extended,GL_ARB_buffer_storage,GL_ARB_cl_event,GL_ARB_clear_buffer_object,GL_ARB_clear_texture,GL_ARB_clip_control,GL_ARB_color_buffer_float,GL_ARB_compatibility,GL_ARB_compressed_texture_pixel_storage,GL_ARB_compute_shader,GL_ARB_compute_variable_group_size,GL_ARB_conditional_render_inverted,GL_ARB_conservative_depth,GL_ARB_copy_buffer,GL_ARB_copy_image,GL_ARB_cull_distance,GL_ARB_debug_output,GL_ARB_depth_buffer_float,GL_ARB_depth_clamp,GL_ARB_depth_texture,GL_ARB_derivative_control,GL_ARB_direct_state_access,GL_ARB_draw_buffers,GL_ARB_draw_buffers_blend,GL_ARB_draw_elements_base_vertex,GL_ARB_draw_indirect,GL_ARB_draw_instanced,GL_ARB_enhanced_layouts,GL_ARB_explicit_attrib_location,GL_ARB_explicit_uniform_location,GL_ARB_fragment_coord_conventions,GL_ARB_fragment_layer_viewport,GL_ARB_fragment_program,GL_ARB_fragment_program_shadow,GL_ARB_fragment_shader,GL_ARB_fragment_shader_interlock,GL_ARB_framebuffer_no_attachments,GL_ARB_framebuffer_object,GL_ARB_framebuffer_sRGB,GL_ARB_geometry_shader4,GL_ARB_get_program_binary,GL_ARB_get_texture_sub_image,GL_ARB_gl_spirv,GL_ARB_gpu_shader5,GL_ARB_gpu_shader_fp64,GL_ARB_gpu_shader_int64,GL_ARB_half_float_pixel,GL_ARB_half_float_vertex,GL_ARB_imaging,GL_ARB_indirect_parameters,GL_ARB_instanced_arrays,GL_ARB_internalformat_query,GL_ARB_internalformat_query2,GL_ARB_invalidate_subdata,GL_ARB_map_buffer_alignment,GL_ARB_map_buffer_range,GL_ARB_matrix_palette,GL_ARB_multi_bind,GL_ARB_multi_draw_indirect,GL_ARB_multisample,GL_ARB_multitexture,GL_ARB_occlusion_query,GL_ARB_occlusion_query2,GL_ARB_parallel_shader_compile,GL_ARB_pipeline_statistics_query,GL_ARB_pixel_buffer_object,GL_ARB_point_parameters,GL_ARB_point_sprite,GL_ARB_polygon_offset_clamp,GL_ARB_post_depth_coverage,GL_ARB_program_interface_query,GL_ARB_provoking_vertex,GL_ARB_query_buffer_object,GL_ARB_robust_buffer_access_behavior,GL_ARB_robustness,GL_ARB_robustness_isolation,GL_ARB_sample_locations,GL_ARB_sample_shading,GL_ARB_sampler_objects,GL_ARB_seamless_cube_map,GL_ARB_seamless_cubemap_per_texture,GL_ARB_separate_shader_objects,GL_ARB_shader_atomic_counter_ops,GL_ARB_shader_atomic_counters,GL_ARB_shader_ballot,GL_ARB_shader_bit_encoding,GL_ARB_shader_clock,GL_ARB_shader_draw_parameters,GL_ARB_shader_group_vote,GL_ARB_shader_image_load_store,GL_ARB_shader_image_size,GL_ARB_shader_objects,GL_ARB_shader_precision,GL_ARB_shader_stencil_export,GL_ARB_shader_storage_buffer_object,GL_ARB_shader_subroutine,GL_ARB_shader_texture_image_samples,GL_ARB_shader_texture_lod,GL_ARB_shader_viewport_layer_array,GL_ARB_shading_language_100,GL_ARB_shading_language_420pack,GL_ARB_shading_language_include,GL_ARB_shading_language_packing,GL_ARB_shadow,GL_ARB_shadow_ambient,GL_ARB_sparse_buffer,GL_ARB_sparse_texture,GL_ARB_sparse_texture2,GL_ARB_sparse_texture_clamp,GL_ARB_spirv_extensions,GL_ARB_stencil_texturing,GL_ARB_sync,GL_ARB_tessellation_shader,GL_ARB_texture_barrier,GL_ARB_texture_border_clamp,GL_ARB_texture_buffer_object,GL_ARB_texture_buffer_object_rgb32,GL_ARB_texture_buffer_range,GL_ARB_texture_compression,GL_ARB_texture_compression_bptc,GL_ARB_texture_compression_rgtc,GL_ARB_texture_cube_map,GL_ARB_texture_cube_map_array,GL_ARB_texture_env_add,GL_ARB_texture_env_combine,GL_ARB_texture_env_crossbar,GL_ARB_texture_env_dot3,GL_ARB_texture_filter_anisotropic,GL_ARB_texture_filter_minmax,GL_ARB_texture_float,GL_ARB_texture_gather,GL_ARB_texture_mirror_clamp_to_edge,GL_ARB_texture_mirrored_repeat,GL_ARB_texture_multisample,GL_ARB_texture_non_power_of_two,GL_ARB_texture_query_levels,GL_ARB_texture_query_lod,GL_ARB_texture_rectangle,GL_ARB_texture_rg,GL_ARB_texture_rgb10_a2ui,GL_ARB_texture_stencil8,GL_ARB_texture_storage,GL_ARB_texture_storage_multisample,GL_ARB_texture_swizzle,GL_ARB_texture_view,GL_ARB_timer_query,GL_ARB_transform_feedback2,GL_ARB_transform_feedback3,GL_ARB_transform_feedback_instanced,GL_ARB_transform_feedback_overflow_query,GL_ARB_transpose_matrix,GL_ARB_uniform_buffer_object,GL_ARB_vertex_array_bgra,GL_ARB_vertex_array_object,GL_ARB_vertex_attrib_64bit,GL_ARB_vertex_attrib_binding,GL_ARB_vertex_blend,GL_ARB_vertex_buffer_object,GL_ARB_vertex_program,GL_ARB_vertex_shader,GL_ARB_vertex_type_10f_11f_11f_rev,GL_ARB_vertex_type_2_10_10_10_rev,GL_ARB_viewport_array,GL_ARB_window_pos,GL_ARM_cooperative_matrix_layouts,GL_ARM_mali_program_binary,GL_ARM_mali_shader_binary,GL_ARM_rgba8,GL_ARM_shader_core_builtins,GL_ARM_shader_core_properties,GL_ARM_shader_framebuffer_fetch,GL_ARM_shader_framebuffer_fetch_depth_stencil,GL_ARM_texture_unnormalized_coordinates,GL_ATI_draw_buffers,GL_ATI_element_array,GL_ATI_envmap_bumpmap,GL_ATI_fragment_shader,GL_ATI_map_object_buffer,GL_ATI_meminfo,GL_ATI_pixel_format_float,GL_ATI_pn_triangles,GL_ATI_separate_stencil,GL_ATI_text_fragment_shader,GL_ATI_texture_env_combine3,GL_ATI_texture_float,GL_ATI_texture_mirror_once,GL_ATI_vertex_array_object,GL_ATI_vertex_attrib_array_object,GL_ATI_vertex_streams,GL_CHROMIUM_bind_uniform_location,GL_CHROMIUM_copy_compressed_texture,GL_CHROMIUM_copy_texture,GL_CHROMIUM_framebuffer_mixed_samples,GL_CHROMIUM_lose_context,GL_DMP_program_binary,GL_DMP_shader_binary,GL_EXT_422_pixels,GL_EXT_EGL_image_array,GL_EXT_EGL_image_storage,GL_EXT_EGL_image_storage_compression,GL_EXT_EGL_sync,GL_EXT_YUV_target,GL_EXT_abgr,GL_EXT_base_instance,GL_EXT_bfloat16,GL_EXT_bgra,GL_EXT_bindable_uniform,GL_EXT_blend_color,GL_EXT_blend_equation_separate,GL_EXT_blend_func_extended,GL_EXT_blend_func_separate,GL_EXT_blend_logic_op,GL_EXT_blend_minmax,GL_EXT_blend_subtract,GL_EXT_buffer_reference,GL_EXT_buffer_reference2,GL_EXT_buffer_reference_uvec2,GL_EXT_buffer_storage,GL_EXT_clear_texture,GL_EXT_clip_control,GL_EXT_clip_cull_distance,GL_EXT_clip_volume_hint,GL_EXT_cmyka,GL_EXT_color_buffer_float,GL_EXT_color_buffer_half_float,GL_EXT_color_subtable,GL_EXT_compiled_vertex_array,GL_EXT_conservative_depth,GL_EXT_control_flow_attributes,GL_EXT_control_flow_attributes2,GL_EXT_convolution,GL_EXT_coordinate_frame,GL_EXT_copy_image,GL_EXT_copy_texture,GL_EXT_cull_vertex,GL_EXT_debug_label,GL_EXT_debug_marker,GL_EXT_debug_printf,GL_EXT_demote_to_helper_invocation,GL_EXT_depth_bounds_test,GL_EXT_depth_clamp,GL_EXT_device_group,GL_EXT_direct_state_access,GL_EXT_discard_framebuffer,GL_EXT_disjoint_timer_query,GL_EXT_draw_buffers,GL_EXT_draw_buffers2,GL_EXT_draw_buffers_indexed,GL_EXT_draw_elements_base_vertex,GL_EXT_draw_instanced,GL_EXT_draw_range_elements,GL_EXT_draw_transform_feedback,GL_EXT_expect_assume,GL_EXT_external_buffer,GL_EXT_float8_e5m2_e4m3,GL_EXT_float_blend,GL_EXT_fog_coord,GL_EXT_fragment_invocation_density,GL_EXT_fragment_shader_barycentric,GL_EXT_fragment_shading_rate,GL_EXT_framebuffer_blit,GL_EXT_framebuffer_blit_layers,GL_EXT_framebuffer_multisample,GL_EXT_framebuffer_multisample_blit_scaled,GL_EXT_framebuffer_object,GL_EXT_framebuffer_sRGB,GL_EXT_geometry_point_size,GL_EXT_geometry_shader,GL_EXT_geometry_shader4,GL_EXT_gpu_program_parameters,GL_EXT_gpu_shader4,GL_EXT_gpu_shader5,GL_EXT_histogram,GL_EXT_index_array_formats,GL_EXT_index_func,GL_EXT_index_material,GL_EXT_index_texture,GL_EXT_instanced_arrays,GL_EXT_integer_dot_product,GL_EXT_light_texture,GL_EXT_map_buffer_range,GL_EXT_maximal_reconvergence,GL_EXT_memory_object,GL_EXT_memory_object_fd,GL_EXT_memory_object_win32,GL_EXT_mesh_shader,GL_EXT_misc_attribute,GL_EXT_multi_draw_arrays,GL_EXT_multi_draw_indirect,GL_EXT_multisample,GL_EXT_multisampled_compatibility,GL_EXT_multisampled_render_to_texture,GL_EXT_multisampled_render_to_texture2,GL_EXT_multiview_draw_buffers,GL_EXT_multiview_tessellation_geometry_shader,GL_EXT_multiview_texture_multisample,GL_EXT_multiview_timer_query,GL_EXT_nontemporal_keyword,GL_EXT_nonuniform_qualifier,GL_EXT_null_initializer,GL_EXT_occlusion_query_boolean,GL_EXT_opacity_micromap,GL_EXT_packed_depth_stencil,GL_EXT_packed_float,GL_EXT_packed_pixels,GL_EXT_paletted_texture,GL_EXT_pixel_buffer_object,GL_EXT_pixel_transform,GL_EXT_pixel_transform_color_table,GL_EXT_point_parameters,GL_EXT_polygon_offset,GL_EXT_polygon_offset_clamp,GL_EXT_post_depth_coverage,GL_EXT_primitive_bounding_box,GL_EXT_protected_textures,GL_EXT_provoking_vertex,GL_EXT_pvrtc_sRGB,GL_EXT_raster_multisample,GL_EXT_ray_cull_mask,GL_EXT_ray_flags_primitive_culling,GL_EXT_ray_query,GL_EXT_ray_tracing,GL_EXT_ray_tracing_position_fetch,GL_EXT_read_format_bgra,GL_EXT_render_snorm,GL_EXT_rescale_normal,GL_EXT_robustness,GL_EXT_sRGB,GL_EXT_sRGB_write_control,GL_EXT_samplerless_texture_functions,GL_EXT_scalar_block_layout,GL_EXT_secondary_color,GL_EXT_semaphore,GL_EXT_semaphore_fd,GL_EXT_semaphore_win32,GL_EXT_separate_depth_stencil,GL_EXT_separate_shader_objects,GL_EXT_separate_specular_color,GL_EXT_shader_16bit_storage,GL_EXT_shader_8bit_storage,GL_EXT_shader_atomic_float,GL_EXT_shader_atomic_float2,GL_EXT_shader_atomic_int64,GL_EXT_shader_explicit_arithmetic_types,GL_EXT_shader_explicit_arithmetic_types_float16,GL_EXT_shader_explicit_arithmetic_types_float32,GL_EXT_shader_explicit_arithmetic_types_float64,GL_EXT_shader_explicit_arithmetic_types_int16,GL_EXT_shader_explicit_arithmetic_types_int32,GL_EXT_shader_explicit_arithmetic_types_int64,GL_EXT_shader_explicit_arithmetic_types_int8,GL_EXT_shader_framebuffer_fetch,GL_EXT_shader_framebuffer_fetch_non_coherent,GL_EXT_shader_group_vote,GL_EXT_shader_image_int64,GL_EXT_shader_image_load_formatted,GL_EXT_shader_image_load_store,GL_EXT_shader_implicit_conversions,GL_EXT_shader_integer_mix,GL_EXT_shader_io_blocks,GL_EXT_shader_non_constant_global_initializers,GL_EXT_shader_pixel_local_storage,GL_EXT_shader_pixel_local_storage2,GL_EXT_shader_quad_control,GL_EXT_shader_realtime_clock,GL_EXT_shader_samples_identical,GL_EXT_shader_subgroup_extended_types,GL_EXT_shader_subgroup_extended_types_float16,GL_EXT_shader_subgroup_extended_types_int16,GL_EXT_shader_subgroup_extended_types_int64,GL_EXT_shader_subgroup_extended_types_int8,GL_EXT_shader_texture_lod,GL_EXT_shader_tile_image,GL_EXT_shadow_funcs,GL_EXT_shadow_samplers,GL_EXT_shared_memory_block,GL_EXT_shared_texture_palette,GL_EXT_sparse_texture,GL_EXT_sparse_texture2,GL_EXT_spec_constant_composites,GL_EXT_spirv_intrinsics,GL_EXT_stencil_clear_tag,GL_EXT_stencil_two_side,GL_EXT_stencil_wrap,GL_EXT_subgroup_uniform_control_flow,GL_EXT_subgroupuniform_qualifier,GL_EXT_subtexture,GL_EXT_terminate_invocation,GL_EXT_tessellation_point_size,GL_EXT_tessellation_shader,GL_EXT_texture,GL_EXT_texture3D,GL_EXT_texture_array,GL_EXT_texture_border_clamp,GL_EXT_texture_buffer,GL_EXT_texture_buffer_object,GL_EXT_texture_compression_astc_decode_mode,GL_EXT_texture_compression_bptc,GL_EXT_texture_compression_dxt1,GL_EXT_texture_compression_latc,GL_EXT_texture_compression_rgtc,GL_EXT_texture_compression_s3tc,GL_EXT_texture_compression_s3tc_srgb,GL_EXT_texture_cube_map,GL_EXT_texture_cube_map_array,GL_EXT_texture_env_add,GL_EXT_texture_env_combine,GL_EXT_texture_env_dot3,GL_EXT_texture_filter_anisotropic,GL_EXT_texture_filter_minmax,GL_EXT_texture_format_BGRA8888,GL_EXT_texture_format_sRGB_override,GL_EXT_texture_integer,GL_EXT_texture_lod_bias,GL_EXT_texture_mirror_clamp,GL_EXT_texture_mirror_clamp_to_edge,GL_EXT_texture_norm16,GL_EXT_texture_object,GL_EXT_texture_offset_non_const,GL_EXT_texture_perturb_normal,GL_EXT_texture_query_lod,GL_EXT_texture_rg,GL_EXT_texture_sRGB,GL_EXT_texture_sRGB_R8,GL_EXT_texture_sRGB_RG8,GL_EXT_texture_sRGB_decode,GL_EXT_texture_shadow_lod,GL_EXT_texture_shared_exponent,GL_EXT_texture_snorm,GL_EXT_texture_storage,GL_EXT_texture_storage_compression,GL_EXT_texture_swizzle,GL_EXT_texture_type_2_10_10_10_REV,GL_EXT_texture_view,GL_EXT_timer_query,GL_EXT_transform_feedback,GL_EXT_unpack_subimage,GL_EXT_vertex_array,GL_EXT_vertex_array_bgra,GL_EXT_vertex_attrib_64bit,GL_EXT_vertex_shader,GL_EXT_vertex_weighting,GL_EXT_vulkan_glsl_relaxed,GL_EXT_win32_keyed_mutex,GL_EXT_window_rectangles,GL_EXT_x11_sync_object,GL_FJ_shader_binary_GCCSO,GL_GREMEDY_frame_terminator,GL_GREMEDY_string_marker,GL_HP_convolution_border_modes,GL_HP_image_transform,GL_HP_occlusion_test,GL_HP_texture_lighting,GL_HUAWEI_cluster_culling_shader,GL_HUAWEI_program_binary,GL_HUAWEI_shader_binary,GL_HUAWEI_subpass_shading,GL_IBM_cull_vertex,GL_IBM_multimode_draw_arrays,GL_IBM_rasterpos_clip,GL_IBM_static_data,GL_IBM_texture_mirrored_repeat,GL_IBM_vertex_array_lists,GL_IMG_bindless_texture,GL_IMG_framebuffer_downsample,GL_IMG_multisampled_render_to_texture,GL_IMG_program_binary,GL_IMG_read_format,GL_IMG_shader_binary,GL_IMG_texture_compression_pvrtc,GL_IMG_texture_compression_pvrtc2,GL_IMG_texture_filter_cubic,GL_INGR_blend_func_separate,GL_INGR_color_clamp,GL_INGR_interlace_read,GL_INTEL_blackhole_render,GL_INTEL_conservative_rasterization,GL_INTEL_fragment_shader_ordering,GL_INTEL_framebuffer_CMAA,GL_INTEL_map_texture,GL_INTEL_parallel_arrays,GL_INTEL_performance_query,GL_KHR_blend_equation_advanced,GL_KHR_blend_equation_advanced_coherent,GL_KHR_context_flush_control,GL_KHR_cooperative_matrix,GL_KHR_debug,GL_KHR_memory_scope_semantics,GL_KHR_no_error,GL_KHR_parallel_shader_compile,GL_KHR_robust_buffer_access_behavior,GL_KHR_robustness,GL_KHR_shader_subgroup,GL_KHR_shader_subgroup_arithmetic,GL_KHR_shader_subgroup_ballot,GL_KHR_shader_subgroup_basic,GL_KHR_shader_subgroup_clustered,GL_KHR_shader_subgroup_quad,GL_KHR_shader_subgroup_rotate,GL_KHR_shader_subgroup_shuffle,GL_KHR_shader_subgroup_shuffle_relative,GL_KHR_shader_subgroup_vote,GL_KHR_texture_compression_astc_hdr,GL_KHR_texture_compression_astc_ldr,GL_KHR_texture_compression_astc_sliced_3d,GL_KHR_vulkan_glsl,GL_MESAX_texture_stack,GL_MESA_bgra,GL_MESA_framebuffer_flip_x,GL_MESA_framebuffer_flip_y,GL_MESA_framebuffer_swap_xy,GL_MESA_pack_invert,GL_MESA_program_binary_formats,GL_MESA_resize_buffers,GL_MESA_sampler_objects,GL_MESA_shader_integer_functions,GL_MESA_texture_const_bandwidth,GL_MESA_tile_raster_order,GL_MESA_window_pos,GL_MESA_ycbcr_texture,GL_NVX_blend_equation_advanced_multi_draw_buffers,GL_NVX_conditional_render,GL_NVX_gpu_memory_info,GL_NVX_gpu_multicast2,GL_NVX_linked_gpu_multicast,GL_NVX_multiview_per_view_attributes,GL_NVX_progress_fence,GL_NV_alpha_to_coverage_dither_control,GL_NV_bindless_multi_draw_indirect,GL_NV_bindless_multi_draw_indirect_count,GL_NV_bindless_texture,GL_NV_blend_equation_advanced,GL_NV_blend_equation_advanced_coherent,GL_NV_blend_minmax_factor,GL_NV_blend_square,GL_NV_clip_space_w_scaling,GL_NV_cluster_acceleration_structure,GL_NV_command_list,GL_NV_compute_program5,GL_NV_compute_shader_derivatives,GL_NV_conditional_render,GL_NV_conservative_raster,GL_NV_conservative_raster_dilate,GL_NV_conservative_raster_pre_snap,GL_NV_conservative_raster_pre_snap_triangles,GL_NV_conservative_raster_underestimation,GL_NV_cooperative_matrix,GL_NV_cooperative_matrix2,GL_NV_cooperative_vector,GL_NV_copy_buffer,GL_NV_copy_depth_to_color,GL_NV_copy_image,GL_NV_coverage_sample,GL_NV_deep_texture3D,GL_NV_depth_buffer_float,GL_NV_depth_clamp,GL_NV_depth_nonlinear,GL_NV_displacement_micromap,GL_NV_draw_buffers,GL_NV_draw_instanced,GL_NV_draw_texture,GL_NV_draw_vulkan_image,GL_NV_evaluators,GL_NV_explicit_attrib_location,GL_NV_explicit_multisample,GL_NV_fbo_color_attachments,GL_NV_fence,GL_NV_fill_rectangle,GL_NV_float_buffer,GL_NV_fog_distance,GL_NV_fragment_coverage_to_color,GL_NV_fragment_program,GL_NV_fragment_program2,GL_NV_fragment_program4,GL_NV_fragment_program_option,GL_NV_fragment_shader_barycentric,GL_NV_fragment_shader_interlock,GL_NV_framebuffer_blit,GL_NV_framebuffer_mixed_samples,GL_NV_framebuffer_multisample,GL_NV_framebuffer_multisample_coverage,GL_NV_generate_mipmap_sRGB,GL_NV_geometry_program4,GL_NV_geometry_shader4,GL_NV_geometry_shader_passthrough,GL_NV_gpu_multicast,GL_NV_gpu_program4,GL_NV_gpu_program5,GL_NV_gpu_program5_mem_extended,GL_NV_gpu_shader5,GL_NV_half_float,GL_NV_image_formats,GL_NV_instanced_arrays,GL_NV_integer_cooperative_matrix,GL_NV_internalformat_sample_query,GL_NV_light_max_exponent,GL_NV_linear_swept_spheres,GL_NV_memory_attachment,GL_NV_memory_object_sparse,GL_NV_mesh_shader,GL_NV_multisample_coverage,GL_NV_multisample_filter_hint,GL_NV_non_square_matrices,GL_NV_occlusion_query,GL_NV_pack_subimage,GL_NV_packed_depth_stencil,GL_NV_parameter_buffer_object,GL_NV_parameter_buffer_object2,GL_NV_path_rendering,GL_NV_path_rendering_shared_edge,GL_NV_pixel_buffer_object,GL_NV_pixel_data_range,GL_NV_point_sprite,GL_NV_polygon_mode,GL_NV_present_video,GL_NV_primitive_restart,GL_NV_primitive_shading_rate,GL_NV_query_resource,GL_NV_query_resource_tag,GL_NV_ray_tracing,GL_NV_ray_tracing_motion_blur,GL_NV_read_buffer,GL_NV_read_buffer_front,GL_NV_read_depth,GL_NV_read_depth_stencil,GL_NV_read_stencil,GL_NV_register_combiners,GL_NV_register_combiners2,GL_NV_representative_fragment_test,GL_NV_robustness_video_memory_purge,GL_NV_sRGB_formats,GL_NV_sample_locations,GL_NV_sample_mask_override_coverage,GL_NV_scissor_exclusive,GL_NV_shader_atomic_counters,GL_NV_shader_atomic_float,GL_NV_shader_atomic_float64,GL_NV_shader_atomic_fp16_vector,GL_NV_shader_atomic_int64,GL_NV_shader_buffer_load,GL_NV_shader_buffer_store,GL_NV_shader_invocation_reorder,GL_NV_shader_noperspective_interpolation,GL_NV_shader_sm_builtins,GL_NV_shader_storage_buffer_object,GL_NV_shader_subgroup_partitioned,GL_NV_shader_texture_footprint,GL_NV_shader_thread_group,GL_NV_shader_thread_shuffle,GL_NV_shading_rate_image,GL_NV_shadow_samplers_array,GL_NV_shadow_samplers_cube,GL_NV_stereo_view_rendering,GL_NV_tessellation_program5,GL_NV_texgen_emboss,GL_NV_texgen_reflection,GL_NV_texture_barrier,GL_NV_texture_border_clamp,GL_NV_texture_compression_s3tc_update,GL_NV_texture_compression_vtc,GL_NV_texture_env_combine4,GL_NV_texture_expand_normal,GL_NV_texture_multisample,GL_NV_texture_npot_2D_mipmap,GL_NV_texture_rectangle,GL_NV_texture_rectangle_compressed,GL_NV_texture_shader,GL_NV_texture_shader2,GL_NV_texture_shader3,GL_NV_timeline_semaphore,GL_NV_transform_feedback,GL_NV_transform_feedback2,GL_NV_uniform_buffer_std430_layout,GL_NV_uniform_buffer_unified_memory,GL_NV_vdpau_interop,GL_NV_vdpau_interop2,GL_NV_vertex_array_range,GL_NV_vertex_array_range2,GL_NV_vertex_attrib_integer_64bit,GL_NV_vertex_buffer_unified_memory,GL_NV_vertex_program,GL_NV_vertex_program1_1,GL_NV_vertex_program2,GL_NV_vertex_program2_option,GL_NV_vertex_program3,GL_NV_vertex_program4,GL_NV_video_capture,GL_NV_viewport_array,GL_NV_viewport_array2,GL_NV_viewport_swizzle,GL_OES_EGL_image,GL_OES_EGL_image_external,GL_OES_EGL_image_external_essl3,GL_OES_byte_coordinates,GL_OES_compressed_ETC1_RGB8_sub_texture,GL_OES_compressed_ETC1_RGB8_texture,GL_OES_compressed_paletted_texture,GL_OES_copy_image,GL_OES_depth24,GL_OES_depth32,GL_OES_depth_texture,GL_OES_draw_buffers_indexed,GL_OES_draw_elements_base_vertex,GL_OES_element_index_uint,GL_OES_fbo_render_mipmap,GL_OES_fixed_point,GL_OES_fragment_precision_high,GL_OES_geometry_point_size,GL_OES_geometry_shader,GL_OES_get_program_binary,GL_OES_gpu_shader5,GL_OES_mapbuffer,GL_OES_packed_depth_stencil,GL_OES_primitive_bounding_box,GL_OES_query_matrix,GL_OES_read_format,GL_OES_required_internalformat,GL_OES_rgb8_rgba8,GL_OES_sample_shading,GL_OES_sample_variables,GL_OES_shader_image_atomic,GL_OES_shader_io_blocks,GL_OES_shader_multisample_interpolation,GL_OES_single_precision,GL_OES_standard_derivatives,GL_OES_stencil1,GL_OES_stencil4,GL_OES_surfaceless_context,GL_OES_tessellation_point_size,GL_OES_tessellation_shader,GL_OES_texture_3D,GL_OES_texture_border_clamp,GL_OES_texture_buffer,GL_OES_texture_compression_astc,GL_OES_texture_cube_map_array,GL_OES_texture_float,GL_OES_texture_float_linear,GL_OES_texture_half_float,GL_OES_texture_half_float_linear,GL_OES_texture_npot,GL_OES_texture_stencil8,GL_OES_texture_storage_multisample_2d_array,GL_OES_texture_view,GL_OES_vertex_array_object,GL_OES_vertex_half_float,GL_OES_vertex_type_10_10_10_2,GL_OES_viewport_array,GL_OML_interlace,GL_OML_resample,GL_OML_subsample,GL_OVR_multiview,GL_OVR_multiview2,GL_OVR_multiview_multisampled_render_to_texture,GL_PGI_misc_hints,GL_PGI_vertex_hints,GL_QCOM_YUV_texture_gather,GL_QCOM_alpha_test,GL_QCOM_binning_control,GL_QCOM_cooperative_matrix_conversion,GL_QCOM_driver_control,GL_QCOM_extended_get,GL_QCOM_extended_get2,GL_QCOM_frame_extrapolation,GL_QCOM_framebuffer_foveated,GL_QCOM_image_processing,GL_QCOM_image_processing2,GL_QCOM_motion_estimation,GL_QCOM_perfmon_global_mode,GL_QCOM_render_sRGB_R8_RG8,GL_QCOM_render_shared_exponent,GL_QCOM_shader_framebuffer_fetch_noncoherent,GL_QCOM_shader_framebuffer_fetch_rate,GL_QCOM_shading_rate,GL_QCOM_texture_foveated,GL_QCOM_texture_foveated2,GL_QCOM_texture_foveated_subsampled_layout,GL_QCOM_texture_lod_bias,GL_QCOM_tile_shading,GL_QCOM_tiled_rendering,GL_QCOM_writeonly_rendering,GL_QCOM_ycbcr_degamma,GL_REND_screen_coordinates,GL_S3_s3tc,GL_SGIS_detail_texture,GL_SGIS_fog_function,GL_SGIS_generate_mipmap,GL_SGIS_multisample,GL_SGIS_pixel_texture,GL_SGIS_point_line_texgen,GL_SGIS_point_parameters,GL_SGIS_sharpen_texture,GL_SGIS_texture4D,GL_SGIS_texture_border_clamp,GL_SGIS_texture_color_mask,GL_SGIS_texture_edge_clamp,GL_SGIS_texture_filter4,GL_SGIS_texture_lod,GL_SGIS_texture_select,GL_SGIX_async,GL_SGIX_async_histogram,GL_SGIX_async_pixel,GL_SGIX_blend_alpha_minmax,GL_SGIX_calligraphic_fragment,GL_SGIX_clipmap,GL_SGIX_convolution_accuracy,GL_SGIX_depth_pass_instrument,GL_SGIX_depth_texture,GL_SGIX_flush_raster,GL_SGIX_fog_offset,GL_SGIX_fragment_lighting,GL_SGIX_framezoom,GL_SGIX_igloo_interface,GL_SGIX_instruments,GL_SGIX_interlace,GL_SGIX_ir_instrument1,GL_SGIX_list_priority,GL_SGIX_pixel_texture,GL_SGIX_pixel_tiles,GL_SGIX_polynomial_ffd,GL_SGIX_reference_plane,GL_SGIX_resample,GL_SGIX_scalebias_hint,GL_SGIX_shadow,GL_SGIX_shadow_ambient,GL_SGIX_sprite,GL_SGIX_subsample,GL_SGIX_tag_sample_buffer,GL_SGIX_texture_add_env,GL_SGIX_texture_coordinate_clamp,GL_SGIX_texture_lod_bias,GL_SGIX_texture_multi_buffer,GL_SGIX_texture_scale_bias,GL_SGIX_vertex_preclip,GL_SGIX_ycrcb,GL_SGIX_ycrcb_subsample,GL_SGIX_ycrcba,GL_SGI_color_matrix,GL_SGI_color_table,GL_SGI_texture_color_table,GL_SUNX_constant_data,GL_SUN_convolution_border_modes,GL_SUN_global_alpha,GL_SUN_mesh_array,GL_SUN_slice_accum,GL_SUN_triangle_list,GL_SUN_vertex,GL_VIV_shader_binary,GL_WIN_phong_shading,GL_WIN_specular_fog' c --alias --loader --use-pfn-ranges
 *
 * Online:
 *    http://glad.sh/#api=gl%3Acore%3D4.6%2Cgles2%3D3.2&generator=c&options=MERGE%2CALIAS%2CLOADER%2CUSE_PFN_RANGES
 *
 */

#ifndef GLAD_GL_H_
#define GLAD_GL_H_


#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifdef __gl_h_
  #error OpenGL (gl.h) header already included (API: gl), remove previous include!
#endif
#define __gl_h_ 1
#ifdef __gl3_h_
  #error OpenGL (gl3.h) header already included (API: gl), remove previous include!
#endif
#define __gl3_h_ 1
#ifdef __glext_h_
  #error OpenGL (glext.h) header already included (API: gl), remove previous include!
#endif
#define __glext_h_ 1
#ifdef __gl3ext_h_
  #error OpenGL (gl3ext.h) header already included (API: gl), remove previous include!
#endif
#define __gl3ext_h_ 1
#ifdef __gl2_h_
  #error OpenGL ES 2 header already included (API: gles2), remove previous include!
#endif
#define __gl2_h_ 1
#ifdef __gles2_gl2_h_
  #error OpenGL ES 2 header already included (API: gles2), remove previous include!
#endif
#define __gles2_gl2_h_ 1
#ifdef __gles2_gl3_h_
  #error OpenGL ES 3 header already included (API: gles2), remove previous include!
#endif
#define __gles2_gl3_h_ 1
#ifdef __clang__
#pragma clang diagnostic pop
#endif

#define GLAD_GL
#define GLAD_GLES2
#define GLAD_OPTION_GL_ALIAS
#define GLAD_OPTION_GL_LOADER
#define GLAD_OPTION_GL_USE_PFN_RANGES

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GLAD_PLATFORM_H_
#define GLAD_PLATFORM_H_

#ifndef GLAD_PLATFORM_WIN32
  #if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__MINGW32__)
    #define GLAD_PLATFORM_WIN32 1
  #else
    #define GLAD_PLATFORM_WIN32 0
  #endif
#endif

#ifndef GLAD_PLATFORM_APPLE
  #ifdef __APPLE__
    #define GLAD_PLATFORM_APPLE 1
  #else
    #define GLAD_PLATFORM_APPLE 0
  #endif
#endif

#ifndef GLAD_PLATFORM_EMSCRIPTEN
  #ifdef __EMSCRIPTEN__
    #define GLAD_PLATFORM_EMSCRIPTEN 1
  #else
    #define GLAD_PLATFORM_EMSCRIPTEN 0
  #endif
#endif

#ifndef GLAD_PLATFORM_UWP
  #if defined(_MSC_VER) && !defined(GLAD_INTERNAL_HAVE_WINAPIFAMILY)
    #ifdef __has_include
      #if __has_include(<winapifamily.h>)
        #define GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
      #endif
    #elif _MSC_VER >= 1700 && !_USING_V110_SDK71_
      #define GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
    #endif
  #endif

  #ifdef GLAD_INTERNAL_HAVE_WINAPIFAMILY
    #include <winapifamily.h>
    #if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
      #define GLAD_PLATFORM_UWP 1
    #endif
  #endif

  #ifndef GLAD_PLATFORM_UWP
    #define GLAD_PLATFORM_UWP 0
  #endif
#endif

#ifdef __GNUC__
  #define GLAD_GNUC_EXTENSION __extension__
#else
  #define GLAD_GNUC_EXTENSION
#endif

#define GLAD_UNUSED(x) (void)(x)

#ifndef GLAD_API_CALL
  #if defined(GLAD_API_CALL_EXPORT)
    #if GLAD_PLATFORM_WIN32 || defined(__CYGWIN__)
      #if defined(GLAD_API_CALL_EXPORT_BUILD)
        #if defined(__GNUC__)
          #define GLAD_API_CALL __attribute__ ((dllexport)) extern
        #else
          #define GLAD_API_CALL __declspec(dllexport) extern
        #endif
      #else
        #if defined(__GNUC__)
          #define GLAD_API_CALL __attribute__ ((dllimport)) extern
        #else
          #define GLAD_API_CALL __declspec(dllimport) extern
        #endif
      #endif
    #elif defined(__GNUC__) && defined(GLAD_API_CALL_EXPORT_BUILD)
      #define GLAD_API_CALL __attribute__ ((visibility ("default"))) extern
    #else
      #define GLAD_API_CALL extern
    #endif
  #else
    #define GLAD_API_CALL extern
  #endif
#endif

#ifdef APIENTRY
  #define GLAD_API_PTR APIENTRY
#elif GLAD_PLATFORM_WIN32
  #define GLAD_API_PTR __stdcall
#else
  #define GLAD_API_PTR
#endif

#ifndef GLAPI
#define GLAPI GLAD_API_CALL
#endif

#ifndef GLAPIENTRY
#define GLAPIENTRY GLAD_API_PTR
#endif

#define GLAD_MAKE_VERSION(major, minor) (major * 10000 + minor)
#define GLAD_VERSION_MAJOR(version) (version / 10000)
#define GLAD_VERSION_MINOR(version) (version % 10000)

#define GLAD_GENERATOR_VERSION "2.0.8"

typedef void (*GLADapiproc)(void);

typedef GLADapiproc (*GLADloadfunc)(const char *name);
typedef GLADapiproc (*GLADuserptrloadfunc)(void *userptr, const char *name);

typedef void (*GLADprecallback)(const char *name, GLADapiproc apiproc, int len_args, ...);
typedef void (*GLADpostcallback)(void *ret, const char *name, GLADapiproc apiproc, int len_args, ...);

#endif /* GLAD_PLATFORM_H_ */

#define GL_1PASS_EXT 0x80A1
#define GL_1PASS_SGIS 0x80A1
#define GL_2PASS_0_EXT 0x80A2
#define GL_2PASS_0_SGIS 0x80A2
#define GL_2PASS_1_EXT 0x80A3
#define GL_2PASS_1_SGIS 0x80A3
#define GL_2X_BIT_ATI 0x00000001
#define GL_422_AVERAGE_EXT 0x80CE
#define GL_422_EXT 0x80CC
#define GL_422_REV_AVERAGE_EXT 0x80CF
#define GL_422_REV_EXT 0x80CD
#define GL_4PASS_0_EXT 0x80A4
#define GL_4PASS_0_SGIS 0x80A4
#define GL_4PASS_1_EXT 0x80A5
#define GL_4PASS_1_SGIS 0x80A5
#define GL_4PASS_2_EXT 0x80A6
#define GL_4PASS_2_SGIS 0x80A6
#define GL_4PASS_3_EXT 0x80A7
#define GL_4PASS_3_SGIS 0x80A7
#define GL_4X_BIT_ATI 0x00000002
#define GL_8X_BIT_ATI 0x00000004
#define GL_ABGR_EXT 0x8000
#define GL_ACCUM_ADJACENT_PAIRS_NV 0x90AD
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_ACTIVE_PROGRAM_EXT 0x8B8D
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_ACTIVE_STENCIL_FACE_EXT 0x8911
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_ACTIVE_TEXTURE_ARB 0x84E0
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_ACTIVE_VARYINGS_NV 0x8C81
#define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#define GL_ACTIVE_VERTEX_UNITS_ARB 0x86A5
#define GL_ADD_ATI 0x8963
#define GL_ADD_SIGNED_ARB 0x8574
#define GL_ADD_SIGNED_EXT 0x8574
#define GL_ADJACENT_PAIRS_NV 0x90AE
#define GL_AFFINE_2D_NV 0x9092
#define GL_AFFINE_3D_NV 0x9094
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_ALLOW_DRAW_FRG_HINT_PGI 0x1A210
#define GL_ALLOW_DRAW_MEM_HINT_PGI 0x1A211
#define GL_ALLOW_DRAW_OBJ_HINT_PGI 0x1A20E
#define GL_ALLOW_DRAW_WIN_HINT_PGI 0x1A20F
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_ALL_BARRIER_BITS_EXT 0xFFFFFFFF
#define GL_ALL_COMPLETED_NV 0x84F2
#define GL_ALL_PIXELS_AMD 0xFFFFFFFF
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_ALL_STATIC_DATA_IBM 103060
#define GL_ALPHA 0x1906
#define GL_ALPHA12_EXT 0x803D
#define GL_ALPHA16F_ARB 0x881C
#define GL_ALPHA16F_EXT 0x881C
#define GL_ALPHA16I_EXT 0x8D8A
#define GL_ALPHA16UI_EXT 0x8D78
#define GL_ALPHA16_EXT 0x803E
#define GL_ALPHA16_SNORM 0x9018
#define GL_ALPHA32F_ARB 0x8816
#define GL_ALPHA32F_EXT 0x8816
#define GL_ALPHA32I_EXT 0x8D84
#define GL_ALPHA32UI_EXT 0x8D72
#define GL_ALPHA4_EXT 0x803B
#define GL_ALPHA8I_EXT 0x8D90
#define GL_ALPHA8UI_EXT 0x8D7E
#define GL_ALPHA8_EXT 0x803C
#define GL_ALPHA8_SNORM 0x9014
#define GL_ALPHA_FLOAT16_APPLE 0x881C
#define GL_ALPHA_FLOAT16_ATI 0x881C
#define GL_ALPHA_FLOAT32_APPLE 0x8816
#define GL_ALPHA_FLOAT32_ATI 0x8816
#define GL_ALPHA_INTEGER_EXT 0x8D97
#define GL_ALPHA_MAX_CLAMP_INGR 0x8567
#define GL_ALPHA_MAX_SGIX 0x8321
#define GL_ALPHA_MIN_CLAMP_INGR 0x8563
#define GL_ALPHA_MIN_SGIX 0x8320
#define GL_ALPHA_REF_COMMAND_NV 0x000F
#define GL_ALPHA_SNORM 0x9010
#define GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV 0x934D
#define GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV 0x934F
#define GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV 0x934E
#define GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV 0x92BF
#define GL_ALREADY_SIGNALED 0x911A
#define GL_ALWAYS 0x0207
#define GL_ALWAYS_FAST_HINT_PGI 0x1A20C
#define GL_ALWAYS_SOFT_HINT_PGI 0x1A20D
#define GL_AND 0x1501
#define GL_AND_INVERTED 0x1504
#define GL_AND_REVERSE 0x1502
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_ARC_TO_NV 0xFE
#define GL_ARRAY_BUFFER 0x8892
#define GL_ARRAY_BUFFER_ARB 0x8892
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ARRAY_BUFFER_BINDING_ARB 0x8894
#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT 0x81A9
#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT 0x81A8
#define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#define GL_ARRAY_SIZE 0x92FB
#define GL_ARRAY_STRIDE 0x92FE
#define GL_ASYNC_DRAW_PIXELS_SGIX 0x835D
#define GL_ASYNC_HISTOGRAM_SGIX 0x832C
#define GL_ASYNC_MARKER_SGIX 0x8329
#define GL_ASYNC_READ_PIXELS_SGIX 0x835E
#define GL_ASYNC_TEX_IMAGE_SGIX 0x835C
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT 0x00001000
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV 0x959E
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV 0x959F
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATTACHED_MEMORY_OBJECT_NV 0x95A4
#define GL_ATTACHED_MEMORY_OFFSET_NV 0x95A5
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ATTENUATION_EXT 0x834D
#define GL_ATTRIBUTE_ADDRESS_COMMAND_NV 0x0009
#define GL_ATTRIB_ARRAY_POINTER_NV 0x8645
#define GL_ATTRIB_ARRAY_SIZE_NV 0x8623
#define GL_ATTRIB_ARRAY_STRIDE_NV 0x8624
#define GL_ATTRIB_ARRAY_TYPE_NV 0x8625
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_AUX_DEPTH_STENCIL_APPLE 0x8A14
#define GL_AVERAGE_EXT 0x8335
#define GL_AVERAGE_HP 0x8160
#define GL_BACK 0x0405
#define GL_BACK_LEFT 0x0402
#define GL_BACK_NORMALS_HINT_PGI 0x1A223
#define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#define GL_BACK_RIGHT 0x0403
#define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#define GL_BEVEL_NV 0x90A6
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_BGRA8_EXT 0x93A1
#define GL_BGRA_EXT 0x80E1
#define GL_BGRA_INTEGER 0x8D9B
#define GL_BGRA_INTEGER_EXT 0x8D9B
#define GL_BGR_EXT 0x80E0
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGR_INTEGER_EXT 0x8D9A
#define GL_BIAS_BIT_ATI 0x00000008
#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 0x8541
#define GL_BINORMAL_ARRAY_EXT 0x843A
#define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#define GL_BLACKHOLE_RENDER_INTEL 0x83FC
#define GL_BLEND 0x0BE2
#define GL_BLEND_ADVANCED_COHERENT_KHR 0x9285
#define GL_BLEND_ADVANCED_COHERENT_NV 0x9285
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_COLOR_COMMAND_NV 0x000B
#define GL_BLEND_COLOR_EXT 0x8005
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_DST_ALPHA_EXT 0x80CA
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_DST_RGB_EXT 0x80C8
#define GL_BLEND_EQUATION 0x8009
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_BLEND_EQUATION_ALPHA_EXT 0x883D
#define GL_BLEND_EQUATION_EXT 0x8009
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_BLEND_EQUATION_RGB_EXT 0x8009
#define GL_BLEND_OVERLAP_NV 0x9281
#define GL_BLEND_PREMULTIPLIED_SRC_NV 0x9280
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BLEND_SRC_ALPHA_EXT 0x80CB
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_SRC_RGB_EXT 0x80C9
#define GL_BLOCK_INDEX 0x92FD
#define GL_BLUE 0x1905
#define GL_BLUE_BIT_ATI 0x00000004
#define GL_BLUE_INTEGER 0x8D96
#define GL_BLUE_INTEGER_EXT 0x8D96
#define GL_BLUE_MAX_CLAMP_INGR 0x8566
#define GL_BLUE_MIN_CLAMP_INGR 0x8562
#define GL_BLUE_NV 0x1905
#define GL_BOLD_BIT_NV 0x01
#define GL_BOOL 0x8B56
#define GL_BOOL_ARB 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC2_ARB 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC3_ARB 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_BOOL_VEC4_ARB 0x8B59
#define GL_BOUNDING_BOX_NV 0x908D
#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV 0x909C
#define GL_BUFFER 0x82E0
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_ACCESS_ARB 0x88BB
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_BUFFER_FLUSHING_UNMAP_APPLE 0x8A13
#define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAPPED_ARB 0x88BC
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_BUFFER_MAP_POINTER_ARB 0x88BD
#define GL_BUFFER_OBJECT_APPLE 0x85B3
#define GL_BUFFER_OBJECT_EXT 0x9151
#define GL_BUFFER_SERIALIZED_MODIFY_APPLE 0x8A12
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_SIZE_ARB 0x8764
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT 0x00000200
#define GL_BUFFER_USAGE 0x8765
#define GL_BUFFER_USAGE_ARB 0x8765
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_BUMP_ENVMAP_ATI 0x877B
#define GL_BUMP_NUM_TEX_UNITS_ATI 0x8777
#define GL_BUMP_ROT_MATRIX_ATI 0x8775
#define GL_BUMP_ROT_MATRIX_SIZE_ATI 0x8776
#define GL_BUMP_TARGET_ATI 0x877C
#define GL_BUMP_TEX_UNITS_ATI 0x8778
#define GL_BYTE 0x1400
#define GL_CALLIGRAPHIC_FRAGMENT_SGIX 0x8183
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_CCW 0x0901
#define GL_CIRCULAR_CCW_ARC_TO_NV 0xF8
#define GL_CIRCULAR_CW_ARC_TO_NV 0xFA
#define GL_CIRCULAR_TANGENT_ARC_TO_NV 0xFC
#define GL_CLAMP_FRAGMENT_COLOR_ARB 0x891B
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_CLAMP_READ_COLOR_ARB 0x891C
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLAMP_TO_BORDER_ARB 0x812D
#define GL_CLAMP_TO_BORDER_SGIS 0x812D
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_CLAMP_TO_EDGE_SGIS 0x812F
#define GL_CLAMP_VERTEX_COLOR_ARB 0x891A
#define GL_CLEAR 0x1500
#define GL_CLEAR_BUFFER 0x82B4
#define GL_CLEAR_TEXTURE 0x9365
#define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIPPING_INPUT_PRIMITIVES 0x82F6
#define GL_CLIPPING_INPUT_PRIMITIVES_ARB 0x82F6
#define GL_CLIPPING_OUTPUT_PRIMITIVES 0x82F7
#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB 0x82F7
#define GL_CLIP_DEPTH_MODE 0x935D
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_CLIP_DISTANCE_NV 0x8C7A
#define GL_CLIP_FAR_HINT_PGI 0x1A221
#define GL_CLIP_NEAR_HINT_PGI 0x1A220
#define GL_CLIP_ORIGIN 0x935C
#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT 0x80F0
#define GL_CLOSE_PATH_NV 0x00
#define GL_CMYKA_EXT 0x800D
#define GL_CMYK_EXT 0x800C
#define GL_CND0_ATI 0x896B
#define GL_CND_ATI 0x896A
#define GL_COLOR 0x1800
#define GL_COLOR3_BIT_PGI 0x00010000
#define GL_COLOR4_BIT_PGI 0x00020000
#define GL_COLORBURN_KHR 0x929A
#define GL_COLORBURN_NV 0x929A
#define GL_COLORDODGE_KHR 0x9299
#define GL_COLORDODGE_NV 0x9299
#define GL_COLOR_ALPHA_PAIRING_ATI 0x8975
#define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
#define GL_COLOR_ARRAY_COUNT_EXT 0x8084
#define GL_COLOR_ARRAY_EXT 0x8076
#define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#define GL_COLOR_ARRAY_LIST_IBM 103072
#define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
#define GL_COLOR_ARRAY_POINTER_EXT 0x8090
#define GL_COLOR_ARRAY_SIZE_EXT 0x8081
#define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
#define GL_COLOR_ARRAY_TYPE_EXT 0x8082
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_COMPONENTS 0x8283
#define GL_COLOR_ENCODING 0x8296
#define GL_COLOR_FLOAT_APPLE 0x8A0F
#define GL_COLOR_INDEX12_EXT 0x80E6
#define GL_COLOR_INDEX16_EXT 0x80E7
#define GL_COLOR_INDEX1_EXT 0x80E2
#define GL_COLOR_INDEX2_EXT 0x80E3
#define GL_COLOR_INDEX4_EXT 0x80E4
#define GL_COLOR_INDEX8_EXT 0x80E5
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_COLOR_MATRIX_SGI 0x80B1
#define GL_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B2
#define GL_COLOR_RENDERABLE 0x8286
#define GL_COLOR_SAMPLES_NV 0x8E20
#define GL_COLOR_SUM_ARB 0x8458
#define GL_COLOR_SUM_CLAMP_NV 0x854F
#define GL_COLOR_SUM_EXT 0x8458
#define GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD
#define GL_COLOR_TABLE_BIAS_SGI 0x80D7
#define GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC
#define GL_COLOR_TABLE_FORMAT_SGI 0x80D8
#define GL_COLOR_TABLE_GREEN_SIZE_SGI 0x80DB
#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
#define GL_COLOR_TABLE_RED_SIZE_SGI 0x80DA
#define GL_COLOR_TABLE_SCALE_SGI 0x80D6
#define GL_COLOR_TABLE_SGI 0x80D0
#define GL_COLOR_TABLE_WIDTH_SGI 0x80D9
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_COMBINE4_NV 0x8503
#define GL_COMBINER0_NV 0x8550
#define GL_COMBINER1_NV 0x8551
#define GL_COMBINER2_NV 0x8552
#define GL_COMBINER3_NV 0x8553
#define GL_COMBINER4_NV 0x8554
#define GL_COMBINER5_NV 0x8555
#define GL_COMBINER6_NV 0x8556
#define GL_COMBINER7_NV 0x8557
#define GL_COMBINER_AB_DOT_PRODUCT_NV 0x8545
#define GL_COMBINER_AB_OUTPUT_NV 0x854A
#define GL_COMBINER_BIAS_NV 0x8549
#define GL_COMBINER_CD_DOT_PRODUCT_NV 0x8546
#define GL_COMBINER_CD_OUTPUT_NV 0x854B
#define GL_COMBINER_COMPONENT_USAGE_NV 0x8544
#define GL_COMBINER_INPUT_NV 0x8542
#define GL_COMBINER_MAPPING_NV 0x8543
#define GL_COMBINER_MUX_SUM_NV 0x8547
#define GL_COMBINER_SCALE_NV 0x8548
#define GL_COMBINER_SUM_OUTPUT_NV 0x854C
#define GL_COMBINE_ALPHA_ARB 0x8572
#define GL_COMBINE_ALPHA_EXT 0x8572
#define GL_COMBINE_ARB 0x8570
#define GL_COMBINE_EXT 0x8570
#define GL_COMBINE_RGB_ARB 0x8571
#define GL_COMBINE_RGB_EXT 0x8571
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_COMMAND_BARRIER_BIT_EXT 0x00000040
#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT 0x884E
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_COMPARE_R_TO_TEXTURE_ARB 0x884E
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_COMPILE_STATUS 0x8B81
#define GL_COMPLETION_STATUS_ARB 0x91B1
#define GL_COMPLETION_STATUS_KHR 0x91B1
#define GL_COMPRESSED_ALPHA_ARB 0x84E9
#define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72
#define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT 0x8DBD
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_RED_RGTC1_EXT 0x8DBB
#define GL_COMPRESSED_RG 0x8226
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_RGBA_ARB 0x84EE
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
#define GL_COMPRESSED_RGBA_FXT1_3DFX 0x86B1
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
#define GL_COMPRESSED_RGB_ARB 0x84ED
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
#define GL_COMPRESSED_RGB_FXT1_3DFX 0x86B0
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73
#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT 0x8DBE
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT 0x8DBC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
#define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
#define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
#define GL_COMPRESSED_SRGB_EXT 0x8C48
#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#define GL_COMPUTE_PROGRAM_NV 0x90FB
#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV 0x90FC
#define GL_COMPUTE_SHADER 0x91B9
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_COMPUTE_SHADER_INVOCATIONS 0x82F5
#define GL_COMPUTE_SHADER_INVOCATIONS_ARB 0x82F5
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_COMP_BIT_ATI 0x00000002
#define GL_CONDITION_SATISFIED 0x911C
#define GL_CONFORMANT_NV 0x9374
#define GL_CONIC_CURVE_TO_NV 0x1A
#define GL_CONJOINT_NV 0x9284
#define GL_CONSERVATIVE_RASTERIZATION_INTEL 0x83FE
#define GL_CONSERVATIVE_RASTERIZATION_NV 0x9346
#define GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV 0x937B
#define GL_CONSERVATIVE_RASTER_DILATE_NV 0x9379
#define GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV 0x937A
#define GL_CONSERVATIVE_RASTER_MODE_NV 0x954D
#define GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV 0x954E
#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV 0x9550
#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV 0x954F
#define GL_CONSERVE_MEMORY_HINT_PGI 0x1A1FD
#define GL_CONSTANT_ALPHA 0x8003
#define GL_CONSTANT_ALPHA_EXT 0x8003
#define GL_CONSTANT_ARB 0x8576
#define GL_CONSTANT_BORDER_HP 0x8151
#define GL_CONSTANT_COLOR 0x8001
#define GL_CONSTANT_COLOR0_NV 0x852A
#define GL_CONSTANT_COLOR1_NV 0x852B
#define GL_CONSTANT_COLOR_EXT 0x8001
#define GL_CONSTANT_EXT 0x8576
#define GL_CONST_BW_TILING_MESA 0x8BBE
#define GL_CONST_EYE_NV 0x86E5
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_FLAGS 0x821E
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_CONTEXT_FLAG_NO_ERROR_BIT 0x00000008
#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR 0x00000008
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#define GL_CONTEXT_LOST 0x0507
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#define GL_CONTEXT_ROBUST_ACCESS 0x90F3
#define GL_CONTINUOUS_AMD 0x9007
#define GL_CONTRAST_NV 0x92A1
#define GL_CONVEX_HULL_NV 0x908B
#define GL_CONVOLUTION_1D_EXT 0x8010
#define GL_CONVOLUTION_2D_EXT 0x8011
#define GL_CONVOLUTION_BORDER_COLOR_HP 0x8154
#define GL_CONVOLUTION_BORDER_MODE_EXT 0x8013
#define GL_CONVOLUTION_FILTER_BIAS_EXT 0x8015
#define GL_CONVOLUTION_FILTER_SCALE_EXT 0x8014
#define GL_CONVOLUTION_FORMAT_EXT 0x8017
#define GL_CONVOLUTION_HEIGHT_EXT 0x8019
#define GL_CONVOLUTION_HINT_SGIX 0x8316
#define GL_CONVOLUTION_WIDTH_EXT 0x8018
#define GL_CON_0_ATI 0x8941
#define GL_CON_10_ATI 0x894B
#define GL_CON_11_ATI 0x894C
#define GL_CON_12_ATI 0x894D
#define GL_CON_13_ATI 0x894E
#define GL_CON_14_ATI 0x894F
#define GL_CON_15_ATI 0x8950
#define GL_CON_16_ATI 0x8951
#define GL_CON_17_ATI 0x8952
#define GL_CON_18_ATI 0x8953
#define GL_CON_19_ATI 0x8954
#define GL_CON_1_ATI 0x8942
#define GL_CON_20_ATI 0x8955
#define GL_CON_21_ATI 0x8956
#define GL_CON_22_ATI 0x8957
#define GL_CON_23_ATI 0x8958
#define GL_CON_24_ATI 0x8959
#define GL_CON_25_ATI 0x895A
#define GL_CON_26_ATI 0x895B
#define GL_CON_27_ATI 0x895C
#define GL_CON_28_ATI 0x895D
#define GL_CON_29_ATI 0x895E
#define GL_CON_2_ATI 0x8943
#define GL_CON_30_ATI 0x895F
#define GL_CON_31_ATI 0x8960
#define GL_CON_3_ATI 0x8944
#define GL_CON_4_ATI 0x8945
#define GL_CON_5_ATI 0x8946
#define GL_CON_6_ATI 0x8947
#define GL_CON_7_ATI 0x8948
#define GL_CON_8_ATI 0x8949
#define GL_CON_9_ATI 0x894A
#define GL_COORD_REPLACE_ARB 0x8862
#define GL_COORD_REPLACE_NV 0x8862
#define GL_COPY 0x1503
#define GL_COPY_INVERTED 0x150C
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_COUNTER_RANGE_AMD 0x8BC1
#define GL_COUNTER_TYPE_AMD 0x8BC0
#define GL_COUNT_DOWN_NV 0x9089
#define GL_COUNT_UP_NV 0x9088
#define GL_COVERAGE_MODULATION_NV 0x9332
#define GL_COVERAGE_MODULATION_TABLE_NV 0x9331
#define GL_COVERAGE_MODULATION_TABLE_SIZE_NV 0x9333
#define GL_CREATE_2D_ARRAY_COMPATIBLE_BIT_ANGLE 0x00000020
#define GL_CREATE_ALIAS_BIT_ANGLE 0x00000400
#define GL_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_ANGLE 0x00000080
#define GL_CREATE_CORNER_SAMPLED_BIT_ANGLE 0x00002000
#define GL_CREATE_CUBE_COMPATIBLE_BIT_ANGLE 0x00000010
#define GL_CREATE_DISJOINT_BIT_ANGLE 0x00000200
#define GL_CREATE_EXTENDED_USAGE_BIT_ANGLE 0x00000100
#define GL_CREATE_MUTABLE_FORMAT_BIT_ANGLE 0x00000008
#define GL_CREATE_PROTECTED_BIT_ANGLE 0x00000800
#define GL_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_ANGLE 0x00001000
#define GL_CREATE_SPARSE_ALIASED_BIT_ANGLE 0x00000004
#define GL_CREATE_SPARSE_BINDING_BIT_ANGLE 0x00000001
#define GL_CREATE_SPARSE_RESIDENCY_BIT_ANGLE 0x00000002
#define GL_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_ANGLE 0x00000040
#define GL_CREATE_SUBSAMPLED_BIT_ANGLE 0x00004000
#define GL_CUBIC_CURVE_TO_NV 0x0C
#define GL_CUBIC_EXT 0x8334
#define GL_CUBIC_HP 0x815F
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_CULL_FRAGMENT_NV 0x86E7
#define GL_CULL_MODES_NV 0x86E0
#define GL_CULL_VERTEX_EXT 0x81AA
#define GL_CULL_VERTEX_EYE_POSITION_EXT 0x81AB
#define GL_CULL_VERTEX_IBM 103050
#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
#define GL_CURRENT_ATTRIB_NV 0x8626
#define GL_CURRENT_BINORMAL_EXT 0x843C
#define GL_CURRENT_FOG_COORDINATE_EXT 0x8453
#define GL_CURRENT_MATRIX_ARB 0x8641
#define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#define GL_CURRENT_MATRIX_NV 0x8641
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
#define GL_CURRENT_MATRIX_STACK_DEPTH_NV 0x8640
#define GL_CURRENT_OCCLUSION_QUERY_ID_NV 0x8865
#define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_CURRENT_QUERY 0x8865
#define GL_CURRENT_QUERY_ARB 0x8865
#define GL_CURRENT_RASTER_NORMAL_SGIX 0x8406
#define GL_CURRENT_SECONDARY_COLOR_EXT 0x8459
#define GL_CURRENT_TANGENT_EXT 0x843B
#define GL_CURRENT_TIME_NV 0x8E28
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_CURRENT_VERTEX_ATTRIB_ARB 0x8626
#define GL_CURRENT_VERTEX_EXT 0x87E2
#define GL_CURRENT_VERTEX_WEIGHT_EXT 0x850B
#define GL_CURRENT_WEIGHT_ARB 0x86A8
#define GL_CW 0x0900
#define GL_D3D12_FENCE_VALUE_EXT 0x9595
#define GL_DARKEN_KHR 0x9297
#define GL_DARKEN_NV 0x9297
#define GL_DATA_BUFFER_AMD 0x9151
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#define GL_DECODE_EXT 0x8A49
#define GL_DECR 0x1E03
#define GL_DECR_WRAP 0x8508
#define GL_DECR_WRAP_EXT 0x8508
#define GL_DEDICATED_MEMORY_OBJECT_EXT 0x9581
#define GL_DEFORMATIONS_MASK_SGIX 0x8196
#define GL_DELETE_STATUS 0x8B80
#define GL_DEPENDENT_AR_TEXTURE_2D_NV 0x86E9
#define GL_DEPENDENT_GB_TEXTURE_2D_NV 0x86EA
#define GL_DEPENDENT_HILO_TEXTURE_2D_NV 0x8858
#define GL_DEPENDENT_RGB_TEXTURE_3D_NV 0x8859
#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
#define GL_DEPTH 0x1801
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_DEPTH24_STENCIL8_EXT 0x88F0
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_DEPTH32F_STENCIL8_NV 0x8DAC
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#define GL_DEPTH_BOUNDS_EXT 0x8891
#define GL_DEPTH_BOUNDS_TEST_EXT 0x8890
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_DEPTH_BUFFER_FLOAT_MODE_NV 0x8DAF
#define GL_DEPTH_CLAMP 0x864F
#define GL_DEPTH_CLAMP_FAR_AMD 0x901F
#define GL_DEPTH_CLAMP_NEAR_AMD 0x901E
#define GL_DEPTH_CLAMP_NV 0x864F
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_COMPONENT 0x1902
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT16_ARB 0x81A5
#define GL_DEPTH_COMPONENT16_SGIX 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT24_ARB 0x81A6
#define GL_DEPTH_COMPONENT24_SGIX 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH_COMPONENT32F_NV 0x8DAB
#define GL_DEPTH_COMPONENT32_ARB 0x81A7
#define GL_DEPTH_COMPONENT32_SGIX 0x81A7
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_DEPTH_FUNC 0x0B74
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_DEPTH_SAMPLES_NV 0x932D
#define GL_DEPTH_STENCIL 0x84F9
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_DEPTH_STENCIL_EXT 0x84F9
#define GL_DEPTH_STENCIL_NV 0x84F9
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_DEPTH_STENCIL_TO_BGRA_NV 0x886F
#define GL_DEPTH_STENCIL_TO_RGBA_NV 0x886E
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_TEXTURE_MODE_ARB 0x884B
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DETACHED_BUFFERS_NV 0x95AB
#define GL_DETACHED_MEMORY_INCARNATION_NV 0x95A9
#define GL_DETACHED_TEXTURES_NV 0x95AA
#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
#define GL_DETAIL_TEXTURE_2D_SGIS 0x8095
#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
#define GL_DETAIL_TEXTURE_LEVEL_SGIS 0x809A
#define GL_DETAIL_TEXTURE_MODE_SGIS 0x809B
#define GL_DEVICE_LUID_EXT 0x9599
#define GL_DEVICE_NODE_MASK_EXT 0x959A
#define GL_DEVICE_UUID_EXT 0x9597
#define GL_DIFFERENCE_KHR 0x929E
#define GL_DIFFERENCE_NV 0x929E
#define GL_DISCARD_ATI 0x8763
#define GL_DISCARD_NV 0x8530
#define GL_DISCRETE_AMD 0x9006
#define GL_DISJOINT_NV 0x9283
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_DISTANCE_ATTENUATION_EXT 0x8129
#define GL_DISTANCE_ATTENUATION_SGIS 0x8129
#define GL_DITHER 0x0BD0
#define GL_DONT_CARE 0x1100
#define GL_DOT2_ADD_ATI 0x896C
#define GL_DOT3_ATI 0x8966
#define GL_DOT3_RGBA_ARB 0x86AF
#define GL_DOT3_RGBA_EXT 0x8741
#define GL_DOT3_RGB_ARB 0x86AE
#define GL_DOT3_RGB_EXT 0x8740
#define GL_DOT4_ATI 0x8967
#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV 0x86ED
#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
#define GL_DOT_PRODUCT_NV 0x86EC
#define GL_DOT_PRODUCT_PASS_THROUGH_NV 0x885B
#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
#define GL_DOT_PRODUCT_TEXTURE_1D_NV 0x885C
#define GL_DOT_PRODUCT_TEXTURE_2D_NV 0x86EE
#define GL_DOT_PRODUCT_TEXTURE_3D_NV 0x86EF
#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
#define GL_DOUBLE 0x140A
#define GL_DOUBLEBUFFER 0x0C32
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT2_EXT 0x8F46
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x3_EXT 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT3_EXT 0x8F47
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT4_EXT 0x8F48
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC2_EXT 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC3_EXT 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DOUBLE_VEC4_EXT 0x8FFE
#define GL_DRAW_ARRAYS_COMMAND_NV 0x0003
#define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV 0x0007
#define GL_DRAW_ARRAYS_STRIP_COMMAND_NV 0x0005
#define GL_DRAW_BUFFER 0x0C01
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER0_ARB 0x8825
#define GL_DRAW_BUFFER0_ATI 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER10_ARB 0x882F
#define GL_DRAW_BUFFER10_ATI 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER11_ARB 0x8830
#define GL_DRAW_BUFFER11_ATI 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER12_ARB 0x8831
#define GL_DRAW_BUFFER12_ATI 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER13_ARB 0x8832
#define GL_DRAW_BUFFER13_ATI 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER14_ARB 0x8833
#define GL_DRAW_BUFFER14_ATI 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_DRAW_BUFFER15_ARB 0x8834
#define GL_DRAW_BUFFER15_ATI 0x8834
#define GL_DRAW_BUFFER1_ARB 0x8826
#define GL_DRAW_BUFFER1_ATI 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER2_ARB 0x8827
#define GL_DRAW_BUFFER2_ATI 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER3_ARB 0x8828
#define GL_DRAW_BUFFER3_ATI 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER4_ARB 0x8829
#define GL_DRAW_BUFFER4_ATI 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER5_ARB 0x882A
#define GL_DRAW_BUFFER5_ATI 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER6_ARB 0x882B
#define GL_DRAW_BUFFER6_ATI 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER7_ARB 0x882C
#define GL_DRAW_BUFFER7_ATI 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER8_ARB 0x882D
#define GL_DRAW_BUFFER8_ATI 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER9_ARB 0x882E
#define GL_DRAW_BUFFER9_ATI 0x882E
#define GL_DRAW_ELEMENTS_COMMAND_NV 0x0002
#define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV 0x0006
#define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV 0x0004
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING_EXT 0x8CA6
#define GL_DRAW_FRAMEBUFFER_EXT 0x8CA9
#define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#define GL_DRAW_PIXELS_APPLE 0x8A0A
#define GL_DRIVER_UUID_EXT 0x9598
#define GL_DSDT8_MAG8_INTENSITY8_NV 0x870B
#define GL_DSDT8_MAG8_NV 0x870A
#define GL_DSDT8_NV 0x8709
#define GL_DSDT_MAG_INTENSITY_NV 0x86DC
#define GL_DSDT_MAG_NV 0x86F6
#define GL_DSDT_MAG_VIB_NV 0x86F7
#define GL_DSDT_NV 0x86F5
#define GL_DST_ALPHA 0x0304
#define GL_DST_ATOP_NV 0x928F
#define GL_DST_COLOR 0x0306
#define GL_DST_IN_NV 0x928B
#define GL_DST_NV 0x9287
#define GL_DST_OUT_NV 0x928D
#define GL_DST_OVER_NV 0x9289
#define GL_DS_BIAS_NV 0x8716
#define GL_DS_SCALE_NV 0x8710
#define GL_DT_BIAS_NV 0x8717
#define GL_DT_SCALE_NV 0x8711
#define GL_DU8DV8_ATI 0x877A
#define GL_DUAL_ALPHA12_SGIS 0x8112
#define GL_DUAL_ALPHA16_SGIS 0x8113
#define GL_DUAL_ALPHA4_SGIS 0x8110
#define GL_DUAL_ALPHA8_SGIS 0x8111
#define GL_DUAL_INTENSITY12_SGIS 0x811A
#define GL_DUAL_INTENSITY16_SGIS 0x811B
#define GL_DUAL_INTENSITY4_SGIS 0x8118
#define GL_DUAL_INTENSITY8_SGIS 0x8119
#define GL_DUAL_LUMINANCE12_SGIS 0x8116
#define GL_DUAL_LUMINANCE16_SGIS 0x8117
#define GL_DUAL_LUMINANCE4_SGIS 0x8114
#define GL_DUAL_LUMINANCE8_SGIS 0x8115
#define GL_DUAL_LUMINANCE_ALPHA4_SGIS 0x811C
#define GL_DUAL_LUMINANCE_ALPHA8_SGIS 0x811D
#define GL_DUAL_TEXTURE_SELECT_SGIS 0x8124
#define GL_DUDV_ATI 0x8779
#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV 0xF2
#define GL_DUP_LAST_CUBIC_CURVE_TO_NV 0xF4
#define GL_DYNAMIC_ATI 0x8761
#define GL_DYNAMIC_COPY 0x88EA
#define GL_DYNAMIC_COPY_ARB 0x88EA
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_DRAW_ARB 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_READ_ARB 0x88E9
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_EDGEFLAG_BIT_PGI 0x00040000
#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
#define GL_EDGE_FLAG_ARRAY_EXT 0x8079
#define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
#define GL_EFFECTIVE_RASTER_SAMPLES_EXT 0x932C
#define GL_EIGHTH_BIT_ATI 0x00000020
#define GL_ELEMENT_ADDRESS_COMMAND_NV 0x0008
#define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#define GL_ELEMENT_ARRAY_ATI 0x8768
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT 0x00000002
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_ARB 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
#define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#define GL_ELEMENT_ARRAY_POINTER_ATI 0x876A
#define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#define GL_ELEMENT_ARRAY_TYPE_ATI 0x8769
#define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#define GL_EMBOSS_CONSTANT_NV 0x855E
#define GL_EMBOSS_LIGHT_NV 0x855D
#define GL_EMBOSS_MAP_NV 0x855F
#define GL_EQUAL 0x0202
#define GL_EQUIV 0x1509
#define GL_EVAL_2D_NV 0x86C0
#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
#define GL_EVAL_TRIANGULAR_2D_NV 0x86C1
#define GL_EVAL_VERTEX_ATTRIB0_NV 0x86C6
#define GL_EVAL_VERTEX_ATTRIB10_NV 0x86D0
#define GL_EVAL_VERTEX_ATTRIB11_NV 0x86D1
#define GL_EVAL_VERTEX_ATTRIB12_NV 0x86D2
#define GL_EVAL_VERTEX_ATTRIB13_NV 0x86D3
#define GL_EVAL_VERTEX_ATTRIB14_NV 0x86D4
#define GL_EVAL_VERTEX_ATTRIB15_NV 0x86D5
#define GL_EVAL_VERTEX_ATTRIB1_NV 0x86C7
#define GL_EVAL_VERTEX_ATTRIB2_NV 0x86C8
#define GL_EVAL_VERTEX_ATTRIB3_NV 0x86C9
#define GL_EVAL_VERTEX_ATTRIB4_NV 0x86CA
#define GL_EVAL_VERTEX_ATTRIB5_NV 0x86CB
#define GL_EVAL_VERTEX_ATTRIB6_NV 0x86CC
#define GL_EVAL_VERTEX_ATTRIB7_NV 0x86CD
#define GL_EVAL_VERTEX_ATTRIB8_NV 0x86CE
#define GL_EVAL_VERTEX_ATTRIB9_NV 0x86CF
#define GL_EXCLUSION_KHR 0x92A0
#define GL_EXCLUSION_NV 0x92A0
#define GL_EXCLUSIVE_EXT 0x8F11
#define GL_EXPAND_NEGATE_NV 0x8539
#define GL_EXPAND_NORMAL_NV 0x8538
#define GL_EXTENSIONS 0x1F03
#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD 0x9160
#define GL_EYE_DISTANCE_TO_LINE_SGIS 0x81F2
#define GL_EYE_DISTANCE_TO_POINT_SGIS 0x81F0
#define GL_EYE_LINE_SGIS 0x81F6
#define GL_EYE_PLANE 0x2502
#define GL_EYE_PLANE_ABSOLUTE_NV 0x855C
#define GL_EYE_POINT_SGIS 0x81F4
#define GL_EYE_RADIAL_NV 0x855B
#define GL_E_TIMES_F_NV 0x8531
#define GL_FACTOR_MAX_AMD 0x901D
#define GL_FACTOR_MIN_AMD 0x901C
#define GL_FAILURE_NV 0x9030
#define GL_FALSE 0
#define GL_FASTEST 0x1101
#define GL_FENCE_APPLE 0x8A0B
#define GL_FENCE_CONDITION_NV 0x84F4
#define GL_FENCE_STATUS_NV 0x84F3
#define GL_FIELDS_NV 0x8E27
#define GL_FIELD_LOWER_NV 0x9023
#define GL_FIELD_UPPER_NV 0x9022
#define GL_FILE_NAME_NV 0x9074
#define GL_FILL 0x1B02
#define GL_FILL_RECTANGLE_NV 0x933C
#define GL_FILTER 0x829A
#define GL_FILTER4_SGIS 0x8146
#define GL_FIRST_TO_REST_NV 0x90AF
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
#define GL_FIXED 0x140C
#define GL_FIXED_OES 0x140C
#define GL_FIXED_ONLY 0x891D
#define GL_FIXED_ONLY_ARB 0x891D
#define GL_FLOAT 0x1406
#define GL_FLOAT16_MAT2_AMD 0x91C5
#define GL_FLOAT16_MAT2x3_AMD 0x91C8
#define GL_FLOAT16_MAT2x4_AMD 0x91C9
#define GL_FLOAT16_MAT3_AMD 0x91C6
#define GL_FLOAT16_MAT3x2_AMD 0x91CA
#define GL_FLOAT16_MAT3x4_AMD 0x91CB
#define GL_FLOAT16_MAT4_AMD 0x91C7
#define GL_FLOAT16_MAT4x2_AMD 0x91CC
#define GL_FLOAT16_MAT4x3_AMD 0x91CD
#define GL_FLOAT16_NV 0x8FF8
#define GL_FLOAT16_VEC2_NV 0x8FF9
#define GL_FLOAT16_VEC3_NV 0x8FFA
#define GL_FLOAT16_VEC4_NV 0x8FFB
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
#define GL_FLOAT_CLEAR_COLOR_VALUE_NV 0x888D
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT2_ARB 0x8B5A
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT3_ARB 0x8B5B
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4 0x8B5C
#define GL_FLOAT_MAT4_ARB 0x8B5C
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_FLOAT_R16_NV 0x8884
#define GL_FLOAT_R32_NV 0x8885
#define GL_FLOAT_RG16_NV 0x8886
#define GL_FLOAT_RG32_NV 0x8887
#define GL_FLOAT_RGB16_NV 0x8888
#define GL_FLOAT_RGB32_NV 0x8889
#define GL_FLOAT_RGBA16_NV 0x888A
#define GL_FLOAT_RGBA32_NV 0x888B
#define GL_FLOAT_RGBA_MODE_NV 0x888E
#define GL_FLOAT_RGBA_NV 0x8883
#define GL_FLOAT_RGB_NV 0x8882
#define GL_FLOAT_RG_NV 0x8881
#define GL_FLOAT_R_NV 0x8880
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC2_ARB 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC3_ARB 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_FLOAT_VEC4_ARB 0x8B52
#define GL_FOG 0x0B60
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
#define GL_FOG_COORDINATE_ARRAY_EXT 0x8457
#define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT 0x8454
#define GL_FOG_COORDINATE_EXT 0x8451
#define GL_FOG_COORDINATE_SOURCE_EXT 0x8450
#define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#define GL_FOG_DISTANCE_MODE_NV 0x855A
#define GL_FOG_FUNC_POINTS_SGIS 0x812B
#define GL_FOG_FUNC_SGIS 0x812A
#define GL_FOG_OFFSET_SGIX 0x8198
#define GL_FOG_OFFSET_VALUE_SGIX 0x8199
#define GL_FOG_SPECULAR_TEXTURE_WIN 0x80EC
#define GL_FONT_ASCENDER_BIT_NV 0x00200000
#define GL_FONT_DESCENDER_BIT_NV 0x00400000
#define GL_FONT_GLYPHS_AVAILABLE_NV 0x9368
#define GL_FONT_HAS_KERNING_BIT_NV 0x10000000
#define GL_FONT_HEIGHT_BIT_NV 0x00800000
#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV 0x02000000
#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV 0x01000000
#define GL_FONT_NUM_GLYPH_INDICES_BIT_NV 0x20000000
#define GL_FONT_TARGET_UNAVAILABLE_NV 0x9369
#define GL_FONT_UNAVAILABLE_NV 0x936A
#define GL_FONT_UNDERLINE_POSITION_BIT_NV 0x04000000
#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV 0x08000000
#define GL_FONT_UNINTELLIGIBLE_NV 0x936B
#define GL_FONT_UNITS_PER_EM_BIT_NV 0x00100000
#define GL_FONT_X_MAX_BOUNDS_BIT_NV 0x00040000
#define GL_FONT_X_MIN_BOUNDS_BIT_NV 0x00010000
#define GL_FONT_Y_MAX_BOUNDS_BIT_NV 0x00080000
#define GL_FONT_Y_MIN_BOUNDS_BIT_NV 0x00020000
#define GL_FORCE_BLUE_TO_ONE_NV 0x8860
#define GL_FORMAT_SUBSAMPLE_244_244_OML 0x8983
#define GL_FORMAT_SUBSAMPLE_24_24_OML 0x8982
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRAGMENT_COLOR_EXT 0x834C
#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
#define GL_FRAGMENT_COLOR_MATERIAL_SGIX 0x8401
#define GL_FRAGMENT_COVERAGE_COLOR_NV 0x92DE
#define GL_FRAGMENT_COVERAGE_TO_COLOR_NV 0x92DD
#define GL_FRAGMENT_DEPTH_EXT 0x8452
#define GL_FRAGMENT_INPUT_NV 0x936D
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_FRAGMENT_LIGHT0_SGIX 0x840C
#define GL_FRAGMENT_LIGHT1_SGIX 0x840D
#define GL_FRAGMENT_LIGHT2_SGIX 0x840E
#define GL_FRAGMENT_LIGHT3_SGIX 0x840F
#define GL_FRAGMENT_LIGHT4_SGIX 0x8410
#define GL_FRAGMENT_LIGHT5_SGIX 0x8411
#define GL_FRAGMENT_LIGHT6_SGIX 0x8412
#define GL_FRAGMENT_LIGHT7_SGIX 0x8413
#define GL_FRAGMENT_LIGHTING_SGIX 0x8400
#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
#define GL_FRAGMENT_MATERIAL_EXT 0x8349
#define GL_FRAGMENT_NORMAL_EXT 0x834A
#define GL_FRAGMENT_PROGRAM_ARB 0x8804
#define GL_FRAGMENT_PROGRAM_BINDING_NV 0x8873
#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D
#define GL_FRAGMENT_PROGRAM_NV 0x8870
#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV 0x8DA4
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_FRAGMENT_SHADER_ARB 0x8B30
#define GL_FRAGMENT_SHADER_ATI 0x8920
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 0x8B8B
#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT 0x8A52
#define GL_FRAGMENT_SHADER_INVOCATIONS 0x82F4
#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB 0x82F4
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_FRAMEBUFFER 0x8D40
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR 0x9632
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR 0x9630
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_FRAMEBUFFER_BARRIER_BIT_EXT 0x00000400
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_EXT 0x8D40
#define GL_FRAMEBUFFER_FLIP_X_MESA 0x8BBC
#define GL_FRAMEBUFFER_FLIP_Y_MESA 0x8BBB
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#define GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR 0x9633
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB 0x9342
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV 0x9342
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB 0x9343
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV 0x9343
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x8DBA
#define GL_FRAMEBUFFER_SRGB_EXT 0x8DB9
#define GL_FRAMEBUFFER_SWAP_XY_MESA 0x8BBD
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#define GL_FRAMEZOOM_FACTOR_SGIX 0x818C
#define GL_FRAMEZOOM_SGIX 0x818B
#define GL_FRAME_NV 0x8E26
#define GL_FRONT 0x0404
#define GL_FRONT_AND_BACK 0x0408
#define GL_FRONT_FACE 0x0B46
#define GL_FRONT_FACE_COMMAND_NV 0x0012
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_FULL_RANGE_EXT 0x87E1
#define GL_FULL_STIPPLE_HINT_PGI 0x1A219
#define GL_FULL_SUPPORT 0x82B7
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_ADD_EXT 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_REVERSE_SUBTRACT_EXT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_FUNC_SUBTRACT_EXT 0x800A
#define GL_GENERATE_MIPMAP_HINT_SGIS 0x8192
#define GL_GENERATE_MIPMAP_SGIS 0x8191
#define GL_GENERIC_ATTRIB_NV 0x8C7D
#define GL_GEOMETRY_DEFORMATION_BIT_SGIX 0x00000002
#define GL_GEOMETRY_DEFORMATION_SGIX 0x8194
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#define GL_GEOMETRY_INPUT_TYPE_EXT 0x8DDB
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#define GL_GEOMETRY_OUTPUT_TYPE_EXT 0x8DDC
#define GL_GEOMETRY_PROGRAM_NV 0x8C26
#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV 0x8DA3
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_SHADER_ARB 0x8DD9
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_GEOMETRY_SHADER_EXT 0x8DD9
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED 0x82F3
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB 0x82F3
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#define GL_GEOMETRY_VERTICES_OUT_EXT 0x8DDA
#define GL_GEQUAL 0x0206
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_GLOBAL_ALPHA_FACTOR_SUN 0x81DA
#define GL_GLOBAL_ALPHA_SUN 0x81D9
#define GL_GLYPH_HAS_KERNING_BIT_NV 0x100
#define GL_GLYPH_HEIGHT_BIT_NV 0x02
#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV 0x10
#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV 0x04
#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV 0x08
#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV 0x80
#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV 0x20
#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV 0x40
#define GL_GLYPH_WIDTH_BIT_NV 0x01
#define GL_GPU_ADDRESS_NV 0x8F34
#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX 0x9049
#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX 0x9047
#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX 0x904B
#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX 0x904A
#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX 0x9048
#define GL_GREATER 0x0204
#define GL_GREEN 0x1904
#define GL_GREEN_BIT_ATI 0x00000002
#define GL_GREEN_INTEGER 0x8D95
#define GL_GREEN_INTEGER_EXT 0x8D95
#define GL_GREEN_MAX_CLAMP_INGR 0x8565
#define GL_GREEN_MIN_CLAMP_INGR 0x8561
#define GL_GREEN_NV 0x1904
#define GL_GUILTY_CONTEXT_RESET 0x8253
#define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#define GL_HALF_APPLE 0x140B
#define GL_HALF_BIAS_NEGATE_NV 0x853B
#define GL_HALF_BIAS_NORMAL_NV 0x853A
#define GL_HALF_BIT_ATI 0x00000008
#define GL_HALF_FLOAT 0x140B
#define GL_HALF_FLOAT_ARB 0x140B
#define GL_HALF_FLOAT_NV 0x140B
#define GL_HANDLE_TYPE_D3D11_IMAGE_EXT 0x958B
#define GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT 0x958C
#define GL_HANDLE_TYPE_D3D12_FENCE_EXT 0x9594
#define GL_HANDLE_TYPE_D3D12_RESOURCE_EXT 0x958A
#define GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT 0x9589
#define GL_HANDLE_TYPE_OPAQUE_FD_EXT 0x9586
#define GL_HANDLE_TYPE_OPAQUE_WIN32_EXT 0x9587
#define GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT 0x9588
#define GL_HANDLE_TYPE_ZIRCON_EVENT_ANGLE 0x93AF
#define GL_HANDLE_TYPE_ZIRCON_VMO_ANGLE 0x93AE
#define GL_HARDLIGHT_KHR 0x929B
#define GL_HARDLIGHT_NV 0x929B
#define GL_HARDMIX_NV 0x92A9
#define GL_HIGH_FLOAT 0x8DF2
#define GL_HIGH_INT 0x8DF5
#define GL_HILO16_NV 0x86F8
#define GL_HILO8_NV 0x885E
#define GL_HILO_NV 0x86F4
#define GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B
#define GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A
#define GL_HISTOGRAM_EXT 0x8024
#define GL_HISTOGRAM_FORMAT_EXT 0x8027
#define GL_HISTOGRAM_GREEN_SIZE_EXT 0x8029
#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C
#define GL_HISTOGRAM_RED_SIZE_EXT 0x8028
#define GL_HISTOGRAM_SINK_EXT 0x802D
#define GL_HISTOGRAM_WIDTH_EXT 0x8026
#define GL_HI_BIAS_NV 0x8714
#define GL_HI_SCALE_NV 0x870E
#define GL_HORIZONTAL_LINE_TO_NV 0x06
#define GL_HSL_COLOR_KHR 0x92AF
#define GL_HSL_COLOR_NV 0x92AF
#define GL_HSL_HUE_KHR 0x92AD
#define GL_HSL_HUE_NV 0x92AD
#define GL_HSL_LUMINOSITY_KHR 0x92B0
#define GL_HSL_LUMINOSITY_NV 0x92B0
#define GL_HSL_SATURATION_KHR 0x92AE
#define GL_HSL_SATURATION_NV 0x92AE
#define GL_IDENTITY_NV 0x862A
#define GL_IGNORE_BORDER_HP 0x8150
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_1D_ARRAY_EXT 0x9052
#define GL_IMAGE_1D_EXT 0x904C
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_2D_ARRAY_EXT 0x9053
#define GL_IMAGE_2D_EXT 0x904D
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
#define GL_IMAGE_2D_MULTISAMPLE_EXT 0x9055
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_2D_RECT_EXT 0x904F
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_3D_EXT 0x904E
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_BINDING_ACCESS_EXT 0x8F3E
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_BINDING_FORMAT_EXT 0x906E
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LAYERED_EXT 0x8F3C
#define GL_IMAGE_BINDING_LAYER_EXT 0x8F3D
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_LEVEL_EXT 0x8F3B
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BINDING_NAME_EXT 0x8F3A
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_BUFFER_EXT 0x9051
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_CUBE_EXT 0x9050
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
#define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_MAG_FILTER_HP 0x815C
#define GL_IMAGE_MIN_FILTER_HP 0x815D
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#define GL_IMAGE_SCALE_X_HP 0x8155
#define GL_IMAGE_SCALE_Y_HP 0x8156
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#define GL_IMAGE_TRANSLATE_X_HP 0x8157
#define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 0x8B9A
#define GL_INCLUSIVE_EXT 0x8F10
#define GL_INCR 0x1E02
#define GL_INCR_WRAP 0x8507
#define GL_INCR_WRAP_EXT 0x8507
#define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
#define GL_INDEX_ARRAY_COUNT_EXT 0x8087
#define GL_INDEX_ARRAY_EXT 0x8077
#define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#define GL_INDEX_ARRAY_LIST_IBM 103073
#define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#define GL_INDEX_ARRAY_POINTER_EXT 0x8091
#define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
#define GL_INDEX_ARRAY_TYPE_EXT 0x8085
#define GL_INDEX_BIT_PGI 0x00080000
#define GL_INDEX_MATERIAL_EXT 0x81B8
#define GL_INDEX_MATERIAL_FACE_EXT 0x81BA
#define GL_INDEX_MATERIAL_PARAMETER_EXT 0x81B9
#define GL_INDEX_TEST_EXT 0x81B5
#define GL_INDEX_TEST_FUNC_EXT 0x81B6
#define GL_INDEX_TEST_REF_EXT 0x81B7
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
#define GL_INSTRUMENT_MEASUREMENTS_SGIX 0x8181
#define GL_INT 0x1404
#define GL_INT16_NV 0x8FE4
#define GL_INT16_VEC2_NV 0x8FE5
#define GL_INT16_VEC3_NV 0x8FE6
#define GL_INT16_VEC4_NV 0x8FE7
#define GL_INT64_ARB 0x140E
#define GL_INT64_NV 0x140E
#define GL_INT64_VEC2_ARB 0x8FE9
#define GL_INT64_VEC2_NV 0x8FE9
#define GL_INT64_VEC3_ARB 0x8FEA
#define GL_INT64_VEC3_NV 0x8FEA
#define GL_INT64_VEC4_ARB 0x8FEB
#define GL_INT64_VEC4_NV 0x8FEB
#define GL_INT8_NV 0x8FE0
#define GL_INT8_VEC2_NV 0x8FE1
#define GL_INT8_VEC3_NV 0x8FE2
#define GL_INT8_VEC4_NV 0x8FE3
#define GL_INTENSITY12_EXT 0x804C
#define GL_INTENSITY16F_ARB 0x881D
#define GL_INTENSITY16I_EXT 0x8D8B
#define GL_INTENSITY16UI_EXT 0x8D79
#define GL_INTENSITY16_EXT 0x804D
#define GL_INTENSITY16_SNORM 0x901B
#define GL_INTENSITY32F_ARB 0x8817
#define GL_INTENSITY32I_EXT 0x8D85
#define GL_INTENSITY32UI_EXT 0x8D73
#define GL_INTENSITY4_EXT 0x804A
#define GL_INTENSITY8I_EXT 0x8D91
#define GL_INTENSITY8UI_EXT 0x8D7F
#define GL_INTENSITY8_EXT 0x804B
#define GL_INTENSITY8_SNORM 0x9017
#define GL_INTENSITY_EXT 0x8049
#define GL_INTENSITY_FLOAT16_APPLE 0x881D
#define GL_INTENSITY_FLOAT16_ATI 0x881D
#define GL_INTENSITY_FLOAT32_APPLE 0x8817
#define GL_INTENSITY_FLOAT32_ATI 0x8817
#define GL_INTENSITY_SNORM 0x9013
#define GL_INTERLACE_OML 0x8980
#define GL_INTERLACE_READ_INGR 0x8568
#define GL_INTERLACE_READ_OML 0x8981
#define GL_INTERLACE_SGIX 0x8094
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
#define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INTERPOLATE_ARB 0x8575
#define GL_INTERPOLATE_EXT 0x8575
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_1D_ARRAY_EXT 0x905D
#define GL_INT_IMAGE_1D_EXT 0x9057
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_2D_ARRAY_EXT 0x905E
#define GL_INT_IMAGE_2D_EXT 0x9058
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT 0x9060
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_2D_RECT_EXT 0x905A
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_3D_EXT 0x9059
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_BUFFER_EXT 0x905C
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_CUBE_EXT 0x905B
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
#define GL_INT_SAMPLER_1D_EXT 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
#define GL_INT_SAMPLER_2D_EXT 0x8DCA
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_3D_EXT 0x8DCB
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_INT_SAMPLER_BUFFER_AMD 0x9002
#define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_CUBE_EXT 0x8DCC
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E
#define GL_INT_SAMPLER_RENDERBUFFER_NV 0x8E57
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC2_ARB 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC3_ARB 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_INT_VEC4_ARB 0x8B55
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_INVALID_OPERATION 0x0502
#define GL_INVALID_VALUE 0x0501
#define GL_INVARIANT_DATATYPE_EXT 0x87EB
#define GL_INVARIANT_EXT 0x87C2
#define GL_INVARIANT_VALUE_EXT 0x87EA
#define GL_INVERSE_NV 0x862B
#define GL_INVERSE_TRANSPOSE_NV 0x862D
#define GL_INVERT 0x150A
#define GL_INVERTED_SCREEN_W_REND 0x8491
#define GL_INVERT_OVG_NV 0x92B4
#define GL_INVERT_RGB_NV 0x92A3
#define GL_IR_INSTRUMENT1_SGIX 0x817F
#define GL_ISOLINES 0x8E7A
#define GL_IS_PER_PATCH 0x92E7
#define GL_IS_ROW_MAJOR 0x9300
#define GL_ITALIC_BIT_NV 0x02
#define GL_IUI_N3F_V2F_EXT 0x81AF
#define GL_IUI_N3F_V3F_EXT 0x81B0
#define GL_IUI_V2F_EXT 0x81AD
#define GL_IUI_V3F_EXT 0x81AE
#define GL_KEEP 0x1E00
#define GL_LARGE_CCW_ARC_TO_NV 0x16
#define GL_LARGE_CW_ARC_TO_NV 0x18
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
#define GL_LAST_VIDEO_CAPTURE_STATUS_NV 0x9027
#define GL_LAYER_NV 0x8DAA
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_LAYOUT_COLOR_ATTACHMENT_EXT 0x958E
#define GL_LAYOUT_DEFAULT_INTEL 0
#define GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT 0x9531
#define GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT 0x9530
#define GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT 0x958F
#define GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT 0x9590
#define GL_LAYOUT_GENERAL_EXT 0x958D
#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL 2
#define GL_LAYOUT_LINEAR_INTEL 1
#define GL_LAYOUT_SHADER_READ_ONLY_EXT 0x9591
#define GL_LAYOUT_TRANSFER_DST_EXT 0x9593
#define GL_LAYOUT_TRANSFER_SRC_EXT 0x9592
#define GL_LEFT 0x0406
#define GL_LEQUAL 0x0203
#define GL_LERP_ATI 0x8969
#define GL_LESS 0x0201
#define GL_LGPU_SEPARATE_STORAGE_BIT_NVX 0x0800
#define GL_LIGHTEN_KHR 0x9298
#define GL_LIGHTEN_NV 0x9298
#define GL_LIGHT_ENV_MODE_SGIX 0x8407
#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT 0x81F8
#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
#define GL_LINE 0x1B01
#define GL_LINEAR 0x2601
#define GL_LINEARBURN_NV 0x92A5
#define GL_LINEARDODGE_NV 0x92A4
#define GL_LINEARLIGHT_NV 0x92A7
#define GL_LINEAR_CLIPMAP_LINEAR_SGIX 0x8170
#define GL_LINEAR_CLIPMAP_NEAREST_SGIX 0x844F
#define GL_LINEAR_DETAIL_ALPHA_SGIS 0x8098
#define GL_LINEAR_DETAIL_COLOR_SGIS 0x8099
#define GL_LINEAR_DETAIL_SGIS 0x8097
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_LINEAR_SHARPEN_ALPHA_SGIS 0x80AE
#define GL_LINEAR_SHARPEN_COLOR_SGIS 0x80AF
#define GL_LINEAR_SHARPEN_SGIS 0x80AD
#define GL_LINEAR_TILING_EXT 0x9585
#define GL_LINES 0x0001
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINES_ADJACENCY_ARB 0x000A
#define GL_LINES_ADJACENCY_EXT 0x000A
#define GL_LINE_LOOP 0x0002
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_LINE_STRIP 0x0003
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#define GL_LINE_TO_NV 0x04
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_COMMAND_NV 0x000D
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINK_STATUS 0x8B82
#define GL_LIST_PRIORITY_SGIX 0x8182
#define GL_LOCAL_CONSTANT_DATATYPE_EXT 0x87ED
#define GL_LOCAL_CONSTANT_EXT 0x87C3
#define GL_LOCAL_CONSTANT_VALUE_EXT 0x87EC
#define GL_LOCAL_EXT 0x87C4
#define GL_LOCATION 0x930E
#define GL_LOCATION_COMPONENT 0x934A
#define GL_LOCATION_INDEX 0x930F
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#define GL_LOWER_LEFT 0x8CA1
#define GL_LOW_FLOAT 0x8DF0
#define GL_LOW_INT 0x8DF3
#define GL_LO_BIAS_NV 0x8715
#define GL_LO_SCALE_NV 0x870F
#define GL_LUID_SIZE_EXT 8
#define GL_LUMINANCE12_ALPHA12_EXT 0x8047
#define GL_LUMINANCE12_ALPHA4_EXT 0x8046
#define GL_LUMINANCE12_EXT 0x8041
#define GL_LUMINANCE16F_ARB 0x881E
#define GL_LUMINANCE16F_EXT 0x881E
#define GL_LUMINANCE16I_EXT 0x8D8C
#define GL_LUMINANCE16UI_EXT 0x8D7A
#define GL_LUMINANCE16_ALPHA16_EXT 0x8048
#define GL_LUMINANCE16_ALPHA16_SNORM 0x901A
#define GL_LUMINANCE16_EXT 0x8042
#define GL_LUMINANCE16_SNORM 0x9019
#define GL_LUMINANCE32F_ARB 0x8818
#define GL_LUMINANCE32F_EXT 0x8818
#define GL_LUMINANCE32I_EXT 0x8D86
#define GL_LUMINANCE32UI_EXT 0x8D74
#define GL_LUMINANCE4_ALPHA4_EXT 0x8043
#define GL_LUMINANCE4_EXT 0x803F
#define GL_LUMINANCE6_ALPHA2_EXT 0x8044
#define GL_LUMINANCE8I_EXT 0x8D92
#define GL_LUMINANCE8UI_EXT 0x8D80
#define GL_LUMINANCE8_ALPHA8_EXT 0x8045
#define GL_LUMINANCE8_ALPHA8_SNORM 0x9016
#define GL_LUMINANCE8_EXT 0x8040
#define GL_LUMINANCE8_SNORM 0x9015
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F
#define GL_LUMINANCE_ALPHA16F_EXT 0x881F
#define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#define GL_LUMINANCE_ALPHA32F_EXT 0x8819
#define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F
#define GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F
#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819
#define GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819
#define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#define GL_LUMINANCE_ALPHA_SNORM 0x9012
#define GL_LUMINANCE_FLOAT16_APPLE 0x881E
#define GL_LUMINANCE_FLOAT16_ATI 0x881E
#define GL_LUMINANCE_FLOAT32_APPLE 0x8818
#define GL_LUMINANCE_FLOAT32_ATI 0x8818
#define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#define GL_LUMINANCE_SNORM 0x9011
#define GL_MAD_ATI 0x8968
#define GL_MAGNITUDE_BIAS_NV 0x8718
#define GL_MAGNITUDE_SCALE_NV 0x8712
#define GL_MAJOR_VERSION 0x821B
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_MAP1_BINORMAL_EXT 0x8446
#define GL_MAP1_TANGENT_EXT 0x8444
#define GL_MAP1_VERTEX_ATTRIB0_4_NV 0x8660
#define GL_MAP1_VERTEX_ATTRIB10_4_NV 0x866A
#define GL_MAP1_VERTEX_ATTRIB11_4_NV 0x866B
#define GL_MAP1_VERTEX_ATTRIB12_4_NV 0x866C
#define GL_MAP1_VERTEX_ATTRIB13_4_NV 0x866D
#define GL_MAP1_VERTEX_ATTRIB14_4_NV 0x866E
#define GL_MAP1_VERTEX_ATTRIB15_4_NV 0x866F
#define GL_MAP1_VERTEX_ATTRIB1_4_NV 0x8661
#define GL_MAP1_VERTEX_ATTRIB2_4_NV 0x8662
#define GL_MAP1_VERTEX_ATTRIB3_4_NV 0x8663
#define GL_MAP1_VERTEX_ATTRIB4_4_NV 0x8664
#define GL_MAP1_VERTEX_ATTRIB5_4_NV 0x8665
#define GL_MAP1_VERTEX_ATTRIB6_4_NV 0x8666
#define GL_MAP1_VERTEX_ATTRIB7_4_NV 0x8667
#define GL_MAP1_VERTEX_ATTRIB8_4_NV 0x8668
#define GL_MAP1_VERTEX_ATTRIB9_4_NV 0x8669
#define GL_MAP2_BINORMAL_EXT 0x8447
#define GL_MAP2_TANGENT_EXT 0x8445
#define GL_MAP2_VERTEX_ATTRIB0_4_NV 0x8670
#define GL_MAP2_VERTEX_ATTRIB10_4_NV 0x867A
#define GL_MAP2_VERTEX_ATTRIB11_4_NV 0x867B
#define GL_MAP2_VERTEX_ATTRIB12_4_NV 0x867C
#define GL_MAP2_VERTEX_ATTRIB13_4_NV 0x867D
#define GL_MAP2_VERTEX_ATTRIB14_4_NV 0x867E
#define GL_MAP2_VERTEX_ATTRIB15_4_NV 0x867F
#define GL_MAP2_VERTEX_ATTRIB1_4_NV 0x8671
#define GL_MAP2_VERTEX_ATTRIB2_4_NV 0x8672
#define GL_MAP2_VERTEX_ATTRIB3_4_NV 0x8673
#define GL_MAP2_VERTEX_ATTRIB4_4_NV 0x8674
#define GL_MAP2_VERTEX_ATTRIB5_4_NV 0x8675
#define GL_MAP2_VERTEX_ATTRIB6_4_NV 0x8676
#define GL_MAP2_VERTEX_ATTRIB7_4_NV 0x8677
#define GL_MAP2_VERTEX_ATTRIB8_4_NV 0x8678
#define GL_MAP2_VERTEX_ATTRIB9_4_NV 0x8679
#define GL_MAP_ATTRIB_U_ORDER_NV 0x86C3
#define GL_MAP_ATTRIB_V_ORDER_NV 0x86C4
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_TESSELLATION_NV 0x86C2
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MATERIAL_SIDE_HINT_PGI 0x1A22C
#define GL_MATRIX0_ARB 0x88C0
#define GL_MATRIX0_NV 0x8630
#define GL_MATRIX10_ARB 0x88CA
#define GL_MATRIX11_ARB 0x88CB
#define GL_MATRIX12_ARB 0x88CC
#define GL_MATRIX13_ARB 0x88CD
#define GL_MATRIX14_ARB 0x88CE
#define GL_MATRIX15_ARB 0x88CF
#define GL_MATRIX16_ARB 0x88D0
#define GL_MATRIX17_ARB 0x88D1
#define GL_MATRIX18_ARB 0x88D2
#define GL_MATRIX19_ARB 0x88D3
#define GL_MATRIX1_ARB 0x88C1
#define GL_MATRIX1_NV 0x8631
#define GL_MATRIX20_ARB 0x88D4
#define GL_MATRIX21_ARB 0x88D5
#define GL_MATRIX22_ARB 0x88D6
#define GL_MATRIX23_ARB 0x88D7
#define GL_MATRIX24_ARB 0x88D8
#define GL_MATRIX25_ARB 0x88D9
#define GL_MATRIX26_ARB 0x88DA
#define GL_MATRIX27_ARB 0x88DB
#define GL_MATRIX28_ARB 0x88DC
#define GL_MATRIX29_ARB 0x88DD
#define GL_MATRIX2_ARB 0x88C2
#define GL_MATRIX2_NV 0x8632
#define GL_MATRIX30_ARB 0x88DE
#define GL_MATRIX31_ARB 0x88DF
#define GL_MATRIX3_ARB 0x88C3
#define GL_MATRIX3_NV 0x8633
#define GL_MATRIX4_ARB 0x88C4
#define GL_MATRIX4_NV 0x8634
#define GL_MATRIX5_ARB 0x88C5
#define GL_MATRIX5_NV 0x8635
#define GL_MATRIX6_ARB 0x88C6
#define GL_MATRIX6_NV 0x8636
#define GL_MATRIX7_ARB 0x88C7
#define GL_MATRIX7_NV 0x8637
#define GL_MATRIX8_ARB 0x88C8
#define GL_MATRIX9_ARB 0x88C9
#define GL_MATRIX_EXT 0x87C0
#define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#define GL_MATRIX_PALETTE_ARB 0x8840
#define GL_MATRIX_STRIDE 0x92FF
#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000
#define GL_MAT_AMBIENT_BIT_PGI 0x00100000
#define GL_MAT_COLOR_INDEXES_BIT_PGI 0x01000000
#define GL_MAT_DIFFUSE_BIT_PGI 0x00400000
#define GL_MAT_EMISSION_BIT_PGI 0x00800000
#define GL_MAT_SHININESS_BIT_PGI 0x02000000
#define GL_MAT_SPECULAR_BIT_PGI 0x04000000
#define GL_MAX 0x8008
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_MAX_3D_TEXTURE_SIZE_EXT 0x8073
#define GL_MAX_4D_TEXTURE_SIZE_SGIS 0x8138
#define GL_MAX_ACTIVE_LIGHTS_SGIX 0x8405
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT 0x88FF
#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX 0x8360
#define GL_MAX_ASYNC_HISTOGRAM_SGIX 0x832D
#define GL_MAX_ASYNC_READ_PIXELS_SGIX 0x8361
#define GL_MAX_ASYNC_TEX_IMAGE_SGIX 0x835F
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#define GL_MAX_CLIPMAP_DEPTH_SGIX 0x8177
#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAX_COARSE_FRAGMENT_SAMPLES_NV 0x955F
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#define GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD 0x91B3
#define GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD 0x91B4
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
#define GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV 0x8E67
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV 0x8E6F
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 0x8B4D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB 0x90EB
#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB 0x91BF
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB 0x9344
#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB 0x9345
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_MAX_CONVOLUTION_HEIGHT_EXT 0x801B
#define GL_MAX_CONVOLUTION_WIDTH_EXT 0x801A
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 0x851C
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT 0x851C
#define GL_MAX_CULL_DISTANCES 0x82F9
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV 0x90D1
#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV 0x90D0
#define GL_MAX_DEFORMATION_ORDER_SGIX 0x8197
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD 0x91B5
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_DETACHED_BUFFERS_NV 0x95AD
#define GL_MAX_DETACHED_TEXTURES_NV 0x95AC
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_MAX_DRAW_BUFFERS_ARB 0x8824
#define GL_MAX_DRAW_BUFFERS_ATI 0x8824
#define GL_MAX_DRAW_MESH_TASKS_COUNT_NV 0x953D
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_MAX_ELEMENTS_INDICES_EXT 0x80E9
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_VERTICES_EXT 0x80E8
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_MAX_EXT 0x8008
#define GL_MAX_FOG_FUNC_POINTS_SGIS 0x812C
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C
#define GL_MAX_FRAGMENT_LIGHTS_SGIX 0x8404
#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 0x8B49
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_FRAMEZOOM_FACTOR_SGIX 0x818D
#define GL_MAX_GENERAL_COMBINERS_NV 0x854D
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 0x8DDD
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_MAX_IMAGE_SAMPLES_EXT 0x906D
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_IMAGE_UNITS_EXT 0x8F38
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_LGPU_GPUS_NVX 0x92BA
#define GL_MAX_MAP_TESSELLATION_NV 0x86D6
#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#define GL_MAX_MESH_ATOMIC_COUNTERS_NV 0x8E65
#define GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV 0x8E64
#define GL_MAX_MESH_IMAGE_UNIFORMS_NV 0x8E62
#define GL_MAX_MESH_OUTPUT_PRIMITIVES_NV 0x9539
#define GL_MAX_MESH_OUTPUT_VERTICES_NV 0x9538
#define GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV 0x8E66
#define GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV 0x8E61
#define GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV 0x9536
#define GL_MAX_MESH_UNIFORM_BLOCKS_NV 0x8E60
#define GL_MAX_MESH_UNIFORM_COMPONENTS_NV 0x8E63
#define GL_MAX_MESH_VIEWS_NV 0x9557
#define GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV 0x95A2
#define GL_MAX_MESH_WORK_GROUP_SIZE_NV 0x953B
#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV 0x8E11
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT 0x87CD
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
#define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 0x880B
#define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV 0x8908
#define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV 0x8DA5
#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV 0x8DA6
#define GL_MAX_PROGRAM_IF_DEPTH_NV 0x88F6
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#define GL_MAX_PROGRAM_LOOP_COUNT_NV 0x88F8
#define GL_MAX_PROGRAM_LOOP_DEPTH_NV 0x88F7
#define GL_MAX_PROGRAM_MATRICES_ARB 0x862F
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x880E
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x8810
#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x880F
#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV 0x8C27
#define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV 0x8DA0
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV 0x8DA1
#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV 0x86D8
#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV 0x8909
#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV 0x8F45
#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV 0x8F44
#define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT 0x8905
#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F
#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 0x880D
#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 0x880C
#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV 0x8C28
#define GL_MAX_RASTER_SAMPLES_EXT 0x9329
#define GL_MAX_RATIONAL_EVAL_ORDER_NV 0x86D7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV 0x84F8
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#define GL_MAX_SAMPLES 0x8D57
#define GL_MAX_SAMPLES_EXT 0x8D57
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_MAX_SAMPLE_MASK_WORDS_NV 0x8E59
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#define GL_MAX_SHADER_COMPILER_THREADS_ARB 0x91B0
#define GL_MAX_SHADER_COMPILER_THREADS_KHR 0x91B0
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SHININESS_NV 0x8504
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB 0x9199
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB 0x919A
#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD 0x9198
#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB 0x9198
#define GL_MAX_SPOT_EXPONENT_NV 0x8505
#define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV 0x9349
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_MAX_TASK_ATOMIC_COUNTERS_NV 0x8E6D
#define GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV 0x8E6C
#define GL_MAX_TASK_IMAGE_UNIFORMS_NV 0x8E6A
#define GL_MAX_TASK_OUTPUT_COUNT_NV 0x953A
#define GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV 0x8E6E
#define GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV 0x8E69
#define GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV 0x9537
#define GL_MAX_TASK_UNIFORM_BLOCKS_NV 0x8E68
#define GL_MAX_TASK_UNIFORM_COMPONENTS_NV 0x8E6B
#define GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV 0x95A3
#define GL_MAX_TASK_WORK_GROUP_SIZE_NV 0x953C
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB 0x8C2B
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
#define GL_MAX_TEXTURE_COORDS_ARB 0x8871
#define GL_MAX_TEXTURE_COORDS_NV 0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB 0x8872
#define GL_MAX_TEXTURE_IMAGE_UNITS_NV 0x8872
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_MAX_TEXTURE_LOD_BIAS_EXT 0x84FD
#define GL_MAX_TEXTURE_MAX_ANISOTROPY 0x84FF
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#define GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV 0x95B6
#define GL_MAX_TRACK_MATRICES_NV 0x862F
#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MAX_VARYING_COMPONENTS_EXT 0x8B4B
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VARYING_FLOATS_ARB 0x8B4B
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_MAX_VERTEX_ATTRIBS_ARB 0x8869
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#define GL_MAX_VERTEX_HINT_PGI 0x1A22D
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
#define GL_MAX_VERTEX_SHADER_LOCALS_EXT 0x87C9
#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_MAX_VERTEX_STREAMS_ATI 0x876B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 0x8B4A
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VERTEX_UNITS_ARB 0x86A4
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 0x8DDE
#define GL_MAX_VIEWPORTS 0x825B
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_MAX_VIEWS_OVR 0x9631
#define GL_MAX_WIDTH 0x827E
#define GL_MAX_WINDOW_RECTANGLES_EXT 0x8F14
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_MEDIUM_INT 0x8DF4
#define GL_MEMORY_ATTACHABLE_ALIGNMENT_NV 0x95A6
#define GL_MEMORY_ATTACHABLE_NV 0x95A8
#define GL_MEMORY_ATTACHABLE_SIZE_NV 0x95A7
#define GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV 0x9543
#define GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV 0x92DF
#define GL_MESH_OUTPUT_TYPE_NV 0x957B
#define GL_MESH_PRIMITIVES_OUT_NV 0x957A
#define GL_MESH_SHADER_BIT_NV 0x00000040
#define GL_MESH_SHADER_NV 0x9559
#define GL_MESH_SUBROUTINE_NV 0x957C
#define GL_MESH_SUBROUTINE_UNIFORM_NV 0x957E
#define GL_MESH_VERTICES_OUT_NV 0x9579
#define GL_MESH_WORK_GROUP_SIZE_NV 0x953E
#define GL_MIN 0x8007
#define GL_MINMAX_EXT 0x802E
#define GL_MINMAX_FORMAT_EXT 0x802F
#define GL_MINMAX_SINK_EXT 0x8030
#define GL_MINOR_VERSION 0x821C
#define GL_MINUS_CLAMPED_NV 0x92B3
#define GL_MINUS_NV 0x929F
#define GL_MIN_EXT 0x8007
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B
#define GL_MIN_LOD_WARNING_AMD 0x919C
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT 0x8904
#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37
#define GL_MIN_SPARSE_LEVEL_AMD 0x919B
#define GL_MIPMAP 0x8293
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MIRRORED_REPEAT_ARB 0x8370
#define GL_MIRRORED_REPEAT_IBM 0x8370
#define GL_MIRROR_CLAMP_ATI 0x8742
#define GL_MIRROR_CLAMP_EXT 0x8742
#define GL_MIRROR_CLAMP_TO_BORDER_EXT 0x8912
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#define GL_MIRROR_CLAMP_TO_EDGE_ATI 0x8743
#define GL_MIRROR_CLAMP_TO_EDGE_EXT 0x8743
#define GL_MITER_REVERT_NV 0x90A7
#define GL_MITER_TRUNCATE_NV 0x90A8
#define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV 0x932F
#define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV 0x9330
#define GL_MODELVIEW0_ARB 0x1700
#define GL_MODELVIEW0_EXT 0x1700
#define GL_MODELVIEW0_MATRIX_EXT 0x0BA6
#define GL_MODELVIEW0_STACK_DEPTH_EXT 0x0BA3
#define GL_MODELVIEW10_ARB 0x872A
#define GL_MODELVIEW11_ARB 0x872B
#define GL_MODELVIEW12_ARB 0x872C
#define GL_MODELVIEW13_ARB 0x872D
#define GL_MODELVIEW14_ARB 0x872E
#define GL_MODELVIEW15_ARB 0x872F
#define GL_MODELVIEW16_ARB 0x8730
#define GL_MODELVIEW17_ARB 0x8731
#define GL_MODELVIEW18_ARB 0x8732
#define GL_MODELVIEW19_ARB 0x8733
#define GL_MODELVIEW1_ARB 0x850A
#define GL_MODELVIEW1_EXT 0x850A
#define GL_MODELVIEW1_MATRIX_EXT 0x8506
#define GL_MODELVIEW1_STACK_DEPTH_EXT 0x8502
#define GL_MODELVIEW20_ARB 0x8734
#define GL_MODELVIEW21_ARB 0x8735
#define GL_MODELVIEW22_ARB 0x8736
#define GL_MODELVIEW23_ARB 0x8737
#define GL_MODELVIEW24_ARB 0x8738
#define GL_MODELVIEW25_ARB 0x8739
#define GL_MODELVIEW26_ARB 0x873A
#define GL_MODELVIEW27_ARB 0x873B
#define GL_MODELVIEW28_ARB 0x873C
#define GL_MODELVIEW29_ARB 0x873D
#define GL_MODELVIEW2_ARB 0x8722
#define GL_MODELVIEW30_ARB 0x873E
#define GL_MODELVIEW31_ARB 0x873F
#define GL_MODELVIEW3_ARB 0x8723
#define GL_MODELVIEW4_ARB 0x8724
#define GL_MODELVIEW5_ARB 0x8725
#define GL_MODELVIEW6_ARB 0x8726
#define GL_MODELVIEW7_ARB 0x8727
#define GL_MODELVIEW8_ARB 0x8728
#define GL_MODELVIEW9_ARB 0x8729
#define GL_MODELVIEW_PROJECTION_NV 0x8629
#define GL_MODULATE_ADD_ATI 0x8744
#define GL_MODULATE_SIGNED_ADD_ATI 0x8745
#define GL_MODULATE_SUBTRACT_ATI 0x8746
#define GL_MOVE_TO_CONTINUES_NV 0x90B6
#define GL_MOVE_TO_NV 0x02
#define GL_MOVE_TO_RESETS_NV 0x90B5
#define GL_MOV_ATI 0x8961
#define GL_MULTICAST_GPUS_NV 0x92BA
#define GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9549
#define GL_MULTIPLY_KHR 0x9294
#define GL_MULTIPLY_NV 0x9294
#define GL_MULTISAMPLE 0x809D
#define GL_MULTISAMPLES_NV 0x9371
#define GL_MULTISAMPLE_3DFX 0x86B2
#define GL_MULTISAMPLE_ARB 0x809D
#define GL_MULTISAMPLE_BIT_3DFX 0x20000000
#define GL_MULTISAMPLE_BIT_ARB 0x20000000
#define GL_MULTISAMPLE_BIT_EXT 0x20000000
#define GL_MULTISAMPLE_COVERAGE_MODES_NV 0x8E12
#define GL_MULTISAMPLE_EXT 0x809D
#define GL_MULTISAMPLE_FILTER_HINT_NV 0x8534
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB 0x9382
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB 0x9381
#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT 0x932B
#define GL_MULTISAMPLE_SGIS 0x809D
#define GL_MUL_ATI 0x8964
#define GL_MVP_MATRIX_EXT 0x87E3
#define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
#define GL_NAMED_STRING_TYPE_ARB 0x8DEA
#define GL_NAME_LENGTH 0x92F9
#define GL_NAND 0x150E
#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203
#define GL_NATIVE_GRAPHICS_END_HINT_PGI 0x1A204
#define GL_NATIVE_GRAPHICS_HANDLE_PGI 0x1A202
#define GL_NEAREST 0x2600
#define GL_NEAREST_CLIPMAP_LINEAR_SGIX 0x844E
#define GL_NEAREST_CLIPMAP_NEAREST_SGIX 0x844D
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_NEGATE_BIT_ATI 0x00000004
#define GL_NEGATIVE_ONE_EXT 0x87DF
#define GL_NEGATIVE_ONE_TO_ONE 0x935E
#define GL_NEGATIVE_W_EXT 0x87DC
#define GL_NEGATIVE_X_EXT 0x87D9
#define GL_NEGATIVE_Y_EXT 0x87DA
#define GL_NEGATIVE_Z_EXT 0x87DB
#define GL_NEVER 0x0200
#define GL_NEXT_BUFFER_NV -2
#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV 0x9025
#define GL_NICEST 0x1102
#define GL_NONE 0
#define GL_NOOP 0x1505
#define GL_NOP_COMMAND_NV 0x0001
#define GL_NOR 0x1508
#define GL_NORMALIZED_RANGE_EXT 0x87E0
#define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
#define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
#define GL_NORMAL_ARRAY_EXT 0x8075
#define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#define GL_NORMAL_ARRAY_LIST_IBM 103071
#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
#define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
#define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
#define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
#define GL_NORMAL_BIT_PGI 0x08000000
#define GL_NORMAL_MAP_ARB 0x8511
#define GL_NORMAL_MAP_EXT 0x8511
#define GL_NORMAL_MAP_NV 0x8511
#define GL_NOTEQUAL 0x0205
#define GL_NO_ERROR 0
#define GL_NO_RESET_NOTIFICATION 0x8261
#define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#define GL_NUM_DEVICE_UUIDS_EXT 0x9596
#define GL_NUM_EXTENSIONS 0x821D
#define GL_NUM_FILL_STREAMS_NV 0x8E29
#define GL_NUM_FRAGMENT_CONSTANTS_ATI 0x896F
#define GL_NUM_FRAGMENT_REGISTERS_ATI 0x896E
#define GL_NUM_GENERAL_COMBINERS_NV 0x854E
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI 0x8971
#define GL_NUM_INSTRUCTIONS_TOTAL_ATI 0x8972
#define GL_NUM_LOOPBACK_COMPONENTS_ATI 0x8974
#define GL_NUM_PASSES_ATI 0x8970
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_NUM_SPARSE_LEVELS_ARB 0x91AA
#define GL_NUM_SPIR_V_EXTENSIONS 0x9554
#define GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD 0x91B6
#define GL_NUM_TILING_TYPES_EXT 0x9582
#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV 0x9024
#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB 0x91A8
#define GL_NUM_WINDOW_RECTANGLES_EXT 0x8F15
#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB 0x8B89
#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 0x8B8A
#define GL_OBJECT_ACTIVE_UNIFORMS_ARB 0x8B86
#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB 0x8B87
#define GL_OBJECT_ATTACHED_OBJECTS_ARB 0x8B85
#define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#define GL_OBJECT_COMPILE_STATUS_ARB 0x8B81
#define GL_OBJECT_DELETE_STATUS_ARB 0x8B80
#define GL_OBJECT_DISTANCE_TO_LINE_SGIS 0x81F3
#define GL_OBJECT_DISTANCE_TO_POINT_SGIS 0x81F1
#define GL_OBJECT_INFO_LOG_LENGTH_ARB 0x8B84
#define GL_OBJECT_LINE_SGIS 0x81F7
#define GL_OBJECT_LINK_STATUS_ARB 0x8B82
#define GL_OBJECT_POINT_SGIS 0x81F5
#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB 0x8B88
#define GL_OBJECT_SUBTYPE_ARB 0x8B4F
#define GL_OBJECT_TYPE 0x9112
#define GL_OBJECT_TYPE_ARB 0x8B4E
#define GL_OBJECT_VALIDATE_STATUS_ARB 0x8B83
#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD 0x874F
#define GL_OCCLUSION_TEST_HP 0x8165
#define GL_OCCLUSION_TEST_RESULT_HP 0x8166
#define GL_OFFSET 0x92FC
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
#define GL_OFFSET_HILO_TEXTURE_2D_NV 0x8854
#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
#define GL_OFFSET_TEXTURE_2D_BIAS_NV 0x86E3
#define GL_OFFSET_TEXTURE_2D_MATRIX_NV 0x86E1
#define GL_OFFSET_TEXTURE_2D_NV 0x86E8
#define GL_OFFSET_TEXTURE_2D_SCALE_NV 0x86E2
#define GL_OFFSET_TEXTURE_BIAS_NV 0x86E3
#define GL_OFFSET_TEXTURE_MATRIX_NV 0x86E1
#define GL_OFFSET_TEXTURE_RECTANGLE_NV 0x864C
#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
#define GL_OFFSET_TEXTURE_SCALE_NV 0x86E2
#define GL_ONE 1
#define GL_ONE_EXT 0x87DE
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_OPERAND0_ALPHA_ARB 0x8598
#define GL_OPERAND0_ALPHA_EXT 0x8598
#define GL_OPERAND0_RGB_ARB 0x8590
#define GL_OPERAND0_RGB_EXT 0x8590
#define GL_OPERAND1_ALPHA_ARB 0x8599
#define GL_OPERAND1_ALPHA_EXT 0x8599
#define GL_OPERAND1_RGB_ARB 0x8591
#define GL_OPERAND1_RGB_EXT 0x8591
#define GL_OPERAND2_ALPHA_ARB 0x859A
#define GL_OPERAND2_ALPHA_EXT 0x859A
#define GL_OPERAND2_RGB_ARB 0x8592
#define GL_OPERAND2_RGB_EXT 0x8592
#define GL_OPERAND3_ALPHA_NV 0x859B
#define GL_OPERAND3_RGB_NV 0x8593
#define GL_OPTIMAL_TILING_EXT 0x9584
#define GL_OP_ADD_EXT 0x8787
#define GL_OP_CLAMP_EXT 0x878E
#define GL_OP_CROSS_PRODUCT_EXT 0x8797
#define GL_OP_DOT3_EXT 0x8784
#define GL_OP_DOT4_EXT 0x8785
#define GL_OP_EXP_BASE_2_EXT 0x8791
#define GL_OP_FLOOR_EXT 0x878F
#define GL_OP_FRAC_EXT 0x8789
#define GL_OP_INDEX_EXT 0x8782
#define GL_OP_LOG_BASE_2_EXT 0x8792
#define GL_OP_MADD_EXT 0x8788
#define GL_OP_MAX_EXT 0x878A
#define GL_OP_MIN_EXT 0x878B
#define GL_OP_MOV_EXT 0x8799
#define GL_OP_MULTIPLY_MATRIX_EXT 0x8798
#define GL_OP_MUL_EXT 0x8786
#define GL_OP_NEGATE_EXT 0x8783
#define GL_OP_POWER_EXT 0x8793
#define GL_OP_RECIP_EXT 0x8794
#define GL_OP_RECIP_SQRT_EXT 0x8795
#define GL_OP_ROUND_EXT 0x8790
#define GL_OP_SET_GE_EXT 0x878C
#define GL_OP_SET_LT_EXT 0x878D
#define GL_OP_SUB_EXT 0x8796
#define GL_OR 0x1507
#define GL_OR_INVERTED 0x150D
#define GL_OR_REVERSE 0x150B
#define GL_OUTPUT_COLOR0_EXT 0x879B
#define GL_OUTPUT_COLOR1_EXT 0x879C
#define GL_OUTPUT_FOG_EXT 0x87BD
#define GL_OUTPUT_TEXTURE_COORD0_EXT 0x879D
#define GL_OUTPUT_TEXTURE_COORD10_EXT 0x87A7
#define GL_OUTPUT_TEXTURE_COORD11_EXT 0x87A8
#define GL_OUTPUT_TEXTURE_COORD12_EXT 0x87A9
#define GL_OUTPUT_TEXTURE_COORD13_EXT 0x87AA
#define GL_OUTPUT_TEXTURE_COORD14_EXT 0x87AB
#define GL_OUTPUT_TEXTURE_COORD15_EXT 0x87AC
#define GL_OUTPUT_TEXTURE_COORD16_EXT 0x87AD
#define GL_OUTPUT_TEXTURE_COORD17_EXT 0x87AE
#define GL_OUTPUT_TEXTURE_COORD18_EXT 0x87AF
#define GL_OUTPUT_TEXTURE_COORD19_EXT 0x87B0
#define GL_OUTPUT_TEXTURE_COORD1_EXT 0x879E
#define GL_OUTPUT_TEXTURE_COORD20_EXT 0x87B1
#define GL_OUTPUT_TEXTURE_COORD21_EXT 0x87B2
#define GL_OUTPUT_TEXTURE_COORD22_EXT 0x87B3
#define GL_OUTPUT_TEXTURE_COORD23_EXT 0x87B4
#define GL_OUTPUT_TEXTURE_COORD24_EXT 0x87B5
#define GL_OUTPUT_TEXTURE_COORD25_EXT 0x87B6
#define GL_OUTPUT_TEXTURE_COORD26_EXT 0x87B7
#define GL_OUTPUT_TEXTURE_COORD27_EXT 0x87B8
#define GL_OUTPUT_TEXTURE_COORD28_EXT 0x87B9
#define GL_OUTPUT_TEXTURE_COORD29_EXT 0x87BA
#define GL_OUTPUT_TEXTURE_COORD2_EXT 0x879F
#define GL_OUTPUT_TEXTURE_COORD30_EXT 0x87BB
#define GL_OUTPUT_TEXTURE_COORD31_EXT 0x87BC
#define GL_OUTPUT_TEXTURE_COORD3_EXT 0x87A0
#define GL_OUTPUT_TEXTURE_COORD4_EXT 0x87A1
#define GL_OUTPUT_TEXTURE_COORD5_EXT 0x87A2
#define GL_OUTPUT_TEXTURE_COORD6_EXT 0x87A3
#define GL_OUTPUT_TEXTURE_COORD7_EXT 0x87A4
#define GL_OUTPUT_TEXTURE_COORD8_EXT 0x87A5
#define GL_OUTPUT_TEXTURE_COORD9_EXT 0x87A6
#define GL_OUTPUT_VERTEX_EXT 0x879A
#define GL_OUT_OF_MEMORY 0x0505
#define GL_OVERLAY_KHR 0x9296
#define GL_OVERLAY_NV 0x9296
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_PACK_CMYK_HINT_EXT 0x800E
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_IMAGE_DEPTH_SGIS 0x8131
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_PACK_IMAGE_HEIGHT_EXT 0x806C
#define GL_PACK_INVERT_MESA 0x8758
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_RESAMPLE_OML 0x8984
#define GL_PACK_RESAMPLE_SGIX 0x842E
#define GL_PACK_ROW_BYTES_APPLE 0x8A15
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_SKIP_IMAGES_EXT 0x806B
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_VOLUMES_SGIS 0x8130
#define GL_PACK_SUBSAMPLE_RATE_SGIX 0x85A0
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PALETTE4_R5_G6_B5_OES 0x8B92
#define GL_PALETTE4_RGB5_A1_OES 0x8B94
#define GL_PALETTE4_RGB8_OES 0x8B90
#define GL_PALETTE4_RGBA4_OES 0x8B93
#define GL_PALETTE4_RGBA8_OES 0x8B91
#define GL_PALETTE8_R5_G6_B5_OES 0x8B97
#define GL_PALETTE8_RGB5_A1_OES 0x8B99
#define GL_PALETTE8_RGB8_OES 0x8B95
#define GL_PALETTE8_RGBA4_OES 0x8B98
#define GL_PALETTE8_RGBA8_OES 0x8B96
#define GL_PARALLEL_ARRAYS_INTEL 0x83F4
#define GL_PARAMETER_BUFFER 0x80EE
#define GL_PARAMETER_BUFFER_ARB 0x80EE
#define GL_PARAMETER_BUFFER_BINDING 0x80EF
#define GL_PARAMETER_BUFFER_BINDING_ARB 0x80EF
#define GL_PARTIAL_SUCCESS_NV 0x902E
#define GL_PASS_THROUGH_NV 0x86E6
#define GL_PATCHES 0x000E
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_PATCH_VERTICES 0x8E72
#define GL_PATH_CLIENT_LENGTH_NV 0x907F
#define GL_PATH_COMMAND_COUNT_NV 0x909D
#define GL_PATH_COMPUTED_LENGTH_NV 0x90A0
#define GL_PATH_COORD_COUNT_NV 0x909E
#define GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF
#define GL_PATH_DASH_ARRAY_COUNT_NV 0x909F
#define GL_PATH_DASH_CAPS_NV 0x907B
#define GL_PATH_DASH_OFFSET_NV 0x907E
#define GL_PATH_DASH_OFFSET_RESET_NV 0x90B4
#define GL_PATH_END_CAPS_NV 0x9076
#define GL_PATH_ERROR_POSITION_NV 0x90AB
#define GL_PATH_FILL_BOUNDING_BOX_NV 0x90A1
#define GL_PATH_FILL_COVER_MODE_NV 0x9082
#define GL_PATH_FILL_MASK_NV 0x9081
#define GL_PATH_FILL_MODE_NV 0x9080
#define GL_PATH_FORMAT_PS_NV 0x9071
#define GL_PATH_FORMAT_SVG_NV 0x9070
#define GL_PATH_GEN_COEFF_NV 0x90B1
#define GL_PATH_GEN_COMPONENTS_NV 0x90B3
#define GL_PATH_GEN_MODE_NV 0x90B0
#define GL_PATH_INITIAL_DASH_CAP_NV 0x907C
#define GL_PATH_INITIAL_END_CAP_NV 0x9077
#define GL_PATH_JOIN_STYLE_NV 0x9079
#define GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV 0x0D36
#define GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV 0x0D38
#define GL_PATH_MITER_LIMIT_NV 0x907A
#define GL_PATH_MODELVIEW_MATRIX_NV 0x0BA6
#define GL_PATH_MODELVIEW_NV 0x1700
#define GL_PATH_MODELVIEW_STACK_DEPTH_NV 0x0BA3
#define GL_PATH_OBJECT_BOUNDING_BOX_NV 0x908A
#define GL_PATH_PROJECTION_MATRIX_NV 0x0BA7
#define GL_PATH_PROJECTION_NV 0x1701
#define GL_PATH_PROJECTION_STACK_DEPTH_NV 0x0BA4
#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV 0x90BD
#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE
#define GL_PATH_STENCIL_FUNC_NV 0x90B7
#define GL_PATH_STENCIL_REF_NV 0x90B8
#define GL_PATH_STENCIL_VALUE_MASK_NV 0x90B9
#define GL_PATH_STROKE_BOUNDING_BOX_NV 0x90A2
#define GL_PATH_STROKE_COVER_MODE_NV 0x9083
#define GL_PATH_STROKE_MASK_NV 0x9084
#define GL_PATH_STROKE_WIDTH_NV 0x9075
#define GL_PATH_TERMINAL_DASH_CAP_NV 0x907D
#define GL_PATH_TERMINAL_END_CAP_NV 0x9078
#define GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV 0x84E3
#define GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV 0x84E4
#define GL_PERCENTAGE_AMD 0x8BC3
#define GL_PERFMON_RESULT_AMD 0x8BC6
#define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#define GL_PERFORMANCE_MONITOR_AMD 0x9152
#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL 0x94FC
#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL 0x94FB
#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL 0x94FA
#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL 0x94F8
#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL 0x94F9
#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL 0x94FF
#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL 0x94F1
#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL 0x94F2
#define GL_PERFQUERY_COUNTER_EVENT_INTEL 0x94F0
#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL 0x94FE
#define GL_PERFQUERY_COUNTER_RAW_INTEL 0x94F4
#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL 0x94F3
#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL 0x94F5
#define GL_PERFQUERY_DONOT_FLUSH_INTEL 0x83F9
#define GL_PERFQUERY_FLUSH_INTEL 0x83FA
#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL 0x00000001
#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL 0x9500
#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL 0x94FD
#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL 0x00000000
#define GL_PERFQUERY_WAIT_INTEL 0x83FB
#define GL_PERTURB_EXT 0x85AE
#define GL_PER_GPU_STORAGE_BIT_NV 0x0800
#define GL_PER_GPU_STORAGE_NV 0x9548
#define GL_PER_STAGE_CONSTANTS_NV 0x8535
#define GL_PHONG_HINT_WIN 0x80EB
#define GL_PHONG_WIN 0x80EA
#define GL_PINLIGHT_NV 0x92A8
#define GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD 0x91AE
#define GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD 0x91AF
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT 0x00000080
#define GL_PIXEL_COUNTER_BITS_NV 0x8864
#define GL_PIXEL_COUNT_AVAILABLE_NV 0x8867
#define GL_PIXEL_COUNT_NV 0x8866
#define GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333
#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
#define GL_PIXEL_GROUP_COLOR_SGIS 0x8356
#define GL_PIXEL_MAG_FILTER_EXT 0x8331
#define GL_PIXEL_MIN_FILTER_EXT 0x8332
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_PACK_BUFFER_ARB 0x88EB
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB 0x88ED
#define GL_PIXEL_PACK_BUFFER_BINDING_EXT 0x88ED
#define GL_PIXEL_PACK_BUFFER_EXT 0x88EB
#define GL_PIXEL_SUBSAMPLE_2424_SGIX 0x85A3
#define GL_PIXEL_SUBSAMPLE_4242_SGIX 0x85A4
#define GL_PIXEL_SUBSAMPLE_4444_SGIX 0x85A2
#define GL_PIXEL_TEXTURE_SGIS 0x8353
#define GL_PIXEL_TEX_GEN_MODE_SGIX 0x832B
#define GL_PIXEL_TEX_GEN_SGIX 0x8139
#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
#define GL_PIXEL_TILE_CACHE_SIZE_SGIX 0x8145
#define GL_PIXEL_TILE_GRID_DEPTH_SGIX 0x8144
#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX 0x8143
#define GL_PIXEL_TILE_GRID_WIDTH_SGIX 0x8142
#define GL_PIXEL_TILE_HEIGHT_SGIX 0x8141
#define GL_PIXEL_TILE_WIDTH_SGIX 0x8140
#define GL_PIXEL_TRANSFORM_2D_EXT 0x8330
#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT 0x8338
#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_ARB 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_EXT 0x88EC
#define GL_PLUS_CLAMPED_ALPHA_NV 0x92B2
#define GL_PLUS_CLAMPED_NV 0x92B1
#define GL_PLUS_DARKER_NV 0x9292
#define GL_PLUS_NV 0x9291
#define GL_PN_TRIANGLES_ATI 0x87F0
#define GL_PN_TRIANGLES_NORMAL_MODE_ATI 0x87F3
#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
#define GL_PN_TRIANGLES_POINT_MODE_ATI 0x87F2
#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
#define GL_POINT 0x1B00
#define GL_POINTS 0x0000
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128
#define GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128
#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_POINT_SIZE_MAX_ARB 0x8127
#define GL_POINT_SIZE_MAX_EXT 0x8127
#define GL_POINT_SIZE_MAX_SGIS 0x8127
#define GL_POINT_SIZE_MIN_ARB 0x8126
#define GL_POINT_SIZE_MIN_EXT 0x8126
#define GL_POINT_SIZE_MIN_SGIS 0x8126
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SPRITE_ARB 0x8861
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_POINT_SPRITE_NV 0x8861
#define GL_POINT_SPRITE_R_MODE_NV 0x8863
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_OFFSET_BIAS_EXT 0x8039
#define GL_POLYGON_OFFSET_CLAMP 0x8E1B
#define GL_POLYGON_OFFSET_CLAMP_EXT 0x8E1B
#define GL_POLYGON_OFFSET_COMMAND_NV 0x000E
#define GL_POLYGON_OFFSET_EXT 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_POLYGON_OFFSET_FACTOR_EXT 0x8038
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
#define GL_POST_CONVOLUTION_RED_BIAS_EXT 0x8020
#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
#define GL_POST_TEXTURE_FILTER_BIAS_SGIX 0x8179
#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
#define GL_PREFER_DOUBLEBUFFER_HINT_PGI 0x1A1F8
#define GL_PRESENT_DURATION_NV 0x8E2B
#define GL_PRESENT_TIME_NV 0x8E2A
#define GL_PRESERVE_ATI 0x8762
#define GL_PREVIOUS_ARB 0x8578
#define GL_PREVIOUS_EXT 0x8578
#define GL_PREVIOUS_TEXTURE_INPUT_NV 0x86E4
#define GL_PRIMARY_COLOR_ARB 0x8577
#define GL_PRIMARY_COLOR_EXT 0x8577
#define GL_PRIMARY_COLOR_NV 0x852C
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#define GL_PRIMITIVES_GENERATED_NV 0x8C87
#define GL_PRIMITIVES_SUBMITTED 0x82EF
#define GL_PRIMITIVES_SUBMITTED_ARB 0x82EF
#define GL_PRIMITIVE_BOUNDING_BOX_ARB 0x92BE
#define GL_PRIMITIVE_ID_NV 0x8C7C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_PRIMITIVE_RESTART_INDEX_NV 0x8559
#define GL_PRIMITIVE_RESTART_NV 0x8558
#define GL_PROGRAM 0x82E2
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB 0x9341
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9341
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB 0x9340
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV 0x9340
#define GL_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B0
#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB 0x8805
#define GL_PROGRAM_ATTRIBS_ARB 0x88AC
#define GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_PROGRAM_BINARY_FORMAT_MESA 0x875F
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_BINDING_ARB 0x8677
#define GL_PROGRAM_ERROR_POSITION_ARB 0x864B
#define GL_PROGRAM_ERROR_POSITION_NV 0x864B
#define GL_PROGRAM_ERROR_STRING_ARB 0x8874
#define GL_PROGRAM_ERROR_STRING_NV 0x8874
#define GL_PROGRAM_FORMAT_ARB 0x8876
#define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
#define GL_PROGRAM_LENGTH_ARB 0x8627
#define GL_PROGRAM_LENGTH_NV 0x8627
#define GL_PROGRAM_MATRIX_EXT 0x8E2D
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x8808
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x880A
#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x8809
#define GL_PROGRAM_OBJECT_ARB 0x8B40
#define GL_PROGRAM_OBJECT_EXT 0x8B40
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_PROGRAM_PARAMETERS_ARB 0x88A8
#define GL_PROGRAM_PARAMETER_NV 0x8644
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_PROGRAM_PIPELINE_OBJECT_EXT 0x8A4F
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_PROGRAM_POINT_SIZE_EXT 0x8642
#define GL_PROGRAM_RESIDENT_NV 0x8647
#define GL_PROGRAM_RESULT_COMPONENTS_NV 0x8907
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_PROGRAM_STRING_ARB 0x8628
#define GL_PROGRAM_STRING_NV 0x8628
#define GL_PROGRAM_TARGET_NV 0x8646
#define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
#define GL_PROGRAM_TEX_INDIRECTIONS_ARB 0x8807
#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB 0x8806
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#define GL_PROTECTED_MEMORY_OBJECT_EXT 0x959B
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_PROVOKING_VERTEX_EXT 0x8E4F
#define GL_PROXY_COLOR_TABLE_SGI 0x80D3
#define GL_PROXY_HISTOGRAM_EXT 0x8025
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_PROXY_TEXTURE_1D_ARRAY_EXT 0x8C19
#define GL_PROXY_TEXTURE_1D_EXT 0x8063
#define GL_PROXY_TEXTURE_1D_STACK_MESAX 0x875B
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_PROXY_TEXTURE_2D_ARRAY_EXT 0x8C1B
#define GL_PROXY_TEXTURE_2D_EXT 0x8064
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_PROXY_TEXTURE_2D_STACK_MESAX 0x875C
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_PROXY_TEXTURE_3D_EXT 0x8070
#define GL_PROXY_TEXTURE_4D_SGIS 0x8135
#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI 0x80BD
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB 0x851B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B
#define GL_PROXY_TEXTURE_CUBE_MAP_EXT 0x851B
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_PROXY_TEXTURE_RECTANGLE_ARB 0x84F7
#define GL_PROXY_TEXTURE_RECTANGLE_NV 0x84F7
#define GL_PURGEABLE_APPLE 0x8A1D
#define GL_PURGED_CONTEXT_RESET_NV 0x92BB
#define GL_QUADRATIC_CURVE_TO_NV 0x0A
#define GL_QUADS 0x0007
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT 0x8E4C
#define GL_QUAD_ALPHA4_SGIS 0x811E
#define GL_QUAD_ALPHA8_SGIS 0x811F
#define GL_QUAD_INTENSITY4_SGIS 0x8122
#define GL_QUAD_INTENSITY8_SGIS 0x8123
#define GL_QUAD_LUMINANCE4_SGIS 0x8120
#define GL_QUAD_LUMINANCE8_SGIS 0x8121
#define GL_QUAD_MESH_SUN 0x8614
#define GL_QUAD_TEXTURE_SELECT_SGIS 0x8125
#define GL_QUARTER_BIT_ATI 0x00000010
#define GL_QUERY 0x82E3
#define GL_QUERY_ALL_EVENT_BITS_AMD 0xFFFFFFFF
#define GL_QUERY_BUFFER 0x9192
#define GL_QUERY_BUFFER_AMD 0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#define GL_QUERY_BUFFER_BINDING 0x9193
#define GL_QUERY_BUFFER_BINDING_AMD 0x9193
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#define GL_QUERY_BY_REGION_NO_WAIT_NV 0x8E16
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#define GL_QUERY_BY_REGION_WAIT_NV 0x8E15
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_QUERY_COUNTER_BITS_ARB 0x8864
#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD 0x00000008
#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD 0x00000002
#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD 0x00000001
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#define GL_QUERY_NO_WAIT_NV 0x8E14
#define GL_QUERY_OBJECT_AMD 0x9153
#define GL_QUERY_OBJECT_EXT 0x9153
#define GL_QUERY_RESOURCE_BUFFEROBJECT_NV 0x9547
#define GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV 0x9542
#define GL_QUERY_RESOURCE_RENDERBUFFER_NV 0x9546
#define GL_QUERY_RESOURCE_SYS_RESERVED_NV 0x9544
#define GL_QUERY_RESOURCE_TEXTURE_NV 0x9545
#define GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV 0x9540
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_ARB 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_QUERY_RESULT_AVAILABLE_ARB 0x8867
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#define GL_QUERY_RESULT_NO_WAIT_AMD 0x9194
#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD 0x00000004
#define GL_QUERY_TARGET 0x82EA
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_WAIT_INVERTED 0x8E17
#define GL_QUERY_WAIT_NV 0x8E13
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_R11F_G11F_B10F_EXT 0x8C3A
#define GL_R16 0x822A
#define GL_R16F 0x822D
#define GL_R16F_EXT 0x822D
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R16_SNORM 0x8F98
#define GL_R1UI_C3F_V3F_SUN 0x85C6
#define GL_R1UI_C4F_N3F_V3F_SUN 0x85C8
#define GL_R1UI_C4UB_V3F_SUN 0x85C5
#define GL_R1UI_N3F_V3F_SUN 0x85C7
#define GL_R1UI_T2F_C4F_N3F_V3F_SUN 0x85CB
#define GL_R1UI_T2F_N3F_V3F_SUN 0x85CA
#define GL_R1UI_T2F_V3F_SUN 0x85C9
#define GL_R1UI_V3F_SUN 0x85C4
#define GL_R32F 0x822E
#define GL_R32F_EXT 0x822E
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_R3_G3_B2 0x2A10
#define GL_R8 0x8229
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R8_EXT 0x8229
#define GL_R8_SNORM 0x8F94
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_RASTERIZER_DISCARD_EXT 0x8C89
#define GL_RASTERIZER_DISCARD_NV 0x8C89
#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT 0x932A
#define GL_RASTER_MULTISAMPLE_EXT 0x9327
#define GL_RASTER_POSITION_UNCLIPPED_IBM 0x19262
#define GL_RASTER_SAMPLES_EXT 0x9328
#define GL_READ_BUFFER 0x0C02
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_READ_FRAMEBUFFER_BINDING_EXT 0x8CAA
#define GL_READ_FRAMEBUFFER_EXT 0x8CA8
#define GL_READ_ONLY 0x88B8
#define GL_READ_ONLY_ARB 0x88B8
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV 0x887B
#define GL_READ_PIXEL_DATA_RANGE_NV 0x8879
#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV 0x887D
#define GL_READ_WRITE 0x88BA
#define GL_READ_WRITE_ARB 0x88BA
#define GL_RECLAIM_MEMORY_HINT_PGI 0x1A1FE
#define GL_RECT_NV 0xF6
#define GL_RED 0x1903
#define GL_REDUCE_EXT 0x8016
#define GL_RED_BIT_ATI 0x00000001
#define GL_RED_INTEGER 0x8D94
#define GL_RED_INTEGER_EXT 0x8D94
#define GL_RED_MAX_CLAMP_INGR 0x8564
#define GL_RED_MIN_CLAMP_INGR 0x8560
#define GL_RED_NV 0x1903
#define GL_RED_SNORM 0x8F90
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_MESH_SHADER_NV 0x95A0
#define GL_REFERENCED_BY_TASK_SHADER_NV 0x95A1
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_REFERENCE_PLANE_EQUATION_SGIX 0x817E
#define GL_REFERENCE_PLANE_SGIX 0x817D
#define GL_REFLECTION_MAP_ARB 0x8512
#define GL_REFLECTION_MAP_EXT 0x8512
#define GL_REFLECTION_MAP_NV 0x8512
#define GL_REGISTER_COMBINERS_NV 0x8522
#define GL_REG_0_ATI 0x8921
#define GL_REG_10_ATI 0x892B
#define GL_REG_11_ATI 0x892C
#define GL_REG_12_ATI 0x892D
#define GL_REG_13_ATI 0x892E
#define GL_REG_14_ATI 0x892F
#define GL_REG_15_ATI 0x8930
#define GL_REG_16_ATI 0x8931
#define GL_REG_17_ATI 0x8932
#define GL_REG_18_ATI 0x8933
#define GL_REG_19_ATI 0x8934
#define GL_REG_1_ATI 0x8922
#define GL_REG_20_ATI 0x8935
#define GL_REG_21_ATI 0x8936
#define GL_REG_22_ATI 0x8937
#define GL_REG_23_ATI 0x8938
#define GL_REG_24_ATI 0x8939
#define GL_REG_25_ATI 0x893A
#define GL_REG_26_ATI 0x893B
#define GL_REG_27_ATI 0x893C
#define GL_REG_28_ATI 0x893D
#define GL_REG_29_ATI 0x893E
#define GL_REG_2_ATI 0x8923
#define GL_REG_30_ATI 0x893F
#define GL_REG_31_ATI 0x8940
#define GL_REG_3_ATI 0x8924
#define GL_REG_4_ATI 0x8925
#define GL_REG_5_ATI 0x8926
#define GL_REG_6_ATI 0x8927
#define GL_REG_7_ATI 0x8928
#define GL_REG_8_ATI 0x8929
#define GL_REG_9_ATI 0x892A
#define GL_RELATIVE_ARC_TO_NV 0xFF
#define GL_RELATIVE_CONIC_CURVE_TO_NV 0x1B
#define GL_RELATIVE_CUBIC_CURVE_TO_NV 0x0D
#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV 0x07
#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV 0x17
#define GL_RELATIVE_LARGE_CW_ARC_TO_NV 0x19
#define GL_RELATIVE_LINE_TO_NV 0x05
#define GL_RELATIVE_MOVE_TO_NV 0x03
#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV 0x0B
#define GL_RELATIVE_RECT_NV 0xF7
#define GL_RELATIVE_ROUNDED_RECT2_NV 0xEB
#define GL_RELATIVE_ROUNDED_RECT4_NV 0xED
#define GL_RELATIVE_ROUNDED_RECT8_NV 0xEF
#define GL_RELATIVE_ROUNDED_RECT_NV 0xE9
#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV 0x13
#define GL_RELATIVE_SMALL_CW_ARC_TO_NV 0x15
#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV 0x11
#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0F
#define GL_RELATIVE_VERTICAL_LINE_TO_NV 0x09
#define GL_RELEASED_APPLE 0x8A19
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#define GL_RENDERBUFFER_COLOR_SAMPLES_NV 0x8E10
#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV 0x8CAB
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#define GL_RENDERBUFFER_EXT 0x8D41
#define GL_RENDERBUFFER_FREE_MEMORY_ATI 0x87FD
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#define GL_RENDERBUFFER_STORAGE_SAMPLES_AMD 0x91B2
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#define GL_RENDERER 0x1F01
#define GL_RENDER_GPU_MASK_NV 0x9558
#define GL_REPEAT 0x2901
#define GL_REPLACE 0x1E01
#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
#define GL_REPLACEMENT_CODE_ARRAY_SUN 0x85C0
#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
#define GL_REPLACEMENT_CODE_SUN 0x81D8
#define GL_REPLACE_EXT 0x8062
#define GL_REPLACE_MIDDLE_SUN 0x0002
#define GL_REPLACE_OLDEST_SUN 0x0003
#define GL_REPLACE_VALUE_AMD 0x874B
#define GL_REPLICATE_BORDER_HP 0x8153
#define GL_REPRESENTATIVE_FRAGMENT_TEST_NV 0x937F
#define GL_RESAMPLE_AVERAGE_OML 0x8988
#define GL_RESAMPLE_DECIMATE_OML 0x8989
#define GL_RESAMPLE_DECIMATE_SGIX 0x8430
#define GL_RESAMPLE_REPLICATE_OML 0x8986
#define GL_RESAMPLE_REPLICATE_SGIX 0x8433
#define GL_RESAMPLE_ZERO_FILL_OML 0x8987
#define GL_RESAMPLE_ZERO_FILL_SGIX 0x8434
#define GL_RESCALE_NORMAL_EXT 0x803A
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#define GL_RESTART_PATH_NV 0xF0
#define GL_RESTART_SUN 0x0001
#define GL_RETAINED_APPLE 0x8A1B
#define GL_RG 0x8227
#define GL_RG16 0x822C
#define GL_RG16F 0x822F
#define GL_RG16F_EXT 0x822F
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG16_SNORM 0x8F99
#define GL_RG32F 0x8230
#define GL_RG32F_EXT 0x8230
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_RG8 0x822B
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG8_EXT 0x822B
#define GL_RG8_SNORM 0x8F95
#define GL_RGB 0x1907
#define GL_RGB10 0x8052
#define GL_RGB10_A2 0x8059
#define GL_RGB10_A2UI 0x906F
#define GL_RGB10_A2_EXT 0x8059
#define GL_RGB10_EXT 0x8052
#define GL_RGB12 0x8053
#define GL_RGB12_EXT 0x8053
#define GL_RGB16 0x8054
#define GL_RGB16F 0x881B
#define GL_RGB16F_ARB 0x881B
#define GL_RGB16F_EXT 0x881B
#define GL_RGB16I 0x8D89
#define GL_RGB16I_EXT 0x8D89
#define GL_RGB16UI 0x8D77
#define GL_RGB16UI_EXT 0x8D77
#define GL_RGB16_EXT 0x8054
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGB2_EXT 0x804E
#define GL_RGB32F 0x8815
#define GL_RGB32F_ARB 0x8815
#define GL_RGB32F_EXT 0x8815
#define GL_RGB32I 0x8D83
#define GL_RGB32I_EXT 0x8D83
#define GL_RGB32UI 0x8D71
#define GL_RGB32UI_EXT 0x8D71
#define GL_RGB4 0x804F
#define GL_RGB4_EXT 0x804F
#define GL_RGB4_S3TC 0x83A1
#define GL_RGB5 0x8050
#define GL_RGB565 0x8D62
#define GL_RGB5_A1 0x8057
#define GL_RGB5_A1_EXT 0x8057
#define GL_RGB5_EXT 0x8050
#define GL_RGB8 0x8051
#define GL_RGB8I 0x8D8F
#define GL_RGB8I_EXT 0x8D8F
#define GL_RGB8UI 0x8D7D
#define GL_RGB8UI_EXT 0x8D7D
#define GL_RGB8_EXT 0x8051
#define GL_RGB8_SNORM 0x8F96
#define GL_RGB9_E5 0x8C3D
#define GL_RGB9_E5_EXT 0x8C3D
#define GL_RGBA 0x1908
#define GL_RGBA12 0x805A
#define GL_RGBA12_EXT 0x805A
#define GL_RGBA16 0x805B
#define GL_RGBA16F 0x881A
#define GL_RGBA16F_ARB 0x881A
#define GL_RGBA16F_EXT 0x881A
#define GL_RGBA16I 0x8D88
#define GL_RGBA16I_EXT 0x8D88
#define GL_RGBA16UI 0x8D76
#define GL_RGBA16UI_EXT 0x8D76
#define GL_RGBA16_EXT 0x805B
#define GL_RGBA16_SNORM 0x8F9B
#define GL_RGBA2 0x8055
#define GL_RGBA2_EXT 0x8055
#define GL_RGBA32F 0x8814
#define GL_RGBA32F_ARB 0x8814
#define GL_RGBA32F_EXT 0x8814
#define GL_RGBA32I 0x8D82
#define GL_RGBA32I_EXT 0x8D82
#define GL_RGBA32UI 0x8D70
#define GL_RGBA32UI_EXT 0x8D70
#define GL_RGBA4 0x8056
#define GL_RGBA4_DXT5_S3TC 0x83A5
#define GL_RGBA4_EXT 0x8056
#define GL_RGBA4_S3TC 0x83A3
#define GL_RGBA8 0x8058
#define GL_RGBA8I 0x8D8E
#define GL_RGBA8I_EXT 0x8D8E
#define GL_RGBA8UI 0x8D7C
#define GL_RGBA8UI_EXT 0x8D7C
#define GL_RGBA8_EXT 0x8058
#define GL_RGBA8_SNORM 0x8F97
#define GL_RGBA_DXT5_S3TC 0x83A4
#define GL_RGBA_FLOAT16_APPLE 0x881A
#define GL_RGBA_FLOAT16_ATI 0x881A
#define GL_RGBA_FLOAT32_APPLE 0x8814
#define GL_RGBA_FLOAT32_ATI 0x8814
#define GL_RGBA_FLOAT_MODE_ARB 0x8820
#define GL_RGBA_FLOAT_MODE_ATI 0x8820
#define GL_RGBA_INTEGER 0x8D99
#define GL_RGBA_INTEGER_EXT 0x8D99
#define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#define GL_RGBA_S3TC 0x83A2
#define GL_RGBA_SIGNED_COMPONENTS_EXT 0x8C3C
#define GL_RGBA_SNORM 0x8F93
#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
#define GL_RGB_422_APPLE 0x8A1F
#define GL_RGB_FLOAT16_APPLE 0x881B
#define GL_RGB_FLOAT16_ATI 0x881B
#define GL_RGB_FLOAT32_APPLE 0x8815
#define GL_RGB_FLOAT32_ATI 0x8815
#define GL_RGB_INTEGER 0x8D98
#define GL_RGB_INTEGER_EXT 0x8D98
#define GL_RGB_RAW_422_APPLE 0x8A51
#define GL_RGB_S3TC 0x83A0
#define GL_RGB_SCALE_ARB 0x8573
#define GL_RGB_SCALE_EXT 0x8573
#define GL_RGB_SNORM 0x8F92
#define GL_RG_INTEGER 0x8228
#define GL_RG_SNORM 0x8F91
#define GL_RIGHT 0x0407
#define GL_ROUNDED_RECT2_NV 0xEA
#define GL_ROUNDED_RECT4_NV 0xEC
#define GL_ROUNDED_RECT8_NV 0xEE
#define GL_ROUNDED_RECT_NV 0xE8
#define GL_ROUND_NV 0x90A4
#define GL_SAMPLER 0x82E6
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_1D_ARB 0x8B5D
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_1D_SHADOW_ARB 0x8B61
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_2D_ARB 0x8B5E
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_ARB 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_2D_RECT_SHADOW_ARB 0x8B64
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_2D_SHADOW_ARB 0x8B62
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_3D_ARB 0x8B5F
#define GL_SAMPLER_BINDING 0x8919
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SAMPLER_BUFFER_AMD 0x9001
#define GL_SAMPLER_BUFFER_EXT 0x8DC2
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_CUBE_ARB 0x8B60
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
#define GL_SAMPLER_OBJECT_AMD 0x9155
#define GL_SAMPLER_RENDERBUFFER_NV 0x8E56
#define GL_SAMPLES 0x80A9
#define GL_SAMPLES_3DFX 0x86B4
#define GL_SAMPLES_ARB 0x80A9
#define GL_SAMPLES_EXT 0x80A9
#define GL_SAMPLES_PASSED 0x8914
#define GL_SAMPLES_PASSED_ARB 0x8914
#define GL_SAMPLES_SGIS 0x80A9
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 0x809E
#define GL_SAMPLE_ALPHA_TO_MASK_EXT 0x809E
#define GL_SAMPLE_ALPHA_TO_MASK_SGIS 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_ALPHA_TO_ONE_ARB 0x809F
#define GL_SAMPLE_ALPHA_TO_ONE_EXT 0x809F
#define GL_SAMPLE_ALPHA_TO_ONE_SGIS 0x809F
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLE_BUFFERS_3DFX 0x86B3
#define GL_SAMPLE_BUFFERS_ARB 0x80A8
#define GL_SAMPLE_BUFFERS_EXT 0x80A8
#define GL_SAMPLE_BUFFERS_SGIS 0x80A8
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_COVERAGE_ARB 0x80A0
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_SAMPLE_COVERAGE_INVERT_ARB 0x80AB
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_VALUE_ARB 0x80AA
#define GL_SAMPLE_LOCATION_ARB 0x8E50
#define GL_SAMPLE_LOCATION_NV 0x8E50
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB 0x933F
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV 0x933F
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB 0x933E
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV 0x933E
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB 0x933D
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV 0x933D
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_EXT 0x80A0
#define GL_SAMPLE_MASK_INVERT_EXT 0x80AB
#define GL_SAMPLE_MASK_INVERT_SGIS 0x80AB
#define GL_SAMPLE_MASK_NV 0x8E51
#define GL_SAMPLE_MASK_SGIS 0x80A0
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_SAMPLE_MASK_VALUE_EXT 0x80AA
#define GL_SAMPLE_MASK_VALUE_NV 0x8E52
#define GL_SAMPLE_MASK_VALUE_SGIS 0x80AA
#define GL_SAMPLE_PATTERN_EXT 0x80AC
#define GL_SAMPLE_PATTERN_SGIS 0x80AC
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_POSITION_NV 0x8E50
#define GL_SAMPLE_SHADING 0x8C36
#define GL_SAMPLE_SHADING_ARB 0x8C36
#define GL_SATURATE_BIT_ATI 0x00000040
#define GL_SCALAR_EXT 0x87BE
#define GL_SCALEBIAS_HINT_SGIX 0x8322
#define GL_SCALED_RESOLVE_FASTEST_EXT 0x90BA
#define GL_SCALED_RESOLVE_NICEST_EXT 0x90BB
#define GL_SCALE_BY_FOUR_NV 0x853F
#define GL_SCALE_BY_ONE_HALF_NV 0x8540
#define GL_SCALE_BY_TWO_NV 0x853E
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_BOX_EXCLUSIVE_NV 0x9556
#define GL_SCISSOR_COMMAND_NV 0x0011
#define GL_SCISSOR_TEST 0x0C11
#define GL_SCISSOR_TEST_EXCLUSIVE_NV 0x9555
#define GL_SCREEN_COORDINATES_REND 0x8490
#define GL_SCREEN_KHR 0x9295
#define GL_SCREEN_NV 0x9295
#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
#define GL_SECONDARY_COLOR_ARRAY_EXT 0x845E
#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
#define GL_SECONDARY_COLOR_NV 0x852D
#define GL_SECONDARY_INTERPOLATOR_ATI 0x896D
#define GL_SEMAPHORE_TYPE_BINARY_NV 0x95B4
#define GL_SEMAPHORE_TYPE_NV 0x95B3
#define GL_SEMAPHORE_TYPE_TIMELINE_NV 0x95B5
#define GL_SEPARABLE_2D_EXT 0x8012
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
#define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#define GL_SEPARATE_SPECULAR_COLOR_EXT 0x81FA
#define GL_SET 0x150F
#define GL_SET_AMD 0x874A
#define GL_SHADER 0x82E1
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_SHADER_BINARY_FORMAT_SPIR_V 0x9551
#define GL_SHADER_BINARY_FORMAT_SPIR_V_ARB 0x9551
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_CONSISTENT_NV 0x86DD
#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV 0x00000010
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT 0x00000020
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_INCLUDE_ARB 0x8DAE
#define GL_SHADER_OBJECT_ARB 0x8B48
#define GL_SHADER_OBJECT_EXT 0x8B48
#define GL_SHADER_OPERATION_NV 0x86DF
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_TYPE 0x8B4F
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_SHADING_LANGUAGE_VERSION_ARB 0x8B8C
#define GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV 0x956F
#define GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV 0x9566
#define GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV 0x9567
#define GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV 0x9568
#define GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV 0x9569
#define GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV 0x956A
#define GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV 0x956B
#define GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV 0x9565
#define GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV 0x956C
#define GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV 0x956D
#define GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV 0x956E
#define GL_SHADING_RATE_IMAGE_BINDING_NV 0x955B
#define GL_SHADING_RATE_IMAGE_NV 0x9563
#define GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV 0x95B2
#define GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV 0x955E
#define GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV 0x95B1
#define GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV 0x955D
#define GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV 0x955C
#define GL_SHADING_RATE_NO_INVOCATIONS_NV 0x9564
#define GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV 0x95AE
#define GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV 0x95AF
#define GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV 0x95B0
#define GL_SHADOW_AMBIENT_SGIX 0x80BF
#define GL_SHADOW_ATTENUATION_EXT 0x834E
#define GL_SHARED_EDGE_NV 0xC0
#define GL_SHARED_TEXTURE_PALETTE_EXT 0x81FB
#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
#define GL_SHORT 0x1402
#define GL_SIGNALED 0x9119
#define GL_SIGNED_ALPHA8_NV 0x8706
#define GL_SIGNED_ALPHA_NV 0x8705
#define GL_SIGNED_HILO16_NV 0x86FA
#define GL_SIGNED_HILO8_NV 0x885F
#define GL_SIGNED_HILO_NV 0x86F9
#define GL_SIGNED_IDENTITY_NV 0x853C
#define GL_SIGNED_INTENSITY8_NV 0x8708
#define GL_SIGNED_INTENSITY_NV 0x8707
#define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704
#define GL_SIGNED_LUMINANCE8_NV 0x8702
#define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703
#define GL_SIGNED_LUMINANCE_NV 0x8701
#define GL_SIGNED_NEGATE_NV 0x853D
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_SIGNED_RGB8_NV 0x86FF
#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
#define GL_SIGNED_RGBA8_NV 0x86FC
#define GL_SIGNED_RGBA_NV 0x86FB
#define GL_SIGNED_RGB_NV 0x86FE
#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV 0x870C
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_SINGLE_COLOR_EXT 0x81F9
#define GL_SKIP_COMPONENTS1_NV -6
#define GL_SKIP_COMPONENTS2_NV -5
#define GL_SKIP_COMPONENTS3_NV -4
#define GL_SKIP_COMPONENTS4_NV -3
#define GL_SKIP_DECODE_EXT 0x8A4A
#define GL_SKIP_MISSING_GLYPH_NV 0x90A9
#define GL_SLICE_ACCUM_SUN 0x85CC
#define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45
#define GL_SLUMINANCE8_EXT 0x8C47
#define GL_SLUMINANCE_ALPHA_EXT 0x8C44
#define GL_SLUMINANCE_EXT 0x8C46
#define GL_SMALL_CCW_ARC_TO_NV 0x12
#define GL_SMALL_CW_ARC_TO_NV 0x14
#define GL_SMOOTH_CUBIC_CURVE_TO_NV 0x10
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0E
#define GL_SM_COUNT_NV 0x933B
#define GL_SOFTLIGHT_KHR 0x929C
#define GL_SOFTLIGHT_NV 0x929C
#define GL_SOURCE0_ALPHA_ARB 0x8588
#define GL_SOURCE0_ALPHA_EXT 0x8588
#define GL_SOURCE0_RGB_ARB 0x8580
#define GL_SOURCE0_RGB_EXT 0x8580
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SOURCE1_ALPHA_ARB 0x8589
#define GL_SOURCE1_ALPHA_EXT 0x8589
#define GL_SOURCE1_RGB_ARB 0x8581
#define GL_SOURCE1_RGB_EXT 0x8581
#define GL_SOURCE2_ALPHA_ARB 0x858A
#define GL_SOURCE2_ALPHA_EXT 0x858A
#define GL_SOURCE2_RGB_ARB 0x8582
#define GL_SOURCE2_RGB_EXT 0x8582
#define GL_SOURCE3_ALPHA_NV 0x858B
#define GL_SOURCE3_RGB_NV 0x8583
#define GL_SPARE0_NV 0x852E
#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
#define GL_SPARE1_NV 0x852F
#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB 0x82F8
#define GL_SPARSE_STORAGE_BIT_ARB 0x0400
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB 0x91A9
#define GL_SPIR_V_BINARY 0x9552
#define GL_SPIR_V_BINARY_ARB 0x9552
#define GL_SPIR_V_EXTENSIONS 0x9553
#define GL_SPRITE_AXIAL_SGIX 0x814C
#define GL_SPRITE_AXIS_SGIX 0x814A
#define GL_SPRITE_EYE_ALIGNED_SGIX 0x814E
#define GL_SPRITE_MODE_SGIX 0x8149
#define GL_SPRITE_OBJECT_ALIGNED_SGIX 0x814D
#define GL_SPRITE_SGIX 0x8148
#define GL_SPRITE_TRANSLATION_SGIX 0x814B
#define GL_SQUARE_NV 0x90A3
#define GL_SR8_EXT 0x8FBD
#define GL_SRC1_ALPHA 0x8589
#define GL_SRC1_COLOR 0x88F9
#define GL_SRC_ALPHA 0x0302
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_SRC_ATOP_NV 0x928E
#define GL_SRC_COLOR 0x0300
#define GL_SRC_IN_NV 0x928A
#define GL_SRC_NV 0x9286
#define GL_SRC_OUT_NV 0x928C
#define GL_SRC_OVER_NV 0x9288
#define GL_SRG8_EXT 0x8FBE
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_SRGB8_ALPHA8_EXT 0x8C43
#define GL_SRGB8_EXT 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB_ALPHA_EXT 0x8C42
#define GL_SRGB_DECODE_ARB 0x8299
#define GL_SRGB_EXT 0x8C40
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STANDARD_FONT_FORMAT_NV 0x936C
#define GL_STANDARD_FONT_NAME_NV 0x9072
#define GL_STATIC_ATI 0x8760
#define GL_STATIC_COPY 0x88E6
#define GL_STATIC_COPY_ARB 0x88E6
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_DRAW_ARB 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_READ_ARB 0x88E5
#define GL_STATIC_VERTEX_ARRAY_IBM 103061
#define GL_STENCIL 0x1802
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_FAIL_ATI 0x8801
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FUNC_ATI 0x8800
#define GL_STENCIL_BACK_OP_VALUE_AMD 0x874D
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_STENCIL_CLEAR_TAG_VALUE_EXT 0x88F3
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX16 0x8D49
#define GL_STENCIL_INDEX16_EXT 0x8D49
#define GL_STENCIL_INDEX1_EXT 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX4_EXT 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX8_EXT 0x8D48
#define GL_STENCIL_OP_VALUE_AMD 0x874C
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_REF_COMMAND_NV 0x000C
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_STENCIL_SAMPLES_NV 0x932E
#define GL_STENCIL_TAG_BITS_EXT 0x88F2
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_TEST_TWO_SIDE_EXT 0x8910
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_STEREO 0x0C33
#define GL_STORAGE_CACHED_APPLE 0x85BE
#define GL_STORAGE_CLIENT_APPLE 0x85B4
#define GL_STORAGE_PRIVATE_APPLE 0x85BD
#define GL_STORAGE_SHARED_APPLE 0x85BF
#define GL_STREAM_COPY 0x88E2
#define GL_STREAM_COPY_ARB 0x88E2
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_DRAW_ARB 0x88E0
#define GL_STREAM_RASTERIZATION_AMD 0x91A0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_READ_ARB 0x88E1
#define GL_STRICT_DEPTHFUNC_HINT_PGI 0x1A216
#define GL_STRICT_LIGHTING_HINT_PGI 0x1A217
#define GL_STRICT_SCISSOR_HINT_PGI 0x1A218
#define GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR 0x00000004
#define GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR 0x00000008
#define GL_SUBGROUP_FEATURE_BASIC_BIT_KHR 0x00000001
#define GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR 0x00000040
#define GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV 0x00000100
#define GL_SUBGROUP_FEATURE_QUAD_BIT_KHR 0x00000080
#define GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR 0x00000010
#define GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR 0x00000020
#define GL_SUBGROUP_FEATURE_VOTE_BIT_KHR 0x00000002
#define GL_SUBGROUP_QUAD_ALL_STAGES_KHR 0x9535
#define GL_SUBGROUP_SIZE_KHR 0x9532
#define GL_SUBGROUP_SUPPORTED_FEATURES_KHR 0x9534
#define GL_SUBGROUP_SUPPORTED_STAGES_KHR 0x9533
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV 0x9347
#define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV 0x9348
#define GL_SUBSAMPLE_DISTANCE_AMD 0x883F
#define GL_SUBTRACT_ARB 0x84E7
#define GL_SUB_ATI 0x8965
#define GL_SUCCESS_NV 0x902F
#define GL_SUPERSAMPLE_SCALE_X_NV 0x9372
#define GL_SUPERSAMPLE_SCALE_Y_NV 0x9373
#define GL_SUPPORTED_MULTISAMPLE_MODES_AMD 0x91B7
#define GL_SURFACE_MAPPED_NV 0x8700
#define GL_SURFACE_REGISTERED_NV 0x86FD
#define GL_SURFACE_STATE_NV 0x86EB
#define GL_SWIZZLE_STQ_ATI 0x8977
#define GL_SWIZZLE_STQ_DQ_ATI 0x8979
#define GL_SWIZZLE_STRQ_ATI 0x897A
#define GL_SWIZZLE_STRQ_DQ_ATI 0x897B
#define GL_SWIZZLE_STR_ATI 0x8976
#define GL_SWIZZLE_STR_DR_ATI 0x8978
#define GL_SYNC_CL_EVENT_ARB 0x8240
#define GL_SYNC_CL_EVENT_COMPLETE_ARB 0x8241
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_X11_FENCE_EXT 0x90E1
#define GL_SYSTEM_FONT_NAME_NV 0x9073
#define GL_T2F_IUI_N3F_V2F_EXT 0x81B3
#define GL_T2F_IUI_N3F_V3F_EXT 0x81B4
#define GL_T2F_IUI_V2F_EXT 0x81B1
#define GL_T2F_IUI_V3F_EXT 0x81B2
#define GL_TABLE_TOO_LARGE_EXT 0x8031
#define GL_TANGENT_ARRAY_EXT 0x8439
#define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#define GL_TASK_SHADER_BIT_NV 0x00000080
#define GL_TASK_SHADER_NV 0x955A
#define GL_TASK_SUBROUTINE_NV 0x957D
#define GL_TASK_SUBROUTINE_UNIFORM_NV 0x957F
#define GL_TASK_WORK_GROUP_SIZE_NV 0x953F
#define GL_TERMINATE_SEQUENCE_COMMAND_NV 0x0000
#define GL_TESSELLATION_FACTOR_AMD 0x9005
#define GL_TESSELLATION_MODE_AMD 0x9004
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_CONTROL_PROGRAM_NV 0x891E
#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV 0x8C74
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_CONTROL_SHADER_PATCHES 0x82F1
#define GL_TESS_CONTROL_SHADER_PATCHES_ARB 0x82F1
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_PROGRAM_NV 0x891F
#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV 0x8C75
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS 0x82F2
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB 0x82F2
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TEXCOORD1_BIT_PGI 0x10000000
#define GL_TEXCOORD2_BIT_PGI 0x20000000
#define GL_TEXCOORD3_BIT_PGI 0x40000000
#define GL_TEXCOORD4_BIT_PGI 0x80000000
#define GL_TEXTURE 0x1702
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE0_ARB 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE10_ARB 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE11_ARB 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE12_ARB 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE13_ARB 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE14_ARB 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE15_ARB 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE16_ARB 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE17_ARB 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE18_ARB 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE19_ARB 0x84D3
#define GL_TEXTURE1_ARB 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE20_ARB 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE21_ARB 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE22_ARB 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE23_ARB 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE24_ARB 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE25_ARB 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE26_ARB 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE27_ARB 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE28_ARB 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE29_ARB 0x84DD
#define GL_TEXTURE2_ARB 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE30_ARB 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_TEXTURE31_ARB 0x84DF
#define GL_TEXTURE3_ARB 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE4_ARB 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE5_ARB 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE6_ARB 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE7_ARB 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE8_ARB 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE9_ARB 0x84C9
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_TEXTURE_1D_ARRAY_EXT 0x8C18
#define GL_TEXTURE_1D_BINDING_EXT 0x8068
#define GL_TEXTURE_1D_STACK_BINDING_MESAX 0x875D
#define GL_TEXTURE_1D_STACK_MESAX 0x8759
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_TEXTURE_2D_ARRAY_EXT 0x8C1A
#define GL_TEXTURE_2D_BINDING_EXT 0x8069
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
#define GL_TEXTURE_2D_STACK_MESAX 0x875A
#define GL_TEXTURE_3D 0x806F
#define GL_TEXTURE_3D_BINDING_EXT 0x806A
#define GL_TEXTURE_3D_EXT 0x806F
#define GL_TEXTURE_4DSIZE_SGIS 0x8136
#define GL_TEXTURE_4D_BINDING_SGIS 0x814F
#define GL_TEXTURE_4D_SGIS 0x8134
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_ALPHA_SIZE_EXT 0x805F
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#define GL_TEXTURE_APPLICATION_MODE_EXT 0x834F
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_BASE_LEVEL_SGIS 0x813C
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_1D_ARRAY_EXT 0x8C1C
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_TEXTURE_BINDING_2D_ARRAY_EXT 0x8C1D
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BINDING_BUFFER_ARB 0x8C2C
#define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A
#define GL_TEXTURE_BINDING_CUBE_MAP_EXT 0x8514
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_TEXTURE_BINDING_RECTANGLE_ARB 0x84F6
#define GL_TEXTURE_BINDING_RECTANGLE_NV 0x84F6
#define GL_TEXTURE_BINDING_RENDERBUFFER_NV 0x8E53
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_BLUE_SIZE_EXT 0x805E
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_BORDER_VALUES_NV 0x871A
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_TEXTURE_BUFFER_ARB 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#define GL_TEXTURE_BUFFER_EXT 0x8C2A
#define GL_TEXTURE_BUFFER_FORMAT_ARB 0x8C2E
#define GL_TEXTURE_BUFFER_FORMAT_EXT 0x8C2E
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_CLIPMAP_CENTER_SGIX 0x8171
#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX 0x8176
#define GL_TEXTURE_CLIPMAP_FRAME_SGIX 0x8172
#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX 0x8173
#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
#define GL_TEXTURE_COLOR_SAMPLES_NV 0x9046
#define GL_TEXTURE_COLOR_TABLE_SGI 0x80BC
#define GL_TEXTURE_COLOR_WRITEMASK_SGIS 0x81EF
#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_TEXTURE_COMPARE_FUNC_ARB 0x884D
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_MODE_ARB 0x884C
#define GL_TEXTURE_COMPARE_OPERATOR_SGIX 0x819B
#define GL_TEXTURE_COMPARE_SGIX 0x819A
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#define GL_TEXTURE_CONSTANT_DATA_SUNX 0x81D6
#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
#define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
#define GL_TEXTURE_COORD_NV 0x8C79
#define GL_TEXTURE_COVERAGE_SAMPLES_NV 0x9045
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_CUBE_MAP_ARB 0x8513
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB 0x9009
#define GL_TEXTURE_CUBE_MAP_EXT 0x8513
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_TEXTURE_DEFORMATION_BIT_SGIX 0x00000001
#define GL_TEXTURE_DEFORMATION_SGIX 0x8195
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_DEPTH_EXT 0x8071
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_DEPTH_SIZE_ARB 0x884A
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#define GL_TEXTURE_DS_SIZE_NV 0x871D
#define GL_TEXTURE_DT_SIZE_NV 0x871E
#define GL_TEXTURE_ENV_BIAS_SGIX 0x80BE
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT 0x00000008
#define GL_TEXTURE_FILTER4_SIZE_SGIS 0x8147
#define GL_TEXTURE_FILTER_CONTROL_EXT 0x8500
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_TEXTURE_FLOAT_COMPONENTS_NV 0x888C
#define GL_TEXTURE_FREE_MEMORY_ATI 0x87FC
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_TEXTURE_GEQUAL_R_SGIX 0x819D
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_GREEN_SIZE_EXT 0x805D
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_HI_SIZE_NV 0x871B
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT 0x912F
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_TEXTURE_INDEX_SIZE_EXT 0x80ED
#define GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_LEQUAL_R_SGIX 0x819C
#define GL_TEXTURE_LIGHTING_MODE_HP 0x8167
#define GL_TEXTURE_LIGHT_EXT 0x8350
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_TEXTURE_LOD_BIAS_EXT 0x8501
#define GL_TEXTURE_LOD_BIAS_R_SGIX 0x8190
#define GL_TEXTURE_LOD_BIAS_S_SGIX 0x818E
#define GL_TEXTURE_LOD_BIAS_T_SGIX 0x818F
#define GL_TEXTURE_LO_SIZE_NV 0x871C
#define GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MAG_SIZE_NV 0x871F
#define GL_TEXTURE_MATERIAL_FACE_EXT 0x8351
#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
#define GL_TEXTURE_MAX_ANISOTROPY 0x84FE
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#define GL_TEXTURE_MAX_CLAMP_R_SGIX 0x836B
#define GL_TEXTURE_MAX_CLAMP_S_SGIX 0x8369
#define GL_TEXTURE_MAX_CLAMP_T_SGIX 0x836A
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_TEXTURE_MAX_LEVEL_SGIS 0x813D
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_MAX_LOD_SGIS 0x813B
#define GL_TEXTURE_MEMORY_LAYOUT_INTEL 0x83FF
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MIN_LOD_SGIS 0x813A
#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
#define GL_TEXTURE_NORMAL_EXT 0x85AF
#define GL_TEXTURE_POST_SPECULAR_HP 0x8168
#define GL_TEXTURE_PRE_SPECULAR_HP 0x8169
#define GL_TEXTURE_PRIORITY_EXT 0x8066
#define GL_TEXTURE_RANGE_LENGTH_APPLE 0x85B7
#define GL_TEXTURE_RANGE_POINTER_APPLE 0x85B8
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_RECTANGLE_ARB 0x84F5
#define GL_TEXTURE_RECTANGLE_NV 0x84F5
#define GL_TEXTURE_REDUCTION_MODE_ARB 0x9366
#define GL_TEXTURE_REDUCTION_MODE_EXT 0x9366
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_RED_SIZE_EXT 0x805C
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV 0x8E54
#define GL_TEXTURE_RENDERBUFFER_NV 0x8E55
#define GL_TEXTURE_RESIDENT_EXT 0x8067
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_SHADER_NV 0x86DE
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TEXTURE_SHARED_SIZE_EXT 0x8C3F
#define GL_TEXTURE_SPARSE_ARB 0x91A6
#define GL_TEXTURE_SRGB_DECODE_EXT 0x8A48
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_STENCIL_SIZE_EXT 0x88F1
#define GL_TEXTURE_STORAGE_HINT_APPLE 0x85BC
#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD 0x00000001
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_A_EXT 0x8E45
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_B_EXT 0x8E44
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_G_EXT 0x8E43
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TEXTURE_SWIZZLE_RGBA_EXT 0x8E46
#define GL_TEXTURE_SWIZZLE_R_EXT 0x8E42
#define GL_TEXTURE_TARGET 0x1006
#define GL_TEXTURE_TILING_EXT 0x9580
#define GL_TEXTURE_TOO_LARGE_EXT 0x8065
#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV 0x888F
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT 0x00000100
#define GL_TEXTURE_VIEW 0x82B5
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_WRAP_Q_SGIS 0x8137
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_TEXTURE_WRAP_R_EXT 0x8072
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_TEXT_FRAGMENT_SHADER_ATI 0x8200
#define GL_TILE_RASTER_ORDER_FIXED_MESA 0x8BB8
#define GL_TILE_RASTER_ORDER_INCREASING_X_MESA 0x8BB9
#define GL_TILE_RASTER_ORDER_INCREASING_Y_MESA 0x8BBA
#define GL_TILING_TYPES_EXT 0x9583
#define GL_TIMELINE_SEMAPHORE_VALUE_NV 0x9595
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_TIMESTAMP 0x8E28
#define GL_TIME_ELAPSED 0x88BF
#define GL_TIME_ELAPSED_EXT 0x88BF
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_TRACK_MATRIX_NV 0x8648
#define GL_TRACK_MATRIX_TRANSFORM_NV 0x8649
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#define GL_TRANSFORM_FEEDBACK_OVERFLOW 0x82EC
#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB 0x82EC
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW 0x82ED
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB 0x82ED
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
#define GL_TRANSFORM_HINT_APPLE 0x85B1
#define GL_TRANSLATE_2D_NV 0x9090
#define GL_TRANSLATE_3D_NV 0x9091
#define GL_TRANSLATE_X_NV 0x908E
#define GL_TRANSLATE_Y_NV 0x908F
#define GL_TRANSPOSE_AFFINE_2D_NV 0x9096
#define GL_TRANSPOSE_AFFINE_3D_NV 0x9098
#define GL_TRANSPOSE_COLOR_MATRIX_ARB 0x84E6
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
#define GL_TRANSPOSE_NV 0x862C
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB 0x84E5
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#define GL_TRIANGLE_FAN 0x0006
#define GL_TRIANGLE_LIST_SUN 0x81D7
#define GL_TRIANGLE_MESH_SUN 0x8615
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#define GL_TRIANGULAR_NV 0x90A5
#define GL_TRUE 1
#define GL_TYPE 0x92FA
#define GL_UNCORRELATED_NV 0x9282
#define GL_UNDEFINED_APPLE 0x8A1C
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_ADDRESS_COMMAND_NV 0x000A
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_UNIFORM_BARRIER_BIT_EXT 0x00000004
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV 0x959C
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV 0x959D
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_ADDRESS_NV 0x936F
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#define GL_UNIFORM_BUFFER_EXT 0x8DEE
#define GL_UNIFORM_BUFFER_LENGTH_NV 0x9370
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_UNIFIED_NV 0x936E
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_UNPACK_CLIENT_STORAGE_APPLE 0x85B2
#define GL_UNPACK_CMYK_HINT_EXT 0x800F
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_CONSTANT_DATA_SUNX 0x81D5
#define GL_UNPACK_IMAGE_DEPTH_SGIS 0x8133
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_UNPACK_IMAGE_HEIGHT_EXT 0x806E
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_RESAMPLE_OML 0x8985
#define GL_UNPACK_RESAMPLE_SGIX 0x842F
#define GL_UNPACK_ROW_BYTES_APPLE 0x8A16
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_SKIP_IMAGES_EXT 0x806D
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_VOLUMES_SGIS 0x8132
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX 0x85A1
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNSIGNALED 0x9118
#define GL_UNSIGNED_BYTE 0x1401
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_BYTE_3_3_2_EXT 0x8032
#define GL_UNSIGNED_IDENTITY_NV 0x8536
#define GL_UNSIGNED_INT 0x1405
#define GL_UNSIGNED_INT16_NV 0x8FF0
#define GL_UNSIGNED_INT16_VEC2_NV 0x8FF1
#define GL_UNSIGNED_INT16_VEC3_NV 0x8FF2
#define GL_UNSIGNED_INT16_VEC4_NV 0x8FF3
#define GL_UNSIGNED_INT64_AMD 0x8BC2
#define GL_UNSIGNED_INT64_ARB 0x140F
#define GL_UNSIGNED_INT64_NV 0x140F
#define GL_UNSIGNED_INT64_VEC2_ARB 0x8FF5
#define GL_UNSIGNED_INT64_VEC2_NV 0x8FF5
#define GL_UNSIGNED_INT64_VEC3_ARB 0x8FF6
#define GL_UNSIGNED_INT64_VEC3_NV 0x8FF6
#define GL_UNSIGNED_INT64_VEC4_ARB 0x8FF7
#define GL_UNSIGNED_INT64_VEC4_NV 0x8FF7
#define GL_UNSIGNED_INT8_NV 0x8FEC
#define GL_UNSIGNED_INT8_VEC2_NV 0x8FED
#define GL_UNSIGNED_INT8_VEC3_NV 0x8FEE
#define GL_UNSIGNED_INT8_VEC4_NV 0x8FEF
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT 0x8C3B
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_UNSIGNED_INT_10_10_10_2_EXT 0x8036
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_UNSIGNED_INT_24_8_EXT 0x84FA
#define GL_UNSIGNED_INT_24_8_NV 0x84FA
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT 0x8C3E
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_EXT 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV 0x86DB
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
#define GL_UNSIGNED_INT_IMAGE_1D_EXT 0x9062
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
#define GL_UNSIGNED_INT_IMAGE_2D_EXT 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_3D_EXT 0x9064
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#define GL_UNSIGNED_INT_S8_S8_8_8_NV 0x86DA
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD 0x9003
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F
#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV 0x8E58
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
#define GL_UNSIGNED_INVERT_NV 0x8537
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#define GL_UNSIGNED_SHORT 0x1403
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_EXT 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_SHORT_5_5_5_1_EXT 0x8034
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_8_8_APPLE 0x85BA
#define GL_UNSIGNED_SHORT_8_8_MESA 0x85BA
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE 0x85BB
#define GL_UNSIGNED_SHORT_8_8_REV_MESA 0x85BB
#define GL_UPLOAD_GPU_MASK_NVX 0x954A
#define GL_UPPER_LEFT 0x8CA2
#define GL_USAGE_COLOR_ATTACHMENT_BIT_ANGLE 0x00000010
#define GL_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT_ANGLE 0x00000020
#define GL_USAGE_FRAGMENT_DENSITY_MAP_BIT_ANGLE 0x00000200
#define GL_USAGE_INPUT_ATTACHMENT_BIT_ANGLE 0x00000080
#define GL_USAGE_SAMPLED_BIT_ANGLE 0x00000004
#define GL_USAGE_SHADING_RATE_IMAGE_BIT_ANGLE 0x00000100
#define GL_USAGE_STORAGE_BIT_ANGLE 0x00000008
#define GL_USAGE_TRANSFER_DST_BIT_ANGLE 0x00000002
#define GL_USAGE_TRANSFER_SRC_BIT_ANGLE 0x00000001
#define GL_USAGE_TRANSIENT_ATTACHMENT_BIT_ANGLE 0x00000040
#define GL_USE_MISSING_GLYPH_NV 0x90AA
#define GL_UTF16_NV 0x909B
#define GL_UTF8_NV 0x909A
#define GL_UUID_SIZE_EXT 16
#define GL_VALIDATE_STATUS 0x8B83
#define GL_VARIABLE_A_NV 0x8523
#define GL_VARIABLE_B_NV 0x8524
#define GL_VARIABLE_C_NV 0x8525
#define GL_VARIABLE_D_NV 0x8526
#define GL_VARIABLE_E_NV 0x8527
#define GL_VARIABLE_F_NV 0x8528
#define GL_VARIABLE_G_NV 0x8529
#define GL_VARIANT_ARRAY_EXT 0x87E8
#define GL_VARIANT_ARRAY_POINTER_EXT 0x87E9
#define GL_VARIANT_ARRAY_STRIDE_EXT 0x87E6
#define GL_VARIANT_ARRAY_TYPE_EXT 0x87E7
#define GL_VARIANT_DATATYPE_EXT 0x87E5
#define GL_VARIANT_EXT 0x87C1
#define GL_VARIANT_VALUE_EXT 0x87E4
#define GL_VBO_FREE_MEMORY_ATI 0x87FB
#define GL_VECTOR_EXT 0x87BF
#define GL_VENDOR 0x1F00
#define GL_VERSION 0x1F02
#define GL_VERTEX23_BIT_PGI 0x00000004
#define GL_VERTEX4_BIT_PGI 0x00000008
#define GL_VERTEX_ARRAY 0x8074
#define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ARRAY_BINDING_APPLE 0x85B5
#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
#define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
#define GL_VERTEX_ARRAY_EXT 0x8074
#define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#define GL_VERTEX_ARRAY_LIST_IBM 103070
#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#define GL_VERTEX_ARRAY_OBJECT_AMD 0x9154
#define GL_VERTEX_ARRAY_OBJECT_EXT 0x9154
#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
#define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
#define GL_VERTEX_ARRAY_RANGE_APPLE 0x851D
#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 0x851E
#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV 0x851E
#define GL_VERTEX_ARRAY_RANGE_NV 0x851D
#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 0x8521
#define GL_VERTEX_ARRAY_RANGE_POINTER_NV 0x8521
#define GL_VERTEX_ARRAY_RANGE_VALID_NV 0x851F
#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533
#define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 0x851F
#define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
#define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
#define GL_VERTEX_ATTRIB_ARRAY0_NV 0x8650
#define GL_VERTEX_ATTRIB_ARRAY10_NV 0x865A
#define GL_VERTEX_ATTRIB_ARRAY11_NV 0x865B
#define GL_VERTEX_ATTRIB_ARRAY12_NV 0x865C
#define GL_VERTEX_ATTRIB_ARRAY13_NV 0x865D
#define GL_VERTEX_ATTRIB_ARRAY14_NV 0x865E
#define GL_VERTEX_ATTRIB_ARRAY15_NV 0x865F
#define GL_VERTEX_ATTRIB_ARRAY1_NV 0x8651
#define GL_VERTEX_ATTRIB_ARRAY2_NV 0x8652
#define GL_VERTEX_ATTRIB_ARRAY3_NV 0x8653
#define GL_VERTEX_ATTRIB_ARRAY4_NV 0x8654
#define GL_VERTEX_ATTRIB_ARRAY5_NV 0x8655
#define GL_VERTEX_ATTRIB_ARRAY6_NV 0x8656
#define GL_VERTEX_ATTRIB_ARRAY7_NV 0x8657
#define GL_VERTEX_ATTRIB_ARRAY8_NV 0x8658
#define GL_VERTEX_ATTRIB_ARRAY9_NV 0x8659
#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT 0x00000001
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB 0x8625
#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_MAP1_APPLE 0x8A00
#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 0x8A03
#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 0x8A05
#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 0x8A04
#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE 0x8A02
#define GL_VERTEX_ATTRIB_MAP2_APPLE 0x8A01
#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 0x8A07
#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 0x8A09
#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 0x8A08
#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE 0x8A06
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_VERTEX_BLEND_ARB 0x86A7
#define GL_VERTEX_CONSISTENT_HINT_PGI 0x1A22B
#define GL_VERTEX_DATA_HINT_PGI 0x1A22A
#define GL_VERTEX_ELEMENT_SWIZZLE_AMD 0x91A4
#define GL_VERTEX_ID_NV 0x8C7B
#define GL_VERTEX_ID_SWIZZLE_AMD 0x91A5
#define GL_VERTEX_PRECLIP_HINT_SGIX 0x83EF
#define GL_VERTEX_PRECLIP_SGIX 0x83EE
#define GL_VERTEX_PROGRAM_ARB 0x8620
#define GL_VERTEX_PROGRAM_BINDING_NV 0x864A
#define GL_VERTEX_PROGRAM_NV 0x8620
#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV 0x8DA2
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_VERTEX_PROGRAM_POINT_SIZE_NV 0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB 0x8643
#define GL_VERTEX_PROGRAM_TWO_SIDE_NV 0x8643
#define GL_VERTEX_SHADER 0x8B31
#define GL_VERTEX_SHADER_ARB 0x8B31
#define GL_VERTEX_SHADER_BINDING_EXT 0x8781
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_VERTEX_SHADER_EXT 0x8780
#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
#define GL_VERTEX_SHADER_INVARIANTS_EXT 0x87D1
#define GL_VERTEX_SHADER_INVOCATIONS 0x82F0
#define GL_VERTEX_SHADER_INVOCATIONS_ARB 0x82F0
#define GL_VERTEX_SHADER_LOCALS_EXT 0x87D3
#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
#define GL_VERTEX_SHADER_OPTIMIZED_EXT 0x87D4
#define GL_VERTEX_SHADER_VARIANTS_EXT 0x87D0
#define GL_VERTEX_SOURCE_ATI 0x8774
#define GL_VERTEX_STATE_PROGRAM_NV 0x8621
#define GL_VERTEX_STREAM0_ATI 0x876C
#define GL_VERTEX_STREAM1_ATI 0x876D
#define GL_VERTEX_STREAM2_ATI 0x876E
#define GL_VERTEX_STREAM3_ATI 0x876F
#define GL_VERTEX_STREAM4_ATI 0x8770
#define GL_VERTEX_STREAM5_ATI 0x8771
#define GL_VERTEX_STREAM6_ATI 0x8772
#define GL_VERTEX_STREAM7_ATI 0x8773
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_VERTEX_TEXTURE 0x829B
#define GL_VERTEX_WEIGHTING_EXT 0x8509
#define GL_VERTEX_WEIGHT_ARRAY_EXT 0x850C
#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT 0x850D
#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT 0x850E
#define GL_VERTICAL_LINE_TO_NV 0x08
#define GL_VERTICES_SUBMITTED 0x82EE
#define GL_VERTICES_SUBMITTED_ARB 0x82EE
#define GL_VIBRANCE_BIAS_NV 0x8719
#define GL_VIBRANCE_SCALE_NV 0x8713
#define GL_VIDEO_BUFFER_BINDING_NV 0x9021
#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D
#define GL_VIDEO_BUFFER_NV 0x9020
#define GL_VIDEO_BUFFER_PITCH_NV 0x9028
#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV 0x903B
#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV 0x903A
#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV 0x9039
#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV 0x9038
#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV 0x903C
#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV 0x9026
#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029
#define GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A
#define GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B
#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C
#define GL_VIEWPORT 0x0BA2
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_VIEWPORT_COMMAND_NV 0x0010
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_VIEWPORT_POSITION_W_SCALE_NV 0x937C
#define GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV 0x937D
#define GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV 0x937E
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV 0x9357
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV 0x9351
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV 0x9353
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV 0x9355
#define GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV 0x9356
#define GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV 0x9350
#define GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV 0x9352
#define GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV 0x9354
#define GL_VIEWPORT_SWIZZLE_W_NV 0x935B
#define GL_VIEWPORT_SWIZZLE_X_NV 0x9358
#define GL_VIEWPORT_SWIZZLE_Y_NV 0x9359
#define GL_VIEWPORT_SWIZZLE_Z_NV 0x935A
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_ASTC_10x10_RGBA 0x9393
#define GL_VIEW_CLASS_ASTC_10x5_RGBA 0x9390
#define GL_VIEW_CLASS_ASTC_10x6_RGBA 0x9391
#define GL_VIEW_CLASS_ASTC_10x8_RGBA 0x9392
#define GL_VIEW_CLASS_ASTC_12x10_RGBA 0x9394
#define GL_VIEW_CLASS_ASTC_12x12_RGBA 0x9395
#define GL_VIEW_CLASS_ASTC_4x4_RGBA 0x9388
#define GL_VIEW_CLASS_ASTC_5x4_RGBA 0x9389
#define GL_VIEW_CLASS_ASTC_5x5_RGBA 0x938A
#define GL_VIEW_CLASS_ASTC_6x5_RGBA 0x938B
#define GL_VIEW_CLASS_ASTC_6x6_RGBA 0x938C
#define GL_VIEW_CLASS_ASTC_8x5_RGBA 0x938D
#define GL_VIEW_CLASS_ASTC_8x6_RGBA 0x938E
#define GL_VIEW_CLASS_ASTC_8x8_RGBA 0x938F
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_EAC_R11 0x9383
#define GL_VIEW_CLASS_EAC_RG11 0x9384
#define GL_VIEW_CLASS_ETC2_EAC_RGBA 0x9387
#define GL_VIEW_CLASS_ETC2_RGB 0x9385
#define GL_VIEW_CLASS_ETC2_RGBA 0x9386
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB 0x91A7
#define GL_VIRTUAL_PAGE_SIZE_X_AMD 0x9195
#define GL_VIRTUAL_PAGE_SIZE_X_ARB 0x9195
#define GL_VIRTUAL_PAGE_SIZE_Y_AMD 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Y_ARB 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Z_AMD 0x9197
#define GL_VIRTUAL_PAGE_SIZE_Z_ARB 0x9197
#define GL_VIVIDLIGHT_NV 0x92A6
#define GL_VOLATILE_APPLE 0x8A1A
#define GL_WAIT_FAILED 0x911D
#define GL_WARPS_PER_SM_NV 0x933A
#define GL_WARP_SIZE_NV 0x9339
#define GL_WEIGHTED_AVERAGE_ARB 0x9367
#define GL_WEIGHTED_AVERAGE_EXT 0x9367
#define GL_WEIGHT_ARRAY_ARB 0x86AD
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
#define GL_WEIGHT_ARRAY_POINTER_ARB 0x86AC
#define GL_WEIGHT_ARRAY_SIZE_ARB 0x86AB
#define GL_WEIGHT_ARRAY_STRIDE_ARB 0x86AA
#define GL_WEIGHT_ARRAY_TYPE_ARB 0x86A9
#define GL_WEIGHT_SUM_UNITY_ARB 0x86A6
#define GL_WIDE_LINE_HINT_PGI 0x1A222
#define GL_WINDOW_RECTANGLE_EXT 0x8F12
#define GL_WINDOW_RECTANGLE_MODE_EXT 0x8F13
#define GL_WRAP_BORDER_SUN 0x81D4
#define GL_WRITE_DISCARD_NV 0x88BE
#define GL_WRITE_ONLY 0x88B9
#define GL_WRITE_ONLY_ARB 0x88B9
#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV 0x887A
#define GL_WRITE_PIXEL_DATA_RANGE_NV 0x8878
#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV 0x887C
#define GL_W_EXT 0x87D8
#define GL_XOR 0x1506
#define GL_XOR_NV 0x1506
#define GL_X_EXT 0x87D5
#define GL_YCBAYCR8A_4224_NV 0x9032
#define GL_YCBCR_422_APPLE 0x85B9
#define GL_YCBCR_MESA 0x8757
#define GL_YCBYCR8_422_NV 0x9031
#define GL_YCRCBA_SGIX 0x8319
#define GL_YCRCB_422_SGIX 0x81BB
#define GL_YCRCB_444_SGIX 0x81BC
#define GL_YCRCB_SGIX 0x8318
#define GL_Y_EXT 0x87D6
#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV 0x9036
#define GL_Z4Y12Z4CB12Z4CR12_444_NV 0x9037
#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV 0x9035
#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV 0x9034
#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV 0x9033
#define GL_ZERO 0
#define GL_ZERO_EXT 0x87DD
#define GL_ZERO_TO_ONE 0x935F
#define GL_Z_EXT 0x87D7
#define GL_3DC_XY_AMD 0x87FA
#define GL_3DC_X_AMD 0x87F9
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_ALL_SHADER_BITS_EXT 0xFFFFFFFF
#define GL_ALPHA8_OES 0x803C
#define GL_ALPHA_BITS 0x0D55
#define GL_ALPHA_TEST_FUNC_QCOM 0x0BC1
#define GL_ALPHA_TEST_QCOM 0x0BC0
#define GL_ALPHA_TEST_REF_QCOM 0x0BC2
#define GL_ALREADY_SIGNALED_APPLE 0x911A
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT 0x8D6A
#define GL_ANY_SAMPLES_PASSED_EXT 0x8C2F
#define GL_ATC_RGBA_EXPLICIT_ALPHA_AMD 0x8C93
#define GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD 0x87EE
#define GL_ATC_RGB_AMD 0x8C92
#define GL_BGRA_IMG 0x80E1
#define GL_BINNING_CONTROL_HINT_QCOM 0x8FB0
#define GL_BLUE_BITS 0x0D54
#define GL_BUFFER_ACCESS_OES 0x88BB
#define GL_BUFFER_IMMUTABLE_STORAGE_EXT 0x821F
#define GL_BUFFER_KHR 0x82E0
#define GL_BUFFER_MAPPED_OES 0x88BC
#define GL_BUFFER_MAP_POINTER_OES 0x88BD
#define GL_BUFFER_STORAGE_FLAGS_EXT 0x8220
#define GL_CLAMP_TO_BORDER_EXT 0x812D
#define GL_CLAMP_TO_BORDER_NV 0x812D
#define GL_CLAMP_TO_BORDER_OES 0x812D
#define GL_CLIENT_ARRAYS_ANGLE 0x93AA
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT 0x00004000
#define GL_CLIENT_STORAGE_BIT_EXT 0x0200
#define GL_CLIP_DEPTH_MODE_EXT 0x935D
#define GL_CLIP_DISTANCE0_ANGLE 0x3000
#define GL_CLIP_DISTANCE0_APPLE 0x3000
#define GL_CLIP_DISTANCE0_EXT 0x3000
#define GL_CLIP_DISTANCE1_ANGLE 0x3001
#define GL_CLIP_DISTANCE1_APPLE 0x3001
#define GL_CLIP_DISTANCE1_EXT 0x3001
#define GL_CLIP_DISTANCE2_ANGLE 0x3002
#define GL_CLIP_DISTANCE2_APPLE 0x3002
#define GL_CLIP_DISTANCE2_EXT 0x3002
#define GL_CLIP_DISTANCE3_ANGLE 0x3003
#define GL_CLIP_DISTANCE3_APPLE 0x3003
#define GL_CLIP_DISTANCE3_EXT 0x3003
#define GL_CLIP_DISTANCE4_ANGLE 0x3004
#define GL_CLIP_DISTANCE4_APPLE 0x3004
#define GL_CLIP_DISTANCE4_EXT 0x3004
#define GL_CLIP_DISTANCE5_ANGLE 0x3005
#define GL_CLIP_DISTANCE5_APPLE 0x3005
#define GL_CLIP_DISTANCE5_EXT 0x3005
#define GL_CLIP_DISTANCE6_ANGLE 0x3006
#define GL_CLIP_DISTANCE6_APPLE 0x3006
#define GL_CLIP_DISTANCE6_EXT 0x3006
#define GL_CLIP_DISTANCE7_ANGLE 0x3007
#define GL_CLIP_DISTANCE7_APPLE 0x3007
#define GL_CLIP_DISTANCE7_EXT 0x3007
#define GL_CLIP_ORIGIN_EXT 0x935C
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_COLORBURN 0x929A
#define GL_COLORDODGE 0x9299
#define GL_COLOR_ATTACHMENT0_NV 0x8CE0
#define GL_COLOR_ATTACHMENT10_NV 0x8CEA
#define GL_COLOR_ATTACHMENT11_NV 0x8CEB
#define GL_COLOR_ATTACHMENT12_NV 0x8CEC
#define GL_COLOR_ATTACHMENT13_NV 0x8CED
#define GL_COLOR_ATTACHMENT14_NV 0x8CEE
#define GL_COLOR_ATTACHMENT15_NV 0x8CEF
#define GL_COLOR_ATTACHMENT1_NV 0x8CE1
#define GL_COLOR_ATTACHMENT2_NV 0x8CE2
#define GL_COLOR_ATTACHMENT3_NV 0x8CE3
#define GL_COLOR_ATTACHMENT4_NV 0x8CE4
#define GL_COLOR_ATTACHMENT5_NV 0x8CE5
#define GL_COLOR_ATTACHMENT6_NV 0x8CE6
#define GL_COLOR_ATTACHMENT7_NV 0x8CE7
#define GL_COLOR_ATTACHMENT8_NV 0x8CE8
#define GL_COLOR_ATTACHMENT9_NV 0x8CE9
#define GL_COLOR_ATTACHMENT_EXT 0x90F0
#define GL_COLOR_BUFFER_BIT0_QCOM 0x00000001
#define GL_COLOR_BUFFER_BIT1_QCOM 0x00000002
#define GL_COLOR_BUFFER_BIT2_QCOM 0x00000004
#define GL_COLOR_BUFFER_BIT3_QCOM 0x00000008
#define GL_COLOR_BUFFER_BIT4_QCOM 0x00000010
#define GL_COLOR_BUFFER_BIT5_QCOM 0x00000020
#define GL_COLOR_BUFFER_BIT6_QCOM 0x00000040
#define GL_COLOR_BUFFER_BIT7_QCOM 0x00000080
#define GL_COLOR_EXT 0x1800
#define GL_COLOR_LOGIC_OP_ANGLE 0x0BF2
#define GL_COMPARE_REF_TO_TEXTURE_EXT 0x884E
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_COMPRESSED_R11_LOSSY_DECODE_EAC_ANGLE 0x9691
#define GL_COMPRESSED_RG11_LOSSY_DECODE_EAC_ANGLE 0x9693
#define GL_COMPRESSED_RGB8_LOSSY_DECODE_ETC2_ANGLE 0x9695
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_LOSSY_DECODE_ETC2_ANGLE 0x9697
#define GL_COMPRESSED_RGBA8_LOSSY_DECODE_ETC2_EAC_ANGLE 0x9699
#define GL_COMPRESSED_RGBA_ASTC_10x10 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_10x5 0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x6 0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x8 0x93BA
#define GL_COMPRESSED_RGBA_ASTC_12x10 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x12 0x93BD
#define GL_COMPRESSED_RGBA_ASTC_3x3x3_OES 0x93C0
#define GL_COMPRESSED_RGBA_ASTC_4x3x3_OES 0x93C1
#define GL_COMPRESSED_RGBA_ASTC_4x4 0x93B0
#define GL_COMPRESSED_RGBA_ASTC_4x4x3_OES 0x93C2
#define GL_COMPRESSED_RGBA_ASTC_4x4x4_OES 0x93C3
#define GL_COMPRESSED_RGBA_ASTC_5x4 0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x4x4_OES 0x93C4
#define GL_COMPRESSED_RGBA_ASTC_5x5 0x93B2
#define GL_COMPRESSED_RGBA_ASTC_5x5x4_OES 0x93C5
#define GL_COMPRESSED_RGBA_ASTC_5x5x5_OES 0x93C6
#define GL_COMPRESSED_RGBA_ASTC_6x5 0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x5x5_OES 0x93C7
#define GL_COMPRESSED_RGBA_ASTC_6x6 0x93B4
#define GL_COMPRESSED_RGBA_ASTC_6x6x5_OES 0x93C8
#define GL_COMPRESSED_RGBA_ASTC_6x6x6_OES 0x93C9
#define GL_COMPRESSED_RGBA_ASTC_8x5 0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x6 0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x8 0x93B7
#define GL_COMPRESSED_RGBA_BPTC_UNORM_EXT 0x8E8C
#define GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG 0x8C03
#define GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG 0x9137
#define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG 0x8C02
#define GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG 0x9138
#define GL_COMPRESSED_RGBA_S3TC_DXT1_ANGLE 0x83F1
#define GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE 0x83F2
#define GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE 0x83F3
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT 0x8E8F
#define GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG 0x8C01
#define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG 0x8C00
#define GL_COMPRESSED_RGB_S3TC_DXT1_ANGLE 0x83F0
#define GL_COMPRESSED_SIGNED_R11_LOSSY_DECODE_EAC_ANGLE 0x9692
#define GL_COMPRESSED_SIGNED_RG11_LOSSY_DECODE_EAC_ANGLE 0x9694
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 0x93DD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES 0x93E0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES 0x93E1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES 0x93E2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES 0x93E3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES 0x93E4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES 0x93E5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES 0x93E6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES 0x93E7
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES 0x93E8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES 0x93E9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_LOSSY_DECODE_ETC2_EAC_ANGLE 0x969A
#define GL_COMPRESSED_SRGB8_LOSSY_DECODE_ETC2_ANGLE 0x9696
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_LOSSY_DECODE_ETC2_ANGLE 0x9698
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT 0x8E8D
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT 0x8A56
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG 0x93F0
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT 0x8A57
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG 0x93F1
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV 0x8C4D
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV 0x8C4E
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV 0x8C4F
#define GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT 0x8A54
#define GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT 0x8A55
#define GL_COMPRESSED_SRGB_S3TC_DXT1_NV 0x8C4C
#define GL_CONDITION_SATISFIED_APPLE 0x911C
#define GL_CONTEXT_FLAG_DEBUG_BIT_KHR 0x00000002
#define GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT 0x00000010
#define GL_CONTEXT_LOST_KHR 0x0507
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR 0x82FC
#define GL_CONTEXT_RELEASE_BEHAVIOR_KHR 0x82FB
#define GL_CONTEXT_ROBUST_ACCESS_EXT 0x90F3
#define GL_CONTEXT_ROBUST_ACCESS_KHR 0x90F3
#define GL_COPY_READ_BUFFER_NV 0x8F36
#define GL_COPY_WRITE_BUFFER_NV 0x8F37
#define GL_COVERAGE_ALL_FRAGMENTS_NV 0x8ED5
#define GL_COVERAGE_ATTACHMENT_NV 0x8ED2
#define GL_COVERAGE_AUTOMATIC_NV 0x8ED7
#define GL_COVERAGE_BUFFERS_NV 0x8ED3
#define GL_COVERAGE_BUFFER_BIT_NV 0x00008000
#define GL_COVERAGE_COMPONENT4_NV 0x8ED1
#define GL_COVERAGE_COMPONENT_NV 0x8ED0
#define GL_COVERAGE_EDGE_FRAGMENTS_NV 0x8ED6
#define GL_COVERAGE_SAMPLES_NV 0x8ED4
#define GL_CPU_OPTIMIZED_QCOM 0x8FB1
#define GL_CUBIC_IMG 0x9139
#define GL_CUBIC_MIPMAP_LINEAR_IMG 0x913B
#define GL_CUBIC_MIPMAP_NEAREST_IMG 0x913A
#define GL_CURRENT_QUERY_EXT 0x8865
#define GL_DARKEN 0x9297
#define GL_DEBUG_CALLBACK_FUNCTION_KHR 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM_KHR 0x8245
#define GL_DEBUG_GROUP_STACK_DEPTH_KHR 0x826D
#define GL_DEBUG_LOGGED_MESSAGES_KHR 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR 0x8243
#define GL_DEBUG_OUTPUT_KHR 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR 0x8242
#define GL_DEBUG_SEVERITY_HIGH_KHR 0x9146
#define GL_DEBUG_SEVERITY_LOW_KHR 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM_KHR 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION_KHR 0x826B
#define GL_DEBUG_SOURCE_API_KHR 0x8246
#define GL_DEBUG_SOURCE_APPLICATION_KHR 0x824A
#define GL_DEBUG_SOURCE_OTHER_KHR 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER_KHR 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY_KHR 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR 0x824D
#define GL_DEBUG_TYPE_ERROR_KHR 0x824C
#define GL_DEBUG_TYPE_MARKER_KHR 0x8268
#define GL_DEBUG_TYPE_OTHER_KHR 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE_KHR 0x8250
#define GL_DEBUG_TYPE_POP_GROUP_KHR 0x826A
#define GL_DEBUG_TYPE_PORTABILITY_KHR 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP_KHR 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR 0x824E
#define GL_DEPTH24_STENCIL8_OES 0x88F0
#define GL_DEPTH_BITS 0x0D56
#define GL_DEPTH_BUFFER_BIT0_QCOM 0x00000100
#define GL_DEPTH_BUFFER_BIT1_QCOM 0x00000200
#define GL_DEPTH_BUFFER_BIT2_QCOM 0x00000400
#define GL_DEPTH_BUFFER_BIT3_QCOM 0x00000800
#define GL_DEPTH_BUFFER_BIT4_QCOM 0x00001000
#define GL_DEPTH_BUFFER_BIT5_QCOM 0x00002000
#define GL_DEPTH_BUFFER_BIT6_QCOM 0x00004000
#define GL_DEPTH_BUFFER_BIT7_QCOM 0x00008000
#define GL_DEPTH_CLAMP_EXT 0x864F
#define GL_DEPTH_COMPONENT16_NONLINEAR_NV 0x8E2C
#define GL_DEPTH_COMPONENT16_OES 0x81A5
#define GL_DEPTH_COMPONENT24_OES 0x81A6
#define GL_DEPTH_COMPONENT32_OES 0x81A7
#define GL_DEPTH_EXT 0x1801
#define GL_DEPTH_STENCIL_OES 0x84F9
#define GL_DEPTH_STENCIL_TEXTURE_MODE_ANGLE 0x90EA
#define GL_DIFFERENCE 0x929E
#define GL_DMP_PROGRAM_BINARY_DMP 0x9253
#define GL_DOWNSAMPLE_SCALES_IMG 0x913E
#define GL_DRAW_BUFFER0_EXT 0x8825
#define GL_DRAW_BUFFER0_NV 0x8825
#define GL_DRAW_BUFFER10_EXT 0x882F
#define GL_DRAW_BUFFER10_NV 0x882F
#define GL_DRAW_BUFFER11_EXT 0x8830
#define GL_DRAW_BUFFER11_NV 0x8830
#define GL_DRAW_BUFFER12_EXT 0x8831
#define GL_DRAW_BUFFER12_NV 0x8831
#define GL_DRAW_BUFFER13_EXT 0x8832
#define GL_DRAW_BUFFER13_NV 0x8832
#define GL_DRAW_BUFFER14_EXT 0x8833
#define GL_DRAW_BUFFER14_NV 0x8833
#define GL_DRAW_BUFFER15_EXT 0x8834
#define GL_DRAW_BUFFER15_NV 0x8834
#define GL_DRAW_BUFFER1_EXT 0x8826
#define GL_DRAW_BUFFER1_NV 0x8826
#define GL_DRAW_BUFFER2_EXT 0x8827
#define GL_DRAW_BUFFER2_NV 0x8827
#define GL_DRAW_BUFFER3_EXT 0x8828
#define GL_DRAW_BUFFER3_NV 0x8828
#define GL_DRAW_BUFFER4_EXT 0x8829
#define GL_DRAW_BUFFER4_NV 0x8829
#define GL_DRAW_BUFFER5_EXT 0x882A
#define GL_DRAW_BUFFER5_NV 0x882A
#define GL_DRAW_BUFFER6_EXT 0x882B
#define GL_DRAW_BUFFER6_NV 0x882B
#define GL_DRAW_BUFFER7_EXT 0x882C
#define GL_DRAW_BUFFER7_NV 0x882C
#define GL_DRAW_BUFFER8_EXT 0x882D
#define GL_DRAW_BUFFER8_NV 0x882D
#define GL_DRAW_BUFFER9_EXT 0x882E
#define GL_DRAW_BUFFER9_NV 0x882E
#define GL_DRAW_BUFFER_EXT 0x0C01
#define GL_DRAW_FRAMEBUFFER_ANGLE 0x8CA9
#define GL_DRAW_FRAMEBUFFER_APPLE 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING_ANGLE 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING_APPLE 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING_NV 0x8CA6
#define GL_DRAW_FRAMEBUFFER_NV 0x8CA9
#define GL_DYNAMIC_STORAGE_BIT_EXT 0x0100
#define GL_ETC1_RGB8_LOSSY_DECODE_ANGLE 0x9690
#define GL_ETC1_RGB8_OES 0x8D64
#define GL_ETC1_SRGB8_NV 0x88EE
#define GL_EXCLUSION 0x92A0
#define GL_FETCH_PER_SAMPLE_ARM 0x8F65
#define GL_FILL_ANGLE 0x1B02
#define GL_FILL_NV 0x1B02
#define GL_FIRST_VERTEX_CONVENTION_ANGLE 0x8E4D
#define GL_FIRST_VERTEX_CONVENTION_OES 0x8E4D
#define GL_FLOAT_MAT2x3_NV 0x8B65
#define GL_FLOAT_MAT2x4_NV 0x8B66
#define GL_FLOAT_MAT3x2_NV 0x8B67
#define GL_FLOAT_MAT3x4_NV 0x8B68
#define GL_FLOAT_MAT4x2_NV 0x8B69
#define GL_FLOAT_MAT4x3_NV 0x8B6A
#define GL_FOVEATION_ENABLE_BIT_QCOM 0x00000001
#define GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM 0x00000002
#define GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM 0x00000004
#define GL_FRACTIONAL_EVEN_EXT 0x8E7C
#define GL_FRACTIONAL_EVEN_OES 0x8E7C
#define GL_FRACTIONAL_ODD_EXT 0x8E7B
#define GL_FRACTIONAL_ODD_OES 0x8E7B
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES 0x8E5D
#define GL_FRAGMENT_SHADER_BIT_EXT 0x00000002
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES 0x8B8B
#define GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM 0x8F66
#define GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT 0x96DF
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT 0x96D2
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT 0x96D5
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT 0x96D4
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT 0x96D6
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT 0x96D3
#define GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT 0x8F6F
#define GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT 0x96DE
#define GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT 0x96DD
#define GL_FRAMEBUFFER_ATTACHMENT_ANGLE 0x93A3
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT 0x8D6C
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG 0x913F
#define GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT 0x9312
#define GL_FRAMEBUFFER_DEFAULT_LAYERS_OES 0x9312
#define GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM 0x96A2
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM 0x8BFF
#define GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT 0x9652
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG 0x913C
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG 0x9134
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV 0x8D56
#define GL_FRAMEBUFFER_UNDEFINED_OES 0x8219
#define GL_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_ANGLE 0x96B3
#define GL_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_ANGLE 0x96B4
#define GL_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_ANGLE 0x96B5
#define GL_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_ANGLE 0x96B6
#define GL_G16_B16R16_2PLANE_420_UNORM_ANGLE 0x96B7
#define GL_G16_B16_R16_3PLANE_420_UNORM_ANGLE 0x96B8
#define GL_G8_B8R8_2PLANE_420_UNORM_ANGLE 0x96B1
#define GL_G8_B8_R8_3PLANE_420_UNORM_ANGLE 0x96B2
#define GL_GCCSO_SHADER_BINARY_FJ 0x9260
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_GEOMETRY_LINKED_INPUT_TYPE_EXT 0x8917
#define GL_GEOMETRY_LINKED_INPUT_TYPE_OES 0x8917
#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT 0x8918
#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES 0x8918
#define GL_GEOMETRY_LINKED_VERTICES_OUT_EXT 0x8916
#define GL_GEOMETRY_LINKED_VERTICES_OUT_OES 0x8916
#define GL_GEOMETRY_SHADER_BIT_EXT 0x00000004
#define GL_GEOMETRY_SHADER_BIT_OES 0x00000004
#define GL_GEOMETRY_SHADER_INVOCATIONS_EXT 0x887F
#define GL_GEOMETRY_SHADER_INVOCATIONS_OES 0x887F
#define GL_GEOMETRY_SHADER_OES 0x8DD9
#define GL_GPU_DISJOINT_EXT 0x8FBB
#define GL_GPU_OPTIMIZED_QCOM 0x8FB2
#define GL_GREEN_BITS 0x0D53
#define GL_GUILTY_CONTEXT_RESET_EXT 0x8253
#define GL_GUILTY_CONTEXT_RESET_KHR 0x8253
#define GL_HALF_FLOAT_OES 0x8D61
#define GL_HARDLIGHT 0x929B
#define GL_HSL_COLOR 0x92AF
#define GL_HSL_HUE 0x92AD
#define GL_HSL_LUMINOSITY 0x92B0
#define GL_HSL_SATURATION 0x92AE
#define GL_HUAWEI_PROGRAM_BINARY 0x9771
#define GL_HUAWEI_SHADER_BINARY 0x9770
#define GL_IMAGE_BUFFER_OES 0x9051
#define GL_IMAGE_CUBE_MAP_ARRAY_OES 0x9054
#define GL_INNOCENT_CONTEXT_RESET_EXT 0x8254
#define GL_INNOCENT_CONTEXT_RESET_KHR 0x8254
#define GL_INT_10_10_10_2_OES 0x8DF7
#define GL_INT_IMAGE_BUFFER_OES 0x905C
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_OES 0x905F
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ANGLE 0x9109
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910C
#define GL_INT_SAMPLER_BUFFER_OES 0x8DD0
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900E
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES 0x900E
#define GL_ISOLINES_EXT 0x8E7A
#define GL_ISOLINES_OES 0x8E7A
#define GL_IS_PER_PATCH_EXT 0x92E7
#define GL_IS_PER_PATCH_OES 0x92E7
#define GL_LAST_VERTEX_CONVENTION_ANGLE 0x8E4E
#define GL_LAST_VERTEX_CONVENTION_OES 0x8E4E
#define GL_LAYER_PROVOKING_VERTEX_EXT 0x825E
#define GL_LAYER_PROVOKING_VERTEX_OES 0x825E
#define GL_LIGHTEN 0x9298
#define GL_LINES_ADJACENCY_OES 0x000A
#define GL_LINE_ANGLE 0x1B01
#define GL_LINE_NV 0x1B01
#define GL_LINE_STRIP_ADJACENCY_OES 0x000B
#define GL_LOAD_OP_CLEAR_ANGLE 0x96E4
#define GL_LOAD_OP_LOAD_ANGLE 0x96E5
#define GL_LOAD_OP_ZERO_ANGLE 0x96E3
#define GL_LOCATION_INDEX_EXT 0x930F
#define GL_LOGIC_OP_AND_ANGLE 0x1501
#define GL_LOGIC_OP_AND_INVERTED_ANGLE 0x1504
#define GL_LOGIC_OP_AND_REVERSE_ANGLE 0x1502
#define GL_LOGIC_OP_CLEAR_ANGLE 0x1500
#define GL_LOGIC_OP_COPY_ANGLE 0x1503
#define GL_LOGIC_OP_COPY_INVERTED_ANGLE 0x150C
#define GL_LOGIC_OP_EQUIV_ANGLE 0x1509
#define GL_LOGIC_OP_INVERT_ANGLE 0x150A
#define GL_LOGIC_OP_NAND_ANGLE 0x150E
#define GL_LOGIC_OP_NOOP_ANGLE 0x1505
#define GL_LOGIC_OP_NOR_ANGLE 0x1508
#define GL_LOGIC_OP_OR_ANGLE 0x1507
#define GL_LOGIC_OP_OR_INVERTED_ANGLE 0x150D
#define GL_LOGIC_OP_OR_REVERSE_ANGLE 0x150B
#define GL_LOGIC_OP_SET_ANGLE 0x150F
#define GL_LOGIC_OP_XOR_ANGLE 0x1506
#define GL_LOSE_CONTEXT_ON_RESET_EXT 0x8252
#define GL_LOSE_CONTEXT_ON_RESET_KHR 0x8252
#define GL_LOWER_LEFT_EXT 0x8CA1
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE4_ALPHA4_OES 0x8043
#define GL_LUMINANCE8_ALPHA8_OES 0x8045
#define GL_LUMINANCE8_OES 0x8040
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_MALI_PROGRAM_BINARY_ARM 0x8F61
#define GL_MALI_SHADER_BINARY_ARM 0x8F60
#define GL_MAP_COHERENT_BIT_EXT 0x0080
#define GL_MAP_FLUSH_EXPLICIT_BIT_EXT 0x0010
#define GL_MAP_INVALIDATE_BUFFER_BIT_EXT 0x0008
#define GL_MAP_INVALIDATE_RANGE_BIT_EXT 0x0004
#define GL_MAP_PERSISTENT_BIT_EXT 0x0040
#define GL_MAP_READ_BIT_EXT 0x0001
#define GL_MAP_UNSYNCHRONIZED_BIT_EXT 0x0020
#define GL_MAP_WRITE_BIT_EXT 0x0002
#define GL_MAX_3D_TEXTURE_SIZE_OES 0x8073
#define GL_MAX_CLIP_DISTANCES_ANGLE 0x0D32
#define GL_MAX_CLIP_DISTANCES_APPLE 0x0D32
#define GL_MAX_CLIP_DISTANCES_EXT 0x0D32
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_COLOR_ATTACHMENTS_NV 0x8CDF
#define GL_MAX_COLOR_TEXTURE_SAMPLES_ANGLE 0x910E
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_ANGLE 0x82FA
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT 0x82FA
#define GL_MAX_COMBINED_DRAW_BUFFERS_AND_PIXEL_LOCAL_STORAGE_PLANES_ANGLE 0x96E1
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8A32
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8A32
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E1E
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E1F
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E1F
#define GL_MAX_CULL_DISTANCES_ANGLE 0x82F9
#define GL_MAX_CULL_DISTANCES_EXT 0x82F9
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES_KHR 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR 0x9143
#define GL_MAX_DEPTH_TEXTURE_SAMPLES_ANGLE 0x910F
#define GL_MAX_DRAW_BUFFERS_EXT 0x8824
#define GL_MAX_DRAW_BUFFERS_NV 0x8824
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT 0x88FC
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES 0x8E5C
#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT 0x96DC
#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT 0x96DB
#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT 0x96DA
#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT 0x96D8
#define GL_MAX_FRAMEBUFFER_LAYERS_EXT 0x9317
#define GL_MAX_FRAMEBUFFER_LAYERS_OES 0x9317
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT 0x92CF
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES 0x92CF
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT 0x90CD
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES 0x90CD
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT 0x9123
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES 0x8DE0
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT 0x90D7
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES 0x90D7
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES 0x8C29
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES 0x8DE1
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8DDF
#define GL_MAX_INTEGER_SAMPLES_ANGLE 0x9110
#define GL_MAX_LABEL_LENGTH_KHR 0x82E8
#define GL_MAX_MULTIVIEW_BUFFERS_EXT 0x90F2
#define GL_MAX_PATCH_VERTICES_EXT 0x8E7D
#define GL_MAX_PATCH_VERTICES_OES 0x8E7D
#define GL_MAX_PIXEL_LOCAL_STORAGE_PLANES_ANGLE 0x96E0
#define GL_MAX_SAMPLES_ANGLE 0x8D57
#define GL_MAX_SAMPLES_APPLE 0x8D57
#define GL_MAX_SAMPLES_IMG 0x9135
#define GL_MAX_SAMPLES_NV 0x8D57
#define GL_MAX_SAMPLE_MASK_WORDS_ANGLE 0x8E59
#define GL_MAX_SERVER_WAIT_TIMEOUT_APPLE 0x9111
#define GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT 0x9650
#define GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT 0x9651
#define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT 0x8F63
#define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT 0x8F67
#define GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM 0x8FA1
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT 0x9199
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT 0x919A
#define GL_MAX_SPARSE_TEXTURE_SIZE_EXT 0x9198
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT 0x92CD
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES 0x92CD
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT 0x90CB
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES 0x90CB
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT 0x886C
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES 0x886C
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT 0x8E83
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES 0x8E83
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT 0x90D8
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES 0x90D8
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT 0x8E81
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES 0x8E81
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT 0x8E85
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES 0x8E85
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E7F
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E7F
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT 0x92CE
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES 0x92CE
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT 0x90CC
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES 0x90CC
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT 0x886D
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES 0x886D
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT 0x8E86
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES 0x8E86
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT 0x90D9
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES 0x90D9
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT 0x8E82
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES 0x8E82
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E80
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E80
#define GL_MAX_TESS_GEN_LEVEL_EXT 0x8E7E
#define GL_MAX_TESS_GEN_LEVEL_OES 0x8E7E
#define GL_MAX_TESS_PATCH_COMPONENTS_EXT 0x8E84
#define GL_MAX_TESS_PATCH_COMPONENTS_OES 0x8E84
#define GL_MAX_TEXTURE_BUFFER_SIZE_OES 0x8C2B
#define GL_MAX_VIEWPORTS_NV 0x825B
#define GL_MAX_VIEWPORTS_OES 0x825B
#define GL_MEMORY_SIZE_ANGLE 0x93AD
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES 0x8E5B
#define GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT 0x96D9
#define GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT 0x96D7
#define GL_MIN_SAMPLE_SHADING_VALUE_OES 0x8C37
#define GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM 0x8C90
#define GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM 0x8C91
#define GL_MULTIPLY 0x9294
#define GL_MULTISAMPLE_BUFFER_BIT0_QCOM 0x01000000
#define GL_MULTISAMPLE_BUFFER_BIT1_QCOM 0x02000000
#define GL_MULTISAMPLE_BUFFER_BIT2_QCOM 0x04000000
#define GL_MULTISAMPLE_BUFFER_BIT3_QCOM 0x08000000
#define GL_MULTISAMPLE_BUFFER_BIT4_QCOM 0x10000000
#define GL_MULTISAMPLE_BUFFER_BIT5_QCOM 0x20000000
#define GL_MULTISAMPLE_BUFFER_BIT6_QCOM 0x40000000
#define GL_MULTISAMPLE_BUFFER_BIT7_QCOM 0x80000000
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY 0x9382
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE 0x9381
#define GL_MULTIVIEW_EXT 0x90F1
#define GL_NEGATIVE_ONE_TO_ONE_EXT 0x935E
#define GL_NO_RESET_NOTIFICATION_EXT 0x8261
#define GL_NO_RESET_NOTIFICATION_KHR 0x8261
#define GL_NUM_DOWNSAMPLE_SCALES_IMG 0x913D
#define GL_NUM_PROGRAM_BINARY_FORMATS_OES 0x87FE
#define GL_NUM_REQUESTABLE_EXTENSIONS_ANGLE 0x93A9
#define GL_NUM_SPARSE_LEVELS_EXT 0x91AA
#define GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT 0x8F6E
#define GL_NUM_VIRTUAL_PAGE_SIZES_EXT 0x91A8
#define GL_OBJECT_TYPE_APPLE 0x9112
#define GL_ONE_MINUS_SRC1_ALPHA_EXT 0x88FB
#define GL_ONE_MINUS_SRC1_COLOR_EXT 0x88FA
#define GL_OVERLAY 0x9296
#define GL_PACK_REVERSE_ROW_ORDER_ANGLE 0x93A4
#define GL_PACK_ROW_LENGTH_NV 0x0D02
#define GL_PACK_SKIP_PIXELS_NV 0x0D04
#define GL_PACK_SKIP_ROWS_NV 0x0D03
#define GL_PATCHES_EXT 0x000E
#define GL_PATCHES_OES 0x000E
#define GL_PATCH_VERTICES_EXT 0x8E72
#define GL_PATCH_VERTICES_OES 0x8E72
#define GL_PERFMON_GLOBAL_MODE_QCOM 0x8FA0
#define GL_PIXEL_LOCAL_CLEAR_VALUE_FLOAT_ANGLE 0x96EB
#define GL_PIXEL_LOCAL_CLEAR_VALUE_INT_ANGLE 0x96EC
#define GL_PIXEL_LOCAL_CLEAR_VALUE_UNSIGNED_INT_ANGLE 0x96ED
#define GL_PIXEL_LOCAL_FORMAT_ANGLE 0x96E7
#define GL_PIXEL_LOCAL_STORAGE_ACTIVE_PLANES_ANGLE 0x96E2
#define GL_PIXEL_LOCAL_TEXTURE_LAYER_ANGLE 0x96EA
#define GL_PIXEL_LOCAL_TEXTURE_LEVEL_ANGLE 0x96E9
#define GL_PIXEL_LOCAL_TEXTURE_NAME_ANGLE 0x96E8
#define GL_PIXEL_PACK_BUFFER_BINDING_NV 0x88ED
#define GL_PIXEL_PACK_BUFFER_NV 0x88EB
#define GL_PIXEL_UNPACK_BUFFER_BINDING_NV 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_NV 0x88EC
#define GL_POINT_NV 0x1B00
#define GL_POLYGON_MODE_ANGLE 0x0B40
#define GL_POLYGON_MODE_NV 0x0B40
#define GL_POLYGON_OFFSET_LINE_ANGLE 0x2A02
#define GL_POLYGON_OFFSET_LINE_NV 0x2A02
#define GL_POLYGON_OFFSET_POINT_NV 0x2A01
#define GL_PRIMITIVES_GENERATED_OES 0x8C87
#define GL_PRIMITIVE_BOUNDING_BOX 0x92BE
#define GL_PRIMITIVE_BOUNDING_BOX_EXT 0x92BE
#define GL_PRIMITIVE_BOUNDING_BOX_OES 0x92BE
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES 0x8221
#define GL_PROGRAM_BINARY_ANGLE 0x93A6
#define GL_PROGRAM_BINARY_FORMATS_OES 0x87FF
#define GL_PROGRAM_BINARY_LENGTH_OES 0x8741
#define GL_PROGRAM_BINARY_READY_ANGLE 0x96BE
#define GL_PROGRAM_CACHE_ENABLED_ANGLE 0x93AC
#define GL_PROGRAM_KHR 0x82E2
#define GL_PROGRAM_PIPELINE_BINDING_EXT 0x825A
#define GL_PROGRAM_PIPELINE_KHR 0x82E4
#define GL_PROGRAM_SEPARABLE_EXT 0x8258
#define GL_PROVOKING_VERTEX_ANGLE 0x8E4F
#define GL_QUADS_EXT 0x0007
#define GL_QUADS_OES 0x0007
#define GL_QUERY_COUNTER_BITS_EXT 0x8864
#define GL_QUERY_KHR 0x82E3
#define GL_QUERY_RESULT_AVAILABLE_EXT 0x8867
#define GL_QUERY_RESULT_EXT 0x8866
#define GL_R11F_G11F_B10F_APPLE 0x8C3A
#define GL_R16_EXT 0x822A
#define GL_R16_SNORM_EXT 0x8F98
#define GL_READ_BUFFER_EXT 0x0C02
#define GL_READ_BUFFER_NV 0x0C02
#define GL_READ_FRAMEBUFFER_ANGLE 0x8CA8
#define GL_READ_FRAMEBUFFER_APPLE 0x8CA8
#define GL_READ_FRAMEBUFFER_BINDING_ANGLE 0x8CAA
#define GL_READ_FRAMEBUFFER_BINDING_APPLE 0x8CAA
#define GL_READ_FRAMEBUFFER_BINDING_NV 0x8CAA
#define GL_READ_FRAMEBUFFER_NV 0x8CA8
#define GL_RED_BITS 0x0D52
#define GL_RED_EXT 0x1903
#define GL_REFERENCED_BY_GEOMETRY_SHADER_EXT 0x9309
#define GL_REFERENCED_BY_GEOMETRY_SHADER_OES 0x9309
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT 0x9307
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT 0x9308
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES 0x9308
#define GL_RENDERABILITY_VALIDATION_ANGLE 0x9EA0
#define GL_RENDERBUFFER_SAMPLES_ANGLE 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_APPLE 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_IMG 0x9133
#define GL_RENDERBUFFER_SAMPLES_NV 0x8CAB
#define GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM 0x8FB3
#define GL_REQUESTABLE_EXTENSIONS_ANGLE 0x93A8
#define GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES 0x8D68
#define GL_RESET_NOTIFICATION_STRATEGY_EXT 0x8256
#define GL_RESET_NOTIFICATION_STRATEGY_KHR 0x8256
#define GL_RESOURCE_INITIALIZED_ANGLE 0x969F
#define GL_RG16_EXT 0x822C
#define GL_RG16_SNORM_EXT 0x8F99
#define GL_RGB16_SNORM_EXT 0x8F9A
#define GL_RGB565_OES 0x8D62
#define GL_RGB5_A1_OES 0x8057
#define GL_RGB8_OES 0x8051
#define GL_RGB9_E5_APPLE 0x8C3D
#define GL_RGBA16_SNORM_EXT 0x8F9B
#define GL_RGBA4_OES 0x8056
#define GL_RGBA8_OES 0x8058
#define GL_RGBX8_ANGLE 0x96BA
#define GL_RG_EXT 0x8227
#define GL_ROBUST_FRAGMENT_SHADER_OUTPUT_ANGLE 0x96B9
#define GL_ROBUST_RESOURCE_INITIALIZATION_ANGLE 0x93A7
#define GL_SAMPLER_2D_ARRAY_SHADOW_NV 0x8DC4
#define GL_SAMPLER_2D_MULTISAMPLE_ANGLE 0x9108
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910B
#define GL_SAMPLER_2D_SHADOW_EXT 0x8B62
#define GL_SAMPLER_3D_OES 0x8B5F
#define GL_SAMPLER_BUFFER_OES 0x8DC2
#define GL_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_OES 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT 0x900D
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES 0x900D
#define GL_SAMPLER_CUBE_SHADOW_NV 0x8DC5
#define GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT 0x8BE7
#define GL_SAMPLER_EXTERNAL_OES 0x8D66
#define GL_SAMPLER_KHR 0x82E6
#define GL_SAMPLE_MASK_ANGLE 0x8E51
#define GL_SAMPLE_MASK_VALUE_ANGLE 0x8E52
#define GL_SAMPLE_POSITION_ANGLE 0x8E50
#define GL_SAMPLE_SHADING_OES 0x8C36
#define GL_SCREEN 0x9295
#define GL_SERIALIZED_CONTEXT_STRING_ANGLE 0x96B0
#define GL_SGX_BINARY_IMG 0x8C0A
#define GL_SGX_PROGRAM_BINARY_IMG 0x9130
#define GL_SHADER_BINARY_ANGLE 0x96BB
#define GL_SHADER_BINARY_DMP 0x9250
#define GL_SHADER_BINARY_VIV 0x8FC4
#define GL_SHADER_CORE_ACTIVE_COUNT_ARM 0x96F1
#define GL_SHADER_CORE_COUNT_ARM 0x96F0
#define GL_SHADER_CORE_FMA_RATE_ARM 0x96F6
#define GL_SHADER_CORE_MAX_WARP_COUNT_ARM 0x96F3
#define GL_SHADER_CORE_PIXEL_RATE_ARM 0x96F4
#define GL_SHADER_CORE_PRESENT_MASK_ARM 0x96F2
#define GL_SHADER_CORE_TEXEL_RATE_ARM 0x96F5
#define GL_SHADER_KHR 0x82E1
#define GL_SHADER_PIXEL_LOCAL_STORAGE_EXT 0x8F64
#define GL_SHADING_RATE_1X1_PIXELS_EXT 0x96A6
#define GL_SHADING_RATE_1X1_PIXELS_QCOM 0x96A6
#define GL_SHADING_RATE_1X2_PIXELS_EXT 0x96A7
#define GL_SHADING_RATE_1X2_PIXELS_QCOM 0x96A7
#define GL_SHADING_RATE_1X4_PIXELS_EXT 0x96AA
#define GL_SHADING_RATE_1X4_PIXELS_QCOM 0x96AA
#define GL_SHADING_RATE_2X1_PIXELS_EXT 0x96A8
#define GL_SHADING_RATE_2X1_PIXELS_QCOM 0x96A8
#define GL_SHADING_RATE_2X2_PIXELS_EXT 0x96A9
#define GL_SHADING_RATE_2X2_PIXELS_QCOM 0x96A9
#define GL_SHADING_RATE_2X4_PIXELS_EXT 0x96AD
#define GL_SHADING_RATE_2X4_PIXELS_QCOM 0x96AD
#define GL_SHADING_RATE_4X1_PIXELS_EXT 0x96AB
#define GL_SHADING_RATE_4X1_PIXELS_QCOM 0x96AB
#define GL_SHADING_RATE_4X2_PIXELS_EXT 0x96AC
#define GL_SHADING_RATE_4X2_PIXELS_QCOM 0x96AC
#define GL_SHADING_RATE_4X4_PIXELS_EXT 0x96AE
#define GL_SHADING_RATE_4X4_PIXELS_QCOM 0x96AE
#define GL_SHADING_RATE_ATTACHMENT_EXT 0x96D1
#define GL_SHADING_RATE_EXT 0x96D0
#define GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM 0x96A5
#define GL_SHADING_RATE_QCOM 0x96A4
#define GL_SIGNALED_APPLE 0x9119
#define GL_SLUMINANCE8_ALPHA8_NV 0x8C45
#define GL_SLUMINANCE8_NV 0x8C47
#define GL_SLUMINANCE_ALPHA_NV 0x8C44
#define GL_SLUMINANCE_NV 0x8C46
#define GL_SMAPHS30_PROGRAM_BINARY_DMP 0x9251
#define GL_SMAPHS_PROGRAM_BINARY_DMP 0x9252
#define GL_SOFTLIGHT 0x929C
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT 0x91A9
#define GL_SRC1_ALPHA_EXT 0x8589
#define GL_SRC1_COLOR_EXT 0x88F9
#define GL_SRC_ALPHA_SATURATE_EXT 0x0308
#define GL_SRGB8_NV 0x8C41
#define GL_STACK_OVERFLOW_KHR 0x0503
#define GL_STACK_UNDERFLOW_KHR 0x0504
#define GL_STATE_RESTORE 0x8BDC
#define GL_STENCIL_BITS 0x0D57
#define GL_STENCIL_BUFFER_BIT0_QCOM 0x00010000
#define GL_STENCIL_BUFFER_BIT1_QCOM 0x00020000
#define GL_STENCIL_BUFFER_BIT2_QCOM 0x00040000
#define GL_STENCIL_BUFFER_BIT3_QCOM 0x00080000
#define GL_STENCIL_BUFFER_BIT4_QCOM 0x00100000
#define GL_STENCIL_BUFFER_BIT5_QCOM 0x00200000
#define GL_STENCIL_BUFFER_BIT6_QCOM 0x00400000
#define GL_STENCIL_BUFFER_BIT7_QCOM 0x00800000
#define GL_STENCIL_EXT 0x1802
#define GL_STENCIL_INDEX1_OES 0x8D46
#define GL_STENCIL_INDEX4_OES 0x8D47
#define GL_STENCIL_INDEX8_OES 0x8D48
#define GL_STENCIL_INDEX_ANGLE 0x1901
#define GL_STENCIL_INDEX_OES 0x1901
#define GL_STORE_OP_STORE_ANGLE 0x96E6
#define GL_SURFACE_COMPRESSION_EXT 0x96C0
#define GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT 0x96CD
#define GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT 0x96CE
#define GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT 0x96CF
#define GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT 0x96C4
#define GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT 0x96C5
#define GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT 0x96C6
#define GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT 0x96C7
#define GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT 0x96C8
#define GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT 0x96C9
#define GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT 0x96CA
#define GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT 0x96CB
#define GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT 0x96CC
#define GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT 0x96C2
#define GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT 0x96C1
#define GL_SYNC_CONDITION_APPLE 0x9113
#define GL_SYNC_FENCE_APPLE 0x9116
#define GL_SYNC_FLAGS_APPLE 0x9115
#define GL_SYNC_FLUSH_COMMANDS_BIT_APPLE 0x00000001
#define GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE 0x9117
#define GL_SYNC_OBJECT_APPLE 0x8A53
#define GL_SYNC_STATUS_APPLE 0x9114
#define GL_TESS_CONTROL_OUTPUT_VERTICES_EXT 0x8E75
#define GL_TESS_CONTROL_OUTPUT_VERTICES_OES 0x8E75
#define GL_TESS_CONTROL_SHADER_BIT_EXT 0x00000008
#define GL_TESS_CONTROL_SHADER_BIT_OES 0x00000008
#define GL_TESS_CONTROL_SHADER_EXT 0x8E88
#define GL_TESS_CONTROL_SHADER_OES 0x8E88
#define GL_TESS_EVALUATION_SHADER_BIT_EXT 0x00000010
#define GL_TESS_EVALUATION_SHADER_BIT_OES 0x00000010
#define GL_TESS_EVALUATION_SHADER_EXT 0x8E87
#define GL_TESS_EVALUATION_SHADER_OES 0x8E87
#define GL_TESS_GEN_MODE_EXT 0x8E76
#define GL_TESS_GEN_MODE_OES 0x8E76
#define GL_TESS_GEN_POINT_MODE_EXT 0x8E79
#define GL_TESS_GEN_POINT_MODE_OES 0x8E79
#define GL_TESS_GEN_SPACING_EXT 0x8E77
#define GL_TESS_GEN_SPACING_OES 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER_EXT 0x8E78
#define GL_TESS_GEN_VERTEX_ORDER_OES 0x8E78
#define GL_TEXTURE_2D_MULTISAMPLE_ANGLE 0x9100
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES 0x9102
#define GL_TEXTURE_3D_OES 0x806F
#define GL_TEXTURE_ASTC_DECODE_PRECISION_EXT 0x8F69
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ANGLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES 0x9105
#define GL_TEXTURE_BINDING_3D_OES 0x806A
#define GL_TEXTURE_BINDING_BUFFER_OES 0x8C2C
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT 0x900A
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES 0x900A
#define GL_TEXTURE_BINDING_EXTERNAL_OES 0x8D67
#define GL_TEXTURE_BORDER_COLOR_EXT 0x1004
#define GL_TEXTURE_BORDER_COLOR_NV 0x1004
#define GL_TEXTURE_BORDER_COLOR_OES 0x1004
#define GL_TEXTURE_BUFFER_BINDING_EXT 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING_OES 0x8C2A
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES 0x8C2D
#define GL_TEXTURE_BUFFER_OES 0x8C2A
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT 0x919F
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES 0x919F
#define GL_TEXTURE_BUFFER_OFFSET_EXT 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_OES 0x919D
#define GL_TEXTURE_BUFFER_SIZE_EXT 0x919E
#define GL_TEXTURE_BUFFER_SIZE_OES 0x919E
#define GL_TEXTURE_CBCR_DEGAMMA_QCOM 0x9711
#define GL_TEXTURE_COMPARE_FUNC_EXT 0x884D
#define GL_TEXTURE_COMPARE_MODE_EXT 0x884C
#define GL_TEXTURE_CUBE_MAP_ARRAY_EXT 0x9009
#define GL_TEXTURE_CUBE_MAP_ARRAY_OES 0x9009
#define GL_TEXTURE_DEPTH_QCOM 0x8BD4
#define GL_TEXTURE_EXTERNAL_OES 0x8D65
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS_ANGLE 0x9107
#define GL_TEXTURE_FORMAT_QCOM 0x8BD6
#define GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT 0x8FBF
#define GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM 0x96A0
#define GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM 0x8BFB
#define GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM 0x8BFD
#define GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM 0x8BFC
#define GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM 0x8BFE
#define GL_TEXTURE_HEIGHT_QCOM 0x8BD3
#define GL_TEXTURE_IMAGE_VALID_QCOM 0x8BD8
#define GL_TEXTURE_INTERNAL_FORMAT_QCOM 0x8BD5
#define GL_TEXTURE_LOD_BIAS_QCOM 0x8C96
#define GL_TEXTURE_MAX_LEVEL_APPLE 0x813D
#define GL_TEXTURE_NUM_LEVELS_QCOM 0x8BD9
#define GL_TEXTURE_OBJECT_VALID_QCOM 0x8BDB
#define GL_TEXTURE_PROTECTED_EXT 0x8BFA
#define GL_TEXTURE_SAMPLES_ANGLE 0x9106
#define GL_TEXTURE_SAMPLES_IMG 0x9136
#define GL_TEXTURE_SPARSE_EXT 0x91A6
#define GL_TEXTURE_TARGET_QCOM 0x8BDA
#define GL_TEXTURE_TYPE_QCOM 0x8BD7
#define GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM 0x8F6A
#define GL_TEXTURE_USAGE_ANGLE 0x93A2
#define GL_TEXTURE_VIEW_MIN_LAYER_EXT 0x82DD
#define GL_TEXTURE_VIEW_MIN_LAYER_OES 0x82DD
#define GL_TEXTURE_VIEW_MIN_LEVEL_EXT 0x82DB
#define GL_TEXTURE_VIEW_MIN_LEVEL_OES 0x82DB
#define GL_TEXTURE_VIEW_NUM_LAYERS_EXT 0x82DE
#define GL_TEXTURE_VIEW_NUM_LAYERS_OES 0x82DE
#define GL_TEXTURE_VIEW_NUM_LEVELS_EXT 0x82DC
#define GL_TEXTURE_VIEW_NUM_LEVELS_OES 0x82DC
#define GL_TEXTURE_WIDTH_QCOM 0x8BD2
#define GL_TEXTURE_WRAP_R_OES 0x8072
#define GL_TEXTURE_Y_DEGAMMA_QCOM 0x9710
#define GL_TIMEOUT_EXPIRED_APPLE 0x911B
#define GL_TIMEOUT_IGNORED_APPLE 0xFFFFFFFFFFFFFFFF
#define GL_TIMESTAMP_EXT 0x8E28
#define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE 0x93A0
#define GL_TRIANGLES_ADJACENCY_OES 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY_OES 0x000D
#define GL_UNDEFINED_VERTEX_EXT 0x8260
#define GL_UNDEFINED_VERTEX_OES 0x8260
#define GL_UNKNOWN_CONTEXT_RESET_EXT 0x8255
#define GL_UNKNOWN_CONTEXT_RESET_KHR 0x8255
#define GL_UNPACK_ROW_LENGTH_EXT 0x0CF2
#define GL_UNPACK_SKIP_PIXELS_EXT 0x0CF4
#define GL_UNPACK_SKIP_ROWS_EXT 0x0CF3
#define GL_UNSIGNALED_APPLE 0x9118
#define GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE 0x8C3B
#define GL_UNSIGNED_INT_10_10_10_2_OES 0x8DF6
#define GL_UNSIGNED_INT_24_8_OES 0x84FA
#define GL_UNSIGNED_INT_2_10_10_10_REV_EXT 0x8368
#define GL_UNSIGNED_INT_5_9_9_9_REV_APPLE 0x8C3E
#define GL_UNSIGNED_INT_IMAGE_BUFFER_OES 0x9067
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES 0x906A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ANGLE 0x910A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910D
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_OES 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900F
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES 0x900F
#define GL_UNSIGNED_NORMALIZED_EXT 0x8C17
#define GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT 0x8366
#define GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT 0x8365
#define GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG 0x8365
#define GL_UPPER_LEFT_EXT 0x8CA2
#define GL_VERTEX_ARRAY_BINDING_OES 0x85B5
#define GL_VERTEX_ARRAY_KHR 0x8074
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV 0x88FE
#define GL_VERTEX_SHADER_BIT_EXT 0x00000001
#define GL_VIEWPORT_BOUNDS_RANGE_NV 0x825D
#define GL_VIEWPORT_BOUNDS_RANGE_OES 0x825D
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV 0x825F
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES 0x825F
#define GL_VIEWPORT_SUBPIXEL_BITS_NV 0x825C
#define GL_VIEWPORT_SUBPIXEL_BITS_OES 0x825C
#define GL_VIRTUAL_PAGE_SIZE_INDEX_EXT 0x91A7
#define GL_VIRTUAL_PAGE_SIZE_X_EXT 0x9195
#define GL_VIRTUAL_PAGE_SIZE_Y_EXT 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Z_EXT 0x9197
#define GL_WAIT_FAILED_APPLE 0x911D
#define GL_WRITEONLY_RENDERING_QCOM 0x8823
#define GL_WRITE_ONLY_OES 0x88B9
#define GL_Z400_BINARY_AMD 0x8740
#define GL_ZERO_TO_ONE_EXT 0x935F

#include <KHR/khrplatform.h>

typedef unsigned int GLenum;

typedef unsigned char GLboolean;

typedef unsigned int GLbitfield;

typedef void GLvoid;

typedef khronos_int8_t GLbyte;

typedef khronos_uint8_t GLubyte;

typedef khronos_int16_t GLshort;

typedef khronos_uint16_t GLushort;

typedef int GLint;

typedef unsigned int GLuint;

typedef khronos_int32_t GLclampx;

typedef int GLsizei;

typedef khronos_float_t GLfloat;

typedef khronos_float_t GLclampf;

typedef double GLdouble;

typedef double GLclampd;

typedef void *GLeglClientBufferEXT;

typedef void *GLeglImageOES;

typedef char GLchar;

typedef char GLcharARB;

#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif

typedef khronos_uint16_t GLhalf;

typedef khronos_uint16_t GLhalfARB;

typedef khronos_int32_t GLfixed;

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptr;
#else
typedef khronos_intptr_t GLintptr;
#endif

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptrARB;
#else
typedef khronos_intptr_t GLintptrARB;
#endif

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptr;
#else
typedef khronos_ssize_t GLsizeiptr;
#endif

#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptrARB;
#else
typedef khronos_ssize_t GLsizeiptrARB;
#endif

typedef khronos_int64_t GLint64;

typedef khronos_int64_t GLint64EXT;

typedef khronos_uint64_t GLuint64;

typedef khronos_uint64_t GLuint64EXT;

typedef struct __GLsync *GLsync;

struct _cl_context;

struct _cl_event;

typedef void (GLAD_API_PTR *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef void (GLAD_API_PTR *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef void (GLAD_API_PTR *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

typedef void (GLAD_API_PTR *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);

typedef unsigned short GLhalfNV;

typedef GLintptr GLvdpauSurfaceNV;

typedef void (GLAD_API_PTR *GLVULKANPROCNV)(void);

typedef GLsizeiptr (GLAD_API_PTR *GLGETBLOBPROCANGLE)(const void *key, GLsizeiptr keySize, void *value, GLsizeiptr valueSize, const void *userParam);

typedef void (GLAD_API_PTR *GLSETBLOBPROCANGLE)(const void *key, GLsizeiptr keySize, const void *value, GLsizeiptr valueSize, const void *userParam);


#define GL_VERSION_1_0 1
#define GL_VERSION_1_1 1
#define GL_VERSION_1_2 1
#define GL_VERSION_1_3 1
#define GL_VERSION_1_4 1
#define GL_VERSION_1_5 1
#define GL_VERSION_2_0 1
#define GL_VERSION_2_1 1
#define GL_VERSION_3_0 1
#define GL_VERSION_3_1 1
#define GL_VERSION_3_2 1
#define GL_VERSION_3_3 1
#define GL_VERSION_4_0 1
#define GL_VERSION_4_1 1
#define GL_VERSION_4_2 1
#define GL_VERSION_4_3 1
#define GL_VERSION_4_4 1
#define GL_VERSION_4_5 1
#define GL_VERSION_4_6 1
#define GL_ES_VERSION_2_0 1
#define GL_ES_VERSION_3_0 1
#define GL_ES_VERSION_3_1 1
#define GL_ES_VERSION_3_2 1
#define GL_3DFX_multisample 1
#define GL_3DFX_tbuffer 1
#define GL_3DFX_texture_compression_FXT1 1
#define GL_AMD_blend_minmax_factor 1
#define GL_AMD_compressed_3DC_texture 1
#define GL_AMD_compressed_ATC_texture 1
#define GL_AMD_conservative_depth 1
#define GL_AMD_debug_output 1
#define GL_AMD_depth_clamp_separate 1
#define GL_AMD_draw_buffers_blend 1
#define GL_AMD_framebuffer_multisample_advanced 1
#define GL_AMD_framebuffer_sample_positions 1
#define GL_AMD_gcn_shader 1
#define GL_AMD_gpu_shader_half_float 1
#define GL_AMD_gpu_shader_int16 1
#define GL_AMD_gpu_shader_int64 1
#define GL_AMD_interleaved_elements 1
#define GL_AMD_multi_draw_indirect 1
#define GL_AMD_name_gen_delete 1
#define GL_AMD_occlusion_query_event 1
#define GL_AMD_performance_monitor 1
#define GL_AMD_pinned_memory 1
#define GL_AMD_program_binary_Z400 1
#define GL_AMD_query_buffer_object 1
#define GL_AMD_sample_positions 1
#define GL_AMD_seamless_cubemap_per_texture 1
#define GL_AMD_shader_atomic_counter_ops 1
#define GL_AMD_shader_ballot 1
#define GL_AMD_shader_explicit_vertex_parameter 1
#define GL_AMD_shader_fragment_mask 1
#define GL_AMD_shader_gpu_shader_half_float_fetch 1
#define GL_AMD_shader_image_load_store_lod 1
#define GL_AMD_shader_stencil_export 1
#define GL_AMD_shader_trinary_minmax 1
#define GL_AMD_sparse_texture 1
#define GL_AMD_stencil_operation_extended 1
#define GL_AMD_texture_gather_bias_lod 1
#define GL_AMD_texture_texture4 1
#define GL_AMD_transform_feedback3_lines_triangles 1
#define GL_AMD_transform_feedback4 1
#define GL_AMD_vertex_shader_layer 1
#define GL_AMD_vertex_shader_tessellator 1
#define GL_AMD_vertex_shader_viewport_index 1
#define GL_ANDROID_extension_pack_es31a 1
#define GL_ANGLE_base_vertex_base_instance 1
#define GL_ANGLE_blob_cache 1
#define GL_ANGLE_client_arrays 1
#define GL_ANGLE_clip_cull_distance 1
#define GL_ANGLE_copy_texture_3d 1
#define GL_ANGLE_depth_texture 1
#define GL_ANGLE_framebuffer_blit 1
#define GL_ANGLE_framebuffer_multisample 1
#define GL_ANGLE_get_image 1
#define GL_ANGLE_get_serialized_context_string 1
#define GL_ANGLE_get_tex_level_parameter 1
#define GL_ANGLE_instanced_arrays 1
#define GL_ANGLE_logic_op 1
#define GL_ANGLE_lossy_etc_decode 1
#define GL_ANGLE_memory_object_flags 1
#define GL_ANGLE_memory_object_fuchsia 1
#define GL_ANGLE_memory_size 1
#define GL_ANGLE_multi_draw 1
#define GL_ANGLE_pack_reverse_row_order 1
#define GL_ANGLE_polygon_mode 1
#define GL_ANGLE_program_binary 1
#define GL_ANGLE_program_binary_readiness_query 1
#define GL_ANGLE_program_cache_control 1
#define GL_ANGLE_provoking_vertex 1
#define GL_ANGLE_renderability_validation 1
#define GL_ANGLE_request_extension 1
#define GL_ANGLE_rgbx_internal_format 1
#define GL_ANGLE_robust_client_memory 1
#define GL_ANGLE_robust_fragment_shader_output 1
#define GL_ANGLE_robust_resource_initialization 1
#define GL_ANGLE_semaphore_fuchsia 1
#define GL_ANGLE_shader_binary 1
#define GL_ANGLE_shader_pixel_local_storage 1
#define GL_ANGLE_stencil_texturing 1
#define GL_ANGLE_texture_compression_dxt1 1
#define GL_ANGLE_texture_compression_dxt3 1
#define GL_ANGLE_texture_compression_dxt5 1
#define GL_ANGLE_texture_external_update 1
#define GL_ANGLE_texture_multisample 1
#define GL_ANGLE_texture_usage 1
#define GL_ANGLE_translated_shader_source 1
#define GL_ANGLE_vulkan_image 1
#define GL_ANGLE_yuv_internal_format 1
#define GL_APPLE_aux_depth_stencil 1
#define GL_APPLE_client_storage 1
#define GL_APPLE_clip_distance 1
#define GL_APPLE_color_buffer_packed_float 1
#define GL_APPLE_copy_texture_levels 1
#define GL_APPLE_element_array 1
#define GL_APPLE_fence 1
#define GL_APPLE_float_pixels 1
#define GL_APPLE_flush_buffer_range 1
#define GL_APPLE_framebuffer_multisample 1
#define GL_APPLE_object_purgeable 1
#define GL_APPLE_rgb_422 1
#define GL_APPLE_row_bytes 1
#define GL_APPLE_specular_vector 1
#define GL_APPLE_sync 1
#define GL_APPLE_texture_format_BGRA8888 1
#define GL_APPLE_texture_max_level 1
#define GL_APPLE_texture_packed_float 1
#define GL_APPLE_texture_range 1
#define GL_APPLE_transform_hint 1
#define GL_APPLE_vertex_array_object 1
#define GL_APPLE_vertex_array_range 1
#define GL_APPLE_vertex_program_evaluators 1
#define GL_APPLE_ycbcr_422 1
#define GL_ARB_ES2_compatibility 1
#define GL_ARB_ES3_1_compatibility 1
#define GL_ARB_ES3_2_compatibility 1
#define GL_ARB_ES3_compatibility 1
#define GL_ARB_arrays_of_arrays 1
#define GL_ARB_base_instance 1
#define GL_ARB_bindless_texture 1
#define GL_ARB_blend_func_extended 1
#define GL_ARB_buffer_storage 1
#define GL_ARB_cl_event 1
#define GL_ARB_clear_buffer_object 1
#define GL_ARB_clear_texture 1
#define GL_ARB_clip_control 1
#define GL_ARB_color_buffer_float 1
#define GL_ARB_compatibility 1
#define GL_ARB_compressed_texture_pixel_storage 1
#define GL_ARB_compute_shader 1
#define GL_ARB_compute_variable_group_size 1
#define GL_ARB_conditional_render_inverted 1
#define GL_ARB_conservative_depth 1
#define GL_ARB_copy_buffer 1
#define GL_ARB_copy_image 1
#define GL_ARB_cull_distance 1
#define GL_ARB_debug_output 1
#define GL_ARB_depth_buffer_float 1
#define GL_ARB_depth_clamp 1
#define GL_ARB_depth_texture 1
#define GL_ARB_derivative_control 1
#define GL_ARB_direct_state_access 1
#define GL_ARB_draw_buffers 1
#define GL_ARB_draw_buffers_blend 1
#define GL_ARB_draw_elements_base_vertex 1
#define GL_ARB_draw_indirect 1
#define GL_ARB_draw_instanced 1
#define GL_ARB_enhanced_layouts 1
#define GL_ARB_explicit_attrib_location 1
#define GL_ARB_explicit_uniform_location 1
#define GL_ARB_fragment_coord_conventions 1
#define GL_ARB_fragment_layer_viewport 1
#define GL_ARB_fragment_program 1
#define GL_ARB_fragment_program_shadow 1
#define GL_ARB_fragment_shader 1
#define GL_ARB_fragment_shader_interlock 1
#define GL_ARB_framebuffer_no_attachments 1
#define GL_ARB_framebuffer_object 1
#define GL_ARB_framebuffer_sRGB 1
#define GL_ARB_geometry_shader4 1
#define GL_ARB_get_program_binary 1
#define GL_ARB_get_texture_sub_image 1
#define GL_ARB_gl_spirv 1
#define GL_ARB_gpu_shader5 1
#define GL_ARB_gpu_shader_fp64 1
#define GL_ARB_gpu_shader_int64 1
#define GL_ARB_half_float_pixel 1
#define GL_ARB_half_float_vertex 1
#define GL_ARB_imaging 1
#define GL_ARB_indirect_parameters 1
#define GL_ARB_instanced_arrays 1
#define GL_ARB_internalformat_query 1
#define GL_ARB_internalformat_query2 1
#define GL_ARB_invalidate_subdata 1
#define GL_ARB_map_buffer_alignment 1
#define GL_ARB_map_buffer_range 1
#define GL_ARB_matrix_palette 1
#define GL_ARB_multi_bind 1
#define GL_ARB_multi_draw_indirect 1
#define GL_ARB_multisample 1
#define GL_ARB_multitexture 1
#define GL_ARB_occlusion_query 1
#define GL_ARB_occlusion_query2 1
#define GL_ARB_parallel_shader_compile 1
#define GL_ARB_pipeline_statistics_query 1
#define GL_ARB_pixel_buffer_object 1
#define GL_ARB_point_parameters 1
#define GL_ARB_point_sprite 1
#define GL_ARB_polygon_offset_clamp 1
#define GL_ARB_post_depth_coverage 1
#define GL_ARB_program_interface_query 1
#define GL_ARB_provoking_vertex 1
#define GL_ARB_query_buffer_object 1
#define GL_ARB_robust_buffer_access_behavior 1
#define GL_ARB_robustness 1
#define GL_ARB_robustness_isolation 1
#define GL_ARB_sample_locations 1
#define GL_ARB_sample_shading 1
#define GL_ARB_sampler_objects 1
#define GL_ARB_seamless_cube_map 1
#define GL_ARB_seamless_cubemap_per_texture 1
#define GL_ARB_separate_shader_objects 1
#define GL_ARB_shader_atomic_counter_ops 1
#define GL_ARB_shader_atomic_counters 1
#define GL_ARB_shader_ballot 1
#define GL_ARB_shader_bit_encoding 1
#define GL_ARB_shader_clock 1
#define GL_ARB_shader_draw_parameters 1
#define GL_ARB_shader_group_vote 1
#define GL_ARB_shader_image_load_store 1
#define GL_ARB_shader_image_size 1
#define GL_ARB_shader_objects 1
#define GL_ARB_shader_precision 1
#define GL_ARB_shader_stencil_export 1
#define GL_ARB_shader_storage_buffer_object 1
#define GL_ARB_shader_subroutine 1
#define GL_ARB_shader_texture_image_samples 1
#define GL_ARB_shader_texture_lod 1
#define GL_ARB_shader_viewport_layer_array 1
#define GL_ARB_shading_language_100 1
#define GL_ARB_shading_language_420pack 1
#define GL_ARB_shading_language_include 1
#define GL_ARB_shading_language_packing 1
#define GL_ARB_shadow 1
#define GL_ARB_shadow_ambient 1
#define GL_ARB_sparse_buffer 1
#define GL_ARB_sparse_texture 1
#define GL_ARB_sparse_texture2 1
#define GL_ARB_sparse_texture_clamp 1
#define GL_ARB_spirv_extensions 1
#define GL_ARB_stencil_texturing 1
#define GL_ARB_sync 1
#define GL_ARB_tessellation_shader 1
#define GL_ARB_texture_barrier 1
#define GL_ARB_texture_border_clamp 1
#define GL_ARB_texture_buffer_object 1
#define GL_ARB_texture_buffer_object_rgb32 1
#define GL_ARB_texture_buffer_range 1
#define GL_ARB_texture_compression 1
#define GL_ARB_texture_compression_bptc 1
#define GL_ARB_texture_compression_rgtc 1
#define GL_ARB_texture_cube_map 1
#define GL_ARB_texture_cube_map_array 1
#define GL_ARB_texture_env_add 1
#define GL_ARB_texture_env_combine 1
#define GL_ARB_texture_env_crossbar 1
#define GL_ARB_texture_env_dot3 1
#define GL_ARB_texture_filter_anisotropic 1
#define GL_ARB_texture_filter_minmax 1
#define GL_ARB_texture_float 1
#define GL_ARB_texture_gather 1
#define GL_ARB_texture_mirror_clamp_to_edge 1
#define GL_ARB_texture_mirrored_repeat 1
#define GL_ARB_texture_multisample 1
#define GL_ARB_texture_non_power_of_two 1
#define GL_ARB_texture_query_levels 1
#define GL_ARB_texture_query_lod 1
#define GL_ARB_texture_rectangle 1
#define GL_ARB_texture_rg 1
#define GL_ARB_texture_rgb10_a2ui 1
#define GL_ARB_texture_stencil8 1
#define GL_ARB_texture_storage 1
#define GL_ARB_texture_storage_multisample 1
#define GL_ARB_texture_swizzle 1
#define GL_ARB_texture_view 1
#define GL_ARB_timer_query 1
#define GL_ARB_transform_feedback2 1
#define GL_ARB_transform_feedback3 1
#define GL_ARB_transform_feedback_instanced 1
#define GL_ARB_transform_feedback_overflow_query 1
#define GL_ARB_transpose_matrix 1
#define GL_ARB_uniform_buffer_object 1
#define GL_ARB_vertex_array_bgra 1
#define GL_ARB_vertex_array_object 1
#define GL_ARB_vertex_attrib_64bit 1
#define GL_ARB_vertex_attrib_binding 1
#define GL_ARB_vertex_blend 1
#define GL_ARB_vertex_buffer_object 1
#define GL_ARB_vertex_program 1
#define GL_ARB_vertex_shader 1
#define GL_ARB_vertex_type_10f_11f_11f_rev 1
#define GL_ARB_vertex_type_2_10_10_10_rev 1
#define GL_ARB_viewport_array 1
#define GL_ARB_window_pos 1
#define GL_ARM_cooperative_matrix_layouts 1
#define GL_ARM_mali_program_binary 1
#define GL_ARM_mali_shader_binary 1
#define GL_ARM_rgba8 1
#define GL_ARM_shader_core_builtins 1
#define GL_ARM_shader_core_properties 1
#define GL_ARM_shader_framebuffer_fetch 1
#define GL_ARM_shader_framebuffer_fetch_depth_stencil 1
#define GL_ARM_texture_unnormalized_coordinates 1
#define GL_ATI_draw_buffers 1
#define GL_ATI_element_array 1
#define GL_ATI_envmap_bumpmap 1
#define GL_ATI_fragment_shader 1
#define GL_ATI_map_object_buffer 1
#define GL_ATI_meminfo 1
#define GL_ATI_pixel_format_float 1
#define GL_ATI_pn_triangles 1
#define GL_ATI_separate_stencil 1
#define GL_ATI_text_fragment_shader 1
#define GL_ATI_texture_env_combine3 1
#define GL_ATI_texture_float 1
#define GL_ATI_texture_mirror_once 1
#define GL_ATI_vertex_array_object 1
#define GL_ATI_vertex_attrib_array_object 1
#define GL_ATI_vertex_streams 1
#define GL_CHROMIUM_bind_uniform_location 1
#define GL_CHROMIUM_copy_compressed_texture 1
#define GL_CHROMIUM_copy_texture 1
#define GL_CHROMIUM_framebuffer_mixed_samples 1
#define GL_CHROMIUM_lose_context 1
#define GL_DMP_program_binary 1
#define GL_DMP_shader_binary 1
#define GL_EXT_422_pixels 1
#define GL_EXT_EGL_image_array 1
#define GL_EXT_EGL_image_storage 1
#define GL_EXT_EGL_image_storage_compression 1
#define GL_EXT_EGL_sync 1
#define GL_EXT_YUV_target 1
#define GL_EXT_abgr 1
#define GL_EXT_base_instance 1
#define GL_EXT_bfloat16 1
#define GL_EXT_bgra 1
#define GL_EXT_bindable_uniform 1
#define GL_EXT_blend_color 1
#define GL_EXT_blend_equation_separate 1
#define GL_EXT_blend_func_extended 1
#define GL_EXT_blend_func_separate 1
#define GL_EXT_blend_logic_op 1
#define GL_EXT_blend_minmax 1
#define GL_EXT_blend_subtract 1
#define GL_EXT_buffer_reference 1
#define GL_EXT_buffer_reference2 1
#define GL_EXT_buffer_reference_uvec2 1
#define GL_EXT_buffer_storage 1
#define GL_EXT_clear_texture 1
#define GL_EXT_clip_control 1
#define GL_EXT_clip_cull_distance 1
#define GL_EXT_clip_volume_hint 1
#define GL_EXT_cmyka 1
#define GL_EXT_color_buffer_float 1
#define GL_EXT_color_buffer_half_float 1
#define GL_EXT_color_subtable 1
#define GL_EXT_compiled_vertex_array 1
#define GL_EXT_conservative_depth 1
#define GL_EXT_control_flow_attributes 1
#define GL_EXT_control_flow_attributes2 1
#define GL_EXT_convolution 1
#define GL_EXT_coordinate_frame 1
#define GL_EXT_copy_image 1
#define GL_EXT_copy_texture 1
#define GL_EXT_cull_vertex 1
#define GL_EXT_debug_label 1
#define GL_EXT_debug_marker 1
#define GL_EXT_debug_printf 1
#define GL_EXT_demote_to_helper_invocation 1
#define GL_EXT_depth_bounds_test 1
#define GL_EXT_depth_clamp 1
#define GL_EXT_device_group 1
#define GL_EXT_direct_state_access 1
#define GL_EXT_discard_framebuffer 1
#define GL_EXT_disjoint_timer_query 1
#define GL_EXT_draw_buffers 1
#define GL_EXT_draw_buffers2 1
#define GL_EXT_draw_buffers_indexed 1
#define GL_EXT_draw_elements_base_vertex 1
#define GL_EXT_draw_instanced 1
#define GL_EXT_draw_range_elements 1
#define GL_EXT_draw_transform_feedback 1
#define GL_EXT_expect_assume 1
#define GL_EXT_external_buffer 1
#define GL_EXT_float8_e5m2_e4m3 1
#define GL_EXT_float_blend 1
#define GL_EXT_fog_coord 1
#define GL_EXT_fragment_invocation_density 1
#define GL_EXT_fragment_shader_barycentric 1
#define GL_EXT_fragment_shading_rate 1
#define GL_EXT_framebuffer_blit 1
#define GL_EXT_framebuffer_blit_layers 1
#define GL_EXT_framebuffer_multisample 1
#define GL_EXT_framebuffer_multisample_blit_scaled 1
#define GL_EXT_framebuffer_object 1
#define GL_EXT_framebuffer_sRGB 1
#define GL_EXT_geometry_point_size 1
#define GL_EXT_geometry_shader 1
#define GL_EXT_geometry_shader4 1
#define GL_EXT_gpu_program_parameters 1
#define GL_EXT_gpu_shader4 1
#define GL_EXT_gpu_shader5 1
#define GL_EXT_histogram 1
#define GL_EXT_index_array_formats 1
#define GL_EXT_index_func 1
#define GL_EXT_index_material 1
#define GL_EXT_index_texture 1
#define GL_EXT_instanced_arrays 1
#define GL_EXT_integer_dot_product 1
#define GL_EXT_light_texture 1
#define GL_EXT_map_buffer_range 1
#define GL_EXT_maximal_reconvergence 1
#define GL_EXT_memory_object 1
#define GL_EXT_memory_object_fd 1
#define GL_EXT_memory_object_win32 1
#define GL_EXT_mesh_shader 1
#define GL_EXT_misc_attribute 1
#define GL_EXT_multi_draw_arrays 1
#define GL_EXT_multi_draw_indirect 1
#define GL_EXT_multisample 1
#define GL_EXT_multisampled_compatibility 1
#define GL_EXT_multisampled_render_to_texture 1
#define GL_EXT_multisampled_render_to_texture2 1
#define GL_EXT_multiview_draw_buffers 1
#define GL_EXT_multiview_tessellation_geometry_shader 1
#define GL_EXT_multiview_texture_multisample 1
#define GL_EXT_multiview_timer_query 1
#define GL_EXT_nontemporal_keyword 1
#define GL_EXT_nonuniform_qualifier 1
#define GL_EXT_null_initializer 1
#define GL_EXT_occlusion_query_boolean 1
#define GL_EXT_opacity_micromap 1
#define GL_EXT_packed_depth_stencil 1
#define GL_EXT_packed_float 1
#define GL_EXT_packed_pixels 1
#define GL_EXT_paletted_texture 1
#define GL_EXT_pixel_buffer_object 1
#define GL_EXT_pixel_transform 1
#define GL_EXT_pixel_transform_color_table 1
#define GL_EXT_point_parameters 1
#define GL_EXT_polygon_offset 1
#define GL_EXT_polygon_offset_clamp 1
#define GL_EXT_post_depth_coverage 1
#define GL_EXT_primitive_bounding_box 1
#define GL_EXT_protected_textures 1
#define GL_EXT_provoking_vertex 1
#define GL_EXT_pvrtc_sRGB 1
#define GL_EXT_raster_multisample 1
#define GL_EXT_ray_cull_mask 1
#define GL_EXT_ray_flags_primitive_culling 1
#define GL_EXT_ray_query 1
#define GL_EXT_ray_tracing 1
#define GL_EXT_ray_tracing_position_fetch 1
#define GL_EXT_read_format_bgra 1
#define GL_EXT_render_snorm 1
#define GL_EXT_rescale_normal 1
#define GL_EXT_robustness 1
#define GL_EXT_sRGB 1
#define GL_EXT_sRGB_write_control 1
#define GL_EXT_samplerless_texture_functions 1
#define GL_EXT_scalar_block_layout 1
#define GL_EXT_secondary_color 1
#define GL_EXT_semaphore 1
#define GL_EXT_semaphore_fd 1
#define GL_EXT_semaphore_win32 1
#define GL_EXT_separate_depth_stencil 1
#define GL_EXT_separate_shader_objects 1
#define GL_EXT_separate_specular_color 1
#define GL_EXT_shader_16bit_storage 1
#define GL_EXT_shader_8bit_storage 1
#define GL_EXT_shader_atomic_float 1
#define GL_EXT_shader_atomic_float2 1
#define GL_EXT_shader_atomic_int64 1
#define GL_EXT_shader_explicit_arithmetic_types 1
#define GL_EXT_shader_explicit_arithmetic_types_float16 1
#define GL_EXT_shader_explicit_arithmetic_types_float32 1
#define GL_EXT_shader_explicit_arithmetic_types_float64 1
#define GL_EXT_shader_explicit_arithmetic_types_int16 1
#define GL_EXT_shader_explicit_arithmetic_types_int32 1
#define GL_EXT_shader_explicit_arithmetic_types_int64 1
#define GL_EXT_shader_explicit_arithmetic_types_int8 1
#define GL_EXT_shader_framebuffer_fetch 1
#define GL_EXT_shader_framebuffer_fetch_non_coherent 1
#define GL_EXT_shader_group_vote 1
#define GL_EXT_shader_image_int64 1
#define GL_EXT_shader_image_load_formatted 1
#define GL_EXT_shader_image_load_store 1
#define GL_EXT_shader_implicit_conversions 1
#define GL_EXT_shader_integer_mix 1
#define GL_EXT_shader_io_blocks 1
#define GL_EXT_shader_non_constant_global_initializers 1
#define GL_EXT_shader_pixel_local_storage 1
#define GL_EXT_shader_pixel_local_storage2 1
#define GL_EXT_shader_quad_control 1
#define GL_EXT_shader_realtime_clock 1
#define GL_EXT_shader_samples_identical 1
#define GL_EXT_shader_subgroup_extended_types 1
#define GL_EXT_shader_subgroup_extended_types_float16 1
#define GL_EXT_shader_subgroup_extended_types_int16 1
#define GL_EXT_shader_subgroup_extended_types_int64 1
#define GL_EXT_shader_subgroup_extended_types_int8 1
#define GL_EXT_shader_texture_lod 1
#define GL_EXT_shader_tile_image 1
#define GL_EXT_shadow_funcs 1
#define GL_EXT_shadow_samplers 1
#define GL_EXT_shared_memory_block 1
#define GL_EXT_shared_texture_palette 1
#define GL_EXT_sparse_texture 1
#define GL_EXT_sparse_texture2 1
#define GL_EXT_spec_constant_composites 1
#define GL_EXT_spirv_intrinsics 1
#define GL_EXT_stencil_clear_tag 1
#define GL_EXT_stencil_two_side 1
#define GL_EXT_stencil_wrap 1
#define GL_EXT_subgroup_uniform_control_flow 1
#define GL_EXT_subgroupuniform_qualifier 1
#define GL_EXT_subtexture 1
#define GL_EXT_terminate_invocation 1
#define GL_EXT_tessellation_point_size 1
#define GL_EXT_tessellation_shader 1
#define GL_EXT_texture 1
#define GL_EXT_texture3D 1
#define GL_EXT_texture_array 1
#define GL_EXT_texture_border_clamp 1
#define GL_EXT_texture_buffer 1
#define GL_EXT_texture_buffer_object 1
#define GL_EXT_texture_compression_astc_decode_mode 1
#define GL_EXT_texture_compression_bptc 1
#define GL_EXT_texture_compression_dxt1 1
#define GL_EXT_texture_compression_latc 1
#define GL_EXT_texture_compression_rgtc 1
#define GL_EXT_texture_compression_s3tc 1
#define GL_EXT_texture_compression_s3tc_srgb 1
#define GL_EXT_texture_cube_map 1
#define GL_EXT_texture_cube_map_array 1
#define GL_EXT_texture_env_add 1
#define GL_EXT_texture_env_combine 1
#define GL_EXT_texture_env_dot3 1
#define GL_EXT_texture_filter_anisotropic 1
#define GL_EXT_texture_filter_minmax 1
#define GL_EXT_texture_format_BGRA8888 1
#define GL_EXT_texture_format_sRGB_override 1
#define GL_EXT_texture_integer 1
#define GL_EXT_texture_lod_bias 1
#define GL_EXT_texture_mirror_clamp 1
#define GL_EXT_texture_mirror_clamp_to_edge 1
#define GL_EXT_texture_norm16 1
#define GL_EXT_texture_object 1
#define GL_EXT_texture_offset_non_const 1
#define GL_EXT_texture_perturb_normal 1
#define GL_EXT_texture_query_lod 1
#define GL_EXT_texture_rg 1
#define GL_EXT_texture_sRGB 1
#define GL_EXT_texture_sRGB_R8 1
#define GL_EXT_texture_sRGB_RG8 1
#define GL_EXT_texture_sRGB_decode 1
#define GL_EXT_texture_shadow_lod 1
#define GL_EXT_texture_shared_exponent 1
#define GL_EXT_texture_snorm 1
#define GL_EXT_texture_storage 1
#define GL_EXT_texture_storage_compression 1
#define GL_EXT_texture_swizzle 1
#define GL_EXT_texture_type_2_10_10_10_REV 1
#define GL_EXT_texture_view 1
#define GL_EXT_timer_query 1
#define GL_EXT_transform_feedback 1
#define GL_EXT_unpack_subimage 1
#define GL_EXT_vertex_array 1
#define GL_EXT_vertex_array_bgra 1
#define GL_EXT_vertex_attrib_64bit 1
#define GL_EXT_vertex_shader 1
#define GL_EXT_vertex_weighting 1
#define GL_EXT_vulkan_glsl_relaxed 1
#define GL_EXT_win32_keyed_mutex 1
#define GL_EXT_window_rectangles 1
#define GL_EXT_x11_sync_object 1
#define GL_FJ_shader_binary_GCCSO 1
#define GL_GREMEDY_frame_terminator 1
#define GL_GREMEDY_string_marker 1
#define GL_HP_convolution_border_modes 1
#define GL_HP_image_transform 1
#define GL_HP_occlusion_test 1
#define GL_HP_texture_lighting 1
#define GL_HUAWEI_cluster_culling_shader 1
#define GL_HUAWEI_program_binary 1
#define GL_HUAWEI_shader_binary 1
#define GL_HUAWEI_subpass_shading 1
#define GL_IBM_cull_vertex 1
#define GL_IBM_multimode_draw_arrays 1
#define GL_IBM_rasterpos_clip 1
#define GL_IBM_static_data 1
#define GL_IBM_texture_mirrored_repeat 1
#define GL_IBM_vertex_array_lists 1
#define GL_IMG_bindless_texture 1
#define GL_IMG_framebuffer_downsample 1
#define GL_IMG_multisampled_render_to_texture 1
#define GL_IMG_program_binary 1
#define GL_IMG_read_format 1
#define GL_IMG_shader_binary 1
#define GL_IMG_texture_compression_pvrtc 1
#define GL_IMG_texture_compression_pvrtc2 1
#define GL_IMG_texture_filter_cubic 1
#define GL_INGR_blend_func_separate 1
#define GL_INGR_color_clamp 1
#define GL_INGR_interlace_read 1
#define GL_INTEL_blackhole_render 1
#define GL_INTEL_conservative_rasterization 1
#define GL_INTEL_fragment_shader_ordering 1
#define GL_INTEL_framebuffer_CMAA 1
#define GL_INTEL_map_texture 1
#define GL_INTEL_parallel_arrays 1
#define GL_INTEL_performance_query 1
#define GL_KHR_blend_equation_advanced 1
#define GL_KHR_blend_equation_advanced_coherent 1
#define GL_KHR_context_flush_control 1
#define GL_KHR_cooperative_matrix 1
#define GL_KHR_debug 1
#define GL_KHR_memory_scope_semantics 1
#define GL_KHR_no_error 1
#define GL_KHR_parallel_shader_compile 1
#define GL_KHR_robust_buffer_access_behavior 1
#define GL_KHR_robustness 1
#define GL_KHR_shader_subgroup 1
#define GL_KHR_shader_subgroup_arithmetic 1
#define GL_KHR_shader_subgroup_ballot 1
#define GL_KHR_shader_subgroup_basic 1
#define GL_KHR_shader_subgroup_clustered 1
#define GL_KHR_shader_subgroup_quad 1
#define GL_KHR_shader_subgroup_rotate 1
#define GL_KHR_shader_subgroup_shuffle 1
#define GL_KHR_shader_subgroup_shuffle_relative 1
#define GL_KHR_shader_subgroup_vote 1
#define GL_KHR_texture_compression_astc_hdr 1
#define GL_KHR_texture_compression_astc_ldr 1
#define GL_KHR_texture_compression_astc_sliced_3d 1
#define GL_KHR_vulkan_glsl 1
#define GL_MESAX_texture_stack 1
#define GL_MESA_bgra 1
#define GL_MESA_framebuffer_flip_x 1
#define GL_MESA_framebuffer_flip_y 1
#define GL_MESA_framebuffer_swap_xy 1
#define GL_MESA_pack_invert 1
#define GL_MESA_program_binary_formats 1
#define GL_MESA_resize_buffers 1
#define GL_MESA_sampler_objects 1
#define GL_MESA_shader_integer_functions 1
#define GL_MESA_texture_const_bandwidth 1
#define GL_MESA_tile_raster_order 1
#define GL_MESA_window_pos 1
#define GL_MESA_ycbcr_texture 1
#define GL_NVX_blend_equation_advanced_multi_draw_buffers 1
#define GL_NVX_conditional_render 1
#define GL_NVX_gpu_memory_info 1
#define GL_NVX_gpu_multicast2 1
#define GL_NVX_linked_gpu_multicast 1
#define GL_NVX_multiview_per_view_attributes 1
#define GL_NVX_progress_fence 1
#define GL_NV_alpha_to_coverage_dither_control 1
#define GL_NV_bindless_multi_draw_indirect 1
#define GL_NV_bindless_multi_draw_indirect_count 1
#define GL_NV_bindless_texture 1
#define GL_NV_blend_equation_advanced 1
#define GL_NV_blend_equation_advanced_coherent 1
#define GL_NV_blend_minmax_factor 1
#define GL_NV_blend_square 1
#define GL_NV_clip_space_w_scaling 1
#define GL_NV_cluster_acceleration_structure 1
#define GL_NV_command_list 1
#define GL_NV_compute_program5 1
#define GL_NV_compute_shader_derivatives 1
#define GL_NV_conditional_render 1
#define GL_NV_conservative_raster 1
#define GL_NV_conservative_raster_dilate 1
#define GL_NV_conservative_raster_pre_snap 1
#define GL_NV_conservative_raster_pre_snap_triangles 1
#define GL_NV_conservative_raster_underestimation 1
#define GL_NV_cooperative_matrix 1
#define GL_NV_cooperative_matrix2 1
#define GL_NV_cooperative_vector 1
#define GL_NV_copy_buffer 1
#define GL_NV_copy_depth_to_color 1
#define GL_NV_copy_image 1
#define GL_NV_coverage_sample 1
#define GL_NV_deep_texture3D 1
#define GL_NV_depth_buffer_float 1
#define GL_NV_depth_clamp 1
#define GL_NV_depth_nonlinear 1
#define GL_NV_displacement_micromap 1
#define GL_NV_draw_buffers 1
#define GL_NV_draw_instanced 1
#define GL_NV_draw_texture 1
#define GL_NV_draw_vulkan_image 1
#define GL_NV_evaluators 1
#define GL_NV_explicit_attrib_location 1
#define GL_NV_explicit_multisample 1
#define GL_NV_fbo_color_attachments 1
#define GL_NV_fence 1
#define GL_NV_fill_rectangle 1
#define GL_NV_float_buffer 1
#define GL_NV_fog_distance 1
#define GL_NV_fragment_coverage_to_color 1
#define GL_NV_fragment_program 1
#define GL_NV_fragment_program2 1
#define GL_NV_fragment_program4 1
#define GL_NV_fragment_program_option 1
#define GL_NV_fragment_shader_barycentric 1
#define GL_NV_fragment_shader_interlock 1
#define GL_NV_framebuffer_blit 1
#define GL_NV_framebuffer_mixed_samples 1
#define GL_NV_framebuffer_multisample 1
#define GL_NV_framebuffer_multisample_coverage 1
#define GL_NV_generate_mipmap_sRGB 1
#define GL_NV_geometry_program4 1
#define GL_NV_geometry_shader4 1
#define GL_NV_geometry_shader_passthrough 1
#define GL_NV_gpu_multicast 1
#define GL_NV_gpu_program4 1
#define GL_NV_gpu_program5 1
#define GL_NV_gpu_program5_mem_extended 1
#define GL_NV_gpu_shader5 1
#define GL_NV_half_float 1
#define GL_NV_image_formats 1
#define GL_NV_instanced_arrays 1
#define GL_NV_integer_cooperative_matrix 1
#define GL_NV_internalformat_sample_query 1
#define GL_NV_light_max_exponent 1
#define GL_NV_linear_swept_spheres 1
#define GL_NV_memory_attachment 1
#define GL_NV_memory_object_sparse 1
#define GL_NV_mesh_shader 1
#define GL_NV_multisample_coverage 1
#define GL_NV_multisample_filter_hint 1
#define GL_NV_non_square_matrices 1
#define GL_NV_occlusion_query 1
#define GL_NV_pack_subimage 1
#define GL_NV_packed_depth_stencil 1
#define GL_NV_parameter_buffer_object 1
#define GL_NV_parameter_buffer_object2 1
#define GL_NV_path_rendering 1
#define GL_NV_path_rendering_shared_edge 1
#define GL_NV_pixel_buffer_object 1
#define GL_NV_pixel_data_range 1
#define GL_NV_point_sprite 1
#define GL_NV_polygon_mode 1
#define GL_NV_present_video 1
#define GL_NV_primitive_restart 1
#define GL_NV_primitive_shading_rate 1
#define GL_NV_query_resource 1
#define GL_NV_query_resource_tag 1
#define GL_NV_ray_tracing 1
#define GL_NV_ray_tracing_motion_blur 1
#define GL_NV_read_buffer 1
#define GL_NV_read_buffer_front 1
#define GL_NV_read_depth 1
#define GL_NV_read_depth_stencil 1
#define GL_NV_read_stencil 1
#define GL_NV_register_combiners 1
#define GL_NV_register_combiners2 1
#define GL_NV_representative_fragment_test 1
#define GL_NV_robustness_video_memory_purge 1
#define GL_NV_sRGB_formats 1
#define GL_NV_sample_locations 1
#define GL_NV_sample_mask_override_coverage 1
#define GL_NV_scissor_exclusive 1
#define GL_NV_shader_atomic_counters 1
#define GL_NV_shader_atomic_float 1
#define GL_NV_shader_atomic_float64 1
#define GL_NV_shader_atomic_fp16_vector 1
#define GL_NV_shader_atomic_int64 1
#define GL_NV_shader_buffer_load 1
#define GL_NV_shader_buffer_store 1
#define GL_NV_shader_invocation_reorder 1
#define GL_NV_shader_noperspective_interpolation 1
#define GL_NV_shader_sm_builtins 1
#define GL_NV_shader_storage_buffer_object 1
#define GL_NV_shader_subgroup_partitioned 1
#define GL_NV_shader_texture_footprint 1
#define GL_NV_shader_thread_group 1
#define GL_NV_shader_thread_shuffle 1
#define GL_NV_shading_rate_image 1
#define GL_NV_shadow_samplers_array 1
#define GL_NV_shadow_samplers_cube 1
#define GL_NV_stereo_view_rendering 1
#define GL_NV_tessellation_program5 1
#define GL_NV_texgen_emboss 1
#define GL_NV_texgen_reflection 1
#define GL_NV_texture_barrier 1
#define GL_NV_texture_border_clamp 1
#define GL_NV_texture_compression_s3tc_update 1
#define GL_NV_texture_compression_vtc 1
#define GL_NV_texture_env_combine4 1
#define GL_NV_texture_expand_normal 1
#define GL_NV_texture_multisample 1
#define GL_NV_texture_npot_2D_mipmap 1
#define GL_NV_texture_rectangle 1
#define GL_NV_texture_rectangle_compressed 1
#define GL_NV_texture_shader 1
#define GL_NV_texture_shader2 1
#define GL_NV_texture_shader3 1
#define GL_NV_timeline_semaphore 1
#define GL_NV_transform_feedback 1
#define GL_NV_transform_feedback2 1
#define GL_NV_uniform_buffer_std430_layout 1
#define GL_NV_uniform_buffer_unified_memory 1
#define GL_NV_vdpau_interop 1
#define GL_NV_vdpau_interop2 1
#define GL_NV_vertex_array_range 1
#define GL_NV_vertex_array_range2 1
#define GL_NV_vertex_attrib_integer_64bit 1
#define GL_NV_vertex_buffer_unified_memory 1
#define GL_NV_vertex_program 1
#define GL_NV_vertex_program1_1 1
#define GL_NV_vertex_program2 1
#define GL_NV_vertex_program2_option 1
#define GL_NV_vertex_program3 1
#define GL_NV_vertex_program4 1
#define GL_NV_video_capture 1
#define GL_NV_viewport_array 1
#define GL_NV_viewport_array2 1
#define GL_NV_viewport_swizzle 1
#define GL_OES_EGL_image 1
#define GL_OES_EGL_image_external 1
#define GL_OES_EGL_image_external_essl3 1
#define GL_OES_byte_coordinates 1
#define GL_OES_compressed_ETC1_RGB8_sub_texture 1
#define GL_OES_compressed_ETC1_RGB8_texture 1
#define GL_OES_compressed_paletted_texture 1
#define GL_OES_copy_image 1
#define GL_OES_depth24 1
#define GL_OES_depth32 1
#define GL_OES_depth_texture 1
#define GL_OES_draw_buffers_indexed 1
#define GL_OES_draw_elements_base_vertex 1
#define GL_OES_element_index_uint 1
#define GL_OES_fbo_render_mipmap 1
#define GL_OES_fixed_point 1
#define GL_OES_fragment_precision_high 1
#define GL_OES_geometry_point_size 1
#define GL_OES_geometry_shader 1
#define GL_OES_get_program_binary 1
#define GL_OES_gpu_shader5 1
#define GL_OES_mapbuffer 1
#define GL_OES_packed_depth_stencil 1
#define GL_OES_primitive_bounding_box 1
#define GL_OES_query_matrix 1
#define GL_OES_read_format 1
#define GL_OES_required_internalformat 1
#define GL_OES_rgb8_rgba8 1
#define GL_OES_sample_shading 1
#define GL_OES_sample_variables 1
#define GL_OES_shader_image_atomic 1
#define GL_OES_shader_io_blocks 1
#define GL_OES_shader_multisample_interpolation 1
#define GL_OES_single_precision 1
#define GL_OES_standard_derivatives 1
#define GL_OES_stencil1 1
#define GL_OES_stencil4 1
#define GL_OES_surfaceless_context 1
#define GL_OES_tessellation_point_size 1
#define GL_OES_tessellation_shader 1
#define GL_OES_texture_3D 1
#define GL_OES_texture_border_clamp 1
#define GL_OES_texture_buffer 1
#define GL_OES_texture_compression_astc 1
#define GL_OES_texture_cube_map_array 1
#define GL_OES_texture_float 1
#define GL_OES_texture_float_linear 1
#define GL_OES_texture_half_float 1
#define GL_OES_texture_half_float_linear 1
#define GL_OES_texture_npot 1
#define GL_OES_texture_stencil8 1
#define GL_OES_texture_storage_multisample_2d_array 1
#define GL_OES_texture_view 1
#define GL_OES_vertex_array_object 1
#define GL_OES_vertex_half_float 1
#define GL_OES_vertex_type_10_10_10_2 1
#define GL_OES_viewport_array 1
#define GL_OML_interlace 1
#define GL_OML_resample 1
#define GL_OML_subsample 1
#define GL_OVR_multiview 1
#define GL_OVR_multiview2 1
#define GL_OVR_multiview_multisampled_render_to_texture 1
#define GL_PGI_misc_hints 1
#define GL_PGI_vertex_hints 1
#define GL_QCOM_YUV_texture_gather 1
#define GL_QCOM_alpha_test 1
#define GL_QCOM_binning_control 1
#define GL_QCOM_cooperative_matrix_conversion 1
#define GL_QCOM_driver_control 1
#define GL_QCOM_extended_get 1
#define GL_QCOM_extended_get2 1
#define GL_QCOM_frame_extrapolation 1
#define GL_QCOM_framebuffer_foveated 1
#define GL_QCOM_image_processing 1
#define GL_QCOM_image_processing2 1
#define GL_QCOM_motion_estimation 1
#define GL_QCOM_perfmon_global_mode 1
#define GL_QCOM_render_sRGB_R8_RG8 1
#define GL_QCOM_render_shared_exponent 1
#define GL_QCOM_shader_framebuffer_fetch_noncoherent 1
#define GL_QCOM_shader_framebuffer_fetch_rate 1
#define GL_QCOM_shading_rate 1
#define GL_QCOM_texture_foveated 1
#define GL_QCOM_texture_foveated2 1
#define GL_QCOM_texture_foveated_subsampled_layout 1
#define GL_QCOM_texture_lod_bias 1
#define GL_QCOM_tile_shading 1
#define GL_QCOM_tiled_rendering 1
#define GL_QCOM_writeonly_rendering 1
#define GL_QCOM_ycbcr_degamma 1
#define GL_REND_screen_coordinates 1
#define GL_S3_s3tc 1
#define GL_SGIS_detail_texture 1
#define GL_SGIS_fog_function 1
#define GL_SGIS_generate_mipmap 1
#define GL_SGIS_multisample 1
#define GL_SGIS_pixel_texture 1
#define GL_SGIS_point_line_texgen 1
#define GL_SGIS_point_parameters 1
#define GL_SGIS_sharpen_texture 1
#define GL_SGIS_texture4D 1
#define GL_SGIS_texture_border_clamp 1
#define GL_SGIS_texture_color_mask 1
#define GL_SGIS_texture_edge_clamp 1
#define GL_SGIS_texture_filter4 1
#define GL_SGIS_texture_lod 1
#define GL_SGIS_texture_select 1
#define GL_SGIX_async 1
#define GL_SGIX_async_histogram 1
#define GL_SGIX_async_pixel 1
#define GL_SGIX_blend_alpha_minmax 1
#define GL_SGIX_calligraphic_fragment 1
#define GL_SGIX_clipmap 1
#define GL_SGIX_convolution_accuracy 1
#define GL_SGIX_depth_pass_instrument 1
#define GL_SGIX_depth_texture 1
#define GL_SGIX_flush_raster 1
#define GL_SGIX_fog_offset 1
#define GL_SGIX_fragment_lighting 1
#define GL_SGIX_framezoom 1
#define GL_SGIX_igloo_interface 1
#define GL_SGIX_instruments 1
#define GL_SGIX_interlace 1
#define GL_SGIX_ir_instrument1 1
#define GL_SGIX_list_priority 1
#define GL_SGIX_pixel_texture 1
#define GL_SGIX_pixel_tiles 1
#define GL_SGIX_polynomial_ffd 1
#define GL_SGIX_reference_plane 1
#define GL_SGIX_resample 1
#define GL_SGIX_scalebias_hint 1
#define GL_SGIX_shadow 1
#define GL_SGIX_shadow_ambient 1
#define GL_SGIX_sprite 1
#define GL_SGIX_subsample 1
#define GL_SGIX_tag_sample_buffer 1
#define GL_SGIX_texture_add_env 1
#define GL_SGIX_texture_coordinate_clamp 1
#define GL_SGIX_texture_lod_bias 1
#define GL_SGIX_texture_multi_buffer 1
#define GL_SGIX_texture_scale_bias 1
#define GL_SGIX_vertex_preclip 1
#define GL_SGIX_ycrcb 1
#define GL_SGIX_ycrcb_subsample 1
#define GL_SGIX_ycrcba 1
#define GL_SGI_color_matrix 1
#define GL_SGI_color_table 1
#define GL_SGI_texture_color_table 1
#define GL_SUNX_constant_data 1
#define GL_SUN_convolution_border_modes 1
#define GL_SUN_global_alpha 1
#define GL_SUN_mesh_array 1
#define GL_SUN_slice_accum 1
#define GL_SUN_triangle_list 1
#define GL_SUN_vertex 1
#define GL_VIV_shader_binary 1
#define GL_WIN_phong_shading 1
#define GL_WIN_specular_fog 1


typedef void (GLAD_API_PTR *PFNGLCULLFACEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLFRONTFACEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLHINTPROC)(GLenum target, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLLINEWIDTHPROC)(GLfloat width);
typedef void (GLAD_API_PTR *PFNGLPOINTSIZEPROC)(GLfloat size);
typedef void (GLAD_API_PTR *PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERPROC)(GLenum buf);
typedef void (GLAD_API_PTR *PFNGLCLEARPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARSTENCILPROC)(GLint s);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHPROC)(GLdouble depth);
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKPROC)(GLuint mask);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (GLAD_API_PTR *PFNGLDEPTHMASKPROC)(GLboolean flag);
typedef void (GLAD_API_PTR *PFNGLDISABLEPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLENABLEPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLFINISHPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFLUSHPROC)(void);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
typedef void (GLAD_API_PTR *PFNGLLOGICOPPROC)(GLenum opcode);
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (GLAD_API_PTR *PFNGLDEPTHFUNCPROC)(GLenum func);
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLREADBUFFERPROC)(GLenum src);
typedef void (GLAD_API_PTR *PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble * data);
typedef GLenum (GLAD_API_PTR *PFNGLGETERRORPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETFLOATVPROC)(GLenum pname, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERVPROC)(GLenum pname, GLint * data);
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGPROC)(GLenum name);
typedef void (GLAD_API_PTR *PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint * params);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVPROC)(GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLGENTEXTURESPROC)(GLsizei n, GLuint * textures);
typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREPROC)(GLuint texture);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLACTIVETEXTUREPROC)(GLenum texture);
typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void * img);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLGENQUERIESPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint * ids);
typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLENDQUERYPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLGENBUFFERSPROC)(GLsizei n, GLuint * buffers);
typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
typedef void (GLAD_API_PTR *PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFERPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERPROC)(GLuint shader);
typedef GLuint (GLAD_API_PTR *PFNGLCREATEPROGRAMPROC)(void);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROC)(GLenum type);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLDELETESHADERPROC)(GLuint shader);
typedef void (GLAD_API_PTR *PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
typedef GLint (GLAD_API_PTR *PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef GLint (GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPROC)(GLuint program);
typedef GLboolean (GLAD_API_PTR *PFNGLISSHADERPROC)(GLuint shader);
typedef void (GLAD_API_PTR *PFNGLLINKPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint * data);
typedef void (GLAD_API_PTR *PFNGLENABLEIPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEIPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
typedef void (GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);
typedef void (GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLENDCONDITIONALRENDERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef GLboolean (GLAD_API_PTR *PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
typedef void (GLAD_API_PTR *PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
typedef void (GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint * framebuffers);
typedef void (GLAD_API_PTR *PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint * framebuffers);
typedef GLenum (GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGENERATEMIPMAPPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXARRAYPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint * arrays);
typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXARRAYPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
typedef GLuint (GLAD_API_PTR *PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar * uniformBlockName);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (GLAD_API_PTR *PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (GLAD_API_PTR *PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
typedef GLsync (GLAD_API_PTR *PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
typedef GLboolean (GLAD_API_PTR *PFNGLISSYNCPROC)(GLsync sync);
typedef void (GLAD_API_PTR *PFNGLDELETESYNCPROC)(GLsync sync);
typedef GLenum (GLAD_API_PTR *PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat * val);
typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint * samplers);
typedef void (GLAD_API_PTR *PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint * samplers);
typedef GLboolean (GLAD_API_PTR *PFNGLISSAMPLERPROC)(GLuint sampler);
typedef void (GLAD_API_PTR *PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2DPROC)(GLint location, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4DVPROC)(GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMDVPROC)(GLuint program, GLint location, GLdouble * params);
typedef GLint (GLAD_API_PTR *PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program, GLenum shadertype, const GLchar * name);
typedef GLuint (GLAD_API_PTR *PFNGLGETSUBROUTINEINDEXPROC)(GLuint program, GLenum shadertype, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
typedef void (GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype, GLsizei count, const GLuint * indices);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype, GLint location, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program, GLenum shadertype, GLenum pname, GLint * values);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERFVPROC)(GLenum pname, const GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint * ids);
typedef GLboolean (GLAD_API_PTR *PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode, GLuint id, GLuint stream);
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYINDEXEDPROC)(GLenum target, GLuint index, GLuint id);
typedef void (GLAD_API_PTR *PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLGETQUERYINDEXEDIVPROC)(GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLRELEASESHADERCOMPILERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (GLAD_API_PTR *PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHFPROC)(GLfloat d);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (GLAD_API_PTR *PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (GLAD_API_PTR *PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint * pipelines);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DPROC)(GLuint program, GLint location, GLdouble v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4DVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTARRAYVPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORARRAYVPROC)(GLuint first, GLsizei count, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEARRAYVPROC)(GLuint first, GLsizei count, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index, GLdouble n, GLdouble f);
typedef void (GLAD_API_PTR *PFNGLGETFLOATI_VPROC)(GLenum target, GLuint index, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEI_VPROC)(GLenum target, GLuint index, GLdouble * data);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE1DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode, GLuint id, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERDATAPROC)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATI64VPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (GLAD_API_PTR *PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef GLuint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
typedef GLint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXTUREVIEWPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);
typedef void (GLAD_API_PTR *PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void * userParam);
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (GLAD_API_PTR *PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (GLAD_API_PTR *PFNGLPOPDEBUGGROUPPROC)(void);
typedef void (GLAD_API_PTR *PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLOBJECTPTRLABELPROC)(const void * ptr, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPTRLABELPROC)(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLBUFFERSTORAGEPROC)(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLCLEARTEXIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERSBASEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERSRANGEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
typedef void (GLAD_API_PTR *PFNGLBINDTEXTURESPROC)(GLuint first, GLsizei count, const GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLBINDSAMPLERSPROC)(GLuint first, GLsizei count, const GLuint * samplers);
typedef void (GLAD_API_PTR *PFNGLBINDIMAGETEXTURESPROC)(GLuint first, GLsizei count, const GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXBUFFERSPROC)(GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (GLAD_API_PTR *PFNGLCLIPCONTROLPROC)(GLenum origin, GLenum depth);
typedef void (GLAD_API_PTR *PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb, GLuint index, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb, GLenum pname, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
typedef void (GLAD_API_PTR *PFNGLCREATEBUFFERSPROC)(GLsizei n, GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void * (GLAD_API_PTR *PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer, GLenum access);
typedef void * (GLAD_API_PTR *PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (GLAD_API_PTR *PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n, GLuint * framebuffers);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer, GLenum buf);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer, GLenum src);
typedef void (GLAD_API_PTR *PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
typedef void (GLAD_API_PTR *PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (GLAD_API_PTR *PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef GLenum (GLAD_API_PTR *PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(GLuint framebuffer, GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(GLuint framebuffer, GLenum pname, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLCREATERENDERBUFFERSPROC)(GLsizei n, GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLCREATETEXTURESPROC)(GLenum target, GLsizei n, GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLTEXTUREBUFFERPROC)(GLuint texture, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE1DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE2DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE3DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERFPROC)(GLuint texture, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, const GLfloat * param);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIPROC)(GLuint texture, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture);
typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREUNITPROC)(GLuint unit, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLsizei bufSize, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n, GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj, GLenum pname, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
typedef void (GLAD_API_PTR *PFNGLCREATESAMPLERSPROC)(GLsizei n, GLuint * samplers);
typedef void (GLAD_API_PTR *PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n, GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLCREATEQUERIESPROC)(GLenum target, GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);
typedef void (GLAD_API_PTR *PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
typedef GLenum (GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETNCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint lod, GLsizei bufSize, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETNTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMDVPROC)(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLREADNPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (GLAD_API_PTR *PFNGLTEXTUREBARRIERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSPECIALIZESHADERPROC)(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)(GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC)(GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETCLAMPPROC)(GLfloat factor, GLfloat units, GLfloat clamp);
typedef void (GLAD_API_PTR *PFNGLTBUFFERMASK3DFXPROC)(GLuint mask);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEENABLEAMDPROC)(GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTAMDPROC)(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKAMDPROC)(GLDEBUGPROCAMD callback, void * userParam);
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGAMDPROC)(GLuint count, GLsizei bufSize, GLenum * categories, GLenum * severities, GLuint * ids, GLsizei * lengths, GLchar * message);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCINDEXEDAMDPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONINDEXEDAMDPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC)(GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC)(GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC)(GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC)(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC)(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC)(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1I64NVPROC)(GLint location, GLint64EXT x);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UI64NVPROC)(GLint location, GLuint64EXT x);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMI64VNVPROC)(GLuint program, GLint location, GLint64EXT * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUI64VNVPROC)(GLuint program, GLint location, GLuint64EXT * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64NVPROC)(GLuint program, GLint location, GLint64EXT x);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPARAMETERIAMDPROC)(GLuint index, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC)(GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLGENNAMESAMDPROC)(GLenum identifier, GLuint num, GLuint * names);
typedef void (GLAD_API_PTR *PFNGLDELETENAMESAMDPROC)(GLenum identifier, GLuint num, const GLuint * names);
typedef GLboolean (GLAD_API_PTR *PFNGLISNAMEAMDPROC)(GLenum identifier, GLuint name);
typedef void (GLAD_API_PTR *PFNGLQUERYOBJECTPARAMETERUIAMDPROC)(GLenum target, GLuint id, GLenum pname, GLuint param);
typedef void (GLAD_API_PTR *PFNGLGETPERFMONITORGROUPSAMDPROC)(GLint * numGroups, GLsizei groupsSize, GLuint * groups);
typedef void (GLAD_API_PTR *PFNGLGETPERFMONITORCOUNTERSAMDPROC)(GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
typedef void (GLAD_API_PTR *PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)(GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
typedef void (GLAD_API_PTR *PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)(GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
typedef void (GLAD_API_PTR *PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)(GLuint group, GLuint counter, GLenum pname, void * data);
typedef void (GLAD_API_PTR *PFNGLGENPERFMONITORSAMDPROC)(GLsizei n, GLuint * monitors);
typedef void (GLAD_API_PTR *PFNGLDELETEPERFMONITORSAMDPROC)(GLsizei n, GLuint * monitors);
typedef void (GLAD_API_PTR *PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
typedef void (GLAD_API_PTR *PFNGLBEGINPERFMONITORAMDPROC)(GLuint monitor);
typedef void (GLAD_API_PTR *PFNGLENDPERFMONITORAMDPROC)(GLuint monitor);
typedef void (GLAD_API_PTR *PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
typedef void (GLAD_API_PTR *PFNGLSETMULTISAMPLEFVAMDPROC)(GLenum pname, GLuint index, const GLfloat * val);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGESPARSEAMDPROC)(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGESPARSEAMDPROC)(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPVALUEAMDPROC)(GLenum face, GLuint value);
typedef void (GLAD_API_PTR *PFNGLTESSELLATIONFACTORAMDPROC)(GLfloat factor);
typedef void (GLAD_API_PTR *PFNGLTESSELLATIONMODEAMDPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLELEMENTPOINTERAPPLEPROC)(GLenum type, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTARRAYAPPLEPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLGENFENCESAPPLEPROC)(GLsizei n, GLuint * fences);
typedef void (GLAD_API_PTR *PFNGLDELETEFENCESAPPLEPROC)(GLsizei n, const GLuint * fences);
typedef void (GLAD_API_PTR *PFNGLSETFENCEAPPLEPROC)(GLuint fence);
typedef GLboolean (GLAD_API_PTR *PFNGLISFENCEAPPLEPROC)(GLuint fence);
typedef GLboolean (GLAD_API_PTR *PFNGLTESTFENCEAPPLEPROC)(GLuint fence);
typedef void (GLAD_API_PTR *PFNGLFINISHFENCEAPPLEPROC)(GLuint fence);
typedef GLboolean (GLAD_API_PTR *PFNGLTESTOBJECTAPPLEPROC)(GLenum object, GLuint name);
typedef void (GLAD_API_PTR *PFNGLFINISHOBJECTAPPLEPROC)(GLenum object, GLint name);
typedef void (GLAD_API_PTR *PFNGLBUFFERPARAMETERIAPPLEPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)(GLenum target, GLintptr offset, GLsizeiptr size);
typedef GLenum (GLAD_API_PTR *PFNGLOBJECTPURGEABLEAPPLEPROC)(GLenum objectType, GLuint name, GLenum option);
typedef GLenum (GLAD_API_PTR *PFNGLOBJECTUNPURGEABLEAPPLEPROC)(GLenum objectType, GLuint name, GLenum option);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPARAMETERIVAPPLEPROC)(GLenum objectType, GLuint name, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXTURERANGEAPPLEPROC)(GLenum target, GLsizei length, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC)(GLenum target, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXARRAYAPPLEPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSAPPLEPROC)(GLsizei n, const GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLGENVERTEXARRAYSAPPLEPROC)(GLsizei n, GLuint * arrays);
typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXARRAYAPPLEPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYRANGEAPPLEPROC)(GLsizei length, void * pointer);
typedef void (GLAD_API_PTR *PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC)(GLsizei length, void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYPARAMETERIAPPLEPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBAPPLEPROC)(GLuint index, GLenum pname);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBAPPLEPROC)(GLuint index, GLenum pname);
typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXATTRIBENABLEDAPPLEPROC)(GLuint index, GLenum pname);
typedef void (GLAD_API_PTR *PFNGLMAPVERTEXATTRIB1DAPPLEPROC)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
typedef void (GLAD_API_PTR *PFNGLMAPVERTEXATTRIB1FAPPLEPROC)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLMAPVERTEXATTRIB2DAPPLEPROC)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
typedef void (GLAD_API_PTR *PFNGLMAPVERTEXATTRIB2FAPPLEPROC)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXARBPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef GLuint64 (GLAD_API_PTR *PFNGLGETTEXTUREHANDLEARBPROC)(GLuint texture);
typedef GLuint64 (GLAD_API_PTR *PFNGLGETTEXTURESAMPLERHANDLEARBPROC)(GLuint texture, GLuint sampler);
typedef void (GLAD_API_PTR *PFNGLMAKETEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle);
typedef void (GLAD_API_PTR *PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC)(GLuint64 handle);
typedef GLuint64 (GLAD_API_PTR *PFNGLGETIMAGEHANDLEARBPROC)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (GLAD_API_PTR *PFNGLMAKEIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle, GLenum access);
typedef void (GLAD_API_PTR *PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC)(GLuint64 handle);
typedef void (GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64ARBPROC)(GLint location, GLuint64 value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC)(GLuint program, GLint location, GLuint64 value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle);
typedef GLboolean (GLAD_API_PTR *PFNGLISIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1UI64ARBPROC)(GLuint index, GLuint64EXT x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1UI64VARBPROC)(GLuint index, const GLuint64EXT * v);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBLUI64VARBPROC)(GLuint index, GLenum pname, GLuint64EXT * params);
typedef GLsync (GLAD_API_PTR *PFNGLCREATESYNCFROMCLEVENTARBPROC)(struct _cl_context * context, struct _cl_event * event, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLCLAMPCOLORARBPROC)(GLenum target, GLenum clamp);
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLARBPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTARBPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKARBPROC)(GLDEBUGPROCARB callback, const void * userParam);
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGARBPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSARBPROC)(GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIARBPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIARBPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIARBPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIARBPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDARBPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDARBPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLPROGRAMSTRINGARBPROC)(GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMARBPROC)(GLenum target, GLuint program);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMSARBPROC)(GLsizei n, const GLuint * programs);
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMSARBPROC)(GLsizei n, GLuint * programs);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVARBPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMSTRINGARBPROC)(GLenum target, GLenum pname, void * string);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMARBPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERIARBPROC)(GLuint program, GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (GLAD_API_PTR *PFNGLSPECIALIZESHADERARBPROC)(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1I64ARBPROC)(GLint location, GLint64 x);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2I64ARBPROC)(GLint location, GLint64 x, GLint64 y);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3I64ARBPROC)(GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4I64ARBPROC)(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UI64ARBPROC)(GLint location, GLuint64 x);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UI64ARBPROC)(GLint location, GLuint64 x, GLuint64 y);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UI64ARBPROC)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UI64ARBPROC)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMI64VARBPROC)(GLuint program, GLint location, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUI64VARBPROC)(GLuint program, GLint location, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMI64VARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUI64VARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64ARBPROC)(GLuint program, GLint location, GLint64 x);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64ARBPROC)(GLuint program, GLint location, GLint64 x, GLint64 y);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64ARBPROC)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64ARBPROC)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64ARBPROC)(GLuint program, GLint location, GLuint64 x);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64ARBPROC)(GLuint program, GLint location, GLuint64 x, GLuint64 y);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64ARBPROC)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64ARBPROC)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)(GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)(GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORARBPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLCURRENTPALETTEMATRIXARBPROC)(GLint index);
typedef void (GLAD_API_PTR *PFNGLMATRIXINDEXUBVARBPROC)(GLint size, const GLubyte * indices);
typedef void (GLAD_API_PTR *PFNGLMATRIXINDEXUSVARBPROC)(GLint size, const GLushort * indices);
typedef void (GLAD_API_PTR *PFNGLMATRIXINDEXUIVARBPROC)(GLint size, const GLuint * indices);
typedef void (GLAD_API_PTR *PFNGLMATRIXINDEXPOINTERARBPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEARBPROC)(GLfloat value, GLboolean invert);
typedef void (GLAD_API_PTR *PFNGLACTIVETEXTUREARBPROC)(GLenum texture);
typedef void (GLAD_API_PTR *PFNGLCLIENTACTIVETEXTUREARBPROC)(GLenum texture);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DARBPROC)(GLenum target, GLdouble s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DVARBPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FARBPROC)(GLenum target, GLfloat s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FVARBPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IARBPROC)(GLenum target, GLint s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IVARBPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SARBPROC)(GLenum target, GLshort s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SVARBPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DARBPROC)(GLenum target, GLdouble s, GLdouble t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DVARBPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FARBPROC)(GLenum target, GLfloat s, GLfloat t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FVARBPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IARBPROC)(GLenum target, GLint s, GLint t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IVARBPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SARBPROC)(GLenum target, GLshort s, GLshort t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SVARBPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DARBPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DVARBPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FARBPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FVARBPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IARBPROC)(GLenum target, GLint s, GLint t, GLint r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IVARBPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SARBPROC)(GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SVARBPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DARBPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DVARBPROC)(GLenum target, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FARBPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FVARBPROC)(GLenum target, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IARBPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IVARBPROC)(GLenum target, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SARBPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SVARBPROC)(GLenum target, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLGENQUERIESARBPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESARBPROC)(GLsizei n, const GLuint * ids);
typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYARBPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYARBPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLENDQUERYARBPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVARBPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVARBPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVARBPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLMAXSHADERCOMPILERTHREADSARBPROC)(GLuint count);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFARBPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFVARBPROC)(GLenum pname, const GLfloat * params);
typedef GLenum (GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSARBPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETNTEXIMAGEARBPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img);
typedef void (GLAD_API_PTR *PFNGLREADNPIXELSARBPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (GLAD_API_PTR *PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)(GLenum target, GLint lod, GLsizei bufSize, void * img);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUIVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMDVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLEVALUATEDEPTHVALUESARBPROC)(void);
typedef void (GLAD_API_PTR *PFNGLMINSAMPLESHADINGARBPROC)(GLfloat value);
typedef void (GLAD_API_PTR *PFNGLDELETEOBJECTARBPROC)(GLhandleARB obj);
typedef GLhandleARB (GLAD_API_PTR *PFNGLGETHANDLEARBPROC)(GLenum pname);
typedef void (GLAD_API_PTR *PFNGLDETACHOBJECTARBPROC)(GLhandleARB containerObj, GLhandleARB attachedObj);
typedef GLhandleARB (GLAD_API_PTR *PFNGLCREATESHADEROBJECTARBPROC)(GLenum shaderType);
typedef void (GLAD_API_PTR *PFNGLSHADERSOURCEARBPROC)(GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERARBPROC)(GLhandleARB shaderObj);
typedef GLhandleARB (GLAD_API_PTR *PFNGLCREATEPROGRAMOBJECTARBPROC)(void);
typedef void (GLAD_API_PTR *PFNGLATTACHOBJECTARBPROC)(GLhandleARB containerObj, GLhandleARB obj);
typedef void (GLAD_API_PTR *PFNGLLINKPROGRAMARBPROC)(GLhandleARB programObj);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMOBJECTARBPROC)(GLhandleARB programObj);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMARBPROC)(GLhandleARB programObj);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FARBPROC)(GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FARBPROC)(GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FARBPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FARBPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IARBPROC)(GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IARBPROC)(GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IARBPROC)(GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IARBPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IVARBPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IVARBPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IVARBPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IVARBPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPARAMETERFVARBPROC)(GLhandleARB obj, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPARAMETERIVARBPROC)(GLhandleARB obj, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETINFOLOGARBPROC)(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETATTACHEDOBJECTSARBPROC)(GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
typedef GLint (GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONARBPROC)(GLhandleARB programObj, const GLcharARB * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMARBPROC)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMFVARBPROC)(GLhandleARB programObj, GLint location, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMIVARBPROC)(GLhandleARB programObj, GLint location, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSHADERSOURCEARBPROC)(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
typedef void (GLAD_API_PTR *PFNGLNAMEDSTRINGARBPROC)(GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
typedef void (GLAD_API_PTR *PFNGLDELETENAMEDSTRINGARBPROC)(GLint namelen, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERINCLUDEARBPROC)(GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
typedef GLboolean (GLAD_API_PTR *PFNGLISNAMEDSTRINGARBPROC)(GLint namelen, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDSTRINGARBPROC)(GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDSTRINGIVARBPROC)(GLint namelen, const GLchar * name, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLBUFFERPAGECOMMITMENTARBPROC)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLTEXPAGECOMMITMENTARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERARBPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)(GLenum target, GLint level, void * img);
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXFARBPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXDARBPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXFARBPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXDARBPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLWEIGHTBVARBPROC)(GLint size, const GLbyte * weights);
typedef void (GLAD_API_PTR *PFNGLWEIGHTSVARBPROC)(GLint size, const GLshort * weights);
typedef void (GLAD_API_PTR *PFNGLWEIGHTIVARBPROC)(GLint size, const GLint * weights);
typedef void (GLAD_API_PTR *PFNGLWEIGHTFVARBPROC)(GLint size, const GLfloat * weights);
typedef void (GLAD_API_PTR *PFNGLWEIGHTDVARBPROC)(GLint size, const GLdouble * weights);
typedef void (GLAD_API_PTR *PFNGLWEIGHTUBVARBPROC)(GLint size, const GLubyte * weights);
typedef void (GLAD_API_PTR *PFNGLWEIGHTUSVARBPROC)(GLint size, const GLushort * weights);
typedef void (GLAD_API_PTR *PFNGLWEIGHTUIVARBPROC)(GLint size, const GLuint * weights);
typedef void (GLAD_API_PTR *PFNGLWEIGHTPOINTERARBPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXBLENDARBPROC)(GLint count);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERARBPROC)(GLenum target, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLDELETEBUFFERSARBPROC)(GLsizei n, const GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLGENBUFFERSARBPROC)(GLsizei n, GLuint * buffers);
typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERARBPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLBUFFERDATAARBPROC)(GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
typedef void (GLAD_API_PTR *PFNGLBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERARBPROC)(GLenum target, GLenum access);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFERARBPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVARBPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVARBPROC)(GLenum target, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DARBPROC)(GLuint index, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DVARBPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FARBPROC)(GLuint index, GLfloat x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FVARBPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SARBPROC)(GLuint index, GLshort x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SVARBPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DARBPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DVARBPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FARBPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FVARBPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SARBPROC)(GLuint index, GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SVARBPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DVARBPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FVARBPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SVARBPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVARBPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVARBPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVARBPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBARBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVARBPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVARBPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVARBPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4BVARBPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DVARBPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FVARBPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4IVARBPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SVARBPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVARBPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVARBPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4USVARBPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERARBPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVARBPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVARBPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVARBPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVARBPROC)(GLuint index, GLenum pname, void ** pointer);
typedef void (GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONARBPROC)(GLhandleARB programObj, GLuint index, const GLcharARB * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATTRIBARBPROC)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
typedef GLint (GLAD_API_PTR *PFNGLGETATTRIBLOCATIONARBPROC)(GLhandleARB programObj, const GLcharARB * name);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEARRAYDVNVPROC)(GLuint first, GLsizei count, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDDNVPROC)(GLuint index, GLdouble n, GLdouble f);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DARBPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DVARBPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FARBPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FVARBPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IARBPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IVARBPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SARBPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SVARBPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DARBPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DVARBPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FARBPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FVARBPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IARBPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IVARBPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SARBPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SVARBPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSATIPROC)(GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLELEMENTPOINTERATIPROC)(GLenum type, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTARRAYATIPROC)(GLenum mode, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTARRAYATIPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLTEXBUMPPARAMETERIVATIPROC)(GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLTEXBUMPPARAMETERFVATIPROC)(GLenum pname, const GLfloat * param);
typedef void (GLAD_API_PTR *PFNGLGETTEXBUMPPARAMETERIVATIPROC)(GLenum pname, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETTEXBUMPPARAMETERFVATIPROC)(GLenum pname, GLfloat * param);
typedef GLuint (GLAD_API_PTR *PFNGLGENFRAGMENTSHADERSATIPROC)(GLuint range);
typedef void (GLAD_API_PTR *PFNGLBINDFRAGMENTSHADERATIPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLDELETEFRAGMENTSHADERATIPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINFRAGMENTSHADERATIPROC)(void);
typedef void (GLAD_API_PTR *PFNGLENDFRAGMENTSHADERATIPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPASSTEXCOORDATIPROC)(GLuint dst, GLuint coord, GLenum swizzle);
typedef void (GLAD_API_PTR *PFNGLSAMPLEMAPATIPROC)(GLuint dst, GLuint interp, GLenum swizzle);
typedef void (GLAD_API_PTR *PFNGLCOLORFRAGMENTOP1ATIPROC)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (GLAD_API_PTR *PFNGLCOLORFRAGMENTOP2ATIPROC)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (GLAD_API_PTR *PFNGLCOLORFRAGMENTOP3ATIPROC)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (GLAD_API_PTR *PFNGLALPHAFRAGMENTOP1ATIPROC)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
typedef void (GLAD_API_PTR *PFNGLALPHAFRAGMENTOP2ATIPROC)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
typedef void (GLAD_API_PTR *PFNGLALPHAFRAGMENTOP3ATIPROC)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
typedef void (GLAD_API_PTR *PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)(GLuint dst, const GLfloat * value);
typedef void * (GLAD_API_PTR *PFNGLMAPOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLUNMAPOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLPNTRIANGLESIATIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPNTRIANGLESFATIPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPSEPARATEATIPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEATIPROC)(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
typedef GLuint (GLAD_API_PTR *PFNGLNEWOBJECTBUFFERATIPROC)(GLsizei size, const void * pointer, GLenum usage);
typedef GLboolean (GLAD_API_PTR *PFNGLISOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLUPDATEOBJECTBUFFERATIPROC)(GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTBUFFERFVATIPROC)(GLuint buffer, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTBUFFERIVATIPROC)(GLuint buffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLFREEOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLARRAYOBJECTATIPROC)(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (GLAD_API_PTR *PFNGLGETARRAYOBJECTFVATIPROC)(GLenum array, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETARRAYOBJECTIVATIPROC)(GLenum array, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLVARIANTARRAYOBJECTATIPROC)(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (GLAD_API_PTR *PFNGLGETVARIANTARRAYOBJECTFVATIPROC)(GLuint id, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVARIANTARRAYOBJECTIVATIPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBARRAYOBJECTATIPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM1SATIPROC)(GLenum stream, GLshort x);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM1SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM1IATIPROC)(GLenum stream, GLint x);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM1IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM1FATIPROC)(GLenum stream, GLfloat x);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM1FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM1DATIPROC)(GLenum stream, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM1DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM2SATIPROC)(GLenum stream, GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM2SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM2IATIPROC)(GLenum stream, GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM2IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM2FATIPROC)(GLenum stream, GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM2FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM2DATIPROC)(GLenum stream, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM2DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM3SATIPROC)(GLenum stream, GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM3SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM3IATIPROC)(GLenum stream, GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM3IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM3FATIPROC)(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM3FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM3DATIPROC)(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM3DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM4SATIPROC)(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM4SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM4IATIPROC)(GLenum stream, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM4IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM4FATIPROC)(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM4FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM4DATIPROC)(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEXSTREAM4DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3BATIPROC)(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3BVATIPROC)(GLenum stream, const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3SATIPROC)(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3SVATIPROC)(GLenum stream, const GLshort * coords);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3IATIPROC)(GLenum stream, GLint nx, GLint ny, GLint nz);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3IVATIPROC)(GLenum stream, const GLint * coords);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3FATIPROC)(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3FVATIPROC)(GLenum stream, const GLfloat * coords);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3DATIPROC)(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (GLAD_API_PTR *PFNGLNORMALSTREAM3DVATIPROC)(GLenum stream, const GLdouble * coords);
typedef void (GLAD_API_PTR *PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC)(GLenum stream);
typedef void (GLAD_API_PTR *PFNGLVERTEXBLENDENVIATIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLVERTEXBLENDENVFATIPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC)(GLenum target, GLeglImageOES image, const GLint * attrib_list);
typedef void (GLAD_API_PTR *PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC)(GLuint texture, GLeglImageOES image, const GLint * attrib_list);
typedef void (GLAD_API_PTR *PFNGLUNIFORMBUFFEREXTPROC)(GLuint program, GLint location, GLuint buffer);
typedef GLint (GLAD_API_PTR *PFNGLGETUNIFORMBUFFERSIZEEXTPROC)(GLuint program, GLint location);
typedef GLintptr (GLAD_API_PTR *PFNGLGETUNIFORMOFFSETEXTPROC)(GLuint program, GLint location);
typedef void (GLAD_API_PTR *PFNGLBLENDCOLOREXTPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEEXTPROC)(GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONEXTPROC)(GLuint program, GLuint color, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEEXTPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLCOLORSUBTABLEEXTPROC)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOPYCOLORSUBTABLEEXTPROC)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLLOCKARRAYSEXTPROC)(GLint first, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLUNLOCKARRAYSEXTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONFILTER1DEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONFILTER2DEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERFEXTPROC)(GLenum target, GLenum pname, GLfloat params);
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERFVEXTPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERIEXTPROC)(GLenum target, GLenum pname, GLint params);
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERIVEXTPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLGETCONVOLUTIONFILTEREXTPROC)(GLenum target, GLenum format, GLenum type, void * image);
typedef void (GLAD_API_PTR *PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSEPARABLEFILTEREXTPROC)(GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
typedef void (GLAD_API_PTR *PFNGLSEPARABLEFILTER2DEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
typedef void (GLAD_API_PTR *PFNGLTANGENT3BEXTPROC)(GLbyte tx, GLbyte ty, GLbyte tz);
typedef void (GLAD_API_PTR *PFNGLTANGENT3BVEXTPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLTANGENT3DEXTPROC)(GLdouble tx, GLdouble ty, GLdouble tz);
typedef void (GLAD_API_PTR *PFNGLTANGENT3DVEXTPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTANGENT3FEXTPROC)(GLfloat tx, GLfloat ty, GLfloat tz);
typedef void (GLAD_API_PTR *PFNGLTANGENT3FVEXTPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTANGENT3IEXTPROC)(GLint tx, GLint ty, GLint tz);
typedef void (GLAD_API_PTR *PFNGLTANGENT3IVEXTPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTANGENT3SEXTPROC)(GLshort tx, GLshort ty, GLshort tz);
typedef void (GLAD_API_PTR *PFNGLTANGENT3SVEXTPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3BEXTPROC)(GLbyte bx, GLbyte by, GLbyte bz);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3BVEXTPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3DEXTPROC)(GLdouble bx, GLdouble by, GLdouble bz);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3DVEXTPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3FEXTPROC)(GLfloat bx, GLfloat by, GLfloat bz);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3FVEXTPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3IEXTPROC)(GLint bx, GLint by, GLint bz);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3IVEXTPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3SEXTPROC)(GLshort bx, GLshort by, GLshort bz);
typedef void (GLAD_API_PTR *PFNGLBINORMAL3SVEXTPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTANGENTPOINTEREXTPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLBINORMALPOINTEREXTPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCULLPARAMETERDVEXTPROC)(GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLCULLPARAMETERFVEXTPROC)(GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLLABELOBJECTEXTPROC)(GLenum type, GLuint object, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTLABELEXTPROC)(GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLINSERTEVENTMARKEREXTPROC)(GLsizei length, const GLchar * marker);
typedef void (GLAD_API_PTR *PFNGLPUSHGROUPMARKEREXTPROC)(GLsizei length, const GLchar * marker);
typedef void (GLAD_API_PTR *PFNGLPOPGROUPMARKEREXTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLDEPTHBOUNDSEXTPROC)(GLclampd zmin, GLclampd zmax);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULTFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULTDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADIDENTITYEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLMATRIXROTATEFEXTPROC)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLMATRIXROTATEDEXTPROC)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLMATRIXSCALEFEXTPROC)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLMATRIXSCALEDEXTPROC)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLMATRIXTRANSLATEFEXTPROC)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLMATRIXTRANSLATEDEXTPROC)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLMATRIXFRUSTUMEXTPROC)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLMATRIXORTHOEXTPROC)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLMATRIXPOPEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLMATRIXPUSHEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERFEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREIMAGEEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLBINDMULTITEXTUREEXTPROC)(GLenum texunit, GLenum target, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDPOINTEREXTPROC)(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLMULTITEXENVFEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXENVFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXENVIEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXENVIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENDEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENDVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENFEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENFVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENIEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENIVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXENVFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXENVIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXGENDVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXGENFVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXGENIVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERIEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERFEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXIMAGEEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array, GLuint index);
typedef void (GLAD_API_PTR *PFNGLGETFLOATINDEXEDVEXTPROC)(GLenum target, GLuint index, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEINDEXEDVEXTPROC)(GLenum target, GLuint index, GLdouble * data);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERINDEXEDVEXTPROC)(GLenum target, GLuint index, void ** data);
typedef void (GLAD_API_PTR *PFNGLENABLEINDEXEDEXTPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEINDEXEDEXTPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDINDEXEDEXTPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERINDEXEDVEXTPROC)(GLenum target, GLuint index, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANINDEXEDVEXTPROC)(GLenum target, GLuint index, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)(GLuint texture, GLenum target, GLint lod, void * img);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)(GLenum texunit, GLenum target, GLint lod, void * img);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADTRANSPOSEFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADTRANSPOSEDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULTTRANSPOSEFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULTTRANSPOSEDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERDATAEXTPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void * (GLAD_API_PTR *PFNGLMAPNAMEDBUFFEREXTPROC)(GLuint buffer, GLenum access);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPNAMEDBUFFEREXTPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)(GLuint buffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)(GLuint buffer, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FEXTPROC)(GLuint program, GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IEXTPROC)(GLuint program, GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLTEXTUREBUFFEREXTPROC)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLMULTITEXBUFFEREXTPROC)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIEXTPROC)(GLuint program, GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLENABLECLIENTSTATEIEXTPROC)(GLenum array, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLECLIENTSTATEIEXTPROC)(GLenum array, GLuint index);
typedef void (GLAD_API_PTR *PFNGLGETFLOATI_VEXTPROC)(GLenum pname, GLuint index, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEI_VEXTPROC)(GLenum pname, GLuint index, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERI_VEXTPROC)(GLenum pname, GLuint index, void ** params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMSTRINGEXTPROC)(GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)(GLuint program, GLenum target, GLuint index, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)(GLuint program, GLenum target, GLuint index, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMIVEXTPROC)(GLuint program, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)(GLuint program, GLenum target, GLenum pname, void * string);
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)(GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef GLenum (GLAD_API_PTR *PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)(GLuint framebuffer, GLenum target);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGENERATETEXTUREMIPMAPEXTPROC)(GLuint texture, GLenum target);
typedef void (GLAD_API_PTR *PFNGLGENERATEMULTITEXMIPMAPEXTPROC)(GLenum texunit, GLenum target);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)(GLuint framebuffer, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)(GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERREADBUFFEREXTPROC)(GLuint framebuffer, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (GLAD_API_PTR *PFNGLTEXTURERENDERBUFFEREXTPROC)(GLuint texture, GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLMULTITEXRENDERBUFFEREXTPROC)(GLenum texunit, GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYCOLOROFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYINDEXOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYNORMALOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXARRAYEXTPROC)(GLuint vaobj, GLenum array);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXARRAYEXTPROC)(GLuint vaobj, GLenum array);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj, GLuint index);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYINTEGERVEXTPROC)(GLuint vaobj, GLenum pname, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYPOINTERVEXTPROC)(GLuint vaobj, GLenum pname, void ** param);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC)(GLuint vaobj, GLuint index, GLenum pname, void ** param);
typedef void * (GLAD_API_PTR *PFNGLMAPNAMEDBUFFERRANGEEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEEXTPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERDATAEXTPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)(GLuint framebuffer, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DEXTPROC)(GLuint program, GLint location, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLTEXTUREBUFFERRANGEEXTPROC)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE1DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE2DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE3DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPAGECOMMITMENTEXTPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC)(GLuint vaobj, GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VEXTPROC)(GLuint id, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VEXTPROC)(GLuint id, GLenum pname, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKINDEXEDEXTPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDEXTPROC)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSEXTPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLBUFFERSTORAGEEXTERNALEXTPROC)(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDFEXTPROC)(GLfloat coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDFVEXTPROC)(const GLfloat * coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDDEXTPROC)(GLdouble coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDDVEXTPROC)(const GLdouble * coord);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDPOINTEREXTPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFEREXTPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERLAYERSEXTPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERLAYEREXTPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint srcLayer, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLint dstLayer, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef GLboolean (GLAD_API_PTR *PFNGLISRENDERBUFFEREXTPROC)(GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLBINDRENDERBUFFEREXTPROC)(GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLDELETERENDERBUFFERSEXTPROC)(GLsizei n, const GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLGENRENDERBUFFERSEXTPROC)(GLsizei n, GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef GLboolean (GLAD_API_PTR *PFNGLISFRAMEBUFFEREXTPROC)(GLuint framebuffer);
typedef void (GLAD_API_PTR *PFNGLBINDFRAMEBUFFEREXTPROC)(GLenum target, GLuint framebuffer);
typedef void (GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSEXTPROC)(GLsizei n, const GLuint * framebuffers);
typedef void (GLAD_API_PTR *PFNGLGENFRAMEBUFFERSEXTPROC)(GLsizei n, GLuint * framebuffers);
typedef GLenum (GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGENERATEMIPMAPEXTPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREEXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERIEXTPROC)(GLuint program, GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUIVEXTPROC)(GLuint program, GLint location, GLuint * params);
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONEXTPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIEXTPROC)(GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIEXTPROC)(GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIEXTPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIEXTPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIVEXTPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIVEXTPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIVEXTPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIVEXTPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IEXTPROC)(GLuint index, GLint x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IEXTPROC)(GLuint index, GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IEXTPROC)(GLuint index, GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IEXTPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIEXTPROC)(GLuint index, GLuint x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIEXTPROC)(GLuint index, GLuint x, GLuint y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIEXTPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIEXTPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IVEXTPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IVEXTPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IVEXTPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVEXTPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIVEXTPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIVEXTPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIVEXTPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVEXTPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4BVEXTPROC)(GLuint index, const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4SVEXTPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UBVEXTPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4USVEXTPROC)(GLuint index, const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTEREXTPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVEXTPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVEXTPROC)(GLuint index, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETHISTOGRAMEXTPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (GLAD_API_PTR *PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMINMAXEXTPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
typedef void (GLAD_API_PTR *PFNGLGETMINMAXPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMINMAXPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLHISTOGRAMEXTPROC)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
typedef void (GLAD_API_PTR *PFNGLMINMAXEXTPROC)(GLenum target, GLenum internalformat, GLboolean sink);
typedef void (GLAD_API_PTR *PFNGLRESETHISTOGRAMEXTPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLRESETMINMAXEXTPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLINDEXFUNCEXTPROC)(GLenum func, GLclampf ref);
typedef void (GLAD_API_PTR *PFNGLINDEXMATERIALEXTPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLAPPLYTEXTUREEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLTEXTURELIGHTEXTPROC)(GLenum pname);
typedef void (GLAD_API_PTR *PFNGLTEXTUREMATERIALEXTPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLGETUNSIGNEDBYTEVEXTPROC)(GLenum pname, GLubyte * data);
typedef void (GLAD_API_PTR *PFNGLGETUNSIGNEDBYTEI_VEXTPROC)(GLenum target, GLuint index, GLubyte * data);
typedef void (GLAD_API_PTR *PFNGLDELETEMEMORYOBJECTSEXTPROC)(GLsizei n, const GLuint * memoryObjects);
typedef GLboolean (GLAD_API_PTR *PFNGLISMEMORYOBJECTEXTPROC)(GLuint memoryObject);
typedef void (GLAD_API_PTR *PFNGLCREATEMEMORYOBJECTSEXTPROC)(GLsizei n, GLuint * memoryObjects);
typedef void (GLAD_API_PTR *PFNGLMEMORYOBJECTPARAMETERIVEXTPROC)(GLuint memoryObject, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC)(GLuint memoryObject, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEMEM2DEXTPROC)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEMEM3DEXTPROC)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLBUFFERSTORAGEMEMEXTPROC)(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM2DEXTPROC)(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC)(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM3DEXTPROC)(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC)(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC)(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEMEM1DEXTPROC)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGEMEM1DEXTPROC)(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLIMPORTMEMORYFDEXTPROC)(GLuint memory, GLuint64 size, GLenum handleType, GLint fd);
typedef void (GLAD_API_PTR *PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC)(GLuint memory, GLuint64 size, GLenum handleType, void * handle);
typedef void (GLAD_API_PTR *PFNGLIMPORTMEMORYWIN32NAMEEXTPROC)(GLuint memory, GLuint64 size, GLenum handleType, const void * name);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSEXTPROC)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSEXTPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKEXTPROC)(GLclampf value, GLboolean invert);
typedef void (GLAD_API_PTR *PFNGLSAMPLEPATTERNEXTPROC)(GLenum pattern);
typedef void (GLAD_API_PTR *PFNGLCOLORTABLEEXTPROC)(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (GLAD_API_PTR *PFNGLGETCOLORTABLEEXTPROC)(GLenum target, GLenum format, GLenum type, void * data);
typedef void (GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFEXTPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFVEXTPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETEXTPROC)(GLfloat factor, GLfloat bias);
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETCLAMPEXTPROC)(GLfloat factor, GLfloat units, GLfloat clamp);
typedef void (GLAD_API_PTR *PFNGLPROVOKINGVERTEXEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLRASTERSAMPLESEXTPROC)(GLuint samples, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLGENSEMAPHORESEXTPROC)(GLsizei n, GLuint * semaphores);
typedef void (GLAD_API_PTR *PFNGLDELETESEMAPHORESEXTPROC)(GLsizei n, const GLuint * semaphores);
typedef GLboolean (GLAD_API_PTR *PFNGLISSEMAPHOREEXTPROC)(GLuint semaphore);
typedef void (GLAD_API_PTR *PFNGLSEMAPHOREPARAMETERUI64VEXTPROC)(GLuint semaphore, GLenum pname, const GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC)(GLuint semaphore, GLenum pname, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLWAITSEMAPHOREEXTPROC)(GLuint semaphore, GLuint numBufferBarriers, const GLuint * buffers, GLuint numTextureBarriers, const GLuint * textures, const GLenum * srcLayouts);
typedef void (GLAD_API_PTR *PFNGLSIGNALSEMAPHOREEXTPROC)(GLuint semaphore, GLuint numBufferBarriers, const GLuint * buffers, GLuint numTextureBarriers, const GLuint * textures, const GLenum * dstLayouts);
typedef void (GLAD_API_PTR *PFNGLIMPORTSEMAPHOREFDEXTPROC)(GLuint semaphore, GLenum handleType, GLint fd);
typedef void (GLAD_API_PTR *PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC)(GLuint semaphore, GLenum handleType, void * handle);
typedef void (GLAD_API_PTR *PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC)(GLuint semaphore, GLenum handleType, const void * name);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3BEXTPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3BVEXTPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3DEXTPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3DVEXTPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3FEXTPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3FVEXTPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3IEXTPROC)(GLint red, GLint green, GLint blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3IVEXTPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3SEXTPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3SVEXTPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBEXTPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UBVEXTPROC)(const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIEXTPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3UIVEXTPROC)(const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3USEXTPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3USVEXTPROC)(const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLUSESHADERPROGRAMEXTPROC)(GLenum type, GLuint program);
typedef void (GLAD_API_PTR *PFNGLACTIVEPROGRAMEXTPROC)(GLuint program);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROGRAMEXTPROC)(GLenum type, const GLchar * string);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLBINDIMAGETEXTUREEXTPROC)(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIEREXTPROC)(GLbitfield barriers);
typedef void (GLAD_API_PTR *PFNGLSTENCILCLEARTAGEXTPROC)(GLsizei stencilTagBits, GLuint stencilClearTag);
typedef void (GLAD_API_PTR *PFNGLACTIVESTENCILFACEEXTPROC)(GLenum face);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE1DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE2DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFEREXTPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORIIEXTPROC)(GLint red, GLint green, GLint blue, GLint alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORIUIEXTPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef GLboolean (GLAD_API_PTR *PFNGLARETEXTURESRESIDENTEXTPROC)(GLsizei n, const GLuint * textures, GLboolean * residences);
typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREEXTPROC)(GLenum target, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLDELETETEXTURESEXTPROC)(GLsizei n, const GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLGENTEXTURESEXTPROC)(GLsizei n, GLuint * textures);
typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREEXTPROC)(GLuint texture);
typedef void (GLAD_API_PTR *PFNGLPRIORITIZETEXTURESEXTPROC)(GLsizei n, const GLuint * textures, const GLclampf * priorities);
typedef void (GLAD_API_PTR *PFNGLTEXTURENORMALEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE1DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLCREATESEMAPHORESNVPROC)(GLsizei n, GLuint * semaphores);
typedef void (GLAD_API_PTR *PFNGLSEMAPHOREPARAMETERIVNVPROC)(GLuint semaphore, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSEMAPHOREPARAMETERIVNVPROC)(GLuint semaphore, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)(GLenum primitiveMode);
typedef void (GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKEXTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERRANGEEXTPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFEROFFSETEXTPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERBASEEXTPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLARRAYELEMENTEXTPROC)(GLint i);
typedef void (GLAD_API_PTR *PFNGLCOLORPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSEXTPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPOINTEREXTPROC)(GLsizei stride, GLsizei count, const GLboolean * pointer);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVEXTPROC)(GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLINDEXPOINTEREXTPROC)(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLNORMALPOINTEREXTPROC)(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1DEXTPROC)(GLuint index, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2DEXTPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3DEXTPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4DEXTPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1DVEXTPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2DVEXTPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3DVEXTPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4DVEXTPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBLPOINTEREXTPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBLDVEXTPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLBEGINVERTEXSHADEREXTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLENDVERTEXSHADEREXTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXSHADEREXTPROC)(GLuint id);
typedef GLuint (GLAD_API_PTR *PFNGLGENVERTEXSHADERSEXTPROC)(GLuint range);
typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXSHADEREXTPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLSHADEROP1EXTPROC)(GLenum op, GLuint res, GLuint arg1);
typedef void (GLAD_API_PTR *PFNGLSHADEROP2EXTPROC)(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
typedef void (GLAD_API_PTR *PFNGLSHADEROP3EXTPROC)(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
typedef void (GLAD_API_PTR *PFNGLSWIZZLEEXTPROC)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (GLAD_API_PTR *PFNGLWRITEMASKEXTPROC)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
typedef void (GLAD_API_PTR *PFNGLINSERTCOMPONENTEXTPROC)(GLuint res, GLuint src, GLuint num);
typedef void (GLAD_API_PTR *PFNGLEXTRACTCOMPONENTEXTPROC)(GLuint res, GLuint src, GLuint num);
typedef GLuint (GLAD_API_PTR *PFNGLGENSYMBOLSEXTPROC)(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
typedef void (GLAD_API_PTR *PFNGLSETINVARIANTEXTPROC)(GLuint id, GLenum type, const void * addr);
typedef void (GLAD_API_PTR *PFNGLSETLOCALCONSTANTEXTPROC)(GLuint id, GLenum type, const void * addr);
typedef void (GLAD_API_PTR *PFNGLVARIANTBVEXTPROC)(GLuint id, const GLbyte * addr);
typedef void (GLAD_API_PTR *PFNGLVARIANTSVEXTPROC)(GLuint id, const GLshort * addr);
typedef void (GLAD_API_PTR *PFNGLVARIANTIVEXTPROC)(GLuint id, const GLint * addr);
typedef void (GLAD_API_PTR *PFNGLVARIANTFVEXTPROC)(GLuint id, const GLfloat * addr);
typedef void (GLAD_API_PTR *PFNGLVARIANTDVEXTPROC)(GLuint id, const GLdouble * addr);
typedef void (GLAD_API_PTR *PFNGLVARIANTUBVEXTPROC)(GLuint id, const GLubyte * addr);
typedef void (GLAD_API_PTR *PFNGLVARIANTUSVEXTPROC)(GLuint id, const GLushort * addr);
typedef void (GLAD_API_PTR *PFNGLVARIANTUIVEXTPROC)(GLuint id, const GLuint * addr);
typedef void (GLAD_API_PTR *PFNGLVARIANTPOINTEREXTPROC)(GLuint id, GLenum type, GLuint stride, const void * addr);
typedef void (GLAD_API_PTR *PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)(GLuint id);
typedef GLuint (GLAD_API_PTR *PFNGLBINDLIGHTPARAMETEREXTPROC)(GLenum light, GLenum value);
typedef GLuint (GLAD_API_PTR *PFNGLBINDMATERIALPARAMETEREXTPROC)(GLenum face, GLenum value);
typedef GLuint (GLAD_API_PTR *PFNGLBINDTEXGENPARAMETEREXTPROC)(GLenum unit, GLenum coord, GLenum value);
typedef GLuint (GLAD_API_PTR *PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)(GLenum unit, GLenum value);
typedef GLuint (GLAD_API_PTR *PFNGLBINDPARAMETEREXTPROC)(GLenum value);
typedef GLboolean (GLAD_API_PTR *PFNGLISVARIANTENABLEDEXTPROC)(GLuint id, GLenum cap);
typedef void (GLAD_API_PTR *PFNGLGETVARIANTBOOLEANVEXTPROC)(GLuint id, GLenum value, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETVARIANTINTEGERVEXTPROC)(GLuint id, GLenum value, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETVARIANTFLOATVEXTPROC)(GLuint id, GLenum value, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETVARIANTPOINTERVEXTPROC)(GLuint id, GLenum value, void ** data);
typedef void (GLAD_API_PTR *PFNGLGETINVARIANTBOOLEANVEXTPROC)(GLuint id, GLenum value, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETINVARIANTINTEGERVEXTPROC)(GLuint id, GLenum value, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETINVARIANTFLOATVEXTPROC)(GLuint id, GLenum value, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)(GLuint id, GLenum value, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)(GLuint id, GLenum value, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETLOCALCONSTANTFLOATVEXTPROC)(GLuint id, GLenum value, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLVERTEXWEIGHTFEXTPROC)(GLfloat weight);
typedef void (GLAD_API_PTR *PFNGLVERTEXWEIGHTFVEXTPROC)(const GLfloat * weight);
typedef void (GLAD_API_PTR *PFNGLVERTEXWEIGHTPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef GLboolean (GLAD_API_PTR *PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC)(GLuint memory, GLuint64 key, GLuint timeout);
typedef GLboolean (GLAD_API_PTR *PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC)(GLuint memory, GLuint64 key);
typedef void (GLAD_API_PTR *PFNGLWINDOWRECTANGLESEXTPROC)(GLenum mode, GLsizei count, const GLint * box);
typedef GLsync (GLAD_API_PTR *PFNGLIMPORTSYNCEXTPROC)(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLFRAMETERMINATORGREMEDYPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSTRINGMARKERGREMEDYPROC)(GLsizei len, const void * string);
typedef void (GLAD_API_PTR *PFNGLIMAGETRANSFORMPARAMETERIHPPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLIMAGETRANSFORMPARAMETERFHPPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMULTIMODEDRAWARRAYSIBMPROC)(const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
typedef void (GLAD_API_PTR *PFNGLMULTIMODEDRAWELEMENTSIBMPROC)(const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride);
typedef void (GLAD_API_PTR *PFNGLFLUSHSTATICDATAIBMPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLCOLORPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPOINTERLISTIBMPROC)(GLint stride, const GLboolean ** pointer, GLint ptrstride);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDPOINTERLISTIBMPROC)(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (GLAD_API_PTR *PFNGLINDEXPOINTERLISTIBMPROC)(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (GLAD_API_PTR *PFNGLNORMALPOINTERLISTIBMPROC)(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (GLAD_API_PTR *PFNGLVERTEXPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEINGRPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (GLAD_API_PTR *PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSYNCTEXTUREINTELPROC)(GLuint texture);
typedef void (GLAD_API_PTR *PFNGLUNMAPTEXTURE2DINTELPROC)(GLuint texture, GLint level);
typedef void * (GLAD_API_PTR *PFNGLMAPTEXTURE2DINTELPROC)(GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout);
typedef void (GLAD_API_PTR *PFNGLVERTEXPOINTERVINTELPROC)(GLint size, GLenum type, const void ** pointer);
typedef void (GLAD_API_PTR *PFNGLNORMALPOINTERVINTELPROC)(GLenum type, const void ** pointer);
typedef void (GLAD_API_PTR *PFNGLCOLORPOINTERVINTELPROC)(GLint size, GLenum type, const void ** pointer);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDPOINTERVINTELPROC)(GLint size, GLenum type, const void ** pointer);
typedef void (GLAD_API_PTR *PFNGLBEGINPERFQUERYINTELPROC)(GLuint queryHandle);
typedef void (GLAD_API_PTR *PFNGLCREATEPERFQUERYINTELPROC)(GLuint queryId, GLuint * queryHandle);
typedef void (GLAD_API_PTR *PFNGLDELETEPERFQUERYINTELPROC)(GLuint queryHandle);
typedef void (GLAD_API_PTR *PFNGLENDPERFQUERYINTELPROC)(GLuint queryHandle);
typedef void (GLAD_API_PTR *PFNGLGETFIRSTPERFQUERYIDINTELPROC)(GLuint * queryId);
typedef void (GLAD_API_PTR *PFNGLGETNEXTPERFQUERYIDINTELPROC)(GLuint queryId, GLuint * nextQueryId);
typedef void (GLAD_API_PTR *PFNGLGETPERFCOUNTERINFOINTELPROC)(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
typedef void (GLAD_API_PTR *PFNGLGETPERFQUERYDATAINTELPROC)(GLuint queryHandle, GLuint flags, GLsizei dataSize, void * data, GLuint * bytesWritten);
typedef void (GLAD_API_PTR *PFNGLGETPERFQUERYIDBYNAMEINTELPROC)(GLchar * queryName, GLuint * queryId);
typedef void (GLAD_API_PTR *PFNGLGETPERFQUERYINFOINTELPROC)(GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
typedef void (GLAD_API_PTR *PFNGLBLENDBARRIERKHRPROC)(void);
typedef void (GLAD_API_PTR *PFNGLMAXSHADERCOMPILERTHREADSKHRPROC)(GLuint count);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPARAMETERIMESAPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLRESIZEBUFFERSMESAPROC)(void);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DMESAPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2DVMESAPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FMESAPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2FVMESAPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IMESAPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2IVMESAPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SMESAPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS2SVMESAPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DMESAPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3DVMESAPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FMESAPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3FVMESAPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IMESAPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3IVMESAPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SMESAPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS3SVMESAPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS4DMESAPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS4DVMESAPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS4FMESAPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS4FVMESAPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS4IMESAPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS4IVMESAPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS4SMESAPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLWINDOWPOS4SVMESAPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERNVXPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLENDCONDITIONALRENDERNVXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC)(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (GLAD_API_PTR *PFNGLLGPUCOPYIMAGESUBDATANVXPROC)(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLLGPUINTERLOCKNVXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC)(GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC)(GLenum mode, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
typedef GLuint64 (GLAD_API_PTR *PFNGLGETTEXTUREHANDLENVPROC)(GLuint texture);
typedef GLuint64 (GLAD_API_PTR *PFNGLGETTEXTURESAMPLERHANDLENVPROC)(GLuint texture, GLuint sampler);
typedef void (GLAD_API_PTR *PFNGLMAKETEXTUREHANDLERESIDENTNVPROC)(GLuint64 handle);
typedef void (GLAD_API_PTR *PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC)(GLuint64 handle);
typedef GLuint64 (GLAD_API_PTR *PFNGLGETIMAGEHANDLENVPROC)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
typedef void (GLAD_API_PTR *PFNGLMAKEIMAGEHANDLERESIDENTNVPROC)(GLuint64 handle, GLenum access);
typedef void (GLAD_API_PTR *PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC)(GLuint64 handle);
typedef void (GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64NVPROC)(GLint location, GLuint64 value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64VNVPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC)(GLuint program, GLint location, GLuint64 value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREHANDLERESIDENTNVPROC)(GLuint64 handle);
typedef GLboolean (GLAD_API_PTR *PFNGLISIMAGEHANDLERESIDENTNVPROC)(GLuint64 handle);
typedef void (GLAD_API_PTR *PFNGLBLENDPARAMETERINVPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLBLENDBARRIERNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTPOSITIONWSCALENVPROC)(GLuint index, GLfloat xcoeff, GLfloat ycoeff);
typedef void (GLAD_API_PTR *PFNGLCREATESTATESNVPROC)(GLsizei n, GLuint * states);
typedef void (GLAD_API_PTR *PFNGLDELETESTATESNVPROC)(GLsizei n, const GLuint * states);
typedef GLboolean (GLAD_API_PTR *PFNGLISSTATENVPROC)(GLuint state);
typedef void (GLAD_API_PTR *PFNGLSTATECAPTURENVPROC)(GLuint state, GLenum mode);
typedef GLuint (GLAD_API_PTR *PFNGLGETCOMMANDHEADERNVPROC)(GLenum tokenID, GLuint size);
typedef GLushort (GLAD_API_PTR *PFNGLGETSTAGEINDEXNVPROC)(GLenum shadertype);
typedef void (GLAD_API_PTR *PFNGLDRAWCOMMANDSNVPROC)(GLenum primitiveMode, GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint count);
typedef void (GLAD_API_PTR *PFNGLDRAWCOMMANDSADDRESSNVPROC)(GLenum primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint count);
typedef void (GLAD_API_PTR *PFNGLDRAWCOMMANDSSTATESNVPROC)(GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (GLAD_API_PTR *PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC)(const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (GLAD_API_PTR *PFNGLCREATECOMMANDLISTSNVPROC)(GLsizei n, GLuint * lists);
typedef void (GLAD_API_PTR *PFNGLDELETECOMMANDLISTSNVPROC)(GLsizei n, const GLuint * lists);
typedef GLboolean (GLAD_API_PTR *PFNGLISCOMMANDLISTNVPROC)(GLuint list);
typedef void (GLAD_API_PTR *PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC)(GLuint list, GLuint segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
typedef void (GLAD_API_PTR *PFNGLCOMMANDLISTSEGMENTSNVPROC)(GLuint list, GLuint segments);
typedef void (GLAD_API_PTR *PFNGLCOMPILECOMMANDLISTNVPROC)(GLuint list);
typedef void (GLAD_API_PTR *PFNGLCALLCOMMANDLISTNVPROC)(GLuint list);
typedef void (GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERNVPROC)(GLuint id, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLENDCONDITIONALRENDERNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSUBPIXELPRECISIONBIASNVPROC)(GLuint xbits, GLuint ybits);
typedef void (GLAD_API_PTR *PFNGLCONSERVATIVERASTERPARAMETERFNVPROC)(GLenum pname, GLfloat value);
typedef void (GLAD_API_PTR *PFNGLCONSERVATIVERASTERPARAMETERINVPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATANVPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEDNVPROC)(GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHDNVPROC)(GLdouble depth);
typedef void (GLAD_API_PTR *PFNGLDEPTHBOUNDSDNVPROC)(GLdouble zmin, GLdouble zmax);
typedef void (GLAD_API_PTR *PFNGLDRAWTEXTURENVPROC)(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
typedef void (GLAD_API_PTR *PFNGLDRAWVKIMAGENVPROC)(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
typedef GLVULKANPROCNV (GLAD_API_PTR *PFNGLGETVKPROCADDRNVPROC)(const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLWAITVKSEMAPHORENVPROC)(GLuint64 vkSemaphore);
typedef void (GLAD_API_PTR *PFNGLSIGNALVKSEMAPHORENVPROC)(GLuint64 vkSemaphore);
typedef void (GLAD_API_PTR *PFNGLSIGNALVKFENCENVPROC)(GLuint64 vkFence);
typedef void (GLAD_API_PTR *PFNGLMAPCONTROLPOINTSNVPROC)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points);
typedef void (GLAD_API_PTR *PFNGLMAPPARAMETERIVNVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMAPPARAMETERFVNVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMAPCONTROLPOINTSNVPROC)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points);
typedef void (GLAD_API_PTR *PFNGLGETMAPPARAMETERIVNVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMAPPARAMETERFVNVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMAPATTRIBPARAMETERIVNVPROC)(GLenum target, GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMAPATTRIBPARAMETERFVNVPROC)(GLenum target, GLuint index, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLEVALMAPSNVPROC)(GLenum target, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLGETMULTISAMPLEFVNVPROC)(GLenum pname, GLuint index, GLfloat * val);
typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKINDEXEDNVPROC)(GLuint index, GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLTEXRENDERBUFFERNVPROC)(GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLDELETEFENCESNVPROC)(GLsizei n, const GLuint * fences);
typedef void (GLAD_API_PTR *PFNGLGENFENCESNVPROC)(GLsizei n, GLuint * fences);
typedef GLboolean (GLAD_API_PTR *PFNGLISFENCENVPROC)(GLuint fence);
typedef GLboolean (GLAD_API_PTR *PFNGLTESTFENCENVPROC)(GLuint fence);
typedef void (GLAD_API_PTR *PFNGLGETFENCEIVNVPROC)(GLuint fence, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLFINISHFENCENVPROC)(GLuint fence);
typedef void (GLAD_API_PTR *PFNGLSETFENCENVPROC)(GLuint fence, GLenum condition);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTCOVERAGECOLORNVPROC)(GLuint color);
typedef void (GLAD_API_PTR *PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)(GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)(GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)(GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)(GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)(GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)(GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLCOVERAGEMODULATIONTABLENVPROC)(GLsizei n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLGETCOVERAGEMODULATIONTABLENVPROC)(GLsizei bufSize, GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOVERAGEMODULATIONNVPROC)(GLenum components);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLPROGRAMVERTEXLIMITNVPROC)(GLenum target, GLint limit);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERI4INVPROC)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC)(GLenum target, GLuint index, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERI4UINVPROC)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC)(GLenum target, GLuint index, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERI4INVPROC)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERI4IVNVPROC)(GLenum target, GLuint index, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERSI4IVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERI4UINVPROC)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERI4UIVNVPROC)(GLenum target, GLuint index, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC)(GLenum target, GLuint index, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC)(GLenum target, GLuint index, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERIIVNVPROC)(GLenum target, GLuint index, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC)(GLenum target, GLuint index, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC)(GLenum target, GLsizei count, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC)(GLenum target, GLuint index, GLuint * param);
typedef void (GLAD_API_PTR *PFNGLVERTEX2HNVPROC)(GLhalfNV x, GLhalfNV y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3HNVPROC)(GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4HNVPROC)(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3HNVPROC)(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3HNVPROC)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4HNVPROC)(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1HNVPROC)(GLhalfNV s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2HNVPROC)(GLhalfNV s, GLhalfNV t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3HNVPROC)(GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4HNVPROC)(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1HNVPROC)(GLenum target, GLhalfNV s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1HVNVPROC)(GLenum target, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2HNVPROC)(GLenum target, GLhalfNV s, GLhalfNV t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2HVNVPROC)(GLenum target, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3HNVPROC)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3HVNVPROC)(GLenum target, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4HNVPROC)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4HVNVPROC)(GLenum target, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1HNVPROC)(GLuint index, GLhalfNV x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1HVNVPROC)(GLuint index, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2HNVPROC)(GLuint index, GLhalfNV x, GLhalfNV y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2HVNVPROC)(GLuint index, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3HNVPROC)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3HVNVPROC)(GLuint index, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4HNVPROC)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4HVNVPROC)(GLuint index, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS1HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS2HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS3HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS4HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDHNVPROC)(GLhalfNV fog);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDHVNVPROC)(const GLhalfNV * fog);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3HNVPROC)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLOR3HVNVPROC)(const GLhalfNV * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXWEIGHTHNVPROC)(GLhalfNV weight);
typedef void (GLAD_API_PTR *PFNGLVERTEXWEIGHTHVNVPROC)(const GLhalfNV * weight);
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATSAMPLEIVNVPROC)(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint * params);
typedef void (GLAD_API_PTR *PFNGLRENDERGPUMASKNVPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLMULTICASTBUFFERSUBDATANVPROC)(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (GLAD_API_PTR *PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC)(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLMULTICASTCOPYIMAGESUBDATANVPROC)(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (GLAD_API_PTR *PFNGLMULTICASTBLITFRAMEBUFFERNVPROC)(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTICASTBARRIERNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLMULTICASTWAITSYNCNVPROC)(GLuint signalGpu, GLbitfield waitGpuMask);
typedef void (GLAD_API_PTR *PFNGLMULTICASTGETQUERYOBJECTIVNVPROC)(GLuint gpu, GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC)(GLuint gpu, GLuint id, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC)(GLuint gpu, GLuint id, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC)(GLuint gpu, GLuint id, GLenum pname, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLUPLOADGPUMASKNVXPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLMULTICASTVIEWPORTARRAYVNVXPROC)(GLuint gpu, GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC)(GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff);
typedef void (GLAD_API_PTR *PFNGLMULTICASTSCISSORARRAYVNVXPROC)(GLuint gpu, GLuint first, GLsizei count, const GLint * v);
typedef GLuint (GLAD_API_PTR *PFNGLASYNCCOPYBUFFERSUBDATANVXPROC)(GLsizei waitSemaphoreCount, const GLuint * waitSemaphoreArray, const GLuint64 * fenceValueArray, GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsizei signalSemaphoreCount, const GLuint * signalSemaphoreArray, const GLuint64 * signalValueArray);
typedef GLuint (GLAD_API_PTR *PFNGLASYNCCOPYIMAGESUBDATANVXPROC)(GLsizei waitSemaphoreCount, const GLuint * waitSemaphoreArray, const GLuint64 * waitValueArray, GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsizei signalSemaphoreCount, const GLuint * signalSemaphoreArray, const GLuint64 * signalValueArray);
typedef GLuint (GLAD_API_PTR *PFNGLCREATEPROGRESSFENCENVXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSIGNALSEMAPHOREUI64NVXPROC)(GLuint signalGpu, GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
typedef void (GLAD_API_PTR *PFNGLWAITSEMAPHOREUI64NVXPROC)(GLuint waitGpu, GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
typedef void (GLAD_API_PTR *PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC)(GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
typedef void (GLAD_API_PTR *PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC)(GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLRESETMEMORYOBJECTPARAMETERNVPROC)(GLuint memory, GLenum pname);
typedef void (GLAD_API_PTR *PFNGLTEXATTACHMEMORYNVPROC)(GLenum target, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLBUFFERATTACHMEMORYNVPROC)(GLenum target, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLTEXTUREATTACHMEMORYNVPROC)(GLuint texture, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERATTACHMEMORYNVPROC)(GLuint buffer, GLuint memory, GLuint64 offset);
typedef void (GLAD_API_PTR *PFNGLBUFFERPAGECOMMITMENTMEMNVPROC)(GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLTEXPAGECOMMITMENTMEMNVPROC)(GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC)(GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLDRAWMESHTASKSNVPROC)(GLuint first, GLuint count);
typedef void (GLAD_API_PTR *PFNGLDRAWMESHTASKSINDIRECTNVPROC)(GLintptr indirect);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC)(GLintptr indirect, GLsizei drawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC)(GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLGENOCCLUSIONQUERIESNVPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETEOCCLUSIONQUERIESNVPROC)(GLsizei n, const GLuint * ids);
typedef GLboolean (GLAD_API_PTR *PFNGLISOCCLUSIONQUERYNVPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINOCCLUSIONQUERYNVPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLENDOCCLUSIONQUERYNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETOCCLUSIONQUERYIVNVPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETOCCLUSIONQUERYUIVNVPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params);
typedef GLuint (GLAD_API_PTR *PFNGLGENPATHSNVPROC)(GLsizei range);
typedef void (GLAD_API_PTR *PFNGLDELETEPATHSNVPROC)(GLuint path, GLsizei range);
typedef GLboolean (GLAD_API_PTR *PFNGLISPATHNVPROC)(GLuint path);
typedef void (GLAD_API_PTR *PFNGLPATHCOMMANDSNVPROC)(GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (GLAD_API_PTR *PFNGLPATHCOORDSNVPROC)(GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (GLAD_API_PTR *PFNGLPATHSUBCOMMANDSNVPROC)(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (GLAD_API_PTR *PFNGLPATHSUBCOORDSNVPROC)(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
typedef void (GLAD_API_PTR *PFNGLPATHSTRINGNVPROC)(GLuint path, GLenum format, GLsizei length, const void * pathString);
typedef void (GLAD_API_PTR *PFNGLPATHGLYPHSNVPROC)(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (GLAD_API_PTR *PFNGLPATHGLYPHRANGENVPROC)(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (GLAD_API_PTR *PFNGLWEIGHTPATHSNVPROC)(GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);
typedef void (GLAD_API_PTR *PFNGLCOPYPATHNVPROC)(GLuint resultPath, GLuint srcPath);
typedef void (GLAD_API_PTR *PFNGLINTERPOLATEPATHSNVPROC)(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMPATHNVPROC)(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
typedef void (GLAD_API_PTR *PFNGLPATHPARAMETERIVNVPROC)(GLuint path, GLenum pname, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPATHPARAMETERINVPROC)(GLuint path, GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPATHPARAMETERFVNVPROC)(GLuint path, GLenum pname, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPATHPARAMETERFNVPROC)(GLuint path, GLenum pname, GLfloat value);
typedef void (GLAD_API_PTR *PFNGLPATHDASHARRAYNVPROC)(GLuint path, GLsizei dashCount, const GLfloat * dashArray);
typedef void (GLAD_API_PTR *PFNGLPATHSTENCILFUNCNVPROC)(GLenum func, GLint ref, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLPATHSTENCILDEPTHOFFSETNVPROC)(GLfloat factor, GLfloat units);
typedef void (GLAD_API_PTR *PFNGLSTENCILFILLPATHNVPROC)(GLuint path, GLenum fillMode, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILSTROKEPATHNVPROC)(GLuint path, GLint reference, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILFILLPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
typedef void (GLAD_API_PTR *PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
typedef void (GLAD_API_PTR *PFNGLPATHCOVERDEPTHFUNCNVPROC)(GLenum func);
typedef void (GLAD_API_PTR *PFNGLCOVERFILLPATHNVPROC)(GLuint path, GLenum coverMode);
typedef void (GLAD_API_PTR *PFNGLCOVERSTROKEPATHNVPROC)(GLuint path, GLenum coverMode);
typedef void (GLAD_API_PTR *PFNGLCOVERFILLPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (GLAD_API_PTR *PFNGLCOVERSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (GLAD_API_PTR *PFNGLGETPATHPARAMETERIVNVPROC)(GLuint path, GLenum pname, GLint * value);
typedef void (GLAD_API_PTR *PFNGLGETPATHPARAMETERFVNVPROC)(GLuint path, GLenum pname, GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLGETPATHCOMMANDSNVPROC)(GLuint path, GLubyte * commands);
typedef void (GLAD_API_PTR *PFNGLGETPATHCOORDSNVPROC)(GLuint path, GLfloat * coords);
typedef void (GLAD_API_PTR *PFNGLGETPATHDASHARRAYNVPROC)(GLuint path, GLfloat * dashArray);
typedef void (GLAD_API_PTR *PFNGLGETPATHMETRICSNVPROC)(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
typedef void (GLAD_API_PTR *PFNGLGETPATHMETRICRANGENVPROC)(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
typedef void (GLAD_API_PTR *PFNGLGETPATHSPACINGNVPROC)(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
typedef GLboolean (GLAD_API_PTR *PFNGLISPOINTINFILLPATHNVPROC)(GLuint path, GLuint mask, GLfloat x, GLfloat y);
typedef GLboolean (GLAD_API_PTR *PFNGLISPOINTINSTROKEPATHNVPROC)(GLuint path, GLfloat x, GLfloat y);
typedef GLfloat (GLAD_API_PTR *PFNGLGETPATHLENGTHNVPROC)(GLuint path, GLsizei startSegment, GLsizei numSegments);
typedef GLboolean (GLAD_API_PTR *PFNGLPOINTALONGPATHNVPROC)(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOAD3X2FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOAD3X3FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULT3X2FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULT3X3FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC)(GLenum matrixMode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLSTENCILTHENCOVERFILLPATHNVPROC)(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
typedef void (GLAD_API_PTR *PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC)(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
typedef void (GLAD_API_PTR *PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef void (GLAD_API_PTR *PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
typedef GLenum (GLAD_API_PTR *PFNGLPATHGLYPHINDEXRANGENVPROC)(GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint * baseAndCount);
typedef GLenum (GLAD_API_PTR *PFNGLPATHGLYPHINDEXARRAYNVPROC)(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef GLenum (GLAD_API_PTR *PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC)(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC)(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEFVNVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPIXELDATARANGENVPROC)(GLenum target, GLsizei length, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLFLUSHPIXELDATARANGENVPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERINVPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIVNVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPRESENTFRAMEKEYEDNVPROC)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
typedef void (GLAD_API_PTR *PFNGLPRESENTFRAMEDUALFILLNVPROC)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
typedef void (GLAD_API_PTR *PFNGLGETVIDEOIVNVPROC)(GLuint video_slot, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVIDEOUIVNVPROC)(GLuint video_slot, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETVIDEOI64VNVPROC)(GLuint video_slot, GLenum pname, GLint64EXT * params);
typedef void (GLAD_API_PTR *PFNGLGETVIDEOUI64VNVPROC)(GLuint video_slot, GLenum pname, GLuint64EXT * params);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVERESTARTNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVERESTARTINDEXNVPROC)(GLuint index);
typedef GLint (GLAD_API_PTR *PFNGLQUERYRESOURCENVPROC)(GLenum queryType, GLint tagId, GLuint count, GLint * buffer);
typedef void (GLAD_API_PTR *PFNGLGENQUERYRESOURCETAGNVPROC)(GLsizei n, GLint * tagIds);
typedef void (GLAD_API_PTR *PFNGLDELETEQUERYRESOURCETAGNVPROC)(GLsizei n, const GLint * tagIds);
typedef void (GLAD_API_PTR *PFNGLQUERYRESOURCETAGNVPROC)(GLint tagId, const GLchar * tagString);
typedef void (GLAD_API_PTR *PFNGLCOMBINERPARAMETERFVNVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLCOMBINERPARAMETERFNVPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLCOMBINERPARAMETERIVNVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLCOMBINERPARAMETERINVPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLCOMBINERINPUTNVPROC)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (GLAD_API_PTR *PFNGLCOMBINEROUTPUTNVPROC)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
typedef void (GLAD_API_PTR *PFNGLFINALCOMBINERINPUTNVPROC)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
typedef void (GLAD_API_PTR *PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC)(GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC)(GLenum stage, GLenum portion, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC)(GLenum variable, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC)(GLenum variable, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum stage, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum stage, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRESOLVEDEPTHVALUESNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSCISSOREXCLUSIVENVPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSCISSOREXCLUSIVEARRAYVNVPROC)(GLuint first, GLsizei count, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLMAKEBUFFERRESIDENTNVPROC)(GLenum target, GLenum access);
typedef void (GLAD_API_PTR *PFNGLMAKEBUFFERNONRESIDENTNVPROC)(GLenum target);
typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERRESIDENTNVPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLMAKENAMEDBUFFERRESIDENTNVPROC)(GLuint buffer, GLenum access);
typedef void (GLAD_API_PTR *PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC)(GLuint buffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISNAMEDBUFFERRESIDENTNVPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERUI64VNVPROC)(GLenum target, GLenum pname, GLuint64EXT * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC)(GLuint buffer, GLenum pname, GLuint64EXT * params);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERUI64VNVPROC)(GLenum value, GLuint64EXT * result);
typedef void (GLAD_API_PTR *PFNGLUNIFORMUI64NVPROC)(GLint location, GLuint64EXT value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMUI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMUI64NVPROC)(GLuint program, GLint location, GLuint64EXT value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMUI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
typedef void (GLAD_API_PTR *PFNGLBINDSHADINGRATEIMAGENVPROC)(GLuint texture);
typedef void (GLAD_API_PTR *PFNGLGETSHADINGRATEIMAGEPALETTENVPROC)(GLuint viewport, GLuint entry, GLenum * rate);
typedef void (GLAD_API_PTR *PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC)(GLenum rate, GLuint samples, GLuint index, GLint * location);
typedef void (GLAD_API_PTR *PFNGLSHADINGRATEIMAGEBARRIERNVPROC)(GLboolean synchronize);
typedef void (GLAD_API_PTR *PFNGLSHADINGRATEIMAGEPALETTENVPROC)(GLuint viewport, GLuint first, GLsizei count, const GLenum * rates);
typedef void (GLAD_API_PTR *PFNGLSHADINGRATESAMPLEORDERNVPROC)(GLenum order);
typedef void (GLAD_API_PTR *PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC)(GLenum rate, GLuint samples, const GLint * locations);
typedef void (GLAD_API_PTR *PFNGLTEXTUREBARRIERNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
typedef void (GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKNVPROC)(GLenum primitiveMode);
typedef void (GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC)(GLsizei count, const GLint * attribs, GLenum bufferMode);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERRANGENVPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFEROFFSETNVPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERBASENVPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC)(GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
typedef void (GLAD_API_PTR *PFNGLACTIVEVARYINGNVPROC)(GLuint program, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETVARYINGLOCATIONNVPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEVARYINGNVPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC)(GLuint program, GLuint index, GLint * location);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC)(GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode);
typedef void (GLAD_API_PTR *PFNGLBINDTRANSFORMFEEDBACKNVPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLDELETETRANSFORMFEEDBACKSNVPROC)(GLsizei n, const GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLGENTRANSFORMFEEDBACKSNVPROC)(GLsizei n, GLuint * ids);
typedef GLboolean (GLAD_API_PTR *PFNGLISTRANSFORMFEEDBACKNVPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLPAUSETRANSFORMFEEDBACKNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLRESUMETRANSFORMFEEDBACKNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKNVPROC)(GLenum mode, GLuint id);
typedef void (GLAD_API_PTR *PFNGLVDPAUINITNVPROC)(const void * vdpDevice, const void * getProcAddress);
typedef void (GLAD_API_PTR *PFNGLVDPAUFININVPROC)(void);
typedef GLvdpauSurfaceNV (GLAD_API_PTR *PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
typedef GLvdpauSurfaceNV (GLAD_API_PTR *PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
typedef GLboolean (GLAD_API_PTR *PFNGLVDPAUISSURFACENVPROC)(GLvdpauSurfaceNV surface);
typedef void (GLAD_API_PTR *PFNGLVDPAUUNREGISTERSURFACENVPROC)(GLvdpauSurfaceNV surface);
typedef void (GLAD_API_PTR *PFNGLVDPAUGETSURFACEIVNVPROC)(GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (GLAD_API_PTR *PFNGLVDPAUSURFACEACCESSNVPROC)(GLvdpauSurfaceNV surface, GLenum access);
typedef void (GLAD_API_PTR *PFNGLVDPAUMAPSURFACESNVPROC)(GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces);
typedef void (GLAD_API_PTR *PFNGLVDPAUUNMAPSURFACESNVPROC)(GLsizei numSurface, const GLvdpauSurfaceNV * surfaces);
typedef GLvdpauSurfaceNV (GLAD_API_PTR *PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC)(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames, GLboolean isFrameStructure);
typedef void (GLAD_API_PTR *PFNGLFLUSHVERTEXARRAYRANGENVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYRANGENVPROC)(GLsizei length, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1I64NVPROC)(GLuint index, GLint64EXT x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2I64NVPROC)(GLuint index, GLint64EXT x, GLint64EXT y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3I64NVPROC)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4I64NVPROC)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1I64VNVPROC)(GLuint index, const GLint64EXT * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2I64VNVPROC)(GLuint index, const GLint64EXT * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3I64VNVPROC)(GLuint index, const GLint64EXT * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4I64VNVPROC)(GLuint index, const GLint64EXT * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1UI64NVPROC)(GLuint index, GLuint64EXT x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2UI64NVPROC)(GLuint index, GLuint64EXT x, GLuint64EXT y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3UI64NVPROC)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4UI64NVPROC)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1UI64VNVPROC)(GLuint index, const GLuint64EXT * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2UI64VNVPROC)(GLuint index, const GLuint64EXT * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3UI64VNVPROC)(GLuint index, const GLuint64EXT * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4UI64VNVPROC)(GLuint index, const GLuint64EXT * v);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBLI64VNVPROC)(GLuint index, GLenum pname, GLint64EXT * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBLUI64VNVPROC)(GLuint index, GLenum pname, GLuint64EXT * params);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBLFORMATNVPROC)(GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLBUFFERADDRESSRANGENVPROC)(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLVERTEXFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLNORMALFORMATNVPROC)(GLenum type, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLCOLORFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLINDEXFORMATNVPROC)(GLenum type, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGFORMATNVPROC)(GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLSECONDARYCOLORFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLFOGCOORDFORMATNVPROC)(GLenum type, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBFORMATNVPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIFORMATNVPROC)(GLuint index, GLint size, GLenum type, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERUI64I_VNVPROC)(GLenum value, GLuint index, GLuint64EXT * result);
typedef GLboolean (GLAD_API_PTR *PFNGLAREPROGRAMSRESIDENTNVPROC)(GLsizei n, const GLuint * programs, GLboolean * residences);
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMNVPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMSNVPROC)(GLsizei n, const GLuint * programs);
typedef void (GLAD_API_PTR *PFNGLEXECUTEPROGRAMNVPROC)(GLenum target, GLuint id, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMSNVPROC)(GLsizei n, GLuint * programs);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPARAMETERDVNVPROC)(GLenum target, GLuint index, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPARAMETERFVNVPROC)(GLenum target, GLuint index, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVNVPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMSTRINGNVPROC)(GLuint id, GLenum pname, GLubyte * program);
typedef void (GLAD_API_PTR *PFNGLGETTRACKMATRIXIVNVPROC)(GLenum target, GLuint address, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVNVPROC)(GLuint index, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVNVPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVNVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVNVPROC)(GLuint index, GLenum pname, void ** pointer);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMNVPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLLOADPROGRAMNVPROC)(GLenum target, GLuint id, GLsizei len, const GLubyte * program);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETER4DNVPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETER4DVNVPROC)(GLenum target, GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETER4FNVPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETER4FVNVPROC)(GLenum target, GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERS4DVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERS4FVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLREQUESTRESIDENTPROGRAMSNVPROC)(GLsizei n, const GLuint * programs);
typedef void (GLAD_API_PTR *PFNGLTRACKMATRIXNVPROC)(GLenum target, GLuint address, GLenum matrix, GLenum transform);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERNVPROC)(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DNVPROC)(GLuint index, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DVNVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FNVPROC)(GLuint index, GLfloat x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FVNVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SNVPROC)(GLuint index, GLshort x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SVNVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DNVPROC)(GLuint index, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DVNVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FNVPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FVNVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SNVPROC)(GLuint index, GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SVNVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DNVPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DVNVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FNVPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FVNVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SNVPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SVNVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DNVPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DVNVPROC)(GLuint index, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FNVPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FVNVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SNVPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SVNVPROC)(GLuint index, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UBNVPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVNVPROC)(GLuint index, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS1DVNVPROC)(GLuint index, GLsizei count, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS1FVNVPROC)(GLuint index, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS1SVNVPROC)(GLuint index, GLsizei count, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS2DVNVPROC)(GLuint index, GLsizei count, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS2FVNVPROC)(GLuint index, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS2SVNVPROC)(GLuint index, GLsizei count, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS3DVNVPROC)(GLuint index, GLsizei count, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS3FVNVPROC)(GLuint index, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS3SVNVPROC)(GLuint index, GLsizei count, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS4DVNVPROC)(GLuint index, GLsizei count, const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS4FVNVPROC)(GLuint index, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS4SVNVPROC)(GLuint index, GLsizei count, const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBS4UBVNVPROC)(GLuint index, GLsizei count, const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLBEGINVIDEOCAPTURENVPROC)(GLuint video_capture_slot);
typedef void (GLAD_API_PTR *PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
typedef void (GLAD_API_PTR *PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLENDVIDEOCAPTURENVPROC)(GLuint video_capture_slot);
typedef void (GLAD_API_PTR *PFNGLGETVIDEOCAPTUREIVNVPROC)(GLuint video_capture_slot, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVIDEOCAPTURESTREAMIVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVIDEOCAPTURESTREAMFVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVIDEOCAPTURESTREAMDVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params);
typedef GLenum (GLAD_API_PTR *PFNGLVIDEOCAPTURENVPROC)(GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
typedef void (GLAD_API_PTR *PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTSWIZZLENVPROC)(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1BOESPROC)(GLenum texture, GLbyte s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1BVOESPROC)(GLenum texture, const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2BOESPROC)(GLenum texture, GLbyte s, GLbyte t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2BVOESPROC)(GLenum texture, const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3BOESPROC)(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3BVOESPROC)(GLenum texture, const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4BOESPROC)(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4BVOESPROC)(GLenum texture, const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1BOESPROC)(GLbyte s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1BVOESPROC)(const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2BOESPROC)(GLbyte s, GLbyte t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2BVOESPROC)(const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3BOESPROC)(GLbyte s, GLbyte t, GLbyte r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3BVOESPROC)(const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4BOESPROC)(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4BVOESPROC)(const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEX2BOESPROC)(GLbyte x, GLbyte y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2BVOESPROC)(const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEX3BOESPROC)(GLbyte x, GLbyte y, GLbyte z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3BVOESPROC)(const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEX4BOESPROC)(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4BVOESPROC)(const GLbyte * coords);
typedef void (GLAD_API_PTR *PFNGLALPHAFUNCXOESPROC)(GLenum func, GLfixed ref);
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHXOESPROC)(GLfixed depth);
typedef void (GLAD_API_PTR *PFNGLCLIPPLANEXOESPROC)(GLenum plane, const GLfixed * equation);
typedef void (GLAD_API_PTR *PFNGLCOLOR4XOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEXOESPROC)(GLfixed n, GLfixed f);
typedef void (GLAD_API_PTR *PFNGLFOGXOESPROC)(GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLFOGXVOESPROC)(GLenum pname, const GLfixed * param);
typedef void (GLAD_API_PTR *PFNGLFRUSTUMXOESPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (GLAD_API_PTR *PFNGLGETCLIPPLANEXOESPROC)(GLenum plane, GLfixed * equation);
typedef void (GLAD_API_PTR *PFNGLGETFIXEDVOESPROC)(GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXENVXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELXOESPROC)(GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELXVOESPROC)(GLenum pname, const GLfixed * param);
typedef void (GLAD_API_PTR *PFNGLLIGHTXOESPROC)(GLenum light, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLLIGHTXVOESPROC)(GLenum light, GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLLINEWIDTHXOESPROC)(GLfixed width);
typedef void (GLAD_API_PTR *PFNGLLOADMATRIXXOESPROC)(const GLfixed * m);
typedef void (GLAD_API_PTR *PFNGLMATERIALXOESPROC)(GLenum face, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLMATERIALXVOESPROC)(GLenum face, GLenum pname, const GLfixed * param);
typedef void (GLAD_API_PTR *PFNGLMULTMATRIXXOESPROC)(const GLfixed * m);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4XOESPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (GLAD_API_PTR *PFNGLNORMAL3XOESPROC)(GLfixed nx, GLfixed ny, GLfixed nz);
typedef void (GLAD_API_PTR *PFNGLORTHOXOESPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERXVOESPROC)(GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLPOINTSIZEXOESPROC)(GLfixed size);
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETXOESPROC)(GLfixed factor, GLfixed units);
typedef void (GLAD_API_PTR *PFNGLROTATEXOESPROC)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAD_API_PTR *PFNGLSCALEXOESPROC)(GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAD_API_PTR *PFNGLTEXENVXOESPROC)(GLenum target, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLTEXENVXVOESPROC)(GLenum target, GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERXOESPROC)(GLenum target, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERXVOESPROC)(GLenum target, GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLTRANSLATEXOESPROC)(GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAD_API_PTR *PFNGLACCUMXOESPROC)(GLenum op, GLfixed value);
typedef void (GLAD_API_PTR *PFNGLBITMAPXOESPROC)(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
typedef void (GLAD_API_PTR *PFNGLBLENDCOLORXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARACCUMXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR3XOESPROC)(GLfixed red, GLfixed green, GLfixed blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3XVOESPROC)(const GLfixed * components);
typedef void (GLAD_API_PTR *PFNGLCOLOR4XVOESPROC)(const GLfixed * components);
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERXOESPROC)(GLenum target, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERXVOESPROC)(GLenum target, GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1XOESPROC)(GLfixed u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2XOESPROC)(GLfixed u, GLfixed v);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLFEEDBACKBUFFERXOESPROC)(GLsizei n, GLenum type, const GLfixed * buffer);
typedef void (GLAD_API_PTR *PFNGLGETCONVOLUTIONPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETHISTOGRAMPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETLIGHTXOESPROC)(GLenum light, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETMAPXVOESPROC)(GLenum target, GLenum query, GLfixed * v);
typedef void (GLAD_API_PTR *PFNGLGETMATERIALXOESPROC)(GLenum face, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPXVPROC)(GLenum map, GLint size, GLfixed * values);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENXVOESPROC)(GLenum coord, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERXVOESPROC)(GLenum target, GLint level, GLenum pname, GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLINDEXXOESPROC)(GLfixed component);
typedef void (GLAD_API_PTR *PFNGLINDEXXVOESPROC)(const GLfixed * component);
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXXOESPROC)(const GLfixed * m);
typedef void (GLAD_API_PTR *PFNGLMAP1XOESPROC)(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
typedef void (GLAD_API_PTR *PFNGLMAP2XOESPROC)(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
typedef void (GLAD_API_PTR *PFNGLMAPGRID1XOESPROC)(GLint n, GLfixed u1, GLfixed u2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID2XOESPROC)(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXXOESPROC)(const GLfixed * m);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1XOESPROC)(GLenum texture, GLfixed s);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1XVOESPROC)(GLenum texture, const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2XOESPROC)(GLenum texture, GLfixed s, GLfixed t);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2XVOESPROC)(GLenum texture, const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3XOESPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3XVOESPROC)(GLenum texture, const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4XVOESPROC)(GLenum texture, const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLNORMAL3XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLPASSTHROUGHXOESPROC)(GLfixed token);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPXPROC)(GLenum map, GLint size, const GLfixed * values);
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREXPROC)(GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERXOESPROC)(GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLPIXELZOOMXOESPROC)(GLfixed xfactor, GLfixed yfactor);
typedef void (GLAD_API_PTR *PFNGLPRIORITIZETEXTURESXOESPROC)(GLsizei n, const GLuint * textures, const GLfixed * priorities);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2XOESPROC)(GLfixed x, GLfixed y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3XOESPROC)(GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4XOESPROC)(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLRECTXOESPROC)(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
typedef void (GLAD_API_PTR *PFNGLRECTXVOESPROC)(const GLfixed * v1, const GLfixed * v2);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1XOESPROC)(GLfixed s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2XOESPROC)(GLfixed s, GLfixed t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3XOESPROC)(GLfixed s, GLfixed t, GLfixed r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4XOESPROC)(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLTEXGENXOESPROC)(GLenum coord, GLenum pname, GLfixed param);
typedef void (GLAD_API_PTR *PFNGLTEXGENXVOESPROC)(GLenum coord, GLenum pname, const GLfixed * params);
typedef void (GLAD_API_PTR *PFNGLVERTEX2XOESPROC)(GLfixed x);
typedef void (GLAD_API_PTR *PFNGLVERTEX2XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEX3XOESPROC)(GLfixed x, GLfixed y);
typedef void (GLAD_API_PTR *PFNGLVERTEX3XVOESPROC)(const GLfixed * coords);
typedef void (GLAD_API_PTR *PFNGLVERTEX4XOESPROC)(GLfixed x, GLfixed y, GLfixed z);
typedef void (GLAD_API_PTR *PFNGLVERTEX4XVOESPROC)(const GLfixed * coords);
typedef GLbitfield (GLAD_API_PTR *PFNGLQUERYMATRIXXOESPROC)(GLfixed * mantissa, GLint * exponent);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHFOESPROC)(GLclampf depth);
typedef void (GLAD_API_PTR *PFNGLCLIPPLANEFOESPROC)(GLenum plane, const GLfloat * equation);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEFOESPROC)(GLclampf n, GLclampf f);
typedef void (GLAD_API_PTR *PFNGLFRUSTUMFOESPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLGETCLIPPLANEFOESPROC)(GLenum plane, GLfloat * equation);
typedef void (GLAD_API_PTR *PFNGLORTHOFOESPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
typedef void (GLAD_API_PTR *PFNGLHINTPGIPROC)(GLenum target, GLint mode);
typedef void (GLAD_API_PTR *PFNGLDETAILTEXFUNCSGISPROC)(GLenum target, GLsizei n, const GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLGETDETAILTEXFUNCSGISPROC)(GLenum target, GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLFOGFUNCSGISPROC)(GLsizei n, const GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLGETFOGFUNCSGISPROC)(GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKSGISPROC)(GLclampf value, GLboolean invert);
typedef void (GLAD_API_PTR *PFNGLSAMPLEPATTERNSGISPROC)(GLenum pattern);
typedef void (GLAD_API_PTR *PFNGLPIXELTEXGENPARAMETERISGISPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPIXELTEXGENPARAMETERIVSGISPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPIXELTEXGENPARAMETERFSGISPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPIXELTEXGENPARAMETERFVSGISPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC)(GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC)(GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFSGISPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFVSGISPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLSHARPENTEXFUNCSGISPROC)(GLenum target, GLsizei n, const GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLGETSHARPENTEXFUNCSGISPROC)(GLenum target, GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE4DSGISPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE4DSGISPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTURECOLORMASKSGISPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (GLAD_API_PTR *PFNGLGETTEXFILTERFUNCSGISPROC)(GLenum target, GLenum filter, GLfloat * weights);
typedef void (GLAD_API_PTR *PFNGLTEXFILTERFUNCSGISPROC)(GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);
typedef void (GLAD_API_PTR *PFNGLASYNCMARKERSGIXPROC)(GLuint marker);
typedef GLint (GLAD_API_PTR *PFNGLFINISHASYNCSGIXPROC)(GLuint * markerp);
typedef GLint (GLAD_API_PTR *PFNGLPOLLASYNCSGIXPROC)(GLuint * markerp);
typedef GLuint (GLAD_API_PTR *PFNGLGENASYNCMARKERSSGIXPROC)(GLsizei range);
typedef void (GLAD_API_PTR *PFNGLDELETEASYNCMARKERSSGIXPROC)(GLuint marker, GLsizei range);
typedef GLboolean (GLAD_API_PTR *PFNGLISASYNCMARKERSGIXPROC)(GLuint marker);
typedef void (GLAD_API_PTR *PFNGLFLUSHRASTERSGIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTCOLORMATERIALSGIXPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTLIGHTFSGIXPROC)(GLenum light, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTLIGHTFVSGIXPROC)(GLenum light, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTLIGHTISGIXPROC)(GLenum light, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTLIGHTIVSGIXPROC)(GLenum light, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTLIGHTMODELFSGIXPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTLIGHTMODELFVSGIXPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTLIGHTMODELISGIXPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTLIGHTMODELIVSGIXPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTMATERIALFSGIXPROC)(GLenum face, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTMATERIALFVSGIXPROC)(GLenum face, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTMATERIALISGIXPROC)(GLenum face, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFRAGMENTMATERIALIVSGIXPROC)(GLenum face, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAGMENTLIGHTFVSGIXPROC)(GLenum light, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAGMENTLIGHTIVSGIXPROC)(GLenum light, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAGMENTMATERIALFVSGIXPROC)(GLenum face, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAGMENTMATERIALIVSGIXPROC)(GLenum face, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTENVISGIXPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFRAMEZOOMSGIXPROC)(GLint factor);
typedef void (GLAD_API_PTR *PFNGLIGLOOINTERFACESGIXPROC)(GLenum pname, const void * params);
typedef GLint (GLAD_API_PTR *PFNGLGETINSTRUMENTSSGIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLINSTRUMENTSBUFFERSGIXPROC)(GLsizei size, GLint * buffer);
typedef GLint (GLAD_API_PTR *PFNGLPOLLINSTRUMENTSSGIXPROC)(GLint * marker_p);
typedef void (GLAD_API_PTR *PFNGLREADINSTRUMENTSSGIXPROC)(GLint marker);
typedef void (GLAD_API_PTR *PFNGLSTARTINSTRUMENTSSGIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSTOPINSTRUMENTSSGIXPROC)(GLint marker);
typedef void (GLAD_API_PTR *PFNGLGETLISTPARAMETERFVSGIXPROC)(GLuint list, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETLISTPARAMETERIVSGIXPROC)(GLuint list, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLLISTPARAMETERFSGIXPROC)(GLuint list, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLLISTPARAMETERFVSGIXPROC)(GLuint list, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLLISTPARAMETERISGIXPROC)(GLuint list, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLLISTPARAMETERIVSGIXPROC)(GLuint list, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLPIXELTEXGENSGIXPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLDEFORMATIONMAP3DSGIXPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);
typedef void (GLAD_API_PTR *PFNGLDEFORMATIONMAP3FSGIXPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLDEFORMSGIXPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLREFERENCEPLANESGIXPROC)(const GLdouble * equation);
typedef void (GLAD_API_PTR *PFNGLSPRITEPARAMETERFSGIXPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLSPRITEPARAMETERFVSGIXPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLSPRITEPARAMETERISGIXPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLSPRITEPARAMETERIVSGIXPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTAGSAMPLEBUFFERSGIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLCOLORTABLESGIPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
typedef void (GLAD_API_PTR *PFNGLCOLORTABLEPARAMETERFVSGIPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLCOLORTABLEPARAMETERIVSGIPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLCOPYCOLORTABLESGIPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLGETCOLORTABLESGIPROC)(GLenum target, GLenum format, GLenum type, void * table);
typedef void (GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERFVSGIPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETCOLORTABLEPARAMETERIVSGIPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLFINISHTEXTURESUNXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGLOBALALPHAFACTORBSUNPROC)(GLbyte factor);
typedef void (GLAD_API_PTR *PFNGLGLOBALALPHAFACTORSSUNPROC)(GLshort factor);
typedef void (GLAD_API_PTR *PFNGLGLOBALALPHAFACTORISUNPROC)(GLint factor);
typedef void (GLAD_API_PTR *PFNGLGLOBALALPHAFACTORFSUNPROC)(GLfloat factor);
typedef void (GLAD_API_PTR *PFNGLGLOBALALPHAFACTORDSUNPROC)(GLdouble factor);
typedef void (GLAD_API_PTR *PFNGLGLOBALALPHAFACTORUBSUNPROC)(GLubyte factor);
typedef void (GLAD_API_PTR *PFNGLGLOBALALPHAFACTORUSSUNPROC)(GLushort factor);
typedef void (GLAD_API_PTR *PFNGLGLOBALALPHAFACTORUISUNPROC)(GLuint factor);
typedef void (GLAD_API_PTR *PFNGLDRAWMESHARRAYSSUNPROC)(GLenum mode, GLint first, GLsizei count, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUISUNPROC)(GLuint code);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUSSUNPROC)(GLushort code);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUBSUNPROC)(GLubyte code);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUIVSUNPROC)(const GLuint * code);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUSVSUNPROC)(const GLushort * code);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUBVSUNPROC)(const GLubyte * code);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEPOINTERSUNPROC)(GLenum type, GLsizei stride, const void ** pointer);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBVERTEX2FSUNPROC)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBVERTEX2FVSUNPROC)(const GLubyte * c, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBVERTEX3FSUNPROC)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBVERTEX3FVSUNPROC)(const GLubyte * c, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3FVERTEX3FSUNPROC)(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLCOLOR3FVERTEX3FVSUNPROC)(const GLfloat * c, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3FVERTEX3FSUNPROC)(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FVERTEX3FVSUNPROC)(const GLfloat * tc, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FVERTEX4FSUNPROC)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FVERTEX4FVSUNPROC)(const GLfloat * tc, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC)(const GLfloat * tc, const GLubyte * c, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC)(const GLfloat * tc, const GLfloat * c, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * tc, const GLfloat * n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC)(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC)(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC)(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC)(const GLuint * rc, const GLubyte * c, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * c, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC)(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * tc, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DEXTERNALANGLEPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type);
typedef void (GLAD_API_PTR *PFNGLINVALIDATETEXTUREANGLEPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEMEMFLAGS2DANGLEPROC)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset, GLbitfield createFlags, GLbitfield usageFlags, const void * imageCreateInfoPNext);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEMEMFLAGS2DMULTISAMPLEANGLEPROC)(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset, GLbitfield createFlags, GLbitfield usageFlags, const void * imageCreateInfoPNext);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEMEMFLAGS3DANGLEPROC)(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLbitfield createFlags, GLbitfield usageFlags, const void * imageCreateInfoPNext);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEMEMFLAGS3DMULTISAMPLEANGLEPROC)(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset, GLbitfield createFlags, GLbitfield usageFlags, const void * imageCreateInfoPNext);
typedef void (GLAD_API_PTR *PFNGLIMPORTMEMORYZIRCONHANDLEANGLEPROC)(GLuint memory, GLuint64 size, GLenum handleType, GLuint handle);
typedef void (GLAD_API_PTR *PFNGLIMPORTSEMAPHOREZIRCONHANDLEANGLEPROC)(GLuint semaphore, GLenum handleType, GLuint handle);
typedef void (GLAD_API_PTR *PFNGLBLENDBARRIERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERANGLEPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDANGLEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDANGLEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORANGLEPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURELEVELSAPPLEPROC)(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC)(void);
typedef GLsync (GLAD_API_PTR *PFNGLFENCESYNCAPPLEPROC)(GLenum condition, GLbitfield flags);
typedef GLboolean (GLAD_API_PTR *PFNGLISSYNCAPPLEPROC)(GLsync sync);
typedef void (GLAD_API_PTR *PFNGLDELETESYNCAPPLEPROC)(GLsync sync);
typedef GLenum (GLAD_API_PTR *PFNGLCLIENTWAITSYNCAPPLEPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLWAITSYNCAPPLEPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VAPPLEPROC)(GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETSYNCIVAPPLEPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (GLAD_API_PTR *PFNGLMAXACTIVESHADERCORESARMPROC)(GLuint count);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATAINDEXEXTPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLBUFFERSTORAGEEXTPROC)(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLCLEARTEXIMAGEEXTPROC)(GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLEARTEXSUBIMAGEEXTPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLIPCONTROLEXTPROC)(GLenum origin, GLenum depth);
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAEXTPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (GLAD_API_PTR *PFNGLDISCARDFRAMEBUFFEREXTPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (GLAD_API_PTR *PFNGLGENQUERIESEXTPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESEXTPROC)(GLsizei n, const GLuint * ids);
typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYEXTPROC)(GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYEXTPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLENDQUERYEXTPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLQUERYCOUNTEREXTPROC)(GLuint id, GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVEXTPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVEXTPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VEXTPROC)(GLenum pname, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSEXTPROC)(GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLENABLEIEXTPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEIEXTPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIEXTPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIEXTPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIEXTPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIEXTPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKIEXTPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIEXTPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKEXTPROC)(GLenum mode, GLuint id);
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC)(GLenum mode, GLuint id, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLGETFRAGMENTSHADINGRATESEXTPROC)(GLsizei samples, GLsizei maxCount, GLsizei * count, GLenum * shadingRates);
typedef void (GLAD_API_PTR *PFNGLSHADINGRATEEXTPROC)(GLenum rate);
typedef void (GLAD_API_PTR *PFNGLSHADINGRATECOMBINEROPSEXTPROC)(GLenum combinerOp0, GLenum combinerOp1);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERSHADINGRATEEXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint baseLayer, GLsizei numLayers, GLsizei texelWidth, GLsizei texelHeight);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISOREXTPROC)(GLuint index, GLuint divisor);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERRANGEEXTPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC)(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
typedef void (GLAD_API_PTR *PFNGLREADBUFFERINDEXEDEXTPROC)(GLenum src, GLint index);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSINDEXEDEXTPROC)(GLint n, const GLenum * location, const GLint * indices);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERI_VEXTPROC)(GLenum target, GLuint index, GLint * data);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXEXTPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef GLenum (GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSEXTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLREADNPIXELSEXTPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVEXTPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVEXTPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (GLAD_API_PTR *PFNGLACTIVESHADERPROGRAMEXTPROC)(GLuint pipeline, GLuint program);
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMPIPELINEEXTPROC)(GLuint pipeline);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROGRAMVEXTPROC)(GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPIPELINESEXTPROC)(GLsizei n, const GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMPIPELINESEXTPROC)(GLsizei n, GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC)(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEIVEXTPROC)(GLuint pipeline, GLenum pname, GLint * params);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPIPELINEEXTPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMSTAGESEXTPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPIPELINEEXTPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC)(GLuint target, GLsizei size);
typedef GLsizei (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC)(GLuint target);
typedef void (GLAD_API_PTR *PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC)(GLsizei offset, GLsizei n, const GLuint * values);
typedef void (GLAD_API_PTR *PFNGLTEXPAGECOMMITMENTEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERIEXTPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVEXTPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVEXTPROC)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVEXTPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVEXTPROC)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERRANGEEXTPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEATTRIBS2DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, const GLint * attrib_list);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGEATTRIBS3DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, const GLint * attrib_list);
typedef void (GLAD_API_PTR *PFNGLTEXTUREVIEWEXTPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef GLuint64 (GLAD_API_PTR *PFNGLGETTEXTUREHANDLEIMGPROC)(GLuint texture);
typedef GLuint64 (GLAD_API_PTR *PFNGLGETTEXTURESAMPLERHANDLEIMGPROC)(GLuint texture, GLuint sampler);
typedef void (GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64IMGPROC)(GLint location, GLuint64 value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMHANDLEUI64VIMGPROC)(GLint location, GLsizei count, const GLuint64 * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC)(GLuint program, GLint location, GLuint64 value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLKHRPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTKHRPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKKHRPROC)(GLDEBUGPROCKHR callback, const void * userParam);
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGKHRPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (GLAD_API_PTR *PFNGLPUSHDEBUGGROUPKHRPROC)(GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (GLAD_API_PTR *PFNGLPOPDEBUGGROUPKHRPROC)(void);
typedef void (GLAD_API_PTR *PFNGLOBJECTLABELKHRPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTLABELKHRPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLOBJECTPTRLABELKHRPROC)(const void * ptr, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPTRLABELKHRPROC)(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVKHRPROC)(GLenum pname, void ** params);
typedef GLenum (GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSKHRPROC)(void);
typedef void (GLAD_API_PTR *PFNGLREADNPIXELSKHRPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVKHRPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVKHRPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUIVKHRPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATANVPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLCOVERAGEMASKNVPROC)(GLboolean mask);
typedef void (GLAD_API_PTR *PFNGLCOVERAGEOPERATIONNVPROC)(GLenum operation);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSNVPROC)(GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDNVPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDNVPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERNVPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORNVPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPOLYGONMODENVPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLREADBUFFERNVPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTARRAYVNVPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFNVPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFVNVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORARRAYVNVPROC)(GLuint first, GLsizei count, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDNVPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDVNVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEARRAYFVNVPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDFNVPROC)(GLuint index, GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLGETFLOATI_VNVPROC)(GLenum target, GLuint index, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLENABLEINVPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEINVPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDINVPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLEGLIMAGETARGETTEXTURE2DOESPROC)(GLenum target, GLeglImageOES image);
typedef void (GLAD_API_PTR *PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC)(GLenum target, GLeglImageOES image);
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAOESPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (GLAD_API_PTR *PFNGLENABLEIOESPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEIOESPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIOESPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIOESPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIOESPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIOESPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKIOESPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIOESPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXOESPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREOESPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMBINARYOESPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (GLAD_API_PTR *PFNGLPROGRAMBINARYOESPROC)(GLuint program, GLenum binaryFormat, const void * binary, GLint length);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFEROESPROC)(GLenum target, GLenum access);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFEROESPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVOESPROC)(GLenum target, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXOESPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef void (GLAD_API_PTR *PFNGLMINSAMPLESHADINGOESPROC)(GLfloat value);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERIOESPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DOESPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DOESPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DOESPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DOESPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DOESPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVOESPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVOESPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVOESPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVOESPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVOESPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVOESPROC)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVOESPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVOESPROC)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFEROESPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERRANGEOESPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXTUREVIEWOESPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXARRAYOESPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSOESPROC)(GLsizei n, const GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLGENVERTEXARRAYSOESPROC)(GLsizei n, GLuint * arrays);
typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXARRAYOESPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTARRAYVOESPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFOESPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFVOESPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORARRAYVOESPROC)(GLuint first, GLsizei count, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDOESPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDVOESPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEARRAYFVOESPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDFOESPROC)(GLuint index, GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLGETFLOATI_VOESPROC)(GLenum target, GLuint index, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews);
typedef void (GLAD_API_PTR *PFNGLALPHAFUNCQCOMPROC)(GLenum func, GLclampf ref);
typedef void (GLAD_API_PTR *PFNGLGETDRIVERCONTROLSQCOMPROC)(GLint * num, GLsizei size, GLuint * driverControls);
typedef void (GLAD_API_PTR *PFNGLGETDRIVERCONTROLSTRINGQCOMPROC)(GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString);
typedef void (GLAD_API_PTR *PFNGLENABLEDRIVERCONTROLQCOMPROC)(GLuint driverControl);
typedef void (GLAD_API_PTR *PFNGLDISABLEDRIVERCONTROLQCOMPROC)(GLuint driverControl);
typedef void (GLAD_API_PTR *PFNGLEXTGETTEXTURESQCOMPROC)(GLuint * textures, GLint maxTextures, GLint * numTextures);
typedef void (GLAD_API_PTR *PFNGLEXTGETBUFFERSQCOMPROC)(GLuint * buffers, GLint maxBuffers, GLint * numBuffers);
typedef void (GLAD_API_PTR *PFNGLEXTGETRENDERBUFFERSQCOMPROC)(GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers);
typedef void (GLAD_API_PTR *PFNGLEXTGETFRAMEBUFFERSQCOMPROC)(GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers);
typedef void (GLAD_API_PTR *PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC)(GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLEXTGETTEXSUBIMAGEQCOMPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels);
typedef void (GLAD_API_PTR *PFNGLEXTGETBUFFERPOINTERVQCOMPROC)(GLenum target, void ** params);
typedef void (GLAD_API_PTR *PFNGLEXTGETSHADERSQCOMPROC)(GLuint * shaders, GLint maxShaders, GLint * numShaders);
typedef void (GLAD_API_PTR *PFNGLEXTGETPROGRAMSQCOMPROC)(GLuint * programs, GLint maxPrograms, GLint * numPrograms);
typedef GLboolean (GLAD_API_PTR *PFNGLEXTISPROGRAMBINARYQCOMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC)(GLuint program, GLenum shadertype, GLchar * source, GLint * length);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC)(GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint * providedFeatures);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC)(GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
typedef void (GLAD_API_PTR *PFNGLTEXESTIMATEMOTIONQCOMPROC)(GLuint ref, GLuint target, GLuint output);
typedef void (GLAD_API_PTR *PFNGLTEXESTIMATEMOTIONREGIONSQCOMPROC)(GLuint ref, GLuint target, GLuint output, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLEXTRAPOLATETEX2DQCOMPROC)(GLuint src1, GLuint src2, GLuint output, GLfloat scaleFactor);
typedef void (GLAD_API_PTR *PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC)(GLuint texture, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSHADINGRATEQCOMPROC)(GLenum rate);
typedef void (GLAD_API_PTR *PFNGLSTARTTILINGQCOMPROC)(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
typedef void (GLAD_API_PTR *PFNGLENDTILINGQCOMPROC)(GLbitfield preserveMask);
typedef void (GLAD_API_PTR *PFNGLBINDUNIFORMLOCATIONCHROMIUMPROC)(GLuint program, GLint location, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLCOVERAGEMODULATIONCHROMIUMPROC)(GLenum components);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURECHROMIUMPROC)(GLuint sourceId, GLint sourceLevel, GLenum destTarget, GLuint destId, GLint destLevel, GLint internalFormat, GLenum destType, GLboolean unpackFlipY, GLboolean unpackPremultiplyAlpha, GLboolean unpackUnmultiplyAlpha);
typedef void (GLAD_API_PTR *PFNGLCOPYSUBTEXTURECHROMIUMPROC)(GLuint sourceId, GLint sourceLevel, GLenum destTarget, GLuint destId, GLint destLevel, GLint xoffset, GLint yoffset, GLint x, GLint y, GLint width, GLint height, GLboolean unpackFlipY, GLboolean unpackPremultiplyAlpha, GLboolean unpackUnmultiplyAlpha);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDCOPYTEXTURECHROMIUMPROC)(GLuint sourceId, GLuint destId);
typedef void (GLAD_API_PTR *PFNGLREQUESTEXTENSIONANGLEPROC)(const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLDISABLEEXTENSIONANGLEPROC)(const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLACQUIRETEXTURESANGLEPROC)(GLuint numTextures, const GLuint * textures, const GLenum * layouts);
typedef void (GLAD_API_PTR *PFNGLRELEASETEXTURESANGLEPROC)(GLuint numTextures, const GLuint * textures, GLenum * layouts);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANVROBUSTANGLEPROC)(GLenum pname, GLsizei bufSize, GLsizei * length, GLboolean * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERI64VROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETFLOATVROBUSTANGLEPROC)(GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVROBUSTANGLEPROC)(GLenum target, GLenum attachment, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERVROBUSTANGLEPROC)(GLenum pname, GLsizei bufSize, GLsizei * length, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVROBUSTANGLEPROC)(GLuint program, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSHADERIVROBUSTANGLEPROC)(GLuint shader, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERFVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMFVROBUSTANGLEPROC)(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMIVROBUSTANGLEPROC)(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVROBUSTANGLEPROC)(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVROBUSTANGLEPROC)(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVROBUSTANGLEPROC)(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, void ** pointer);
typedef void (GLAD_API_PTR *PFNGLREADPIXELSROBUSTANGLEPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLsizei * length, GLsizei * columns, GLsizei * rows, void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DROBUSTANGLEPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLsizei bufSize, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE2DROBUSTANGLEPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DROBUSTANGLEPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLsizei bufSize, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DROBUSTANGLEPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DROBUSTANGLEPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLsizei dataSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DROBUSTANGLEPROC)(GLenum target, GLint level, GLsizei xoffset, GLsizei yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLsizei dataSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DROBUSTANGLEPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLsizei dataSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DROBUSTANGLEPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLsizei dataSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVROBUSTANGLEPROC)(GLuint id, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERI_VROBUSTANGLEPROC)(GLenum target, GLuint index, GLsizei bufSize, GLsizei * length, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATIVROBUSTANGLEPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVROBUSTANGLEPROC)(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVROBUSTANGLEPROC)(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUIVROBUSTANGLEPROC)(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKIVROBUSTANGLEPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VROBUSTANGLEPROC)(GLenum pname, GLsizei bufSize, GLsizei * length, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64I_VROBUSTANGLEPROC)(GLenum target, GLuint index, GLsizei bufSize, GLsizei * length, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIVROBUSTANGLEPROC)(GLuint sampler, GLuint pname, GLsizei bufSize, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFVROBUSTANGLEPROC)(GLuint sampler, GLenum pname, GLsizei bufSize, const GLfloat * param);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIVROBUSTANGLEPROC)(GLuint sampler, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERFVROBUSTANGLEPROC)(GLuint sampler, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINTERFACEIVROBUSTANGLEPROC)(GLuint program, GLenum programInterface, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANI_VROBUSTANGLEPROC)(GLenum target, GLuint index, GLsizei bufSize, GLsizei * length, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETMULTISAMPLEFVROBUSTANGLEPROC)(GLenum pname, GLuint index, GLsizei bufSize, GLsizei * length, GLfloat * val);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVROBUSTANGLEPROC)(GLenum target, GLint level, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVROBUSTANGLEPROC)(GLenum target, GLint level, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVROBUSTANGLEROBUSTANGLEPROC)(GLenum pname, GLsizei bufSize, GLsizei * length, void ** params);
typedef void (GLAD_API_PTR *PFNGLREADNPIXELSROBUSTANGLEPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLsizei * length, GLsizei * columns, GLsizei * rows, void * data);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVROBUSTANGLEPROC)(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVROBUSTANGLEPROC)(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUIVROBUSTANGLEPROC)(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVROBUSTANGLEPROC)(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVROBUSTANGLEPROC)(GLuint sampler, GLenum pname, GLsizei bufSize, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVROBUSTANGLEPROC)(GLuint sampler, GLenum pname, GLsizei bufSize, const GLuint * param);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVROBUSTANGLEPROC)(GLuint sampler, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVROBUSTANGLEPROC)(GLuint sampler, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVROBUSTANGLEPROC)(GLuint id, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VROBUSTANGLEPROC)(GLuint id, GLenum pname, GLsizei bufSize, GLsizei * length, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VROBUSTANGLEPROC)(GLuint id, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGEPARAMETERFVROBUSTANGLEPROC)(GLint plane, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGEPARAMETERIVROBUSTANGLEPROC)(GLint plane, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURE3DANGLEPROC)(GLuint sourceId, GLint sourceLevel, GLenum destTarget, GLuint destId, GLint destLevel, GLint internalFormat, GLenum destType, GLboolean unpackFlipY, GLboolean unpackPremultiplyAlpha, GLboolean unpackUnmultiplyAlpha);
typedef void (GLAD_API_PTR *PFNGLCOPYSUBTEXTURE3DANGLEPROC)(GLuint sourceId, GLint sourceLevel, GLenum destTarget, GLuint destId, GLint destLevel, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLint z, GLint width, GLint height, GLint depth, GLboolean unpackFlipY, GLboolean unpackPremultiplyAlpha, GLboolean unpackUnmultiplyAlpha);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DMULTISAMPLEANGLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLGETMULTISAMPLEFVANGLEPROC)(GLenum pname, GLuint index, GLfloat * val);
typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKIANGLEPROC)(GLuint maskNumber, GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSANGLEPROC)(GLenum mode, const GLint * firsts, const GLsizei * counts, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINSTANCEDANGLEPROC)(GLenum mode, const GLint * firsts, const GLsizei * counts, const GLsizei * instanceCounts, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSANGLEPROC)(GLenum mode, const GLsizei * counts, GLenum type, const void *const* indices, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINSTANCEDANGLEPROC)(GLenum mode, const GLsizei * counts, GLenum type, const void *const* indices, const GLsizei* instanceCounts, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEANGLEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instanceCount, GLuint baseInstance);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEANGLEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instanceCount, GLint baseVertex, GLuint baseInstance);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINSTANCEDBASEINSTANCEANGLEPROC)(GLenum mode, const GLint * firsts, const GLsizei * counts, const GLsizei * instanceCounts, const GLuint * baseInstances, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEANGLEPROC)(GLenum mode, const GLsizei * counts, GLenum type, const void *const* indices, const GLsizei * instanceCounts, const GLint * baseVertices, const GLuint * baseInstances, GLsizei drawcount);
typedef void (GLAD_API_PTR *PFNGLPOLYGONMODEANGLEPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLPROVOKINGVERTEXANGLEPROC)(GLenum provokeMode);
typedef void (GLAD_API_PTR *PFNGLLOSECONTEXTCHROMIUMPROC)(GLenum current, GLenum other);
typedef void (GLAD_API_PTR *PFNGLGETTEXIMAGEANGLEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEANGLEPROC)(GLenum target, GLint level, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERIMAGEANGLEPROC)(GLenum target, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVANGLEPROC)(GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVANGLEPROC)(GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERMEMORYLESSPIXELLOCALSTORAGEANGLEPROC)(GLint plane, GLenum internalformat);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREPIXELLOCALSTORAGEANGLEPROC)(GLint plane, GLuint backingtexture, GLint level, GLint layer);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPIXELLOCALCLEARVALUEFVANGLEPROC)(GLint plane, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPIXELLOCALCLEARVALUEIVANGLEPROC)(GLint plane, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPIXELLOCALCLEARVALUEUIVANGLEPROC)(GLint plane, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLBEGINPIXELLOCALSTORAGEANGLEPROC)(GLsizei n, const GLenum * loadops);
typedef void (GLAD_API_PTR *PFNGLENDPIXELLOCALSTORAGEANGLEPROC)(GLsizei n, const GLenum * storeops);
typedef void (GLAD_API_PTR *PFNGLPIXELLOCALSTORAGEBARRIERANGLEPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPIXELLOCALSTORAGEINTERRUPTANGLEPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPIXELLOCALSTORAGERESTOREANGLEPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGEPARAMETERFVANGLEPROC)(GLint plane, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGEPARAMETERIVANGLEPROC)(GLint plane, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLLOGICOPANGLEPROC)(GLenum opcode);
typedef void (GLAD_API_PTR *PFNGLBLOBCACHECALLBACKSANGLEPROC)(GLSETBLOBPROCANGLE set, GLGETBLOBPROCANGLE get, const void * userParam);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVANGLEPROC)(GLenum pname, void ** params);

typedef struct GladGLContext {
    void* userptr;

    union {
        unsigned char featArray[23];
        struct {
        /*    0 */ unsigned char VERSION_1_0;
        /*    1 */ unsigned char VERSION_1_1;
        /*    2 */ unsigned char VERSION_1_2;
        /*    3 */ unsigned char VERSION_1_3;
        /*    4 */ unsigned char VERSION_1_4;
        /*    5 */ unsigned char VERSION_1_5;
        /*    6 */ unsigned char VERSION_2_0;
        /*    7 */ unsigned char VERSION_2_1;
        /*    8 */ unsigned char VERSION_3_0;
        /*    9 */ unsigned char VERSION_3_1;
        /*   10 */ unsigned char VERSION_3_2;
        /*   11 */ unsigned char VERSION_3_3;
        /*   12 */ unsigned char VERSION_4_0;
        /*   13 */ unsigned char VERSION_4_1;
        /*   14 */ unsigned char VERSION_4_2;
        /*   15 */ unsigned char VERSION_4_3;
        /*   16 */ unsigned char VERSION_4_4;
        /*   17 */ unsigned char VERSION_4_5;
        /*   18 */ unsigned char VERSION_4_6;
        /*   19 */ unsigned char ES_VERSION_2_0;
        /*   20 */ unsigned char ES_VERSION_3_0;
        /*   21 */ unsigned char ES_VERSION_3_1;
        /*   22 */ unsigned char ES_VERSION_3_2;
        };
    };

    union {
        unsigned char extArray[967];
        struct {
        /*    0 */ unsigned char _3DFX_multisample;
        /*    1 */ unsigned char _3DFX_tbuffer;
        /*    2 */ unsigned char _3DFX_texture_compression_FXT1;
        /*    3 */ unsigned char AMD_blend_minmax_factor;
        /*    4 */ unsigned char AMD_compressed_3DC_texture;
        /*    5 */ unsigned char AMD_compressed_ATC_texture;
        /*    6 */ unsigned char AMD_conservative_depth;
        /*    7 */ unsigned char AMD_debug_output;
        /*    8 */ unsigned char AMD_depth_clamp_separate;
        /*    9 */ unsigned char AMD_draw_buffers_blend;
        /*   10 */ unsigned char AMD_framebuffer_multisample_advanced;
        /*   11 */ unsigned char AMD_framebuffer_sample_positions;
        /*   12 */ unsigned char AMD_gcn_shader;
        /*   13 */ unsigned char AMD_gpu_shader_half_float;
        /*   14 */ unsigned char AMD_gpu_shader_int16;
        /*   15 */ unsigned char AMD_gpu_shader_int64;
        /*   16 */ unsigned char AMD_interleaved_elements;
        /*   17 */ unsigned char AMD_multi_draw_indirect;
        /*   18 */ unsigned char AMD_name_gen_delete;
        /*   19 */ unsigned char AMD_occlusion_query_event;
        /*   20 */ unsigned char AMD_performance_monitor;
        /*   21 */ unsigned char AMD_pinned_memory;
        /*   22 */ unsigned char AMD_program_binary_Z400;
        /*   23 */ unsigned char AMD_query_buffer_object;
        /*   24 */ unsigned char AMD_sample_positions;
        /*   25 */ unsigned char AMD_seamless_cubemap_per_texture;
        /*   26 */ unsigned char AMD_shader_atomic_counter_ops;
        /*   27 */ unsigned char AMD_shader_ballot;
        /*   28 */ unsigned char AMD_shader_explicit_vertex_parameter;
        /*   29 */ unsigned char AMD_shader_fragment_mask;
        /*   30 */ unsigned char AMD_shader_gpu_shader_half_float_fetch;
        /*   31 */ unsigned char AMD_shader_image_load_store_lod;
        /*   32 */ unsigned char AMD_shader_stencil_export;
        /*   33 */ unsigned char AMD_shader_trinary_minmax;
        /*   34 */ unsigned char AMD_sparse_texture;
        /*   35 */ unsigned char AMD_stencil_operation_extended;
        /*   36 */ unsigned char AMD_texture_gather_bias_lod;
        /*   37 */ unsigned char AMD_texture_texture4;
        /*   38 */ unsigned char AMD_transform_feedback3_lines_triangles;
        /*   39 */ unsigned char AMD_transform_feedback4;
        /*   40 */ unsigned char AMD_vertex_shader_layer;
        /*   41 */ unsigned char AMD_vertex_shader_tessellator;
        /*   42 */ unsigned char AMD_vertex_shader_viewport_index;
        /*   43 */ unsigned char ANDROID_extension_pack_es31a;
        /*   44 */ unsigned char ANGLE_base_vertex_base_instance;
        /*   45 */ unsigned char ANGLE_blob_cache;
        /*   46 */ unsigned char ANGLE_client_arrays;
        /*   47 */ unsigned char ANGLE_clip_cull_distance;
        /*   48 */ unsigned char ANGLE_copy_texture_3d;
        /*   49 */ unsigned char ANGLE_depth_texture;
        /*   50 */ unsigned char ANGLE_framebuffer_blit;
        /*   51 */ unsigned char ANGLE_framebuffer_multisample;
        /*   52 */ unsigned char ANGLE_get_image;
        /*   53 */ unsigned char ANGLE_get_serialized_context_string;
        /*   54 */ unsigned char ANGLE_get_tex_level_parameter;
        /*   55 */ unsigned char ANGLE_instanced_arrays;
        /*   56 */ unsigned char ANGLE_logic_op;
        /*   57 */ unsigned char ANGLE_lossy_etc_decode;
        /*   58 */ unsigned char ANGLE_memory_object_flags;
        /*   59 */ unsigned char ANGLE_memory_object_fuchsia;
        /*   60 */ unsigned char ANGLE_memory_size;
        /*   61 */ unsigned char ANGLE_multi_draw;
        /*   62 */ unsigned char ANGLE_pack_reverse_row_order;
        /*   63 */ unsigned char ANGLE_polygon_mode;
        /*   64 */ unsigned char ANGLE_program_binary;
        /*   65 */ unsigned char ANGLE_program_binary_readiness_query;
        /*   66 */ unsigned char ANGLE_program_cache_control;
        /*   67 */ unsigned char ANGLE_provoking_vertex;
        /*   68 */ unsigned char ANGLE_renderability_validation;
        /*   69 */ unsigned char ANGLE_request_extension;
        /*   70 */ unsigned char ANGLE_rgbx_internal_format;
        /*   71 */ unsigned char ANGLE_robust_client_memory;
        /*   72 */ unsigned char ANGLE_robust_fragment_shader_output;
        /*   73 */ unsigned char ANGLE_robust_resource_initialization;
        /*   74 */ unsigned char ANGLE_semaphore_fuchsia;
        /*   75 */ unsigned char ANGLE_shader_binary;
        /*   76 */ unsigned char ANGLE_shader_pixel_local_storage;
        /*   77 */ unsigned char ANGLE_stencil_texturing;
        /*   78 */ unsigned char ANGLE_texture_compression_dxt1;
        /*   79 */ unsigned char ANGLE_texture_compression_dxt3;
        /*   80 */ unsigned char ANGLE_texture_compression_dxt5;
        /*   81 */ unsigned char ANGLE_texture_external_update;
        /*   82 */ unsigned char ANGLE_texture_multisample;
        /*   83 */ unsigned char ANGLE_texture_usage;
        /*   84 */ unsigned char ANGLE_translated_shader_source;
        /*   85 */ unsigned char ANGLE_vulkan_image;
        /*   86 */ unsigned char ANGLE_yuv_internal_format;
        /*   87 */ unsigned char APPLE_aux_depth_stencil;
        /*   88 */ unsigned char APPLE_client_storage;
        /*   89 */ unsigned char APPLE_clip_distance;
        /*   90 */ unsigned char APPLE_color_buffer_packed_float;
        /*   91 */ unsigned char APPLE_copy_texture_levels;
        /*   92 */ unsigned char APPLE_element_array;
        /*   93 */ unsigned char APPLE_fence;
        /*   94 */ unsigned char APPLE_float_pixels;
        /*   95 */ unsigned char APPLE_flush_buffer_range;
        /*   96 */ unsigned char APPLE_framebuffer_multisample;
        /*   97 */ unsigned char APPLE_object_purgeable;
        /*   98 */ unsigned char APPLE_rgb_422;
        /*   99 */ unsigned char APPLE_row_bytes;
        /*  100 */ unsigned char APPLE_specular_vector;
        /*  101 */ unsigned char APPLE_sync;
        /*  102 */ unsigned char APPLE_texture_format_BGRA8888;
        /*  103 */ unsigned char APPLE_texture_max_level;
        /*  104 */ unsigned char APPLE_texture_packed_float;
        /*  105 */ unsigned char APPLE_texture_range;
        /*  106 */ unsigned char APPLE_transform_hint;
        /*  107 */ unsigned char APPLE_vertex_array_object;
        /*  108 */ unsigned char APPLE_vertex_array_range;
        /*  109 */ unsigned char APPLE_vertex_program_evaluators;
        /*  110 */ unsigned char APPLE_ycbcr_422;
        /*  111 */ unsigned char ARB_ES2_compatibility;
        /*  112 */ unsigned char ARB_ES3_1_compatibility;
        /*  113 */ unsigned char ARB_ES3_2_compatibility;
        /*  114 */ unsigned char ARB_ES3_compatibility;
        /*  115 */ unsigned char ARB_arrays_of_arrays;
        /*  116 */ unsigned char ARB_base_instance;
        /*  117 */ unsigned char ARB_bindless_texture;
        /*  118 */ unsigned char ARB_blend_func_extended;
        /*  119 */ unsigned char ARB_buffer_storage;
        /*  120 */ unsigned char ARB_cl_event;
        /*  121 */ unsigned char ARB_clear_buffer_object;
        /*  122 */ unsigned char ARB_clear_texture;
        /*  123 */ unsigned char ARB_clip_control;
        /*  124 */ unsigned char ARB_color_buffer_float;
        /*  125 */ unsigned char ARB_compatibility;
        /*  126 */ unsigned char ARB_compressed_texture_pixel_storage;
        /*  127 */ unsigned char ARB_compute_shader;
        /*  128 */ unsigned char ARB_compute_variable_group_size;
        /*  129 */ unsigned char ARB_conditional_render_inverted;
        /*  130 */ unsigned char ARB_conservative_depth;
        /*  131 */ unsigned char ARB_copy_buffer;
        /*  132 */ unsigned char ARB_copy_image;
        /*  133 */ unsigned char ARB_cull_distance;
        /*  134 */ unsigned char ARB_debug_output;
        /*  135 */ unsigned char ARB_depth_buffer_float;
        /*  136 */ unsigned char ARB_depth_clamp;
        /*  137 */ unsigned char ARB_depth_texture;
        /*  138 */ unsigned char ARB_derivative_control;
        /*  139 */ unsigned char ARB_direct_state_access;
        /*  140 */ unsigned char ARB_draw_buffers;
        /*  141 */ unsigned char ARB_draw_buffers_blend;
        /*  142 */ unsigned char ARB_draw_elements_base_vertex;
        /*  143 */ unsigned char ARB_draw_indirect;
        /*  144 */ unsigned char ARB_draw_instanced;
        /*  145 */ unsigned char ARB_enhanced_layouts;
        /*  146 */ unsigned char ARB_explicit_attrib_location;
        /*  147 */ unsigned char ARB_explicit_uniform_location;
        /*  148 */ unsigned char ARB_fragment_coord_conventions;
        /*  149 */ unsigned char ARB_fragment_layer_viewport;
        /*  150 */ unsigned char ARB_fragment_program;
        /*  151 */ unsigned char ARB_fragment_program_shadow;
        /*  152 */ unsigned char ARB_fragment_shader;
        /*  153 */ unsigned char ARB_fragment_shader_interlock;
        /*  154 */ unsigned char ARB_framebuffer_no_attachments;
        /*  155 */ unsigned char ARB_framebuffer_object;
        /*  156 */ unsigned char ARB_framebuffer_sRGB;
        /*  157 */ unsigned char ARB_geometry_shader4;
        /*  158 */ unsigned char ARB_get_program_binary;
        /*  159 */ unsigned char ARB_get_texture_sub_image;
        /*  160 */ unsigned char ARB_gl_spirv;
        /*  161 */ unsigned char ARB_gpu_shader5;
        /*  162 */ unsigned char ARB_gpu_shader_fp64;
        /*  163 */ unsigned char ARB_gpu_shader_int64;
        /*  164 */ unsigned char ARB_half_float_pixel;
        /*  165 */ unsigned char ARB_half_float_vertex;
        /*  166 */ unsigned char ARB_imaging;
        /*  167 */ unsigned char ARB_indirect_parameters;
        /*  168 */ unsigned char ARB_instanced_arrays;
        /*  169 */ unsigned char ARB_internalformat_query;
        /*  170 */ unsigned char ARB_internalformat_query2;
        /*  171 */ unsigned char ARB_invalidate_subdata;
        /*  172 */ unsigned char ARB_map_buffer_alignment;
        /*  173 */ unsigned char ARB_map_buffer_range;
        /*  174 */ unsigned char ARB_matrix_palette;
        /*  175 */ unsigned char ARB_multi_bind;
        /*  176 */ unsigned char ARB_multi_draw_indirect;
        /*  177 */ unsigned char ARB_multisample;
        /*  178 */ unsigned char ARB_multitexture;
        /*  179 */ unsigned char ARB_occlusion_query;
        /*  180 */ unsigned char ARB_occlusion_query2;
        /*  181 */ unsigned char ARB_parallel_shader_compile;
        /*  182 */ unsigned char ARB_pipeline_statistics_query;
        /*  183 */ unsigned char ARB_pixel_buffer_object;
        /*  184 */ unsigned char ARB_point_parameters;
        /*  185 */ unsigned char ARB_point_sprite;
        /*  186 */ unsigned char ARB_polygon_offset_clamp;
        /*  187 */ unsigned char ARB_post_depth_coverage;
        /*  188 */ unsigned char ARB_program_interface_query;
        /*  189 */ unsigned char ARB_provoking_vertex;
        /*  190 */ unsigned char ARB_query_buffer_object;
        /*  191 */ unsigned char ARB_robust_buffer_access_behavior;
        /*  192 */ unsigned char ARB_robustness;
        /*  193 */ unsigned char ARB_robustness_isolation;
        /*  194 */ unsigned char ARB_sample_locations;
        /*  195 */ unsigned char ARB_sample_shading;
        /*  196 */ unsigned char ARB_sampler_objects;
        /*  197 */ unsigned char ARB_seamless_cube_map;
        /*  198 */ unsigned char ARB_seamless_cubemap_per_texture;
        /*  199 */ unsigned char ARB_separate_shader_objects;
        /*  200 */ unsigned char ARB_shader_atomic_counter_ops;
        /*  201 */ unsigned char ARB_shader_atomic_counters;
        /*  202 */ unsigned char ARB_shader_ballot;
        /*  203 */ unsigned char ARB_shader_bit_encoding;
        /*  204 */ unsigned char ARB_shader_clock;
        /*  205 */ unsigned char ARB_shader_draw_parameters;
        /*  206 */ unsigned char ARB_shader_group_vote;
        /*  207 */ unsigned char ARB_shader_image_load_store;
        /*  208 */ unsigned char ARB_shader_image_size;
        /*  209 */ unsigned char ARB_shader_objects;
        /*  210 */ unsigned char ARB_shader_precision;
        /*  211 */ unsigned char ARB_shader_stencil_export;
        /*  212 */ unsigned char ARB_shader_storage_buffer_object;
        /*  213 */ unsigned char ARB_shader_subroutine;
        /*  214 */ unsigned char ARB_shader_texture_image_samples;
        /*  215 */ unsigned char ARB_shader_texture_lod;
        /*  216 */ unsigned char ARB_shader_viewport_layer_array;
        /*  217 */ unsigned char ARB_shading_language_100;
        /*  218 */ unsigned char ARB_shading_language_420pack;
        /*  219 */ unsigned char ARB_shading_language_include;
        /*  220 */ unsigned char ARB_shading_language_packing;
        /*  221 */ unsigned char ARB_shadow;
        /*  222 */ unsigned char ARB_shadow_ambient;
        /*  223 */ unsigned char ARB_sparse_buffer;
        /*  224 */ unsigned char ARB_sparse_texture;
        /*  225 */ unsigned char ARB_sparse_texture2;
        /*  226 */ unsigned char ARB_sparse_texture_clamp;
        /*  227 */ unsigned char ARB_spirv_extensions;
        /*  228 */ unsigned char ARB_stencil_texturing;
        /*  229 */ unsigned char ARB_sync;
        /*  230 */ unsigned char ARB_tessellation_shader;
        /*  231 */ unsigned char ARB_texture_barrier;
        /*  232 */ unsigned char ARB_texture_border_clamp;
        /*  233 */ unsigned char ARB_texture_buffer_object;
        /*  234 */ unsigned char ARB_texture_buffer_object_rgb32;
        /*  235 */ unsigned char ARB_texture_buffer_range;
        /*  236 */ unsigned char ARB_texture_compression;
        /*  237 */ unsigned char ARB_texture_compression_bptc;
        /*  238 */ unsigned char ARB_texture_compression_rgtc;
        /*  239 */ unsigned char ARB_texture_cube_map;
        /*  240 */ unsigned char ARB_texture_cube_map_array;
        /*  241 */ unsigned char ARB_texture_env_add;
        /*  242 */ unsigned char ARB_texture_env_combine;
        /*  243 */ unsigned char ARB_texture_env_crossbar;
        /*  244 */ unsigned char ARB_texture_env_dot3;
        /*  245 */ unsigned char ARB_texture_filter_anisotropic;
        /*  246 */ unsigned char ARB_texture_filter_minmax;
        /*  247 */ unsigned char ARB_texture_float;
        /*  248 */ unsigned char ARB_texture_gather;
        /*  249 */ unsigned char ARB_texture_mirror_clamp_to_edge;
        /*  250 */ unsigned char ARB_texture_mirrored_repeat;
        /*  251 */ unsigned char ARB_texture_multisample;
        /*  252 */ unsigned char ARB_texture_non_power_of_two;
        /*  253 */ unsigned char ARB_texture_query_levels;
        /*  254 */ unsigned char ARB_texture_query_lod;
        /*  255 */ unsigned char ARB_texture_rectangle;
        /*  256 */ unsigned char ARB_texture_rg;
        /*  257 */ unsigned char ARB_texture_rgb10_a2ui;
        /*  258 */ unsigned char ARB_texture_stencil8;
        /*  259 */ unsigned char ARB_texture_storage;
        /*  260 */ unsigned char ARB_texture_storage_multisample;
        /*  261 */ unsigned char ARB_texture_swizzle;
        /*  262 */ unsigned char ARB_texture_view;
        /*  263 */ unsigned char ARB_timer_query;
        /*  264 */ unsigned char ARB_transform_feedback2;
        /*  265 */ unsigned char ARB_transform_feedback3;
        /*  266 */ unsigned char ARB_transform_feedback_instanced;
        /*  267 */ unsigned char ARB_transform_feedback_overflow_query;
        /*  268 */ unsigned char ARB_transpose_matrix;
        /*  269 */ unsigned char ARB_uniform_buffer_object;
        /*  270 */ unsigned char ARB_vertex_array_bgra;
        /*  271 */ unsigned char ARB_vertex_array_object;
        /*  272 */ unsigned char ARB_vertex_attrib_64bit;
        /*  273 */ unsigned char ARB_vertex_attrib_binding;
        /*  274 */ unsigned char ARB_vertex_blend;
        /*  275 */ unsigned char ARB_vertex_buffer_object;
        /*  276 */ unsigned char ARB_vertex_program;
        /*  277 */ unsigned char ARB_vertex_shader;
        /*  278 */ unsigned char ARB_vertex_type_10f_11f_11f_rev;
        /*  279 */ unsigned char ARB_vertex_type_2_10_10_10_rev;
        /*  280 */ unsigned char ARB_viewport_array;
        /*  281 */ unsigned char ARB_window_pos;
        /*  282 */ unsigned char ARM_cooperative_matrix_layouts;
        /*  283 */ unsigned char ARM_mali_program_binary;
        /*  284 */ unsigned char ARM_mali_shader_binary;
        /*  285 */ unsigned char ARM_rgba8;
        /*  286 */ unsigned char ARM_shader_core_builtins;
        /*  287 */ unsigned char ARM_shader_core_properties;
        /*  288 */ unsigned char ARM_shader_framebuffer_fetch;
        /*  289 */ unsigned char ARM_shader_framebuffer_fetch_depth_stencil;
        /*  290 */ unsigned char ARM_texture_unnormalized_coordinates;
        /*  291 */ unsigned char ATI_draw_buffers;
        /*  292 */ unsigned char ATI_element_array;
        /*  293 */ unsigned char ATI_envmap_bumpmap;
        /*  294 */ unsigned char ATI_fragment_shader;
        /*  295 */ unsigned char ATI_map_object_buffer;
        /*  296 */ unsigned char ATI_meminfo;
        /*  297 */ unsigned char ATI_pixel_format_float;
        /*  298 */ unsigned char ATI_pn_triangles;
        /*  299 */ unsigned char ATI_separate_stencil;
        /*  300 */ unsigned char ATI_text_fragment_shader;
        /*  301 */ unsigned char ATI_texture_env_combine3;
        /*  302 */ unsigned char ATI_texture_float;
        /*  303 */ unsigned char ATI_texture_mirror_once;
        /*  304 */ unsigned char ATI_vertex_array_object;
        /*  305 */ unsigned char ATI_vertex_attrib_array_object;
        /*  306 */ unsigned char ATI_vertex_streams;
        /*  307 */ unsigned char CHROMIUM_bind_uniform_location;
        /*  308 */ unsigned char CHROMIUM_copy_compressed_texture;
        /*  309 */ unsigned char CHROMIUM_copy_texture;
        /*  310 */ unsigned char CHROMIUM_framebuffer_mixed_samples;
        /*  311 */ unsigned char CHROMIUM_lose_context;
        /*  312 */ unsigned char DMP_program_binary;
        /*  313 */ unsigned char DMP_shader_binary;
        /*  314 */ unsigned char EXT_422_pixels;
        /*  315 */ unsigned char EXT_EGL_image_array;
        /*  316 */ unsigned char EXT_EGL_image_storage;
        /*  317 */ unsigned char EXT_EGL_image_storage_compression;
        /*  318 */ unsigned char EXT_EGL_sync;
        /*  319 */ unsigned char EXT_YUV_target;
        /*  320 */ unsigned char EXT_abgr;
        /*  321 */ unsigned char EXT_base_instance;
        /*  322 */ unsigned char EXT_bfloat16;
        /*  323 */ unsigned char EXT_bgra;
        /*  324 */ unsigned char EXT_bindable_uniform;
        /*  325 */ unsigned char EXT_blend_color;
        /*  326 */ unsigned char EXT_blend_equation_separate;
        /*  327 */ unsigned char EXT_blend_func_extended;
        /*  328 */ unsigned char EXT_blend_func_separate;
        /*  329 */ unsigned char EXT_blend_logic_op;
        /*  330 */ unsigned char EXT_blend_minmax;
        /*  331 */ unsigned char EXT_blend_subtract;
        /*  332 */ unsigned char EXT_buffer_reference;
        /*  333 */ unsigned char EXT_buffer_reference2;
        /*  334 */ unsigned char EXT_buffer_reference_uvec2;
        /*  335 */ unsigned char EXT_buffer_storage;
        /*  336 */ unsigned char EXT_clear_texture;
        /*  337 */ unsigned char EXT_clip_control;
        /*  338 */ unsigned char EXT_clip_cull_distance;
        /*  339 */ unsigned char EXT_clip_volume_hint;
        /*  340 */ unsigned char EXT_cmyka;
        /*  341 */ unsigned char EXT_color_buffer_float;
        /*  342 */ unsigned char EXT_color_buffer_half_float;
        /*  343 */ unsigned char EXT_color_subtable;
        /*  344 */ unsigned char EXT_compiled_vertex_array;
        /*  345 */ unsigned char EXT_conservative_depth;
        /*  346 */ unsigned char EXT_control_flow_attributes;
        /*  347 */ unsigned char EXT_control_flow_attributes2;
        /*  348 */ unsigned char EXT_convolution;
        /*  349 */ unsigned char EXT_coordinate_frame;
        /*  350 */ unsigned char EXT_copy_image;
        /*  351 */ unsigned char EXT_copy_texture;
        /*  352 */ unsigned char EXT_cull_vertex;
        /*  353 */ unsigned char EXT_debug_label;
        /*  354 */ unsigned char EXT_debug_marker;
        /*  355 */ unsigned char EXT_debug_printf;
        /*  356 */ unsigned char EXT_demote_to_helper_invocation;
        /*  357 */ unsigned char EXT_depth_bounds_test;
        /*  358 */ unsigned char EXT_depth_clamp;
        /*  359 */ unsigned char EXT_device_group;
        /*  360 */ unsigned char EXT_direct_state_access;
        /*  361 */ unsigned char EXT_discard_framebuffer;
        /*  362 */ unsigned char EXT_disjoint_timer_query;
        /*  363 */ unsigned char EXT_draw_buffers;
        /*  364 */ unsigned char EXT_draw_buffers2;
        /*  365 */ unsigned char EXT_draw_buffers_indexed;
        /*  366 */ unsigned char EXT_draw_elements_base_vertex;
        /*  367 */ unsigned char EXT_draw_instanced;
        /*  368 */ unsigned char EXT_draw_range_elements;
        /*  369 */ unsigned char EXT_draw_transform_feedback;
        /*  370 */ unsigned char EXT_expect_assume;
        /*  371 */ unsigned char EXT_external_buffer;
        /*  372 */ unsigned char EXT_float8_e5m2_e4m3;
        /*  373 */ unsigned char EXT_float_blend;
        /*  374 */ unsigned char EXT_fog_coord;
        /*  375 */ unsigned char EXT_fragment_invocation_density;
        /*  376 */ unsigned char EXT_fragment_shader_barycentric;
        /*  377 */ unsigned char EXT_fragment_shading_rate;
        /*  378 */ unsigned char EXT_framebuffer_blit;
        /*  379 */ unsigned char EXT_framebuffer_blit_layers;
        /*  380 */ unsigned char EXT_framebuffer_multisample;
        /*  381 */ unsigned char EXT_framebuffer_multisample_blit_scaled;
        /*  382 */ unsigned char EXT_framebuffer_object;
        /*  383 */ unsigned char EXT_framebuffer_sRGB;
        /*  384 */ unsigned char EXT_geometry_point_size;
        /*  385 */ unsigned char EXT_geometry_shader;
        /*  386 */ unsigned char EXT_geometry_shader4;
        /*  387 */ unsigned char EXT_gpu_program_parameters;
        /*  388 */ unsigned char EXT_gpu_shader4;
        /*  389 */ unsigned char EXT_gpu_shader5;
        /*  390 */ unsigned char EXT_histogram;
        /*  391 */ unsigned char EXT_index_array_formats;
        /*  392 */ unsigned char EXT_index_func;
        /*  393 */ unsigned char EXT_index_material;
        /*  394 */ unsigned char EXT_index_texture;
        /*  395 */ unsigned char EXT_instanced_arrays;
        /*  396 */ unsigned char EXT_integer_dot_product;
        /*  397 */ unsigned char EXT_light_texture;
        /*  398 */ unsigned char EXT_map_buffer_range;
        /*  399 */ unsigned char EXT_maximal_reconvergence;
        /*  400 */ unsigned char EXT_memory_object;
        /*  401 */ unsigned char EXT_memory_object_fd;
        /*  402 */ unsigned char EXT_memory_object_win32;
        /*  403 */ unsigned char EXT_mesh_shader;
        /*  404 */ unsigned char EXT_misc_attribute;
        /*  405 */ unsigned char EXT_multi_draw_arrays;
        /*  406 */ unsigned char EXT_multi_draw_indirect;
        /*  407 */ unsigned char EXT_multisample;
        /*  408 */ unsigned char EXT_multisampled_compatibility;
        /*  409 */ unsigned char EXT_multisampled_render_to_texture;
        /*  410 */ unsigned char EXT_multisampled_render_to_texture2;
        /*  411 */ unsigned char EXT_multiview_draw_buffers;
        /*  412 */ unsigned char EXT_multiview_tessellation_geometry_shader;
        /*  413 */ unsigned char EXT_multiview_texture_multisample;
        /*  414 */ unsigned char EXT_multiview_timer_query;
        /*  415 */ unsigned char EXT_nontemporal_keyword;
        /*  416 */ unsigned char EXT_nonuniform_qualifier;
        /*  417 */ unsigned char EXT_null_initializer;
        /*  418 */ unsigned char EXT_occlusion_query_boolean;
        /*  419 */ unsigned char EXT_opacity_micromap;
        /*  420 */ unsigned char EXT_packed_depth_stencil;
        /*  421 */ unsigned char EXT_packed_float;
        /*  422 */ unsigned char EXT_packed_pixels;
        /*  423 */ unsigned char EXT_paletted_texture;
        /*  424 */ unsigned char EXT_pixel_buffer_object;
        /*  425 */ unsigned char EXT_pixel_transform;
        /*  426 */ unsigned char EXT_pixel_transform_color_table;
        /*  427 */ unsigned char EXT_point_parameters;
        /*  428 */ unsigned char EXT_polygon_offset;
        /*  429 */ unsigned char EXT_polygon_offset_clamp;
        /*  430 */ unsigned char EXT_post_depth_coverage;
        /*  431 */ unsigned char EXT_primitive_bounding_box;
        /*  432 */ unsigned char EXT_protected_textures;
        /*  433 */ unsigned char EXT_provoking_vertex;
        /*  434 */ unsigned char EXT_pvrtc_sRGB;
        /*  435 */ unsigned char EXT_raster_multisample;
        /*  436 */ unsigned char EXT_ray_cull_mask;
        /*  437 */ unsigned char EXT_ray_flags_primitive_culling;
        /*  438 */ unsigned char EXT_ray_query;
        /*  439 */ unsigned char EXT_ray_tracing;
        /*  440 */ unsigned char EXT_ray_tracing_position_fetch;
        /*  441 */ unsigned char EXT_read_format_bgra;
        /*  442 */ unsigned char EXT_render_snorm;
        /*  443 */ unsigned char EXT_rescale_normal;
        /*  444 */ unsigned char EXT_robustness;
        /*  445 */ unsigned char EXT_sRGB;
        /*  446 */ unsigned char EXT_sRGB_write_control;
        /*  447 */ unsigned char EXT_samplerless_texture_functions;
        /*  448 */ unsigned char EXT_scalar_block_layout;
        /*  449 */ unsigned char EXT_secondary_color;
        /*  450 */ unsigned char EXT_semaphore;
        /*  451 */ unsigned char EXT_semaphore_fd;
        /*  452 */ unsigned char EXT_semaphore_win32;
        /*  453 */ unsigned char EXT_separate_depth_stencil;
        /*  454 */ unsigned char EXT_separate_shader_objects;
        /*  455 */ unsigned char EXT_separate_specular_color;
        /*  456 */ unsigned char EXT_shader_16bit_storage;
        /*  457 */ unsigned char EXT_shader_8bit_storage;
        /*  458 */ unsigned char EXT_shader_atomic_float;
        /*  459 */ unsigned char EXT_shader_atomic_float2;
        /*  460 */ unsigned char EXT_shader_atomic_int64;
        /*  461 */ unsigned char EXT_shader_explicit_arithmetic_types;
        /*  462 */ unsigned char EXT_shader_explicit_arithmetic_types_float16;
        /*  463 */ unsigned char EXT_shader_explicit_arithmetic_types_float32;
        /*  464 */ unsigned char EXT_shader_explicit_arithmetic_types_float64;
        /*  465 */ unsigned char EXT_shader_explicit_arithmetic_types_int16;
        /*  466 */ unsigned char EXT_shader_explicit_arithmetic_types_int32;
        /*  467 */ unsigned char EXT_shader_explicit_arithmetic_types_int64;
        /*  468 */ unsigned char EXT_shader_explicit_arithmetic_types_int8;
        /*  469 */ unsigned char EXT_shader_framebuffer_fetch;
        /*  470 */ unsigned char EXT_shader_framebuffer_fetch_non_coherent;
        /*  471 */ unsigned char EXT_shader_group_vote;
        /*  472 */ unsigned char EXT_shader_image_int64;
        /*  473 */ unsigned char EXT_shader_image_load_formatted;
        /*  474 */ unsigned char EXT_shader_image_load_store;
        /*  475 */ unsigned char EXT_shader_implicit_conversions;
        /*  476 */ unsigned char EXT_shader_integer_mix;
        /*  477 */ unsigned char EXT_shader_io_blocks;
        /*  478 */ unsigned char EXT_shader_non_constant_global_initializers;
        /*  479 */ unsigned char EXT_shader_pixel_local_storage;
        /*  480 */ unsigned char EXT_shader_pixel_local_storage2;
        /*  481 */ unsigned char EXT_shader_quad_control;
        /*  482 */ unsigned char EXT_shader_realtime_clock;
        /*  483 */ unsigned char EXT_shader_samples_identical;
        /*  484 */ unsigned char EXT_shader_subgroup_extended_types;
        /*  485 */ unsigned char EXT_shader_subgroup_extended_types_float16;
        /*  486 */ unsigned char EXT_shader_subgroup_extended_types_int16;
        /*  487 */ unsigned char EXT_shader_subgroup_extended_types_int64;
        /*  488 */ unsigned char EXT_shader_subgroup_extended_types_int8;
        /*  489 */ unsigned char EXT_shader_texture_lod;
        /*  490 */ unsigned char EXT_shader_tile_image;
        /*  491 */ unsigned char EXT_shadow_funcs;
        /*  492 */ unsigned char EXT_shadow_samplers;
        /*  493 */ unsigned char EXT_shared_memory_block;
        /*  494 */ unsigned char EXT_shared_texture_palette;
        /*  495 */ unsigned char EXT_sparse_texture;
        /*  496 */ unsigned char EXT_sparse_texture2;
        /*  497 */ unsigned char EXT_spec_constant_composites;
        /*  498 */ unsigned char EXT_spirv_intrinsics;
        /*  499 */ unsigned char EXT_stencil_clear_tag;
        /*  500 */ unsigned char EXT_stencil_two_side;
        /*  501 */ unsigned char EXT_stencil_wrap;
        /*  502 */ unsigned char EXT_subgroup_uniform_control_flow;
        /*  503 */ unsigned char EXT_subgroupuniform_qualifier;
        /*  504 */ unsigned char EXT_subtexture;
        /*  505 */ unsigned char EXT_terminate_invocation;
        /*  506 */ unsigned char EXT_tessellation_point_size;
        /*  507 */ unsigned char EXT_tessellation_shader;
        /*  508 */ unsigned char EXT_texture;
        /*  509 */ unsigned char EXT_texture3D;
        /*  510 */ unsigned char EXT_texture_array;
        /*  511 */ unsigned char EXT_texture_border_clamp;
        /*  512 */ unsigned char EXT_texture_buffer;
        /*  513 */ unsigned char EXT_texture_buffer_object;
        /*  514 */ unsigned char EXT_texture_compression_astc_decode_mode;
        /*  515 */ unsigned char EXT_texture_compression_bptc;
        /*  516 */ unsigned char EXT_texture_compression_dxt1;
        /*  517 */ unsigned char EXT_texture_compression_latc;
        /*  518 */ unsigned char EXT_texture_compression_rgtc;
        /*  519 */ unsigned char EXT_texture_compression_s3tc;
        /*  520 */ unsigned char EXT_texture_compression_s3tc_srgb;
        /*  521 */ unsigned char EXT_texture_cube_map;
        /*  522 */ unsigned char EXT_texture_cube_map_array;
        /*  523 */ unsigned char EXT_texture_env_add;
        /*  524 */ unsigned char EXT_texture_env_combine;
        /*  525 */ unsigned char EXT_texture_env_dot3;
        /*  526 */ unsigned char EXT_texture_filter_anisotropic;
        /*  527 */ unsigned char EXT_texture_filter_minmax;
        /*  528 */ unsigned char EXT_texture_format_BGRA8888;
        /*  529 */ unsigned char EXT_texture_format_sRGB_override;
        /*  530 */ unsigned char EXT_texture_integer;
        /*  531 */ unsigned char EXT_texture_lod_bias;
        /*  532 */ unsigned char EXT_texture_mirror_clamp;
        /*  533 */ unsigned char EXT_texture_mirror_clamp_to_edge;
        /*  534 */ unsigned char EXT_texture_norm16;
        /*  535 */ unsigned char EXT_texture_object;
        /*  536 */ unsigned char EXT_texture_offset_non_const;
        /*  537 */ unsigned char EXT_texture_perturb_normal;
        /*  538 */ unsigned char EXT_texture_query_lod;
        /*  539 */ unsigned char EXT_texture_rg;
        /*  540 */ unsigned char EXT_texture_sRGB;
        /*  541 */ unsigned char EXT_texture_sRGB_R8;
        /*  542 */ unsigned char EXT_texture_sRGB_RG8;
        /*  543 */ unsigned char EXT_texture_sRGB_decode;
        /*  544 */ unsigned char EXT_texture_shadow_lod;
        /*  545 */ unsigned char EXT_texture_shared_exponent;
        /*  546 */ unsigned char EXT_texture_snorm;
        /*  547 */ unsigned char EXT_texture_storage;
        /*  548 */ unsigned char EXT_texture_storage_compression;
        /*  549 */ unsigned char EXT_texture_swizzle;
        /*  550 */ unsigned char EXT_texture_type_2_10_10_10_REV;
        /*  551 */ unsigned char EXT_texture_view;
        /*  552 */ unsigned char EXT_timer_query;
        /*  553 */ unsigned char EXT_transform_feedback;
        /*  554 */ unsigned char EXT_unpack_subimage;
        /*  555 */ unsigned char EXT_vertex_array;
        /*  556 */ unsigned char EXT_vertex_array_bgra;
        /*  557 */ unsigned char EXT_vertex_attrib_64bit;
        /*  558 */ unsigned char EXT_vertex_shader;
        /*  559 */ unsigned char EXT_vertex_weighting;
        /*  560 */ unsigned char EXT_vulkan_glsl_relaxed;
        /*  561 */ unsigned char EXT_win32_keyed_mutex;
        /*  562 */ unsigned char EXT_window_rectangles;
        /*  563 */ unsigned char EXT_x11_sync_object;
        /*  564 */ unsigned char FJ_shader_binary_GCCSO;
        /*  565 */ unsigned char GREMEDY_frame_terminator;
        /*  566 */ unsigned char GREMEDY_string_marker;
        /*  567 */ unsigned char HP_convolution_border_modes;
        /*  568 */ unsigned char HP_image_transform;
        /*  569 */ unsigned char HP_occlusion_test;
        /*  570 */ unsigned char HP_texture_lighting;
        /*  571 */ unsigned char HUAWEI_cluster_culling_shader;
        /*  572 */ unsigned char HUAWEI_program_binary;
        /*  573 */ unsigned char HUAWEI_shader_binary;
        /*  574 */ unsigned char HUAWEI_subpass_shading;
        /*  575 */ unsigned char IBM_cull_vertex;
        /*  576 */ unsigned char IBM_multimode_draw_arrays;
        /*  577 */ unsigned char IBM_rasterpos_clip;
        /*  578 */ unsigned char IBM_static_data;
        /*  579 */ unsigned char IBM_texture_mirrored_repeat;
        /*  580 */ unsigned char IBM_vertex_array_lists;
        /*  581 */ unsigned char IMG_bindless_texture;
        /*  582 */ unsigned char IMG_framebuffer_downsample;
        /*  583 */ unsigned char IMG_multisampled_render_to_texture;
        /*  584 */ unsigned char IMG_program_binary;
        /*  585 */ unsigned char IMG_read_format;
        /*  586 */ unsigned char IMG_shader_binary;
        /*  587 */ unsigned char IMG_texture_compression_pvrtc;
        /*  588 */ unsigned char IMG_texture_compression_pvrtc2;
        /*  589 */ unsigned char IMG_texture_filter_cubic;
        /*  590 */ unsigned char INGR_blend_func_separate;
        /*  591 */ unsigned char INGR_color_clamp;
        /*  592 */ unsigned char INGR_interlace_read;
        /*  593 */ unsigned char INTEL_blackhole_render;
        /*  594 */ unsigned char INTEL_conservative_rasterization;
        /*  595 */ unsigned char INTEL_fragment_shader_ordering;
        /*  596 */ unsigned char INTEL_framebuffer_CMAA;
        /*  597 */ unsigned char INTEL_map_texture;
        /*  598 */ unsigned char INTEL_parallel_arrays;
        /*  599 */ unsigned char INTEL_performance_query;
        /*  600 */ unsigned char KHR_blend_equation_advanced;
        /*  601 */ unsigned char KHR_blend_equation_advanced_coherent;
        /*  602 */ unsigned char KHR_context_flush_control;
        /*  603 */ unsigned char KHR_cooperative_matrix;
        /*  604 */ unsigned char KHR_debug;
        /*  605 */ unsigned char KHR_memory_scope_semantics;
        /*  606 */ unsigned char KHR_no_error;
        /*  607 */ unsigned char KHR_parallel_shader_compile;
        /*  608 */ unsigned char KHR_robust_buffer_access_behavior;
        /*  609 */ unsigned char KHR_robustness;
        /*  610 */ unsigned char KHR_shader_subgroup;
        /*  611 */ unsigned char KHR_shader_subgroup_arithmetic;
        /*  612 */ unsigned char KHR_shader_subgroup_ballot;
        /*  613 */ unsigned char KHR_shader_subgroup_basic;
        /*  614 */ unsigned char KHR_shader_subgroup_clustered;
        /*  615 */ unsigned char KHR_shader_subgroup_quad;
        /*  616 */ unsigned char KHR_shader_subgroup_rotate;
        /*  617 */ unsigned char KHR_shader_subgroup_shuffle;
        /*  618 */ unsigned char KHR_shader_subgroup_shuffle_relative;
        /*  619 */ unsigned char KHR_shader_subgroup_vote;
        /*  620 */ unsigned char KHR_texture_compression_astc_hdr;
        /*  621 */ unsigned char KHR_texture_compression_astc_ldr;
        /*  622 */ unsigned char KHR_texture_compression_astc_sliced_3d;
        /*  623 */ unsigned char KHR_vulkan_glsl;
        /*  624 */ unsigned char MESAX_texture_stack;
        /*  625 */ unsigned char MESA_bgra;
        /*  626 */ unsigned char MESA_framebuffer_flip_x;
        /*  627 */ unsigned char MESA_framebuffer_flip_y;
        /*  628 */ unsigned char MESA_framebuffer_swap_xy;
        /*  629 */ unsigned char MESA_pack_invert;
        /*  630 */ unsigned char MESA_program_binary_formats;
        /*  631 */ unsigned char MESA_resize_buffers;
        /*  632 */ unsigned char MESA_sampler_objects;
        /*  633 */ unsigned char MESA_shader_integer_functions;
        /*  634 */ unsigned char MESA_texture_const_bandwidth;
        /*  635 */ unsigned char MESA_tile_raster_order;
        /*  636 */ unsigned char MESA_window_pos;
        /*  637 */ unsigned char MESA_ycbcr_texture;
        /*  638 */ unsigned char NVX_blend_equation_advanced_multi_draw_buffers;
        /*  639 */ unsigned char NVX_conditional_render;
        /*  640 */ unsigned char NVX_gpu_memory_info;
        /*  641 */ unsigned char NVX_gpu_multicast2;
        /*  642 */ unsigned char NVX_linked_gpu_multicast;
        /*  643 */ unsigned char NVX_multiview_per_view_attributes;
        /*  644 */ unsigned char NVX_progress_fence;
        /*  645 */ unsigned char NV_alpha_to_coverage_dither_control;
        /*  646 */ unsigned char NV_bindless_multi_draw_indirect;
        /*  647 */ unsigned char NV_bindless_multi_draw_indirect_count;
        /*  648 */ unsigned char NV_bindless_texture;
        /*  649 */ unsigned char NV_blend_equation_advanced;
        /*  650 */ unsigned char NV_blend_equation_advanced_coherent;
        /*  651 */ unsigned char NV_blend_minmax_factor;
        /*  652 */ unsigned char NV_blend_square;
        /*  653 */ unsigned char NV_clip_space_w_scaling;
        /*  654 */ unsigned char NV_cluster_acceleration_structure;
        /*  655 */ unsigned char NV_command_list;
        /*  656 */ unsigned char NV_compute_program5;
        /*  657 */ unsigned char NV_compute_shader_derivatives;
        /*  658 */ unsigned char NV_conditional_render;
        /*  659 */ unsigned char NV_conservative_raster;
        /*  660 */ unsigned char NV_conservative_raster_dilate;
        /*  661 */ unsigned char NV_conservative_raster_pre_snap;
        /*  662 */ unsigned char NV_conservative_raster_pre_snap_triangles;
        /*  663 */ unsigned char NV_conservative_raster_underestimation;
        /*  664 */ unsigned char NV_cooperative_matrix;
        /*  665 */ unsigned char NV_cooperative_matrix2;
        /*  666 */ unsigned char NV_cooperative_vector;
        /*  667 */ unsigned char NV_copy_buffer;
        /*  668 */ unsigned char NV_copy_depth_to_color;
        /*  669 */ unsigned char NV_copy_image;
        /*  670 */ unsigned char NV_coverage_sample;
        /*  671 */ unsigned char NV_deep_texture3D;
        /*  672 */ unsigned char NV_depth_buffer_float;
        /*  673 */ unsigned char NV_depth_clamp;
        /*  674 */ unsigned char NV_depth_nonlinear;
        /*  675 */ unsigned char NV_displacement_micromap;
        /*  676 */ unsigned char NV_draw_buffers;
        /*  677 */ unsigned char NV_draw_instanced;
        /*  678 */ unsigned char NV_draw_texture;
        /*  679 */ unsigned char NV_draw_vulkan_image;
        /*  680 */ unsigned char NV_evaluators;
        /*  681 */ unsigned char NV_explicit_attrib_location;
        /*  682 */ unsigned char NV_explicit_multisample;
        /*  683 */ unsigned char NV_fbo_color_attachments;
        /*  684 */ unsigned char NV_fence;
        /*  685 */ unsigned char NV_fill_rectangle;
        /*  686 */ unsigned char NV_float_buffer;
        /*  687 */ unsigned char NV_fog_distance;
        /*  688 */ unsigned char NV_fragment_coverage_to_color;
        /*  689 */ unsigned char NV_fragment_program;
        /*  690 */ unsigned char NV_fragment_program2;
        /*  691 */ unsigned char NV_fragment_program4;
        /*  692 */ unsigned char NV_fragment_program_option;
        /*  693 */ unsigned char NV_fragment_shader_barycentric;
        /*  694 */ unsigned char NV_fragment_shader_interlock;
        /*  695 */ unsigned char NV_framebuffer_blit;
        /*  696 */ unsigned char NV_framebuffer_mixed_samples;
        /*  697 */ unsigned char NV_framebuffer_multisample;
        /*  698 */ unsigned char NV_framebuffer_multisample_coverage;
        /*  699 */ unsigned char NV_generate_mipmap_sRGB;
        /*  700 */ unsigned char NV_geometry_program4;
        /*  701 */ unsigned char NV_geometry_shader4;
        /*  702 */ unsigned char NV_geometry_shader_passthrough;
        /*  703 */ unsigned char NV_gpu_multicast;
        /*  704 */ unsigned char NV_gpu_program4;
        /*  705 */ unsigned char NV_gpu_program5;
        /*  706 */ unsigned char NV_gpu_program5_mem_extended;
        /*  707 */ unsigned char NV_gpu_shader5;
        /*  708 */ unsigned char NV_half_float;
        /*  709 */ unsigned char NV_image_formats;
        /*  710 */ unsigned char NV_instanced_arrays;
        /*  711 */ unsigned char NV_integer_cooperative_matrix;
        /*  712 */ unsigned char NV_internalformat_sample_query;
        /*  713 */ unsigned char NV_light_max_exponent;
        /*  714 */ unsigned char NV_linear_swept_spheres;
        /*  715 */ unsigned char NV_memory_attachment;
        /*  716 */ unsigned char NV_memory_object_sparse;
        /*  717 */ unsigned char NV_mesh_shader;
        /*  718 */ unsigned char NV_multisample_coverage;
        /*  719 */ unsigned char NV_multisample_filter_hint;
        /*  720 */ unsigned char NV_non_square_matrices;
        /*  721 */ unsigned char NV_occlusion_query;
        /*  722 */ unsigned char NV_pack_subimage;
        /*  723 */ unsigned char NV_packed_depth_stencil;
        /*  724 */ unsigned char NV_parameter_buffer_object;
        /*  725 */ unsigned char NV_parameter_buffer_object2;
        /*  726 */ unsigned char NV_path_rendering;
        /*  727 */ unsigned char NV_path_rendering_shared_edge;
        /*  728 */ unsigned char NV_pixel_buffer_object;
        /*  729 */ unsigned char NV_pixel_data_range;
        /*  730 */ unsigned char NV_point_sprite;
        /*  731 */ unsigned char NV_polygon_mode;
        /*  732 */ unsigned char NV_present_video;
        /*  733 */ unsigned char NV_primitive_restart;
        /*  734 */ unsigned char NV_primitive_shading_rate;
        /*  735 */ unsigned char NV_query_resource;
        /*  736 */ unsigned char NV_query_resource_tag;
        /*  737 */ unsigned char NV_ray_tracing;
        /*  738 */ unsigned char NV_ray_tracing_motion_blur;
        /*  739 */ unsigned char NV_read_buffer;
        /*  740 */ unsigned char NV_read_buffer_front;
        /*  741 */ unsigned char NV_read_depth;
        /*  742 */ unsigned char NV_read_depth_stencil;
        /*  743 */ unsigned char NV_read_stencil;
        /*  744 */ unsigned char NV_register_combiners;
        /*  745 */ unsigned char NV_register_combiners2;
        /*  746 */ unsigned char NV_representative_fragment_test;
        /*  747 */ unsigned char NV_robustness_video_memory_purge;
        /*  748 */ unsigned char NV_sRGB_formats;
        /*  749 */ unsigned char NV_sample_locations;
        /*  750 */ unsigned char NV_sample_mask_override_coverage;
        /*  751 */ unsigned char NV_scissor_exclusive;
        /*  752 */ unsigned char NV_shader_atomic_counters;
        /*  753 */ unsigned char NV_shader_atomic_float;
        /*  754 */ unsigned char NV_shader_atomic_float64;
        /*  755 */ unsigned char NV_shader_atomic_fp16_vector;
        /*  756 */ unsigned char NV_shader_atomic_int64;
        /*  757 */ unsigned char NV_shader_buffer_load;
        /*  758 */ unsigned char NV_shader_buffer_store;
        /*  759 */ unsigned char NV_shader_invocation_reorder;
        /*  760 */ unsigned char NV_shader_noperspective_interpolation;
        /*  761 */ unsigned char NV_shader_sm_builtins;
        /*  762 */ unsigned char NV_shader_storage_buffer_object;
        /*  763 */ unsigned char NV_shader_subgroup_partitioned;
        /*  764 */ unsigned char NV_shader_texture_footprint;
        /*  765 */ unsigned char NV_shader_thread_group;
        /*  766 */ unsigned char NV_shader_thread_shuffle;
        /*  767 */ unsigned char NV_shading_rate_image;
        /*  768 */ unsigned char NV_shadow_samplers_array;
        /*  769 */ unsigned char NV_shadow_samplers_cube;
        /*  770 */ unsigned char NV_stereo_view_rendering;
        /*  771 */ unsigned char NV_tessellation_program5;
        /*  772 */ unsigned char NV_texgen_emboss;
        /*  773 */ unsigned char NV_texgen_reflection;
        /*  774 */ unsigned char NV_texture_barrier;
        /*  775 */ unsigned char NV_texture_border_clamp;
        /*  776 */ unsigned char NV_texture_compression_s3tc_update;
        /*  777 */ unsigned char NV_texture_compression_vtc;
        /*  778 */ unsigned char NV_texture_env_combine4;
        /*  779 */ unsigned char NV_texture_expand_normal;
        /*  780 */ unsigned char NV_texture_multisample;
        /*  781 */ unsigned char NV_texture_npot_2D_mipmap;
        /*  782 */ unsigned char NV_texture_rectangle;
        /*  783 */ unsigned char NV_texture_rectangle_compressed;
        /*  784 */ unsigned char NV_texture_shader;
        /*  785 */ unsigned char NV_texture_shader2;
        /*  786 */ unsigned char NV_texture_shader3;
        /*  787 */ unsigned char NV_timeline_semaphore;
        /*  788 */ unsigned char NV_transform_feedback;
        /*  789 */ unsigned char NV_transform_feedback2;
        /*  790 */ unsigned char NV_uniform_buffer_std430_layout;
        /*  791 */ unsigned char NV_uniform_buffer_unified_memory;
        /*  792 */ unsigned char NV_vdpau_interop;
        /*  793 */ unsigned char NV_vdpau_interop2;
        /*  794 */ unsigned char NV_vertex_array_range;
        /*  795 */ unsigned char NV_vertex_array_range2;
        /*  796 */ unsigned char NV_vertex_attrib_integer_64bit;
        /*  797 */ unsigned char NV_vertex_buffer_unified_memory;
        /*  798 */ unsigned char NV_vertex_program;
        /*  799 */ unsigned char NV_vertex_program1_1;
        /*  800 */ unsigned char NV_vertex_program2;
        /*  801 */ unsigned char NV_vertex_program2_option;
        /*  802 */ unsigned char NV_vertex_program3;
        /*  803 */ unsigned char NV_vertex_program4;
        /*  804 */ unsigned char NV_video_capture;
        /*  805 */ unsigned char NV_viewport_array;
        /*  806 */ unsigned char NV_viewport_array2;
        /*  807 */ unsigned char NV_viewport_swizzle;
        /*  808 */ unsigned char OES_EGL_image;
        /*  809 */ unsigned char OES_EGL_image_external;
        /*  810 */ unsigned char OES_EGL_image_external_essl3;
        /*  811 */ unsigned char OES_byte_coordinates;
        /*  812 */ unsigned char OES_compressed_ETC1_RGB8_sub_texture;
        /*  813 */ unsigned char OES_compressed_ETC1_RGB8_texture;
        /*  814 */ unsigned char OES_compressed_paletted_texture;
        /*  815 */ unsigned char OES_copy_image;
        /*  816 */ unsigned char OES_depth24;
        /*  817 */ unsigned char OES_depth32;
        /*  818 */ unsigned char OES_depth_texture;
        /*  819 */ unsigned char OES_draw_buffers_indexed;
        /*  820 */ unsigned char OES_draw_elements_base_vertex;
        /*  821 */ unsigned char OES_element_index_uint;
        /*  822 */ unsigned char OES_fbo_render_mipmap;
        /*  823 */ unsigned char OES_fixed_point;
        /*  824 */ unsigned char OES_fragment_precision_high;
        /*  825 */ unsigned char OES_geometry_point_size;
        /*  826 */ unsigned char OES_geometry_shader;
        /*  827 */ unsigned char OES_get_program_binary;
        /*  828 */ unsigned char OES_gpu_shader5;
        /*  829 */ unsigned char OES_mapbuffer;
        /*  830 */ unsigned char OES_packed_depth_stencil;
        /*  831 */ unsigned char OES_primitive_bounding_box;
        /*  832 */ unsigned char OES_query_matrix;
        /*  833 */ unsigned char OES_read_format;
        /*  834 */ unsigned char OES_required_internalformat;
        /*  835 */ unsigned char OES_rgb8_rgba8;
        /*  836 */ unsigned char OES_sample_shading;
        /*  837 */ unsigned char OES_sample_variables;
        /*  838 */ unsigned char OES_shader_image_atomic;
        /*  839 */ unsigned char OES_shader_io_blocks;
        /*  840 */ unsigned char OES_shader_multisample_interpolation;
        /*  841 */ unsigned char OES_single_precision;
        /*  842 */ unsigned char OES_standard_derivatives;
        /*  843 */ unsigned char OES_stencil1;
        /*  844 */ unsigned char OES_stencil4;
        /*  845 */ unsigned char OES_surfaceless_context;
        /*  846 */ unsigned char OES_tessellation_point_size;
        /*  847 */ unsigned char OES_tessellation_shader;
        /*  848 */ unsigned char OES_texture_3D;
        /*  849 */ unsigned char OES_texture_border_clamp;
        /*  850 */ unsigned char OES_texture_buffer;
        /*  851 */ unsigned char OES_texture_compression_astc;
        /*  852 */ unsigned char OES_texture_cube_map_array;
        /*  853 */ unsigned char OES_texture_float;
        /*  854 */ unsigned char OES_texture_float_linear;
        /*  855 */ unsigned char OES_texture_half_float;
        /*  856 */ unsigned char OES_texture_half_float_linear;
        /*  857 */ unsigned char OES_texture_npot;
        /*  858 */ unsigned char OES_texture_stencil8;
        /*  859 */ unsigned char OES_texture_storage_multisample_2d_array;
        /*  860 */ unsigned char OES_texture_view;
        /*  861 */ unsigned char OES_vertex_array_object;
        /*  862 */ unsigned char OES_vertex_half_float;
        /*  863 */ unsigned char OES_vertex_type_10_10_10_2;
        /*  864 */ unsigned char OES_viewport_array;
        /*  865 */ unsigned char OML_interlace;
        /*  866 */ unsigned char OML_resample;
        /*  867 */ unsigned char OML_subsample;
        /*  868 */ unsigned char OVR_multiview;
        /*  869 */ unsigned char OVR_multiview2;
        /*  870 */ unsigned char OVR_multiview_multisampled_render_to_texture;
        /*  871 */ unsigned char PGI_misc_hints;
        /*  872 */ unsigned char PGI_vertex_hints;
        /*  873 */ unsigned char QCOM_YUV_texture_gather;
        /*  874 */ unsigned char QCOM_alpha_test;
        /*  875 */ unsigned char QCOM_binning_control;
        /*  876 */ unsigned char QCOM_cooperative_matrix_conversion;
        /*  877 */ unsigned char QCOM_driver_control;
        /*  878 */ unsigned char QCOM_extended_get;
        /*  879 */ unsigned char QCOM_extended_get2;
        /*  880 */ unsigned char QCOM_frame_extrapolation;
        /*  881 */ unsigned char QCOM_framebuffer_foveated;
        /*  882 */ unsigned char QCOM_image_processing;
        /*  883 */ unsigned char QCOM_image_processing2;
        /*  884 */ unsigned char QCOM_motion_estimation;
        /*  885 */ unsigned char QCOM_perfmon_global_mode;
        /*  886 */ unsigned char QCOM_render_sRGB_R8_RG8;
        /*  887 */ unsigned char QCOM_render_shared_exponent;
        /*  888 */ unsigned char QCOM_shader_framebuffer_fetch_noncoherent;
        /*  889 */ unsigned char QCOM_shader_framebuffer_fetch_rate;
        /*  890 */ unsigned char QCOM_shading_rate;
        /*  891 */ unsigned char QCOM_texture_foveated;
        /*  892 */ unsigned char QCOM_texture_foveated2;
        /*  893 */ unsigned char QCOM_texture_foveated_subsampled_layout;
        /*  894 */ unsigned char QCOM_texture_lod_bias;
        /*  895 */ unsigned char QCOM_tile_shading;
        /*  896 */ unsigned char QCOM_tiled_rendering;
        /*  897 */ unsigned char QCOM_writeonly_rendering;
        /*  898 */ unsigned char QCOM_ycbcr_degamma;
        /*  899 */ unsigned char REND_screen_coordinates;
        /*  900 */ unsigned char S3_s3tc;
        /*  901 */ unsigned char SGIS_detail_texture;
        /*  902 */ unsigned char SGIS_fog_function;
        /*  903 */ unsigned char SGIS_generate_mipmap;
        /*  904 */ unsigned char SGIS_multisample;
        /*  905 */ unsigned char SGIS_pixel_texture;
        /*  906 */ unsigned char SGIS_point_line_texgen;
        /*  907 */ unsigned char SGIS_point_parameters;
        /*  908 */ unsigned char SGIS_sharpen_texture;
        /*  909 */ unsigned char SGIS_texture4D;
        /*  910 */ unsigned char SGIS_texture_border_clamp;
        /*  911 */ unsigned char SGIS_texture_color_mask;
        /*  912 */ unsigned char SGIS_texture_edge_clamp;
        /*  913 */ unsigned char SGIS_texture_filter4;
        /*  914 */ unsigned char SGIS_texture_lod;
        /*  915 */ unsigned char SGIS_texture_select;
        /*  916 */ unsigned char SGIX_async;
        /*  917 */ unsigned char SGIX_async_histogram;
        /*  918 */ unsigned char SGIX_async_pixel;
        /*  919 */ unsigned char SGIX_blend_alpha_minmax;
        /*  920 */ unsigned char SGIX_calligraphic_fragment;
        /*  921 */ unsigned char SGIX_clipmap;
        /*  922 */ unsigned char SGIX_convolution_accuracy;
        /*  923 */ unsigned char SGIX_depth_pass_instrument;
        /*  924 */ unsigned char SGIX_depth_texture;
        /*  925 */ unsigned char SGIX_flush_raster;
        /*  926 */ unsigned char SGIX_fog_offset;
        /*  927 */ unsigned char SGIX_fragment_lighting;
        /*  928 */ unsigned char SGIX_framezoom;
        /*  929 */ unsigned char SGIX_igloo_interface;
        /*  930 */ unsigned char SGIX_instruments;
        /*  931 */ unsigned char SGIX_interlace;
        /*  932 */ unsigned char SGIX_ir_instrument1;
        /*  933 */ unsigned char SGIX_list_priority;
        /*  934 */ unsigned char SGIX_pixel_texture;
        /*  935 */ unsigned char SGIX_pixel_tiles;
        /*  936 */ unsigned char SGIX_polynomial_ffd;
        /*  937 */ unsigned char SGIX_reference_plane;
        /*  938 */ unsigned char SGIX_resample;
        /*  939 */ unsigned char SGIX_scalebias_hint;
        /*  940 */ unsigned char SGIX_shadow;
        /*  941 */ unsigned char SGIX_shadow_ambient;
        /*  942 */ unsigned char SGIX_sprite;
        /*  943 */ unsigned char SGIX_subsample;
        /*  944 */ unsigned char SGIX_tag_sample_buffer;
        /*  945 */ unsigned char SGIX_texture_add_env;
        /*  946 */ unsigned char SGIX_texture_coordinate_clamp;
        /*  947 */ unsigned char SGIX_texture_lod_bias;
        /*  948 */ unsigned char SGIX_texture_multi_buffer;
        /*  949 */ unsigned char SGIX_texture_scale_bias;
        /*  950 */ unsigned char SGIX_vertex_preclip;
        /*  951 */ unsigned char SGIX_ycrcb;
        /*  952 */ unsigned char SGIX_ycrcb_subsample;
        /*  953 */ unsigned char SGIX_ycrcba;
        /*  954 */ unsigned char SGI_color_matrix;
        /*  955 */ unsigned char SGI_color_table;
        /*  956 */ unsigned char SGI_texture_color_table;
        /*  957 */ unsigned char SUNX_constant_data;
        /*  958 */ unsigned char SUN_convolution_border_modes;
        /*  959 */ unsigned char SUN_global_alpha;
        /*  960 */ unsigned char SUN_mesh_array;
        /*  961 */ unsigned char SUN_slice_accum;
        /*  962 */ unsigned char SUN_triangle_list;
        /*  963 */ unsigned char SUN_vertex;
        /*  964 */ unsigned char VIV_shader_binary;
        /*  965 */ unsigned char WIN_phong_shading;
        /*  966 */ unsigned char WIN_specular_fog;
        };
    };

    union {
        void *pfnArray[2886];
        struct {
        /*    0 */ PFNGLCULLFACEPROC CullFace;
        /*    1 */ PFNGLFRONTFACEPROC FrontFace;
        /*    2 */ PFNGLHINTPROC Hint;
        /*    3 */ PFNGLLINEWIDTHPROC LineWidth;
        /*    4 */ PFNGLPOINTSIZEPROC PointSize;
        /*    5 */ PFNGLPOLYGONMODEPROC PolygonMode;
        /*    6 */ PFNGLSCISSORPROC Scissor;
        /*    7 */ PFNGLTEXPARAMETERFPROC TexParameterf;
        /*    8 */ PFNGLTEXPARAMETERFVPROC TexParameterfv;
        /*    9 */ PFNGLTEXPARAMETERIPROC TexParameteri;
        /*   10 */ PFNGLTEXPARAMETERIVPROC TexParameteriv;
        /*   11 */ PFNGLTEXIMAGE1DPROC TexImage1D;
        /*   12 */ PFNGLTEXIMAGE2DPROC TexImage2D;
        /*   13 */ PFNGLDRAWBUFFERPROC DrawBuffer;
        /*   14 */ PFNGLCLEARPROC Clear;
        /*   15 */ PFNGLCLEARCOLORPROC ClearColor;
        /*   16 */ PFNGLCLEARSTENCILPROC ClearStencil;
        /*   17 */ PFNGLCLEARDEPTHPROC ClearDepth;
        /*   18 */ PFNGLSTENCILMASKPROC StencilMask;
        /*   19 */ PFNGLCOLORMASKPROC ColorMask;
        /*   20 */ PFNGLDEPTHMASKPROC DepthMask;
        /*   21 */ PFNGLDISABLEPROC Disable;
        /*   22 */ PFNGLENABLEPROC Enable;
        /*   23 */ PFNGLFINISHPROC Finish;
        /*   24 */ PFNGLFLUSHPROC Flush;
        /*   25 */ PFNGLBLENDFUNCPROC BlendFunc;
        /*   26 */ PFNGLLOGICOPPROC LogicOp;
        /*   27 */ PFNGLSTENCILFUNCPROC StencilFunc;
        /*   28 */ PFNGLSTENCILOPPROC StencilOp;
        /*   29 */ PFNGLDEPTHFUNCPROC DepthFunc;
        /*   30 */ PFNGLPIXELSTOREFPROC PixelStoref;
        /*   31 */ PFNGLPIXELSTOREIPROC PixelStorei;
        /*   32 */ PFNGLREADBUFFERPROC ReadBuffer;
        /*   33 */ PFNGLREADPIXELSPROC ReadPixels;
        /*   34 */ PFNGLGETBOOLEANVPROC GetBooleanv;
        /*   35 */ PFNGLGETDOUBLEVPROC GetDoublev;
        /*   36 */ PFNGLGETERRORPROC GetError;
        /*   37 */ PFNGLGETFLOATVPROC GetFloatv;
        /*   38 */ PFNGLGETINTEGERVPROC GetIntegerv;
        /*   39 */ PFNGLGETSTRINGPROC GetString;
        /*   40 */ PFNGLGETTEXIMAGEPROC GetTexImage;
        /*   41 */ PFNGLGETTEXPARAMETERFVPROC GetTexParameterfv;
        /*   42 */ PFNGLGETTEXPARAMETERIVPROC GetTexParameteriv;
        /*   43 */ PFNGLGETTEXLEVELPARAMETERFVPROC GetTexLevelParameterfv;
        /*   44 */ PFNGLGETTEXLEVELPARAMETERIVPROC GetTexLevelParameteriv;
        /*   45 */ PFNGLISENABLEDPROC IsEnabled;
        /*   46 */ PFNGLDEPTHRANGEPROC DepthRange;
        /*   47 */ PFNGLVIEWPORTPROC Viewport;
        /*   48 */ PFNGLDRAWARRAYSPROC DrawArrays;
        /*   49 */ PFNGLDRAWELEMENTSPROC DrawElements;
        /*   50 */ PFNGLGETPOINTERVPROC GetPointerv;
        /*   51 */ PFNGLPOLYGONOFFSETPROC PolygonOffset;
        /*   52 */ PFNGLCOPYTEXIMAGE1DPROC CopyTexImage1D;
        /*   53 */ PFNGLCOPYTEXIMAGE2DPROC CopyTexImage2D;
        /*   54 */ PFNGLCOPYTEXSUBIMAGE1DPROC CopyTexSubImage1D;
        /*   55 */ PFNGLCOPYTEXSUBIMAGE2DPROC CopyTexSubImage2D;
        /*   56 */ PFNGLTEXSUBIMAGE1DPROC TexSubImage1D;
        /*   57 */ PFNGLTEXSUBIMAGE2DPROC TexSubImage2D;
        /*   58 */ PFNGLBINDTEXTUREPROC BindTexture;
        /*   59 */ PFNGLDELETETEXTURESPROC DeleteTextures;
        /*   60 */ PFNGLGENTEXTURESPROC GenTextures;
        /*   61 */ PFNGLISTEXTUREPROC IsTexture;
        /*   62 */ PFNGLDRAWRANGEELEMENTSPROC DrawRangeElements;
        /*   63 */ PFNGLTEXIMAGE3DPROC TexImage3D;
        /*   64 */ PFNGLTEXSUBIMAGE3DPROC TexSubImage3D;
        /*   65 */ PFNGLCOPYTEXSUBIMAGE3DPROC CopyTexSubImage3D;
        /*   66 */ PFNGLACTIVETEXTUREPROC ActiveTexture;
        /*   67 */ PFNGLSAMPLECOVERAGEPROC SampleCoverage;
        /*   68 */ PFNGLCOMPRESSEDTEXIMAGE3DPROC CompressedTexImage3D;
        /*   69 */ PFNGLCOMPRESSEDTEXIMAGE2DPROC CompressedTexImage2D;
        /*   70 */ PFNGLCOMPRESSEDTEXIMAGE1DPROC CompressedTexImage1D;
        /*   71 */ PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC CompressedTexSubImage3D;
        /*   72 */ PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC CompressedTexSubImage2D;
        /*   73 */ PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC CompressedTexSubImage1D;
        /*   74 */ PFNGLGETCOMPRESSEDTEXIMAGEPROC GetCompressedTexImage;
        /*   75 */ PFNGLBLENDFUNCSEPARATEPROC BlendFuncSeparate;
        /*   76 */ PFNGLMULTIDRAWARRAYSPROC MultiDrawArrays;
        /*   77 */ PFNGLMULTIDRAWELEMENTSPROC MultiDrawElements;
        /*   78 */ PFNGLPOINTPARAMETERFPROC PointParameterf;
        /*   79 */ PFNGLPOINTPARAMETERFVPROC PointParameterfv;
        /*   80 */ PFNGLPOINTPARAMETERIPROC PointParameteri;
        /*   81 */ PFNGLPOINTPARAMETERIVPROC PointParameteriv;
        /*   82 */ PFNGLBLENDCOLORPROC BlendColor;
        /*   83 */ PFNGLBLENDEQUATIONPROC BlendEquation;
        /*   84 */ PFNGLGENQUERIESPROC GenQueries;
        /*   85 */ PFNGLDELETEQUERIESPROC DeleteQueries;
        /*   86 */ PFNGLISQUERYPROC IsQuery;
        /*   87 */ PFNGLBEGINQUERYPROC BeginQuery;
        /*   88 */ PFNGLENDQUERYPROC EndQuery;
        /*   89 */ PFNGLGETQUERYIVPROC GetQueryiv;
        /*   90 */ PFNGLGETQUERYOBJECTIVPROC GetQueryObjectiv;
        /*   91 */ PFNGLGETQUERYOBJECTUIVPROC GetQueryObjectuiv;
        /*   92 */ PFNGLBINDBUFFERPROC BindBuffer;
        /*   93 */ PFNGLDELETEBUFFERSPROC DeleteBuffers;
        /*   94 */ PFNGLGENBUFFERSPROC GenBuffers;
        /*   95 */ PFNGLISBUFFERPROC IsBuffer;
        /*   96 */ PFNGLBUFFERDATAPROC BufferData;
        /*   97 */ PFNGLBUFFERSUBDATAPROC BufferSubData;
        /*   98 */ PFNGLGETBUFFERSUBDATAPROC GetBufferSubData;
        /*   99 */ PFNGLMAPBUFFERPROC MapBuffer;
        /*  100 */ PFNGLUNMAPBUFFERPROC UnmapBuffer;
        /*  101 */ PFNGLGETBUFFERPARAMETERIVPROC GetBufferParameteriv;
        /*  102 */ PFNGLGETBUFFERPOINTERVPROC GetBufferPointerv;
        /*  103 */ PFNGLBLENDEQUATIONSEPARATEPROC BlendEquationSeparate;
        /*  104 */ PFNGLDRAWBUFFERSPROC DrawBuffers;
        /*  105 */ PFNGLSTENCILOPSEPARATEPROC StencilOpSeparate;
        /*  106 */ PFNGLSTENCILFUNCSEPARATEPROC StencilFuncSeparate;
        /*  107 */ PFNGLSTENCILMASKSEPARATEPROC StencilMaskSeparate;
        /*  108 */ PFNGLATTACHSHADERPROC AttachShader;
        /*  109 */ PFNGLBINDATTRIBLOCATIONPROC BindAttribLocation;
        /*  110 */ PFNGLCOMPILESHADERPROC CompileShader;
        /*  111 */ PFNGLCREATEPROGRAMPROC CreateProgram;
        /*  112 */ PFNGLCREATESHADERPROC CreateShader;
        /*  113 */ PFNGLDELETEPROGRAMPROC DeleteProgram;
        /*  114 */ PFNGLDELETESHADERPROC DeleteShader;
        /*  115 */ PFNGLDETACHSHADERPROC DetachShader;
        /*  116 */ PFNGLDISABLEVERTEXATTRIBARRAYPROC DisableVertexAttribArray;
        /*  117 */ PFNGLENABLEVERTEXATTRIBARRAYPROC EnableVertexAttribArray;
        /*  118 */ PFNGLGETACTIVEATTRIBPROC GetActiveAttrib;
        /*  119 */ PFNGLGETACTIVEUNIFORMPROC GetActiveUniform;
        /*  120 */ PFNGLGETATTACHEDSHADERSPROC GetAttachedShaders;
        /*  121 */ PFNGLGETATTRIBLOCATIONPROC GetAttribLocation;
        /*  122 */ PFNGLGETPROGRAMIVPROC GetProgramiv;
        /*  123 */ PFNGLGETPROGRAMINFOLOGPROC GetProgramInfoLog;
        /*  124 */ PFNGLGETSHADERIVPROC GetShaderiv;
        /*  125 */ PFNGLGETSHADERINFOLOGPROC GetShaderInfoLog;
        /*  126 */ PFNGLGETSHADERSOURCEPROC GetShaderSource;
        /*  127 */ PFNGLGETUNIFORMLOCATIONPROC GetUniformLocation;
        /*  128 */ PFNGLGETUNIFORMFVPROC GetUniformfv;
        /*  129 */ PFNGLGETUNIFORMIVPROC GetUniformiv;
        /*  130 */ PFNGLGETVERTEXATTRIBDVPROC GetVertexAttribdv;
        /*  131 */ PFNGLGETVERTEXATTRIBFVPROC GetVertexAttribfv;
        /*  132 */ PFNGLGETVERTEXATTRIBIVPROC GetVertexAttribiv;
        /*  133 */ PFNGLGETVERTEXATTRIBPOINTERVPROC GetVertexAttribPointerv;
        /*  134 */ PFNGLISPROGRAMPROC IsProgram;
        /*  135 */ PFNGLISSHADERPROC IsShader;
        /*  136 */ PFNGLLINKPROGRAMPROC LinkProgram;
        /*  137 */ PFNGLSHADERSOURCEPROC ShaderSource;
        /*  138 */ PFNGLUSEPROGRAMPROC UseProgram;
        /*  139 */ PFNGLUNIFORM1FPROC Uniform1f;
        /*  140 */ PFNGLUNIFORM2FPROC Uniform2f;
        /*  141 */ PFNGLUNIFORM3FPROC Uniform3f;
        /*  142 */ PFNGLUNIFORM4FPROC Uniform4f;
        /*  143 */ PFNGLUNIFORM1IPROC Uniform1i;
        /*  144 */ PFNGLUNIFORM2IPROC Uniform2i;
        /*  145 */ PFNGLUNIFORM3IPROC Uniform3i;
        /*  146 */ PFNGLUNIFORM4IPROC Uniform4i;
        /*  147 */ PFNGLUNIFORM1FVPROC Uniform1fv;
        /*  148 */ PFNGLUNIFORM2FVPROC Uniform2fv;
        /*  149 */ PFNGLUNIFORM3FVPROC Uniform3fv;
        /*  150 */ PFNGLUNIFORM4FVPROC Uniform4fv;
        /*  151 */ PFNGLUNIFORM1IVPROC Uniform1iv;
        /*  152 */ PFNGLUNIFORM2IVPROC Uniform2iv;
        /*  153 */ PFNGLUNIFORM3IVPROC Uniform3iv;
        /*  154 */ PFNGLUNIFORM4IVPROC Uniform4iv;
        /*  155 */ PFNGLUNIFORMMATRIX2FVPROC UniformMatrix2fv;
        /*  156 */ PFNGLUNIFORMMATRIX3FVPROC UniformMatrix3fv;
        /*  157 */ PFNGLUNIFORMMATRIX4FVPROC UniformMatrix4fv;
        /*  158 */ PFNGLVALIDATEPROGRAMPROC ValidateProgram;
        /*  159 */ PFNGLVERTEXATTRIB1DPROC VertexAttrib1d;
        /*  160 */ PFNGLVERTEXATTRIB1DVPROC VertexAttrib1dv;
        /*  161 */ PFNGLVERTEXATTRIB1FPROC VertexAttrib1f;
        /*  162 */ PFNGLVERTEXATTRIB1FVPROC VertexAttrib1fv;
        /*  163 */ PFNGLVERTEXATTRIB1SPROC VertexAttrib1s;
        /*  164 */ PFNGLVERTEXATTRIB1SVPROC VertexAttrib1sv;
        /*  165 */ PFNGLVERTEXATTRIB2DPROC VertexAttrib2d;
        /*  166 */ PFNGLVERTEXATTRIB2DVPROC VertexAttrib2dv;
        /*  167 */ PFNGLVERTEXATTRIB2FPROC VertexAttrib2f;
        /*  168 */ PFNGLVERTEXATTRIB2FVPROC VertexAttrib2fv;
        /*  169 */ PFNGLVERTEXATTRIB2SPROC VertexAttrib2s;
        /*  170 */ PFNGLVERTEXATTRIB2SVPROC VertexAttrib2sv;
        /*  171 */ PFNGLVERTEXATTRIB3DPROC VertexAttrib3d;
        /*  172 */ PFNGLVERTEXATTRIB3DVPROC VertexAttrib3dv;
        /*  173 */ PFNGLVERTEXATTRIB3FPROC VertexAttrib3f;
        /*  174 */ PFNGLVERTEXATTRIB3FVPROC VertexAttrib3fv;
        /*  175 */ PFNGLVERTEXATTRIB3SPROC VertexAttrib3s;
        /*  176 */ PFNGLVERTEXATTRIB3SVPROC VertexAttrib3sv;
        /*  177 */ PFNGLVERTEXATTRIB4NBVPROC VertexAttrib4Nbv;
        /*  178 */ PFNGLVERTEXATTRIB4NIVPROC VertexAttrib4Niv;
        /*  179 */ PFNGLVERTEXATTRIB4NSVPROC VertexAttrib4Nsv;
        /*  180 */ PFNGLVERTEXATTRIB4NUBPROC VertexAttrib4Nub;
        /*  181 */ PFNGLVERTEXATTRIB4NUBVPROC VertexAttrib4Nubv;
        /*  182 */ PFNGLVERTEXATTRIB4NUIVPROC VertexAttrib4Nuiv;
        /*  183 */ PFNGLVERTEXATTRIB4NUSVPROC VertexAttrib4Nusv;
        /*  184 */ PFNGLVERTEXATTRIB4BVPROC VertexAttrib4bv;
        /*  185 */ PFNGLVERTEXATTRIB4DPROC VertexAttrib4d;
        /*  186 */ PFNGLVERTEXATTRIB4DVPROC VertexAttrib4dv;
        /*  187 */ PFNGLVERTEXATTRIB4FPROC VertexAttrib4f;
        /*  188 */ PFNGLVERTEXATTRIB4FVPROC VertexAttrib4fv;
        /*  189 */ PFNGLVERTEXATTRIB4IVPROC VertexAttrib4iv;
        /*  190 */ PFNGLVERTEXATTRIB4SPROC VertexAttrib4s;
        /*  191 */ PFNGLVERTEXATTRIB4SVPROC VertexAttrib4sv;
        /*  192 */ PFNGLVERTEXATTRIB4UBVPROC VertexAttrib4ubv;
        /*  193 */ PFNGLVERTEXATTRIB4UIVPROC VertexAttrib4uiv;
        /*  194 */ PFNGLVERTEXATTRIB4USVPROC VertexAttrib4usv;
        /*  195 */ PFNGLVERTEXATTRIBPOINTERPROC VertexAttribPointer;
        /*  196 */ PFNGLUNIFORMMATRIX2X3FVPROC UniformMatrix2x3fv;
        /*  197 */ PFNGLUNIFORMMATRIX3X2FVPROC UniformMatrix3x2fv;
        /*  198 */ PFNGLUNIFORMMATRIX2X4FVPROC UniformMatrix2x4fv;
        /*  199 */ PFNGLUNIFORMMATRIX4X2FVPROC UniformMatrix4x2fv;
        /*  200 */ PFNGLUNIFORMMATRIX3X4FVPROC UniformMatrix3x4fv;
        /*  201 */ PFNGLUNIFORMMATRIX4X3FVPROC UniformMatrix4x3fv;
        /*  202 */ PFNGLCOLORMASKIPROC ColorMaski;
        /*  203 */ PFNGLGETBOOLEANI_VPROC GetBooleani_v;
        /*  204 */ PFNGLGETINTEGERI_VPROC GetIntegeri_v;
        /*  205 */ PFNGLENABLEIPROC Enablei;
        /*  206 */ PFNGLDISABLEIPROC Disablei;
        /*  207 */ PFNGLISENABLEDIPROC IsEnabledi;
        /*  208 */ PFNGLBEGINTRANSFORMFEEDBACKPROC BeginTransformFeedback;
        /*  209 */ PFNGLENDTRANSFORMFEEDBACKPROC EndTransformFeedback;
        /*  210 */ PFNGLBINDBUFFERRANGEPROC BindBufferRange;
        /*  211 */ PFNGLBINDBUFFERBASEPROC BindBufferBase;
        /*  212 */ PFNGLTRANSFORMFEEDBACKVARYINGSPROC TransformFeedbackVaryings;
        /*  213 */ PFNGLGETTRANSFORMFEEDBACKVARYINGPROC GetTransformFeedbackVarying;
        /*  214 */ PFNGLCLAMPCOLORPROC ClampColor;
        /*  215 */ PFNGLBEGINCONDITIONALRENDERPROC BeginConditionalRender;
        /*  216 */ PFNGLENDCONDITIONALRENDERPROC EndConditionalRender;
        /*  217 */ PFNGLVERTEXATTRIBIPOINTERPROC VertexAttribIPointer;
        /*  218 */ PFNGLGETVERTEXATTRIBIIVPROC GetVertexAttribIiv;
        /*  219 */ PFNGLGETVERTEXATTRIBIUIVPROC GetVertexAttribIuiv;
        /*  220 */ PFNGLVERTEXATTRIBI1IPROC VertexAttribI1i;
        /*  221 */ PFNGLVERTEXATTRIBI2IPROC VertexAttribI2i;
        /*  222 */ PFNGLVERTEXATTRIBI3IPROC VertexAttribI3i;
        /*  223 */ PFNGLVERTEXATTRIBI4IPROC VertexAttribI4i;
        /*  224 */ PFNGLVERTEXATTRIBI1UIPROC VertexAttribI1ui;
        /*  225 */ PFNGLVERTEXATTRIBI2UIPROC VertexAttribI2ui;
        /*  226 */ PFNGLVERTEXATTRIBI3UIPROC VertexAttribI3ui;
        /*  227 */ PFNGLVERTEXATTRIBI4UIPROC VertexAttribI4ui;
        /*  228 */ PFNGLVERTEXATTRIBI1IVPROC VertexAttribI1iv;
        /*  229 */ PFNGLVERTEXATTRIBI2IVPROC VertexAttribI2iv;
        /*  230 */ PFNGLVERTEXATTRIBI3IVPROC VertexAttribI3iv;
        /*  231 */ PFNGLVERTEXATTRIBI4IVPROC VertexAttribI4iv;
        /*  232 */ PFNGLVERTEXATTRIBI1UIVPROC VertexAttribI1uiv;
        /*  233 */ PFNGLVERTEXATTRIBI2UIVPROC VertexAttribI2uiv;
        /*  234 */ PFNGLVERTEXATTRIBI3UIVPROC VertexAttribI3uiv;
        /*  235 */ PFNGLVERTEXATTRIBI4UIVPROC VertexAttribI4uiv;
        /*  236 */ PFNGLVERTEXATTRIBI4BVPROC VertexAttribI4bv;
        /*  237 */ PFNGLVERTEXATTRIBI4SVPROC VertexAttribI4sv;
        /*  238 */ PFNGLVERTEXATTRIBI4UBVPROC VertexAttribI4ubv;
        /*  239 */ PFNGLVERTEXATTRIBI4USVPROC VertexAttribI4usv;
        /*  240 */ PFNGLGETUNIFORMUIVPROC GetUniformuiv;
        /*  241 */ PFNGLBINDFRAGDATALOCATIONPROC BindFragDataLocation;
        /*  242 */ PFNGLGETFRAGDATALOCATIONPROC GetFragDataLocation;
        /*  243 */ PFNGLUNIFORM1UIPROC Uniform1ui;
        /*  244 */ PFNGLUNIFORM2UIPROC Uniform2ui;
        /*  245 */ PFNGLUNIFORM3UIPROC Uniform3ui;
        /*  246 */ PFNGLUNIFORM4UIPROC Uniform4ui;
        /*  247 */ PFNGLUNIFORM1UIVPROC Uniform1uiv;
        /*  248 */ PFNGLUNIFORM2UIVPROC Uniform2uiv;
        /*  249 */ PFNGLUNIFORM3UIVPROC Uniform3uiv;
        /*  250 */ PFNGLUNIFORM4UIVPROC Uniform4uiv;
        /*  251 */ PFNGLTEXPARAMETERIIVPROC TexParameterIiv;
        /*  252 */ PFNGLTEXPARAMETERIUIVPROC TexParameterIuiv;
        /*  253 */ PFNGLGETTEXPARAMETERIIVPROC GetTexParameterIiv;
        /*  254 */ PFNGLGETTEXPARAMETERIUIVPROC GetTexParameterIuiv;
        /*  255 */ PFNGLCLEARBUFFERIVPROC ClearBufferiv;
        /*  256 */ PFNGLCLEARBUFFERUIVPROC ClearBufferuiv;
        /*  257 */ PFNGLCLEARBUFFERFVPROC ClearBufferfv;
        /*  258 */ PFNGLCLEARBUFFERFIPROC ClearBufferfi;
        /*  259 */ PFNGLGETSTRINGIPROC GetStringi;
        /*  260 */ PFNGLISRENDERBUFFERPROC IsRenderbuffer;
        /*  261 */ PFNGLBINDRENDERBUFFERPROC BindRenderbuffer;
        /*  262 */ PFNGLDELETERENDERBUFFERSPROC DeleteRenderbuffers;
        /*  263 */ PFNGLGENRENDERBUFFERSPROC GenRenderbuffers;
        /*  264 */ PFNGLRENDERBUFFERSTORAGEPROC RenderbufferStorage;
        /*  265 */ PFNGLGETRENDERBUFFERPARAMETERIVPROC GetRenderbufferParameteriv;
        /*  266 */ PFNGLISFRAMEBUFFERPROC IsFramebuffer;
        /*  267 */ PFNGLBINDFRAMEBUFFERPROC BindFramebuffer;
        /*  268 */ PFNGLDELETEFRAMEBUFFERSPROC DeleteFramebuffers;
        /*  269 */ PFNGLGENFRAMEBUFFERSPROC GenFramebuffers;
        /*  270 */ PFNGLCHECKFRAMEBUFFERSTATUSPROC CheckFramebufferStatus;
        /*  271 */ PFNGLFRAMEBUFFERTEXTURE1DPROC FramebufferTexture1D;
        /*  272 */ PFNGLFRAMEBUFFERTEXTURE2DPROC FramebufferTexture2D;
        /*  273 */ PFNGLFRAMEBUFFERTEXTURE3DPROC FramebufferTexture3D;
        /*  274 */ PFNGLFRAMEBUFFERRENDERBUFFERPROC FramebufferRenderbuffer;
        /*  275 */ PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC GetFramebufferAttachmentParameteriv;
        /*  276 */ PFNGLGENERATEMIPMAPPROC GenerateMipmap;
        /*  277 */ PFNGLBLITFRAMEBUFFERPROC BlitFramebuffer;
        /*  278 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC RenderbufferStorageMultisample;
        /*  279 */ PFNGLFRAMEBUFFERTEXTURELAYERPROC FramebufferTextureLayer;
        /*  280 */ PFNGLMAPBUFFERRANGEPROC MapBufferRange;
        /*  281 */ PFNGLFLUSHMAPPEDBUFFERRANGEPROC FlushMappedBufferRange;
        /*  282 */ PFNGLBINDVERTEXARRAYPROC BindVertexArray;
        /*  283 */ PFNGLDELETEVERTEXARRAYSPROC DeleteVertexArrays;
        /*  284 */ PFNGLGENVERTEXARRAYSPROC GenVertexArrays;
        /*  285 */ PFNGLISVERTEXARRAYPROC IsVertexArray;
        /*  286 */ PFNGLDRAWARRAYSINSTANCEDPROC DrawArraysInstanced;
        /*  287 */ PFNGLDRAWELEMENTSINSTANCEDPROC DrawElementsInstanced;
        /*  288 */ PFNGLTEXBUFFERPROC TexBuffer;
        /*  289 */ PFNGLPRIMITIVERESTARTINDEXPROC PrimitiveRestartIndex;
        /*  290 */ PFNGLCOPYBUFFERSUBDATAPROC CopyBufferSubData;
        /*  291 */ PFNGLGETUNIFORMINDICESPROC GetUniformIndices;
        /*  292 */ PFNGLGETACTIVEUNIFORMSIVPROC GetActiveUniformsiv;
        /*  293 */ PFNGLGETACTIVEUNIFORMNAMEPROC GetActiveUniformName;
        /*  294 */ PFNGLGETUNIFORMBLOCKINDEXPROC GetUniformBlockIndex;
        /*  295 */ PFNGLGETACTIVEUNIFORMBLOCKIVPROC GetActiveUniformBlockiv;
        /*  296 */ PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC GetActiveUniformBlockName;
        /*  297 */ PFNGLUNIFORMBLOCKBINDINGPROC UniformBlockBinding;
        /*  298 */ PFNGLDRAWELEMENTSBASEVERTEXPROC DrawElementsBaseVertex;
        /*  299 */ PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC DrawRangeElementsBaseVertex;
        /*  300 */ PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC DrawElementsInstancedBaseVertex;
        /*  301 */ PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC MultiDrawElementsBaseVertex;
        /*  302 */ PFNGLPROVOKINGVERTEXPROC ProvokingVertex;
        /*  303 */ PFNGLFENCESYNCPROC FenceSync;
        /*  304 */ PFNGLISSYNCPROC IsSync;
        /*  305 */ PFNGLDELETESYNCPROC DeleteSync;
        /*  306 */ PFNGLCLIENTWAITSYNCPROC ClientWaitSync;
        /*  307 */ PFNGLWAITSYNCPROC WaitSync;
        /*  308 */ PFNGLGETINTEGER64VPROC GetInteger64v;
        /*  309 */ PFNGLGETSYNCIVPROC GetSynciv;
        /*  310 */ PFNGLGETINTEGER64I_VPROC GetInteger64i_v;
        /*  311 */ PFNGLGETBUFFERPARAMETERI64VPROC GetBufferParameteri64v;
        /*  312 */ PFNGLFRAMEBUFFERTEXTUREPROC FramebufferTexture;
        /*  313 */ PFNGLTEXIMAGE2DMULTISAMPLEPROC TexImage2DMultisample;
        /*  314 */ PFNGLTEXIMAGE3DMULTISAMPLEPROC TexImage3DMultisample;
        /*  315 */ PFNGLGETMULTISAMPLEFVPROC GetMultisamplefv;
        /*  316 */ PFNGLSAMPLEMASKIPROC SampleMaski;
        /*  317 */ PFNGLBINDFRAGDATALOCATIONINDEXEDPROC BindFragDataLocationIndexed;
        /*  318 */ PFNGLGETFRAGDATAINDEXPROC GetFragDataIndex;
        /*  319 */ PFNGLGENSAMPLERSPROC GenSamplers;
        /*  320 */ PFNGLDELETESAMPLERSPROC DeleteSamplers;
        /*  321 */ PFNGLISSAMPLERPROC IsSampler;
        /*  322 */ PFNGLBINDSAMPLERPROC BindSampler;
        /*  323 */ PFNGLSAMPLERPARAMETERIPROC SamplerParameteri;
        /*  324 */ PFNGLSAMPLERPARAMETERIVPROC SamplerParameteriv;
        /*  325 */ PFNGLSAMPLERPARAMETERFPROC SamplerParameterf;
        /*  326 */ PFNGLSAMPLERPARAMETERFVPROC SamplerParameterfv;
        /*  327 */ PFNGLSAMPLERPARAMETERIIVPROC SamplerParameterIiv;
        /*  328 */ PFNGLSAMPLERPARAMETERIUIVPROC SamplerParameterIuiv;
        /*  329 */ PFNGLGETSAMPLERPARAMETERIVPROC GetSamplerParameteriv;
        /*  330 */ PFNGLGETSAMPLERPARAMETERIIVPROC GetSamplerParameterIiv;
        /*  331 */ PFNGLGETSAMPLERPARAMETERFVPROC GetSamplerParameterfv;
        /*  332 */ PFNGLGETSAMPLERPARAMETERIUIVPROC GetSamplerParameterIuiv;
        /*  333 */ PFNGLQUERYCOUNTERPROC QueryCounter;
        /*  334 */ PFNGLGETQUERYOBJECTI64VPROC GetQueryObjecti64v;
        /*  335 */ PFNGLGETQUERYOBJECTUI64VPROC GetQueryObjectui64v;
        /*  336 */ PFNGLVERTEXATTRIBDIVISORPROC VertexAttribDivisor;
        /*  337 */ PFNGLVERTEXATTRIBP1UIPROC VertexAttribP1ui;
        /*  338 */ PFNGLVERTEXATTRIBP1UIVPROC VertexAttribP1uiv;
        /*  339 */ PFNGLVERTEXATTRIBP2UIPROC VertexAttribP2ui;
        /*  340 */ PFNGLVERTEXATTRIBP2UIVPROC VertexAttribP2uiv;
        /*  341 */ PFNGLVERTEXATTRIBP3UIPROC VertexAttribP3ui;
        /*  342 */ PFNGLVERTEXATTRIBP3UIVPROC VertexAttribP3uiv;
        /*  343 */ PFNGLVERTEXATTRIBP4UIPROC VertexAttribP4ui;
        /*  344 */ PFNGLVERTEXATTRIBP4UIVPROC VertexAttribP4uiv;
        /*  345 */ PFNGLMINSAMPLESHADINGPROC MinSampleShading;
        /*  346 */ PFNGLBLENDEQUATIONIPROC BlendEquationi;
        /*  347 */ PFNGLBLENDEQUATIONSEPARATEIPROC BlendEquationSeparatei;
        /*  348 */ PFNGLBLENDFUNCIPROC BlendFunci;
        /*  349 */ PFNGLBLENDFUNCSEPARATEIPROC BlendFuncSeparatei;
        /*  350 */ PFNGLDRAWARRAYSINDIRECTPROC DrawArraysIndirect;
        /*  351 */ PFNGLDRAWELEMENTSINDIRECTPROC DrawElementsIndirect;
        /*  352 */ PFNGLUNIFORM1DPROC Uniform1d;
        /*  353 */ PFNGLUNIFORM2DPROC Uniform2d;
        /*  354 */ PFNGLUNIFORM3DPROC Uniform3d;
        /*  355 */ PFNGLUNIFORM4DPROC Uniform4d;
        /*  356 */ PFNGLUNIFORM1DVPROC Uniform1dv;
        /*  357 */ PFNGLUNIFORM2DVPROC Uniform2dv;
        /*  358 */ PFNGLUNIFORM3DVPROC Uniform3dv;
        /*  359 */ PFNGLUNIFORM4DVPROC Uniform4dv;
        /*  360 */ PFNGLUNIFORMMATRIX2DVPROC UniformMatrix2dv;
        /*  361 */ PFNGLUNIFORMMATRIX3DVPROC UniformMatrix3dv;
        /*  362 */ PFNGLUNIFORMMATRIX4DVPROC UniformMatrix4dv;
        /*  363 */ PFNGLUNIFORMMATRIX2X3DVPROC UniformMatrix2x3dv;
        /*  364 */ PFNGLUNIFORMMATRIX2X4DVPROC UniformMatrix2x4dv;
        /*  365 */ PFNGLUNIFORMMATRIX3X2DVPROC UniformMatrix3x2dv;
        /*  366 */ PFNGLUNIFORMMATRIX3X4DVPROC UniformMatrix3x4dv;
        /*  367 */ PFNGLUNIFORMMATRIX4X2DVPROC UniformMatrix4x2dv;
        /*  368 */ PFNGLUNIFORMMATRIX4X3DVPROC UniformMatrix4x3dv;
        /*  369 */ PFNGLGETUNIFORMDVPROC GetUniformdv;
        /*  370 */ PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC GetSubroutineUniformLocation;
        /*  371 */ PFNGLGETSUBROUTINEINDEXPROC GetSubroutineIndex;
        /*  372 */ PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC GetActiveSubroutineUniformiv;
        /*  373 */ PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC GetActiveSubroutineUniformName;
        /*  374 */ PFNGLGETACTIVESUBROUTINENAMEPROC GetActiveSubroutineName;
        /*  375 */ PFNGLUNIFORMSUBROUTINESUIVPROC UniformSubroutinesuiv;
        /*  376 */ PFNGLGETUNIFORMSUBROUTINEUIVPROC GetUniformSubroutineuiv;
        /*  377 */ PFNGLGETPROGRAMSTAGEIVPROC GetProgramStageiv;
        /*  378 */ PFNGLPATCHPARAMETERIPROC PatchParameteri;
        /*  379 */ PFNGLPATCHPARAMETERFVPROC PatchParameterfv;
        /*  380 */ PFNGLBINDTRANSFORMFEEDBACKPROC BindTransformFeedback;
        /*  381 */ PFNGLDELETETRANSFORMFEEDBACKSPROC DeleteTransformFeedbacks;
        /*  382 */ PFNGLGENTRANSFORMFEEDBACKSPROC GenTransformFeedbacks;
        /*  383 */ PFNGLISTRANSFORMFEEDBACKPROC IsTransformFeedback;
        /*  384 */ PFNGLPAUSETRANSFORMFEEDBACKPROC PauseTransformFeedback;
        /*  385 */ PFNGLRESUMETRANSFORMFEEDBACKPROC ResumeTransformFeedback;
        /*  386 */ PFNGLDRAWTRANSFORMFEEDBACKPROC DrawTransformFeedback;
        /*  387 */ PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC DrawTransformFeedbackStream;
        /*  388 */ PFNGLBEGINQUERYINDEXEDPROC BeginQueryIndexed;
        /*  389 */ PFNGLENDQUERYINDEXEDPROC EndQueryIndexed;
        /*  390 */ PFNGLGETQUERYINDEXEDIVPROC GetQueryIndexediv;
        /*  391 */ PFNGLRELEASESHADERCOMPILERPROC ReleaseShaderCompiler;
        /*  392 */ PFNGLSHADERBINARYPROC ShaderBinary;
        /*  393 */ PFNGLGETSHADERPRECISIONFORMATPROC GetShaderPrecisionFormat;
        /*  394 */ PFNGLDEPTHRANGEFPROC DepthRangef;
        /*  395 */ PFNGLCLEARDEPTHFPROC ClearDepthf;
        /*  396 */ PFNGLGETPROGRAMBINARYPROC GetProgramBinary;
        /*  397 */ PFNGLPROGRAMBINARYPROC ProgramBinary;
        /*  398 */ PFNGLPROGRAMPARAMETERIPROC ProgramParameteri;
        /*  399 */ PFNGLUSEPROGRAMSTAGESPROC UseProgramStages;
        /*  400 */ PFNGLACTIVESHADERPROGRAMPROC ActiveShaderProgram;
        /*  401 */ PFNGLCREATESHADERPROGRAMVPROC CreateShaderProgramv;
        /*  402 */ PFNGLBINDPROGRAMPIPELINEPROC BindProgramPipeline;
        /*  403 */ PFNGLDELETEPROGRAMPIPELINESPROC DeleteProgramPipelines;
        /*  404 */ PFNGLGENPROGRAMPIPELINESPROC GenProgramPipelines;
        /*  405 */ PFNGLISPROGRAMPIPELINEPROC IsProgramPipeline;
        /*  406 */ PFNGLGETPROGRAMPIPELINEIVPROC GetProgramPipelineiv;
        /*  407 */ PFNGLPROGRAMUNIFORM1IPROC ProgramUniform1i;
        /*  408 */ PFNGLPROGRAMUNIFORM1IVPROC ProgramUniform1iv;
        /*  409 */ PFNGLPROGRAMUNIFORM1FPROC ProgramUniform1f;
        /*  410 */ PFNGLPROGRAMUNIFORM1FVPROC ProgramUniform1fv;
        /*  411 */ PFNGLPROGRAMUNIFORM1DPROC ProgramUniform1d;
        /*  412 */ PFNGLPROGRAMUNIFORM1DVPROC ProgramUniform1dv;
        /*  413 */ PFNGLPROGRAMUNIFORM1UIPROC ProgramUniform1ui;
        /*  414 */ PFNGLPROGRAMUNIFORM1UIVPROC ProgramUniform1uiv;
        /*  415 */ PFNGLPROGRAMUNIFORM2IPROC ProgramUniform2i;
        /*  416 */ PFNGLPROGRAMUNIFORM2IVPROC ProgramUniform2iv;
        /*  417 */ PFNGLPROGRAMUNIFORM2FPROC ProgramUniform2f;
        /*  418 */ PFNGLPROGRAMUNIFORM2FVPROC ProgramUniform2fv;
        /*  419 */ PFNGLPROGRAMUNIFORM2DPROC ProgramUniform2d;
        /*  420 */ PFNGLPROGRAMUNIFORM2DVPROC ProgramUniform2dv;
        /*  421 */ PFNGLPROGRAMUNIFORM2UIPROC ProgramUniform2ui;
        /*  422 */ PFNGLPROGRAMUNIFORM2UIVPROC ProgramUniform2uiv;
        /*  423 */ PFNGLPROGRAMUNIFORM3IPROC ProgramUniform3i;
        /*  424 */ PFNGLPROGRAMUNIFORM3IVPROC ProgramUniform3iv;
        /*  425 */ PFNGLPROGRAMUNIFORM3FPROC ProgramUniform3f;
        /*  426 */ PFNGLPROGRAMUNIFORM3FVPROC ProgramUniform3fv;
        /*  427 */ PFNGLPROGRAMUNIFORM3DPROC ProgramUniform3d;
        /*  428 */ PFNGLPROGRAMUNIFORM3DVPROC ProgramUniform3dv;
        /*  429 */ PFNGLPROGRAMUNIFORM3UIPROC ProgramUniform3ui;
        /*  430 */ PFNGLPROGRAMUNIFORM3UIVPROC ProgramUniform3uiv;
        /*  431 */ PFNGLPROGRAMUNIFORM4IPROC ProgramUniform4i;
        /*  432 */ PFNGLPROGRAMUNIFORM4IVPROC ProgramUniform4iv;
        /*  433 */ PFNGLPROGRAMUNIFORM4FPROC ProgramUniform4f;
        /*  434 */ PFNGLPROGRAMUNIFORM4FVPROC ProgramUniform4fv;
        /*  435 */ PFNGLPROGRAMUNIFORM4DPROC ProgramUniform4d;
        /*  436 */ PFNGLPROGRAMUNIFORM4DVPROC ProgramUniform4dv;
        /*  437 */ PFNGLPROGRAMUNIFORM4UIPROC ProgramUniform4ui;
        /*  438 */ PFNGLPROGRAMUNIFORM4UIVPROC ProgramUniform4uiv;
        /*  439 */ PFNGLPROGRAMUNIFORMMATRIX2FVPROC ProgramUniformMatrix2fv;
        /*  440 */ PFNGLPROGRAMUNIFORMMATRIX3FVPROC ProgramUniformMatrix3fv;
        /*  441 */ PFNGLPROGRAMUNIFORMMATRIX4FVPROC ProgramUniformMatrix4fv;
        /*  442 */ PFNGLPROGRAMUNIFORMMATRIX2DVPROC ProgramUniformMatrix2dv;
        /*  443 */ PFNGLPROGRAMUNIFORMMATRIX3DVPROC ProgramUniformMatrix3dv;
        /*  444 */ PFNGLPROGRAMUNIFORMMATRIX4DVPROC ProgramUniformMatrix4dv;
        /*  445 */ PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC ProgramUniformMatrix2x3fv;
        /*  446 */ PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC ProgramUniformMatrix3x2fv;
        /*  447 */ PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC ProgramUniformMatrix2x4fv;
        /*  448 */ PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC ProgramUniformMatrix4x2fv;
        /*  449 */ PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC ProgramUniformMatrix3x4fv;
        /*  450 */ PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC ProgramUniformMatrix4x3fv;
        /*  451 */ PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC ProgramUniformMatrix2x3dv;
        /*  452 */ PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC ProgramUniformMatrix3x2dv;
        /*  453 */ PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC ProgramUniformMatrix2x4dv;
        /*  454 */ PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC ProgramUniformMatrix4x2dv;
        /*  455 */ PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC ProgramUniformMatrix3x4dv;
        /*  456 */ PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC ProgramUniformMatrix4x3dv;
        /*  457 */ PFNGLVALIDATEPROGRAMPIPELINEPROC ValidateProgramPipeline;
        /*  458 */ PFNGLGETPROGRAMPIPELINEINFOLOGPROC GetProgramPipelineInfoLog;
        /*  459 */ PFNGLVERTEXATTRIBL1DPROC VertexAttribL1d;
        /*  460 */ PFNGLVERTEXATTRIBL2DPROC VertexAttribL2d;
        /*  461 */ PFNGLVERTEXATTRIBL3DPROC VertexAttribL3d;
        /*  462 */ PFNGLVERTEXATTRIBL4DPROC VertexAttribL4d;
        /*  463 */ PFNGLVERTEXATTRIBL1DVPROC VertexAttribL1dv;
        /*  464 */ PFNGLVERTEXATTRIBL2DVPROC VertexAttribL2dv;
        /*  465 */ PFNGLVERTEXATTRIBL3DVPROC VertexAttribL3dv;
        /*  466 */ PFNGLVERTEXATTRIBL4DVPROC VertexAttribL4dv;
        /*  467 */ PFNGLVERTEXATTRIBLPOINTERPROC VertexAttribLPointer;
        /*  468 */ PFNGLGETVERTEXATTRIBLDVPROC GetVertexAttribLdv;
        /*  469 */ PFNGLVIEWPORTARRAYVPROC ViewportArrayv;
        /*  470 */ PFNGLVIEWPORTINDEXEDFPROC ViewportIndexedf;
        /*  471 */ PFNGLVIEWPORTINDEXEDFVPROC ViewportIndexedfv;
        /*  472 */ PFNGLSCISSORARRAYVPROC ScissorArrayv;
        /*  473 */ PFNGLSCISSORINDEXEDPROC ScissorIndexed;
        /*  474 */ PFNGLSCISSORINDEXEDVPROC ScissorIndexedv;
        /*  475 */ PFNGLDEPTHRANGEARRAYVPROC DepthRangeArrayv;
        /*  476 */ PFNGLDEPTHRANGEINDEXEDPROC DepthRangeIndexed;
        /*  477 */ PFNGLGETFLOATI_VPROC GetFloati_v;
        /*  478 */ PFNGLGETDOUBLEI_VPROC GetDoublei_v;
        /*  479 */ PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC DrawArraysInstancedBaseInstance;
        /*  480 */ PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC DrawElementsInstancedBaseInstance;
        /*  481 */ PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC DrawElementsInstancedBaseVertexBaseInstance;
        /*  482 */ PFNGLGETINTERNALFORMATIVPROC GetInternalformativ;
        /*  483 */ PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC GetActiveAtomicCounterBufferiv;
        /*  484 */ PFNGLBINDIMAGETEXTUREPROC BindImageTexture;
        /*  485 */ PFNGLMEMORYBARRIERPROC MemoryBarrier;
        /*  486 */ PFNGLTEXSTORAGE1DPROC TexStorage1D;
        /*  487 */ PFNGLTEXSTORAGE2DPROC TexStorage2D;
        /*  488 */ PFNGLTEXSTORAGE3DPROC TexStorage3D;
        /*  489 */ PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC DrawTransformFeedbackInstanced;
        /*  490 */ PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC DrawTransformFeedbackStreamInstanced;
        /*  491 */ PFNGLCLEARBUFFERDATAPROC ClearBufferData;
        /*  492 */ PFNGLCLEARBUFFERSUBDATAPROC ClearBufferSubData;
        /*  493 */ PFNGLDISPATCHCOMPUTEPROC DispatchCompute;
        /*  494 */ PFNGLDISPATCHCOMPUTEINDIRECTPROC DispatchComputeIndirect;
        /*  495 */ PFNGLCOPYIMAGESUBDATAPROC CopyImageSubData;
        /*  496 */ PFNGLFRAMEBUFFERPARAMETERIPROC FramebufferParameteri;
        /*  497 */ PFNGLGETFRAMEBUFFERPARAMETERIVPROC GetFramebufferParameteriv;
        /*  498 */ PFNGLGETINTERNALFORMATI64VPROC GetInternalformati64v;
        /*  499 */ PFNGLINVALIDATETEXSUBIMAGEPROC InvalidateTexSubImage;
        /*  500 */ PFNGLINVALIDATETEXIMAGEPROC InvalidateTexImage;
        /*  501 */ PFNGLINVALIDATEBUFFERSUBDATAPROC InvalidateBufferSubData;
        /*  502 */ PFNGLINVALIDATEBUFFERDATAPROC InvalidateBufferData;
        /*  503 */ PFNGLINVALIDATEFRAMEBUFFERPROC InvalidateFramebuffer;
        /*  504 */ PFNGLINVALIDATESUBFRAMEBUFFERPROC InvalidateSubFramebuffer;
        /*  505 */ PFNGLMULTIDRAWARRAYSINDIRECTPROC MultiDrawArraysIndirect;
        /*  506 */ PFNGLMULTIDRAWELEMENTSINDIRECTPROC MultiDrawElementsIndirect;
        /*  507 */ PFNGLGETPROGRAMINTERFACEIVPROC GetProgramInterfaceiv;
        /*  508 */ PFNGLGETPROGRAMRESOURCEINDEXPROC GetProgramResourceIndex;
        /*  509 */ PFNGLGETPROGRAMRESOURCENAMEPROC GetProgramResourceName;
        /*  510 */ PFNGLGETPROGRAMRESOURCEIVPROC GetProgramResourceiv;
        /*  511 */ PFNGLGETPROGRAMRESOURCELOCATIONPROC GetProgramResourceLocation;
        /*  512 */ PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC GetProgramResourceLocationIndex;
        /*  513 */ PFNGLSHADERSTORAGEBLOCKBINDINGPROC ShaderStorageBlockBinding;
        /*  514 */ PFNGLTEXBUFFERRANGEPROC TexBufferRange;
        /*  515 */ PFNGLTEXSTORAGE2DMULTISAMPLEPROC TexStorage2DMultisample;
        /*  516 */ PFNGLTEXSTORAGE3DMULTISAMPLEPROC TexStorage3DMultisample;
        /*  517 */ PFNGLTEXTUREVIEWPROC TextureView;
        /*  518 */ PFNGLBINDVERTEXBUFFERPROC BindVertexBuffer;
        /*  519 */ PFNGLVERTEXATTRIBFORMATPROC VertexAttribFormat;
        /*  520 */ PFNGLVERTEXATTRIBIFORMATPROC VertexAttribIFormat;
        /*  521 */ PFNGLVERTEXATTRIBLFORMATPROC VertexAttribLFormat;
        /*  522 */ PFNGLVERTEXATTRIBBINDINGPROC VertexAttribBinding;
        /*  523 */ PFNGLVERTEXBINDINGDIVISORPROC VertexBindingDivisor;
        /*  524 */ PFNGLDEBUGMESSAGECONTROLPROC DebugMessageControl;
        /*  525 */ PFNGLDEBUGMESSAGEINSERTPROC DebugMessageInsert;
        /*  526 */ PFNGLDEBUGMESSAGECALLBACKPROC DebugMessageCallback;
        /*  527 */ PFNGLGETDEBUGMESSAGELOGPROC GetDebugMessageLog;
        /*  528 */ PFNGLPUSHDEBUGGROUPPROC PushDebugGroup;
        /*  529 */ PFNGLPOPDEBUGGROUPPROC PopDebugGroup;
        /*  530 */ PFNGLOBJECTLABELPROC ObjectLabel;
        /*  531 */ PFNGLGETOBJECTLABELPROC GetObjectLabel;
        /*  532 */ PFNGLOBJECTPTRLABELPROC ObjectPtrLabel;
        /*  533 */ PFNGLGETOBJECTPTRLABELPROC GetObjectPtrLabel;
        /*  534 */ PFNGLBUFFERSTORAGEPROC BufferStorage;
        /*  535 */ PFNGLCLEARTEXIMAGEPROC ClearTexImage;
        /*  536 */ PFNGLCLEARTEXSUBIMAGEPROC ClearTexSubImage;
        /*  537 */ PFNGLBINDBUFFERSBASEPROC BindBuffersBase;
        /*  538 */ PFNGLBINDBUFFERSRANGEPROC BindBuffersRange;
        /*  539 */ PFNGLBINDTEXTURESPROC BindTextures;
        /*  540 */ PFNGLBINDSAMPLERSPROC BindSamplers;
        /*  541 */ PFNGLBINDIMAGETEXTURESPROC BindImageTextures;
        /*  542 */ PFNGLBINDVERTEXBUFFERSPROC BindVertexBuffers;
        /*  543 */ PFNGLCLIPCONTROLPROC ClipControl;
        /*  544 */ PFNGLCREATETRANSFORMFEEDBACKSPROC CreateTransformFeedbacks;
        /*  545 */ PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC TransformFeedbackBufferBase;
        /*  546 */ PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC TransformFeedbackBufferRange;
        /*  547 */ PFNGLGETTRANSFORMFEEDBACKIVPROC GetTransformFeedbackiv;
        /*  548 */ PFNGLGETTRANSFORMFEEDBACKI_VPROC GetTransformFeedbacki_v;
        /*  549 */ PFNGLGETTRANSFORMFEEDBACKI64_VPROC GetTransformFeedbacki64_v;
        /*  550 */ PFNGLCREATEBUFFERSPROC CreateBuffers;
        /*  551 */ PFNGLNAMEDBUFFERSTORAGEPROC NamedBufferStorage;
        /*  552 */ PFNGLNAMEDBUFFERDATAPROC NamedBufferData;
        /*  553 */ PFNGLNAMEDBUFFERSUBDATAPROC NamedBufferSubData;
        /*  554 */ PFNGLCOPYNAMEDBUFFERSUBDATAPROC CopyNamedBufferSubData;
        /*  555 */ PFNGLCLEARNAMEDBUFFERDATAPROC ClearNamedBufferData;
        /*  556 */ PFNGLCLEARNAMEDBUFFERSUBDATAPROC ClearNamedBufferSubData;
        /*  557 */ PFNGLMAPNAMEDBUFFERPROC MapNamedBuffer;
        /*  558 */ PFNGLMAPNAMEDBUFFERRANGEPROC MapNamedBufferRange;
        /*  559 */ PFNGLUNMAPNAMEDBUFFERPROC UnmapNamedBuffer;
        /*  560 */ PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC FlushMappedNamedBufferRange;
        /*  561 */ PFNGLGETNAMEDBUFFERPARAMETERIVPROC GetNamedBufferParameteriv;
        /*  562 */ PFNGLGETNAMEDBUFFERPARAMETERI64VPROC GetNamedBufferParameteri64v;
        /*  563 */ PFNGLGETNAMEDBUFFERPOINTERVPROC GetNamedBufferPointerv;
        /*  564 */ PFNGLGETNAMEDBUFFERSUBDATAPROC GetNamedBufferSubData;
        /*  565 */ PFNGLCREATEFRAMEBUFFERSPROC CreateFramebuffers;
        /*  566 */ PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC NamedFramebufferRenderbuffer;
        /*  567 */ PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC NamedFramebufferParameteri;
        /*  568 */ PFNGLNAMEDFRAMEBUFFERTEXTUREPROC NamedFramebufferTexture;
        /*  569 */ PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC NamedFramebufferTextureLayer;
        /*  570 */ PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC NamedFramebufferDrawBuffer;
        /*  571 */ PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC NamedFramebufferDrawBuffers;
        /*  572 */ PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC NamedFramebufferReadBuffer;
        /*  573 */ PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC InvalidateNamedFramebufferData;
        /*  574 */ PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC InvalidateNamedFramebufferSubData;
        /*  575 */ PFNGLCLEARNAMEDFRAMEBUFFERIVPROC ClearNamedFramebufferiv;
        /*  576 */ PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC ClearNamedFramebufferuiv;
        /*  577 */ PFNGLCLEARNAMEDFRAMEBUFFERFVPROC ClearNamedFramebufferfv;
        /*  578 */ PFNGLCLEARNAMEDFRAMEBUFFERFIPROC ClearNamedFramebufferfi;
        /*  579 */ PFNGLBLITNAMEDFRAMEBUFFERPROC BlitNamedFramebuffer;
        /*  580 */ PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC CheckNamedFramebufferStatus;
        /*  581 */ PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC GetNamedFramebufferParameteriv;
        /*  582 */ PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC GetNamedFramebufferAttachmentParameteriv;
        /*  583 */ PFNGLCREATERENDERBUFFERSPROC CreateRenderbuffers;
        /*  584 */ PFNGLNAMEDRENDERBUFFERSTORAGEPROC NamedRenderbufferStorage;
        /*  585 */ PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC NamedRenderbufferStorageMultisample;
        /*  586 */ PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC GetNamedRenderbufferParameteriv;
        /*  587 */ PFNGLCREATETEXTURESPROC CreateTextures;
        /*  588 */ PFNGLTEXTUREBUFFERPROC TextureBuffer;
        /*  589 */ PFNGLTEXTUREBUFFERRANGEPROC TextureBufferRange;
        /*  590 */ PFNGLTEXTURESTORAGE1DPROC TextureStorage1D;
        /*  591 */ PFNGLTEXTURESTORAGE2DPROC TextureStorage2D;
        /*  592 */ PFNGLTEXTURESTORAGE3DPROC TextureStorage3D;
        /*  593 */ PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC TextureStorage2DMultisample;
        /*  594 */ PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC TextureStorage3DMultisample;
        /*  595 */ PFNGLTEXTURESUBIMAGE1DPROC TextureSubImage1D;
        /*  596 */ PFNGLTEXTURESUBIMAGE2DPROC TextureSubImage2D;
        /*  597 */ PFNGLTEXTURESUBIMAGE3DPROC TextureSubImage3D;
        /*  598 */ PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC CompressedTextureSubImage1D;
        /*  599 */ PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC CompressedTextureSubImage2D;
        /*  600 */ PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC CompressedTextureSubImage3D;
        /*  601 */ PFNGLCOPYTEXTURESUBIMAGE1DPROC CopyTextureSubImage1D;
        /*  602 */ PFNGLCOPYTEXTURESUBIMAGE2DPROC CopyTextureSubImage2D;
        /*  603 */ PFNGLCOPYTEXTURESUBIMAGE3DPROC CopyTextureSubImage3D;
        /*  604 */ PFNGLTEXTUREPARAMETERFPROC TextureParameterf;
        /*  605 */ PFNGLTEXTUREPARAMETERFVPROC TextureParameterfv;
        /*  606 */ PFNGLTEXTUREPARAMETERIPROC TextureParameteri;
        /*  607 */ PFNGLTEXTUREPARAMETERIIVPROC TextureParameterIiv;
        /*  608 */ PFNGLTEXTUREPARAMETERIUIVPROC TextureParameterIuiv;
        /*  609 */ PFNGLTEXTUREPARAMETERIVPROC TextureParameteriv;
        /*  610 */ PFNGLGENERATETEXTUREMIPMAPPROC GenerateTextureMipmap;
        /*  611 */ PFNGLBINDTEXTUREUNITPROC BindTextureUnit;
        /*  612 */ PFNGLGETTEXTUREIMAGEPROC GetTextureImage;
        /*  613 */ PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC GetCompressedTextureImage;
        /*  614 */ PFNGLGETTEXTURELEVELPARAMETERFVPROC GetTextureLevelParameterfv;
        /*  615 */ PFNGLGETTEXTURELEVELPARAMETERIVPROC GetTextureLevelParameteriv;
        /*  616 */ PFNGLGETTEXTUREPARAMETERFVPROC GetTextureParameterfv;
        /*  617 */ PFNGLGETTEXTUREPARAMETERIIVPROC GetTextureParameterIiv;
        /*  618 */ PFNGLGETTEXTUREPARAMETERIUIVPROC GetTextureParameterIuiv;
        /*  619 */ PFNGLGETTEXTUREPARAMETERIVPROC GetTextureParameteriv;
        /*  620 */ PFNGLCREATEVERTEXARRAYSPROC CreateVertexArrays;
        /*  621 */ PFNGLDISABLEVERTEXARRAYATTRIBPROC DisableVertexArrayAttrib;
        /*  622 */ PFNGLENABLEVERTEXARRAYATTRIBPROC EnableVertexArrayAttrib;
        /*  623 */ PFNGLVERTEXARRAYELEMENTBUFFERPROC VertexArrayElementBuffer;
        /*  624 */ PFNGLVERTEXARRAYVERTEXBUFFERPROC VertexArrayVertexBuffer;
        /*  625 */ PFNGLVERTEXARRAYVERTEXBUFFERSPROC VertexArrayVertexBuffers;
        /*  626 */ PFNGLVERTEXARRAYATTRIBBINDINGPROC VertexArrayAttribBinding;
        /*  627 */ PFNGLVERTEXARRAYATTRIBFORMATPROC VertexArrayAttribFormat;
        /*  628 */ PFNGLVERTEXARRAYATTRIBIFORMATPROC VertexArrayAttribIFormat;
        /*  629 */ PFNGLVERTEXARRAYATTRIBLFORMATPROC VertexArrayAttribLFormat;
        /*  630 */ PFNGLVERTEXARRAYBINDINGDIVISORPROC VertexArrayBindingDivisor;
        /*  631 */ PFNGLGETVERTEXARRAYIVPROC GetVertexArrayiv;
        /*  632 */ PFNGLGETVERTEXARRAYINDEXEDIVPROC GetVertexArrayIndexediv;
        /*  633 */ PFNGLGETVERTEXARRAYINDEXED64IVPROC GetVertexArrayIndexed64iv;
        /*  634 */ PFNGLCREATESAMPLERSPROC CreateSamplers;
        /*  635 */ PFNGLCREATEPROGRAMPIPELINESPROC CreateProgramPipelines;
        /*  636 */ PFNGLCREATEQUERIESPROC CreateQueries;
        /*  637 */ PFNGLGETQUERYBUFFEROBJECTI64VPROC GetQueryBufferObjecti64v;
        /*  638 */ PFNGLGETQUERYBUFFEROBJECTIVPROC GetQueryBufferObjectiv;
        /*  639 */ PFNGLGETQUERYBUFFEROBJECTUI64VPROC GetQueryBufferObjectui64v;
        /*  640 */ PFNGLGETQUERYBUFFEROBJECTUIVPROC GetQueryBufferObjectuiv;
        /*  641 */ PFNGLMEMORYBARRIERBYREGIONPROC MemoryBarrierByRegion;
        /*  642 */ PFNGLGETTEXTURESUBIMAGEPROC GetTextureSubImage;
        /*  643 */ PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC GetCompressedTextureSubImage;
        /*  644 */ PFNGLGETGRAPHICSRESETSTATUSPROC GetGraphicsResetStatus;
        /*  645 */ PFNGLGETNCOMPRESSEDTEXIMAGEPROC GetnCompressedTexImage;
        /*  646 */ PFNGLGETNTEXIMAGEPROC GetnTexImage;
        /*  647 */ PFNGLGETNUNIFORMDVPROC GetnUniformdv;
        /*  648 */ PFNGLGETNUNIFORMFVPROC GetnUniformfv;
        /*  649 */ PFNGLGETNUNIFORMIVPROC GetnUniformiv;
        /*  650 */ PFNGLGETNUNIFORMUIVPROC GetnUniformuiv;
        /*  651 */ PFNGLREADNPIXELSPROC ReadnPixels;
        /*  652 */ PFNGLTEXTUREBARRIERPROC TextureBarrier;
        /*  653 */ PFNGLSPECIALIZESHADERPROC SpecializeShader;
        /*  654 */ PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC MultiDrawArraysIndirectCount;
        /*  655 */ PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC MultiDrawElementsIndirectCount;
        /*  656 */ PFNGLPOLYGONOFFSETCLAMPPROC PolygonOffsetClamp;
        /*  657 */ PFNGLTBUFFERMASK3DFXPROC TbufferMask3DFX;
        /*  658 */ PFNGLDEBUGMESSAGEENABLEAMDPROC DebugMessageEnableAMD;
        /*  659 */ PFNGLDEBUGMESSAGEINSERTAMDPROC DebugMessageInsertAMD;
        /*  660 */ PFNGLDEBUGMESSAGECALLBACKAMDPROC DebugMessageCallbackAMD;
        /*  661 */ PFNGLGETDEBUGMESSAGELOGAMDPROC GetDebugMessageLogAMD;
        /*  662 */ PFNGLBLENDFUNCINDEXEDAMDPROC BlendFuncIndexedAMD;
        /*  663 */ PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC BlendFuncSeparateIndexedAMD;
        /*  664 */ PFNGLBLENDEQUATIONINDEXEDAMDPROC BlendEquationIndexedAMD;
        /*  665 */ PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC BlendEquationSeparateIndexedAMD;
        /*  666 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC RenderbufferStorageMultisampleAdvancedAMD;
        /*  667 */ PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC NamedRenderbufferStorageMultisampleAdvancedAMD;
        /*  668 */ PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC FramebufferSamplePositionsfvAMD;
        /*  669 */ PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC NamedFramebufferSamplePositionsfvAMD;
        /*  670 */ PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC GetFramebufferParameterfvAMD;
        /*  671 */ PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC GetNamedFramebufferParameterfvAMD;
        /*  672 */ PFNGLUNIFORM1I64NVPROC Uniform1i64NV;
        /*  673 */ PFNGLUNIFORM2I64NVPROC Uniform2i64NV;
        /*  674 */ PFNGLUNIFORM3I64NVPROC Uniform3i64NV;
        /*  675 */ PFNGLUNIFORM4I64NVPROC Uniform4i64NV;
        /*  676 */ PFNGLUNIFORM1I64VNVPROC Uniform1i64vNV;
        /*  677 */ PFNGLUNIFORM2I64VNVPROC Uniform2i64vNV;
        /*  678 */ PFNGLUNIFORM3I64VNVPROC Uniform3i64vNV;
        /*  679 */ PFNGLUNIFORM4I64VNVPROC Uniform4i64vNV;
        /*  680 */ PFNGLUNIFORM1UI64NVPROC Uniform1ui64NV;
        /*  681 */ PFNGLUNIFORM2UI64NVPROC Uniform2ui64NV;
        /*  682 */ PFNGLUNIFORM3UI64NVPROC Uniform3ui64NV;
        /*  683 */ PFNGLUNIFORM4UI64NVPROC Uniform4ui64NV;
        /*  684 */ PFNGLUNIFORM1UI64VNVPROC Uniform1ui64vNV;
        /*  685 */ PFNGLUNIFORM2UI64VNVPROC Uniform2ui64vNV;
        /*  686 */ PFNGLUNIFORM3UI64VNVPROC Uniform3ui64vNV;
        /*  687 */ PFNGLUNIFORM4UI64VNVPROC Uniform4ui64vNV;
        /*  688 */ PFNGLGETUNIFORMI64VNVPROC GetUniformi64vNV;
        /*  689 */ PFNGLGETUNIFORMUI64VNVPROC GetUniformui64vNV;
        /*  690 */ PFNGLPROGRAMUNIFORM1I64NVPROC ProgramUniform1i64NV;
        /*  691 */ PFNGLPROGRAMUNIFORM2I64NVPROC ProgramUniform2i64NV;
        /*  692 */ PFNGLPROGRAMUNIFORM3I64NVPROC ProgramUniform3i64NV;
        /*  693 */ PFNGLPROGRAMUNIFORM4I64NVPROC ProgramUniform4i64NV;
        /*  694 */ PFNGLPROGRAMUNIFORM1I64VNVPROC ProgramUniform1i64vNV;
        /*  695 */ PFNGLPROGRAMUNIFORM2I64VNVPROC ProgramUniform2i64vNV;
        /*  696 */ PFNGLPROGRAMUNIFORM3I64VNVPROC ProgramUniform3i64vNV;
        /*  697 */ PFNGLPROGRAMUNIFORM4I64VNVPROC ProgramUniform4i64vNV;
        /*  698 */ PFNGLPROGRAMUNIFORM1UI64NVPROC ProgramUniform1ui64NV;
        /*  699 */ PFNGLPROGRAMUNIFORM2UI64NVPROC ProgramUniform2ui64NV;
        /*  700 */ PFNGLPROGRAMUNIFORM3UI64NVPROC ProgramUniform3ui64NV;
        /*  701 */ PFNGLPROGRAMUNIFORM4UI64NVPROC ProgramUniform4ui64NV;
        /*  702 */ PFNGLPROGRAMUNIFORM1UI64VNVPROC ProgramUniform1ui64vNV;
        /*  703 */ PFNGLPROGRAMUNIFORM2UI64VNVPROC ProgramUniform2ui64vNV;
        /*  704 */ PFNGLPROGRAMUNIFORM3UI64VNVPROC ProgramUniform3ui64vNV;
        /*  705 */ PFNGLPROGRAMUNIFORM4UI64VNVPROC ProgramUniform4ui64vNV;
        /*  706 */ PFNGLVERTEXATTRIBPARAMETERIAMDPROC VertexAttribParameteriAMD;
        /*  707 */ PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC MultiDrawArraysIndirectAMD;
        /*  708 */ PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC MultiDrawElementsIndirectAMD;
        /*  709 */ PFNGLGENNAMESAMDPROC GenNamesAMD;
        /*  710 */ PFNGLDELETENAMESAMDPROC DeleteNamesAMD;
        /*  711 */ PFNGLISNAMEAMDPROC IsNameAMD;
        /*  712 */ PFNGLQUERYOBJECTPARAMETERUIAMDPROC QueryObjectParameteruiAMD;
        /*  713 */ PFNGLGETPERFMONITORGROUPSAMDPROC GetPerfMonitorGroupsAMD;
        /*  714 */ PFNGLGETPERFMONITORCOUNTERSAMDPROC GetPerfMonitorCountersAMD;
        /*  715 */ PFNGLGETPERFMONITORGROUPSTRINGAMDPROC GetPerfMonitorGroupStringAMD;
        /*  716 */ PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC GetPerfMonitorCounterStringAMD;
        /*  717 */ PFNGLGETPERFMONITORCOUNTERINFOAMDPROC GetPerfMonitorCounterInfoAMD;
        /*  718 */ PFNGLGENPERFMONITORSAMDPROC GenPerfMonitorsAMD;
        /*  719 */ PFNGLDELETEPERFMONITORSAMDPROC DeletePerfMonitorsAMD;
        /*  720 */ PFNGLSELECTPERFMONITORCOUNTERSAMDPROC SelectPerfMonitorCountersAMD;
        /*  721 */ PFNGLBEGINPERFMONITORAMDPROC BeginPerfMonitorAMD;
        /*  722 */ PFNGLENDPERFMONITORAMDPROC EndPerfMonitorAMD;
        /*  723 */ PFNGLGETPERFMONITORCOUNTERDATAAMDPROC GetPerfMonitorCounterDataAMD;
        /*  724 */ PFNGLSETMULTISAMPLEFVAMDPROC SetMultisamplefvAMD;
        /*  725 */ PFNGLTEXSTORAGESPARSEAMDPROC TexStorageSparseAMD;
        /*  726 */ PFNGLTEXTURESTORAGESPARSEAMDPROC TextureStorageSparseAMD;
        /*  727 */ PFNGLSTENCILOPVALUEAMDPROC StencilOpValueAMD;
        /*  728 */ PFNGLTESSELLATIONFACTORAMDPROC TessellationFactorAMD;
        /*  729 */ PFNGLTESSELLATIONMODEAMDPROC TessellationModeAMD;
        /*  730 */ PFNGLELEMENTPOINTERAPPLEPROC ElementPointerAPPLE;
        /*  731 */ PFNGLDRAWELEMENTARRAYAPPLEPROC DrawElementArrayAPPLE;
        /*  732 */ PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC DrawRangeElementArrayAPPLE;
        /*  733 */ PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC MultiDrawElementArrayAPPLE;
        /*  734 */ PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC MultiDrawRangeElementArrayAPPLE;
        /*  735 */ PFNGLGENFENCESAPPLEPROC GenFencesAPPLE;
        /*  736 */ PFNGLDELETEFENCESAPPLEPROC DeleteFencesAPPLE;
        /*  737 */ PFNGLSETFENCEAPPLEPROC SetFenceAPPLE;
        /*  738 */ PFNGLISFENCEAPPLEPROC IsFenceAPPLE;
        /*  739 */ PFNGLTESTFENCEAPPLEPROC TestFenceAPPLE;
        /*  740 */ PFNGLFINISHFENCEAPPLEPROC FinishFenceAPPLE;
        /*  741 */ PFNGLTESTOBJECTAPPLEPROC TestObjectAPPLE;
        /*  742 */ PFNGLFINISHOBJECTAPPLEPROC FinishObjectAPPLE;
        /*  743 */ PFNGLBUFFERPARAMETERIAPPLEPROC BufferParameteriAPPLE;
        /*  744 */ PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC FlushMappedBufferRangeAPPLE;
        /*  745 */ PFNGLOBJECTPURGEABLEAPPLEPROC ObjectPurgeableAPPLE;
        /*  746 */ PFNGLOBJECTUNPURGEABLEAPPLEPROC ObjectUnpurgeableAPPLE;
        /*  747 */ PFNGLGETOBJECTPARAMETERIVAPPLEPROC GetObjectParameterivAPPLE;
        /*  748 */ PFNGLTEXTURERANGEAPPLEPROC TextureRangeAPPLE;
        /*  749 */ PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC GetTexParameterPointervAPPLE;
        /*  750 */ PFNGLBINDVERTEXARRAYAPPLEPROC BindVertexArrayAPPLE;
        /*  751 */ PFNGLDELETEVERTEXARRAYSAPPLEPROC DeleteVertexArraysAPPLE;
        /*  752 */ PFNGLGENVERTEXARRAYSAPPLEPROC GenVertexArraysAPPLE;
        /*  753 */ PFNGLISVERTEXARRAYAPPLEPROC IsVertexArrayAPPLE;
        /*  754 */ PFNGLVERTEXARRAYRANGEAPPLEPROC VertexArrayRangeAPPLE;
        /*  755 */ PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC FlushVertexArrayRangeAPPLE;
        /*  756 */ PFNGLVERTEXARRAYPARAMETERIAPPLEPROC VertexArrayParameteriAPPLE;
        /*  757 */ PFNGLENABLEVERTEXATTRIBAPPLEPROC EnableVertexAttribAPPLE;
        /*  758 */ PFNGLDISABLEVERTEXATTRIBAPPLEPROC DisableVertexAttribAPPLE;
        /*  759 */ PFNGLISVERTEXATTRIBENABLEDAPPLEPROC IsVertexAttribEnabledAPPLE;
        /*  760 */ PFNGLMAPVERTEXATTRIB1DAPPLEPROC MapVertexAttrib1dAPPLE;
        /*  761 */ PFNGLMAPVERTEXATTRIB1FAPPLEPROC MapVertexAttrib1fAPPLE;
        /*  762 */ PFNGLMAPVERTEXATTRIB2DAPPLEPROC MapVertexAttrib2dAPPLE;
        /*  763 */ PFNGLMAPVERTEXATTRIB2FAPPLEPROC MapVertexAttrib2fAPPLE;
        /*  764 */ PFNGLPRIMITIVEBOUNDINGBOXARBPROC PrimitiveBoundingBoxARB;
        /*  765 */ PFNGLGETTEXTUREHANDLEARBPROC GetTextureHandleARB;
        /*  766 */ PFNGLGETTEXTURESAMPLERHANDLEARBPROC GetTextureSamplerHandleARB;
        /*  767 */ PFNGLMAKETEXTUREHANDLERESIDENTARBPROC MakeTextureHandleResidentARB;
        /*  768 */ PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC MakeTextureHandleNonResidentARB;
        /*  769 */ PFNGLGETIMAGEHANDLEARBPROC GetImageHandleARB;
        /*  770 */ PFNGLMAKEIMAGEHANDLERESIDENTARBPROC MakeImageHandleResidentARB;
        /*  771 */ PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC MakeImageHandleNonResidentARB;
        /*  772 */ PFNGLUNIFORMHANDLEUI64ARBPROC UniformHandleui64ARB;
        /*  773 */ PFNGLUNIFORMHANDLEUI64VARBPROC UniformHandleui64vARB;
        /*  774 */ PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC ProgramUniformHandleui64ARB;
        /*  775 */ PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC ProgramUniformHandleui64vARB;
        /*  776 */ PFNGLISTEXTUREHANDLERESIDENTARBPROC IsTextureHandleResidentARB;
        /*  777 */ PFNGLISIMAGEHANDLERESIDENTARBPROC IsImageHandleResidentARB;
        /*  778 */ PFNGLVERTEXATTRIBL1UI64ARBPROC VertexAttribL1ui64ARB;
        /*  779 */ PFNGLVERTEXATTRIBL1UI64VARBPROC VertexAttribL1ui64vARB;
        /*  780 */ PFNGLGETVERTEXATTRIBLUI64VARBPROC GetVertexAttribLui64vARB;
        /*  781 */ PFNGLCREATESYNCFROMCLEVENTARBPROC CreateSyncFromCLeventARB;
        /*  782 */ PFNGLCLAMPCOLORARBPROC ClampColorARB;
        /*  783 */ PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC DispatchComputeGroupSizeARB;
        /*  784 */ PFNGLDEBUGMESSAGECONTROLARBPROC DebugMessageControlARB;
        /*  785 */ PFNGLDEBUGMESSAGEINSERTARBPROC DebugMessageInsertARB;
        /*  786 */ PFNGLDEBUGMESSAGECALLBACKARBPROC DebugMessageCallbackARB;
        /*  787 */ PFNGLGETDEBUGMESSAGELOGARBPROC GetDebugMessageLogARB;
        /*  788 */ PFNGLDRAWBUFFERSARBPROC DrawBuffersARB;
        /*  789 */ PFNGLBLENDEQUATIONIARBPROC BlendEquationiARB;
        /*  790 */ PFNGLBLENDEQUATIONSEPARATEIARBPROC BlendEquationSeparateiARB;
        /*  791 */ PFNGLBLENDFUNCIARBPROC BlendFunciARB;
        /*  792 */ PFNGLBLENDFUNCSEPARATEIARBPROC BlendFuncSeparateiARB;
        /*  793 */ PFNGLDRAWARRAYSINSTANCEDARBPROC DrawArraysInstancedARB;
        /*  794 */ PFNGLDRAWELEMENTSINSTANCEDARBPROC DrawElementsInstancedARB;
        /*  795 */ PFNGLPROGRAMSTRINGARBPROC ProgramStringARB;
        /*  796 */ PFNGLBINDPROGRAMARBPROC BindProgramARB;
        /*  797 */ PFNGLDELETEPROGRAMSARBPROC DeleteProgramsARB;
        /*  798 */ PFNGLGENPROGRAMSARBPROC GenProgramsARB;
        /*  799 */ PFNGLPROGRAMENVPARAMETER4DARBPROC ProgramEnvParameter4dARB;
        /*  800 */ PFNGLPROGRAMENVPARAMETER4DVARBPROC ProgramEnvParameter4dvARB;
        /*  801 */ PFNGLPROGRAMENVPARAMETER4FARBPROC ProgramEnvParameter4fARB;
        /*  802 */ PFNGLPROGRAMENVPARAMETER4FVARBPROC ProgramEnvParameter4fvARB;
        /*  803 */ PFNGLPROGRAMLOCALPARAMETER4DARBPROC ProgramLocalParameter4dARB;
        /*  804 */ PFNGLPROGRAMLOCALPARAMETER4DVARBPROC ProgramLocalParameter4dvARB;
        /*  805 */ PFNGLPROGRAMLOCALPARAMETER4FARBPROC ProgramLocalParameter4fARB;
        /*  806 */ PFNGLPROGRAMLOCALPARAMETER4FVARBPROC ProgramLocalParameter4fvARB;
        /*  807 */ PFNGLGETPROGRAMENVPARAMETERDVARBPROC GetProgramEnvParameterdvARB;
        /*  808 */ PFNGLGETPROGRAMENVPARAMETERFVARBPROC GetProgramEnvParameterfvARB;
        /*  809 */ PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC GetProgramLocalParameterdvARB;
        /*  810 */ PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC GetProgramLocalParameterfvARB;
        /*  811 */ PFNGLGETPROGRAMIVARBPROC GetProgramivARB;
        /*  812 */ PFNGLGETPROGRAMSTRINGARBPROC GetProgramStringARB;
        /*  813 */ PFNGLISPROGRAMARBPROC IsProgramARB;
        /*  814 */ PFNGLPROGRAMPARAMETERIARBPROC ProgramParameteriARB;
        /*  815 */ PFNGLFRAMEBUFFERTEXTUREARBPROC FramebufferTextureARB;
        /*  816 */ PFNGLFRAMEBUFFERTEXTURELAYERARBPROC FramebufferTextureLayerARB;
        /*  817 */ PFNGLFRAMEBUFFERTEXTUREFACEARBPROC FramebufferTextureFaceARB;
        /*  818 */ PFNGLSPECIALIZESHADERARBPROC SpecializeShaderARB;
        /*  819 */ PFNGLUNIFORM1I64ARBPROC Uniform1i64ARB;
        /*  820 */ PFNGLUNIFORM2I64ARBPROC Uniform2i64ARB;
        /*  821 */ PFNGLUNIFORM3I64ARBPROC Uniform3i64ARB;
        /*  822 */ PFNGLUNIFORM4I64ARBPROC Uniform4i64ARB;
        /*  823 */ PFNGLUNIFORM1I64VARBPROC Uniform1i64vARB;
        /*  824 */ PFNGLUNIFORM2I64VARBPROC Uniform2i64vARB;
        /*  825 */ PFNGLUNIFORM3I64VARBPROC Uniform3i64vARB;
        /*  826 */ PFNGLUNIFORM4I64VARBPROC Uniform4i64vARB;
        /*  827 */ PFNGLUNIFORM1UI64ARBPROC Uniform1ui64ARB;
        /*  828 */ PFNGLUNIFORM2UI64ARBPROC Uniform2ui64ARB;
        /*  829 */ PFNGLUNIFORM3UI64ARBPROC Uniform3ui64ARB;
        /*  830 */ PFNGLUNIFORM4UI64ARBPROC Uniform4ui64ARB;
        /*  831 */ PFNGLUNIFORM1UI64VARBPROC Uniform1ui64vARB;
        /*  832 */ PFNGLUNIFORM2UI64VARBPROC Uniform2ui64vARB;
        /*  833 */ PFNGLUNIFORM3UI64VARBPROC Uniform3ui64vARB;
        /*  834 */ PFNGLUNIFORM4UI64VARBPROC Uniform4ui64vARB;
        /*  835 */ PFNGLGETUNIFORMI64VARBPROC GetUniformi64vARB;
        /*  836 */ PFNGLGETUNIFORMUI64VARBPROC GetUniformui64vARB;
        /*  837 */ PFNGLGETNUNIFORMI64VARBPROC GetnUniformi64vARB;
        /*  838 */ PFNGLGETNUNIFORMUI64VARBPROC GetnUniformui64vARB;
        /*  839 */ PFNGLPROGRAMUNIFORM1I64ARBPROC ProgramUniform1i64ARB;
        /*  840 */ PFNGLPROGRAMUNIFORM2I64ARBPROC ProgramUniform2i64ARB;
        /*  841 */ PFNGLPROGRAMUNIFORM3I64ARBPROC ProgramUniform3i64ARB;
        /*  842 */ PFNGLPROGRAMUNIFORM4I64ARBPROC ProgramUniform4i64ARB;
        /*  843 */ PFNGLPROGRAMUNIFORM1I64VARBPROC ProgramUniform1i64vARB;
        /*  844 */ PFNGLPROGRAMUNIFORM2I64VARBPROC ProgramUniform2i64vARB;
        /*  845 */ PFNGLPROGRAMUNIFORM3I64VARBPROC ProgramUniform3i64vARB;
        /*  846 */ PFNGLPROGRAMUNIFORM4I64VARBPROC ProgramUniform4i64vARB;
        /*  847 */ PFNGLPROGRAMUNIFORM1UI64ARBPROC ProgramUniform1ui64ARB;
        /*  848 */ PFNGLPROGRAMUNIFORM2UI64ARBPROC ProgramUniform2ui64ARB;
        /*  849 */ PFNGLPROGRAMUNIFORM3UI64ARBPROC ProgramUniform3ui64ARB;
        /*  850 */ PFNGLPROGRAMUNIFORM4UI64ARBPROC ProgramUniform4ui64ARB;
        /*  851 */ PFNGLPROGRAMUNIFORM1UI64VARBPROC ProgramUniform1ui64vARB;
        /*  852 */ PFNGLPROGRAMUNIFORM2UI64VARBPROC ProgramUniform2ui64vARB;
        /*  853 */ PFNGLPROGRAMUNIFORM3UI64VARBPROC ProgramUniform3ui64vARB;
        /*  854 */ PFNGLPROGRAMUNIFORM4UI64VARBPROC ProgramUniform4ui64vARB;
        /*  855 */ PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC MultiDrawArraysIndirectCountARB;
        /*  856 */ PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC MultiDrawElementsIndirectCountARB;
        /*  857 */ PFNGLVERTEXATTRIBDIVISORARBPROC VertexAttribDivisorARB;
        /*  858 */ PFNGLCURRENTPALETTEMATRIXARBPROC CurrentPaletteMatrixARB;
        /*  859 */ PFNGLMATRIXINDEXUBVARBPROC MatrixIndexubvARB;
        /*  860 */ PFNGLMATRIXINDEXUSVARBPROC MatrixIndexusvARB;
        /*  861 */ PFNGLMATRIXINDEXUIVARBPROC MatrixIndexuivARB;
        /*  862 */ PFNGLMATRIXINDEXPOINTERARBPROC MatrixIndexPointerARB;
        /*  863 */ PFNGLSAMPLECOVERAGEARBPROC SampleCoverageARB;
        /*  864 */ PFNGLACTIVETEXTUREARBPROC ActiveTextureARB;
        /*  865 */ PFNGLCLIENTACTIVETEXTUREARBPROC ClientActiveTextureARB;
        /*  866 */ PFNGLMULTITEXCOORD1DARBPROC MultiTexCoord1dARB;
        /*  867 */ PFNGLMULTITEXCOORD1DVARBPROC MultiTexCoord1dvARB;
        /*  868 */ PFNGLMULTITEXCOORD1FARBPROC MultiTexCoord1fARB;
        /*  869 */ PFNGLMULTITEXCOORD1FVARBPROC MultiTexCoord1fvARB;
        /*  870 */ PFNGLMULTITEXCOORD1IARBPROC MultiTexCoord1iARB;
        /*  871 */ PFNGLMULTITEXCOORD1IVARBPROC MultiTexCoord1ivARB;
        /*  872 */ PFNGLMULTITEXCOORD1SARBPROC MultiTexCoord1sARB;
        /*  873 */ PFNGLMULTITEXCOORD1SVARBPROC MultiTexCoord1svARB;
        /*  874 */ PFNGLMULTITEXCOORD2DARBPROC MultiTexCoord2dARB;
        /*  875 */ PFNGLMULTITEXCOORD2DVARBPROC MultiTexCoord2dvARB;
        /*  876 */ PFNGLMULTITEXCOORD2FARBPROC MultiTexCoord2fARB;
        /*  877 */ PFNGLMULTITEXCOORD2FVARBPROC MultiTexCoord2fvARB;
        /*  878 */ PFNGLMULTITEXCOORD2IARBPROC MultiTexCoord2iARB;
        /*  879 */ PFNGLMULTITEXCOORD2IVARBPROC MultiTexCoord2ivARB;
        /*  880 */ PFNGLMULTITEXCOORD2SARBPROC MultiTexCoord2sARB;
        /*  881 */ PFNGLMULTITEXCOORD2SVARBPROC MultiTexCoord2svARB;
        /*  882 */ PFNGLMULTITEXCOORD3DARBPROC MultiTexCoord3dARB;
        /*  883 */ PFNGLMULTITEXCOORD3DVARBPROC MultiTexCoord3dvARB;
        /*  884 */ PFNGLMULTITEXCOORD3FARBPROC MultiTexCoord3fARB;
        /*  885 */ PFNGLMULTITEXCOORD3FVARBPROC MultiTexCoord3fvARB;
        /*  886 */ PFNGLMULTITEXCOORD3IARBPROC MultiTexCoord3iARB;
        /*  887 */ PFNGLMULTITEXCOORD3IVARBPROC MultiTexCoord3ivARB;
        /*  888 */ PFNGLMULTITEXCOORD3SARBPROC MultiTexCoord3sARB;
        /*  889 */ PFNGLMULTITEXCOORD3SVARBPROC MultiTexCoord3svARB;
        /*  890 */ PFNGLMULTITEXCOORD4DARBPROC MultiTexCoord4dARB;
        /*  891 */ PFNGLMULTITEXCOORD4DVARBPROC MultiTexCoord4dvARB;
        /*  892 */ PFNGLMULTITEXCOORD4FARBPROC MultiTexCoord4fARB;
        /*  893 */ PFNGLMULTITEXCOORD4FVARBPROC MultiTexCoord4fvARB;
        /*  894 */ PFNGLMULTITEXCOORD4IARBPROC MultiTexCoord4iARB;
        /*  895 */ PFNGLMULTITEXCOORD4IVARBPROC MultiTexCoord4ivARB;
        /*  896 */ PFNGLMULTITEXCOORD4SARBPROC MultiTexCoord4sARB;
        /*  897 */ PFNGLMULTITEXCOORD4SVARBPROC MultiTexCoord4svARB;
        /*  898 */ PFNGLGENQUERIESARBPROC GenQueriesARB;
        /*  899 */ PFNGLDELETEQUERIESARBPROC DeleteQueriesARB;
        /*  900 */ PFNGLISQUERYARBPROC IsQueryARB;
        /*  901 */ PFNGLBEGINQUERYARBPROC BeginQueryARB;
        /*  902 */ PFNGLENDQUERYARBPROC EndQueryARB;
        /*  903 */ PFNGLGETQUERYIVARBPROC GetQueryivARB;
        /*  904 */ PFNGLGETQUERYOBJECTIVARBPROC GetQueryObjectivARB;
        /*  905 */ PFNGLGETQUERYOBJECTUIVARBPROC GetQueryObjectuivARB;
        /*  906 */ PFNGLMAXSHADERCOMPILERTHREADSARBPROC MaxShaderCompilerThreadsARB;
        /*  907 */ PFNGLPOINTPARAMETERFARBPROC PointParameterfARB;
        /*  908 */ PFNGLPOINTPARAMETERFVARBPROC PointParameterfvARB;
        /*  909 */ PFNGLGETGRAPHICSRESETSTATUSARBPROC GetGraphicsResetStatusARB;
        /*  910 */ PFNGLGETNTEXIMAGEARBPROC GetnTexImageARB;
        /*  911 */ PFNGLREADNPIXELSARBPROC ReadnPixelsARB;
        /*  912 */ PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC GetnCompressedTexImageARB;
        /*  913 */ PFNGLGETNUNIFORMFVARBPROC GetnUniformfvARB;
        /*  914 */ PFNGLGETNUNIFORMIVARBPROC GetnUniformivARB;
        /*  915 */ PFNGLGETNUNIFORMUIVARBPROC GetnUniformuivARB;
        /*  916 */ PFNGLGETNUNIFORMDVARBPROC GetnUniformdvARB;
        /*  917 */ PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC FramebufferSampleLocationsfvARB;
        /*  918 */ PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC NamedFramebufferSampleLocationsfvARB;
        /*  919 */ PFNGLEVALUATEDEPTHVALUESARBPROC EvaluateDepthValuesARB;
        /*  920 */ PFNGLMINSAMPLESHADINGARBPROC MinSampleShadingARB;
        /*  921 */ PFNGLDELETEOBJECTARBPROC DeleteObjectARB;
        /*  922 */ PFNGLGETHANDLEARBPROC GetHandleARB;
        /*  923 */ PFNGLDETACHOBJECTARBPROC DetachObjectARB;
        /*  924 */ PFNGLCREATESHADEROBJECTARBPROC CreateShaderObjectARB;
        /*  925 */ PFNGLSHADERSOURCEARBPROC ShaderSourceARB;
        /*  926 */ PFNGLCOMPILESHADERARBPROC CompileShaderARB;
        /*  927 */ PFNGLCREATEPROGRAMOBJECTARBPROC CreateProgramObjectARB;
        /*  928 */ PFNGLATTACHOBJECTARBPROC AttachObjectARB;
        /*  929 */ PFNGLLINKPROGRAMARBPROC LinkProgramARB;
        /*  930 */ PFNGLUSEPROGRAMOBJECTARBPROC UseProgramObjectARB;
        /*  931 */ PFNGLVALIDATEPROGRAMARBPROC ValidateProgramARB;
        /*  932 */ PFNGLUNIFORM1FARBPROC Uniform1fARB;
        /*  933 */ PFNGLUNIFORM2FARBPROC Uniform2fARB;
        /*  934 */ PFNGLUNIFORM3FARBPROC Uniform3fARB;
        /*  935 */ PFNGLUNIFORM4FARBPROC Uniform4fARB;
        /*  936 */ PFNGLUNIFORM1IARBPROC Uniform1iARB;
        /*  937 */ PFNGLUNIFORM2IARBPROC Uniform2iARB;
        /*  938 */ PFNGLUNIFORM3IARBPROC Uniform3iARB;
        /*  939 */ PFNGLUNIFORM4IARBPROC Uniform4iARB;
        /*  940 */ PFNGLUNIFORM1FVARBPROC Uniform1fvARB;
        /*  941 */ PFNGLUNIFORM2FVARBPROC Uniform2fvARB;
        /*  942 */ PFNGLUNIFORM3FVARBPROC Uniform3fvARB;
        /*  943 */ PFNGLUNIFORM4FVARBPROC Uniform4fvARB;
        /*  944 */ PFNGLUNIFORM1IVARBPROC Uniform1ivARB;
        /*  945 */ PFNGLUNIFORM2IVARBPROC Uniform2ivARB;
        /*  946 */ PFNGLUNIFORM3IVARBPROC Uniform3ivARB;
        /*  947 */ PFNGLUNIFORM4IVARBPROC Uniform4ivARB;
        /*  948 */ PFNGLUNIFORMMATRIX2FVARBPROC UniformMatrix2fvARB;
        /*  949 */ PFNGLUNIFORMMATRIX3FVARBPROC UniformMatrix3fvARB;
        /*  950 */ PFNGLUNIFORMMATRIX4FVARBPROC UniformMatrix4fvARB;
        /*  951 */ PFNGLGETOBJECTPARAMETERFVARBPROC GetObjectParameterfvARB;
        /*  952 */ PFNGLGETOBJECTPARAMETERIVARBPROC GetObjectParameterivARB;
        /*  953 */ PFNGLGETINFOLOGARBPROC GetInfoLogARB;
        /*  954 */ PFNGLGETATTACHEDOBJECTSARBPROC GetAttachedObjectsARB;
        /*  955 */ PFNGLGETUNIFORMLOCATIONARBPROC GetUniformLocationARB;
        /*  956 */ PFNGLGETACTIVEUNIFORMARBPROC GetActiveUniformARB;
        /*  957 */ PFNGLGETUNIFORMFVARBPROC GetUniformfvARB;
        /*  958 */ PFNGLGETUNIFORMIVARBPROC GetUniformivARB;
        /*  959 */ PFNGLGETSHADERSOURCEARBPROC GetShaderSourceARB;
        /*  960 */ PFNGLNAMEDSTRINGARBPROC NamedStringARB;
        /*  961 */ PFNGLDELETENAMEDSTRINGARBPROC DeleteNamedStringARB;
        /*  962 */ PFNGLCOMPILESHADERINCLUDEARBPROC CompileShaderIncludeARB;
        /*  963 */ PFNGLISNAMEDSTRINGARBPROC IsNamedStringARB;
        /*  964 */ PFNGLGETNAMEDSTRINGARBPROC GetNamedStringARB;
        /*  965 */ PFNGLGETNAMEDSTRINGIVARBPROC GetNamedStringivARB;
        /*  966 */ PFNGLBUFFERPAGECOMMITMENTARBPROC BufferPageCommitmentARB;
        /*  967 */ PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC NamedBufferPageCommitmentEXT;
        /*  968 */ PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC NamedBufferPageCommitmentARB;
        /*  969 */ PFNGLTEXPAGECOMMITMENTARBPROC TexPageCommitmentARB;
        /*  970 */ PFNGLTEXBUFFERARBPROC TexBufferARB;
        /*  971 */ PFNGLCOMPRESSEDTEXIMAGE3DARBPROC CompressedTexImage3DARB;
        /*  972 */ PFNGLCOMPRESSEDTEXIMAGE2DARBPROC CompressedTexImage2DARB;
        /*  973 */ PFNGLCOMPRESSEDTEXIMAGE1DARBPROC CompressedTexImage1DARB;
        /*  974 */ PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC CompressedTexSubImage3DARB;
        /*  975 */ PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC CompressedTexSubImage2DARB;
        /*  976 */ PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC CompressedTexSubImage1DARB;
        /*  977 */ PFNGLGETCOMPRESSEDTEXIMAGEARBPROC GetCompressedTexImageARB;
        /*  978 */ PFNGLLOADTRANSPOSEMATRIXFARBPROC LoadTransposeMatrixfARB;
        /*  979 */ PFNGLLOADTRANSPOSEMATRIXDARBPROC LoadTransposeMatrixdARB;
        /*  980 */ PFNGLMULTTRANSPOSEMATRIXFARBPROC MultTransposeMatrixfARB;
        /*  981 */ PFNGLMULTTRANSPOSEMATRIXDARBPROC MultTransposeMatrixdARB;
        /*  982 */ PFNGLWEIGHTBVARBPROC WeightbvARB;
        /*  983 */ PFNGLWEIGHTSVARBPROC WeightsvARB;
        /*  984 */ PFNGLWEIGHTIVARBPROC WeightivARB;
        /*  985 */ PFNGLWEIGHTFVARBPROC WeightfvARB;
        /*  986 */ PFNGLWEIGHTDVARBPROC WeightdvARB;
        /*  987 */ PFNGLWEIGHTUBVARBPROC WeightubvARB;
        /*  988 */ PFNGLWEIGHTUSVARBPROC WeightusvARB;
        /*  989 */ PFNGLWEIGHTUIVARBPROC WeightuivARB;
        /*  990 */ PFNGLWEIGHTPOINTERARBPROC WeightPointerARB;
        /*  991 */ PFNGLVERTEXBLENDARBPROC VertexBlendARB;
        /*  992 */ PFNGLBINDBUFFERARBPROC BindBufferARB;
        /*  993 */ PFNGLDELETEBUFFERSARBPROC DeleteBuffersARB;
        /*  994 */ PFNGLGENBUFFERSARBPROC GenBuffersARB;
        /*  995 */ PFNGLISBUFFERARBPROC IsBufferARB;
        /*  996 */ PFNGLBUFFERDATAARBPROC BufferDataARB;
        /*  997 */ PFNGLBUFFERSUBDATAARBPROC BufferSubDataARB;
        /*  998 */ PFNGLGETBUFFERSUBDATAARBPROC GetBufferSubDataARB;
        /*  999 */ PFNGLMAPBUFFERARBPROC MapBufferARB;
        /* 1000 */ PFNGLUNMAPBUFFERARBPROC UnmapBufferARB;
        /* 1001 */ PFNGLGETBUFFERPARAMETERIVARBPROC GetBufferParameterivARB;
        /* 1002 */ PFNGLGETBUFFERPOINTERVARBPROC GetBufferPointervARB;
        /* 1003 */ PFNGLVERTEXATTRIB1DARBPROC VertexAttrib1dARB;
        /* 1004 */ PFNGLVERTEXATTRIB1DVARBPROC VertexAttrib1dvARB;
        /* 1005 */ PFNGLVERTEXATTRIB1FARBPROC VertexAttrib1fARB;
        /* 1006 */ PFNGLVERTEXATTRIB1FVARBPROC VertexAttrib1fvARB;
        /* 1007 */ PFNGLVERTEXATTRIB1SARBPROC VertexAttrib1sARB;
        /* 1008 */ PFNGLVERTEXATTRIB1SVARBPROC VertexAttrib1svARB;
        /* 1009 */ PFNGLVERTEXATTRIB2DARBPROC VertexAttrib2dARB;
        /* 1010 */ PFNGLVERTEXATTRIB2DVARBPROC VertexAttrib2dvARB;
        /* 1011 */ PFNGLVERTEXATTRIB2FARBPROC VertexAttrib2fARB;
        /* 1012 */ PFNGLVERTEXATTRIB2FVARBPROC VertexAttrib2fvARB;
        /* 1013 */ PFNGLVERTEXATTRIB2SARBPROC VertexAttrib2sARB;
        /* 1014 */ PFNGLVERTEXATTRIB2SVARBPROC VertexAttrib2svARB;
        /* 1015 */ PFNGLVERTEXATTRIB3DARBPROC VertexAttrib3dARB;
        /* 1016 */ PFNGLVERTEXATTRIB3DVARBPROC VertexAttrib3dvARB;
        /* 1017 */ PFNGLVERTEXATTRIB3FARBPROC VertexAttrib3fARB;
        /* 1018 */ PFNGLVERTEXATTRIB3FVARBPROC VertexAttrib3fvARB;
        /* 1019 */ PFNGLVERTEXATTRIB3SARBPROC VertexAttrib3sARB;
        /* 1020 */ PFNGLVERTEXATTRIB3SVARBPROC VertexAttrib3svARB;
        /* 1021 */ PFNGLVERTEXATTRIB4NBVARBPROC VertexAttrib4NbvARB;
        /* 1022 */ PFNGLVERTEXATTRIB4NIVARBPROC VertexAttrib4NivARB;
        /* 1023 */ PFNGLVERTEXATTRIB4NSVARBPROC VertexAttrib4NsvARB;
        /* 1024 */ PFNGLVERTEXATTRIB4NUBARBPROC VertexAttrib4NubARB;
        /* 1025 */ PFNGLVERTEXATTRIB4NUBVARBPROC VertexAttrib4NubvARB;
        /* 1026 */ PFNGLVERTEXATTRIB4NUIVARBPROC VertexAttrib4NuivARB;
        /* 1027 */ PFNGLVERTEXATTRIB4NUSVARBPROC VertexAttrib4NusvARB;
        /* 1028 */ PFNGLVERTEXATTRIB4BVARBPROC VertexAttrib4bvARB;
        /* 1029 */ PFNGLVERTEXATTRIB4DARBPROC VertexAttrib4dARB;
        /* 1030 */ PFNGLVERTEXATTRIB4DVARBPROC VertexAttrib4dvARB;
        /* 1031 */ PFNGLVERTEXATTRIB4FARBPROC VertexAttrib4fARB;
        /* 1032 */ PFNGLVERTEXATTRIB4FVARBPROC VertexAttrib4fvARB;
        /* 1033 */ PFNGLVERTEXATTRIB4IVARBPROC VertexAttrib4ivARB;
        /* 1034 */ PFNGLVERTEXATTRIB4SARBPROC VertexAttrib4sARB;
        /* 1035 */ PFNGLVERTEXATTRIB4SVARBPROC VertexAttrib4svARB;
        /* 1036 */ PFNGLVERTEXATTRIB4UBVARBPROC VertexAttrib4ubvARB;
        /* 1037 */ PFNGLVERTEXATTRIB4UIVARBPROC VertexAttrib4uivARB;
        /* 1038 */ PFNGLVERTEXATTRIB4USVARBPROC VertexAttrib4usvARB;
        /* 1039 */ PFNGLVERTEXATTRIBPOINTERARBPROC VertexAttribPointerARB;
        /* 1040 */ PFNGLENABLEVERTEXATTRIBARRAYARBPROC EnableVertexAttribArrayARB;
        /* 1041 */ PFNGLDISABLEVERTEXATTRIBARRAYARBPROC DisableVertexAttribArrayARB;
        /* 1042 */ PFNGLGETVERTEXATTRIBDVARBPROC GetVertexAttribdvARB;
        /* 1043 */ PFNGLGETVERTEXATTRIBFVARBPROC GetVertexAttribfvARB;
        /* 1044 */ PFNGLGETVERTEXATTRIBIVARBPROC GetVertexAttribivARB;
        /* 1045 */ PFNGLGETVERTEXATTRIBPOINTERVARBPROC GetVertexAttribPointervARB;
        /* 1046 */ PFNGLBINDATTRIBLOCATIONARBPROC BindAttribLocationARB;
        /* 1047 */ PFNGLGETACTIVEATTRIBARBPROC GetActiveAttribARB;
        /* 1048 */ PFNGLGETATTRIBLOCATIONARBPROC GetAttribLocationARB;
        /* 1049 */ PFNGLDEPTHRANGEARRAYDVNVPROC DepthRangeArraydvNV;
        /* 1050 */ PFNGLDEPTHRANGEINDEXEDDNVPROC DepthRangeIndexeddNV;
        /* 1051 */ PFNGLWINDOWPOS2DARBPROC WindowPos2dARB;
        /* 1052 */ PFNGLWINDOWPOS2DVARBPROC WindowPos2dvARB;
        /* 1053 */ PFNGLWINDOWPOS2FARBPROC WindowPos2fARB;
        /* 1054 */ PFNGLWINDOWPOS2FVARBPROC WindowPos2fvARB;
        /* 1055 */ PFNGLWINDOWPOS2IARBPROC WindowPos2iARB;
        /* 1056 */ PFNGLWINDOWPOS2IVARBPROC WindowPos2ivARB;
        /* 1057 */ PFNGLWINDOWPOS2SARBPROC WindowPos2sARB;
        /* 1058 */ PFNGLWINDOWPOS2SVARBPROC WindowPos2svARB;
        /* 1059 */ PFNGLWINDOWPOS3DARBPROC WindowPos3dARB;
        /* 1060 */ PFNGLWINDOWPOS3DVARBPROC WindowPos3dvARB;
        /* 1061 */ PFNGLWINDOWPOS3FARBPROC WindowPos3fARB;
        /* 1062 */ PFNGLWINDOWPOS3FVARBPROC WindowPos3fvARB;
        /* 1063 */ PFNGLWINDOWPOS3IARBPROC WindowPos3iARB;
        /* 1064 */ PFNGLWINDOWPOS3IVARBPROC WindowPos3ivARB;
        /* 1065 */ PFNGLWINDOWPOS3SARBPROC WindowPos3sARB;
        /* 1066 */ PFNGLWINDOWPOS3SVARBPROC WindowPos3svARB;
        /* 1067 */ PFNGLDRAWBUFFERSATIPROC DrawBuffersATI;
        /* 1068 */ PFNGLELEMENTPOINTERATIPROC ElementPointerATI;
        /* 1069 */ PFNGLDRAWELEMENTARRAYATIPROC DrawElementArrayATI;
        /* 1070 */ PFNGLDRAWRANGEELEMENTARRAYATIPROC DrawRangeElementArrayATI;
        /* 1071 */ PFNGLTEXBUMPPARAMETERIVATIPROC TexBumpParameterivATI;
        /* 1072 */ PFNGLTEXBUMPPARAMETERFVATIPROC TexBumpParameterfvATI;
        /* 1073 */ PFNGLGETTEXBUMPPARAMETERIVATIPROC GetTexBumpParameterivATI;
        /* 1074 */ PFNGLGETTEXBUMPPARAMETERFVATIPROC GetTexBumpParameterfvATI;
        /* 1075 */ PFNGLGENFRAGMENTSHADERSATIPROC GenFragmentShadersATI;
        /* 1076 */ PFNGLBINDFRAGMENTSHADERATIPROC BindFragmentShaderATI;
        /* 1077 */ PFNGLDELETEFRAGMENTSHADERATIPROC DeleteFragmentShaderATI;
        /* 1078 */ PFNGLBEGINFRAGMENTSHADERATIPROC BeginFragmentShaderATI;
        /* 1079 */ PFNGLENDFRAGMENTSHADERATIPROC EndFragmentShaderATI;
        /* 1080 */ PFNGLPASSTEXCOORDATIPROC PassTexCoordATI;
        /* 1081 */ PFNGLSAMPLEMAPATIPROC SampleMapATI;
        /* 1082 */ PFNGLCOLORFRAGMENTOP1ATIPROC ColorFragmentOp1ATI;
        /* 1083 */ PFNGLCOLORFRAGMENTOP2ATIPROC ColorFragmentOp2ATI;
        /* 1084 */ PFNGLCOLORFRAGMENTOP3ATIPROC ColorFragmentOp3ATI;
        /* 1085 */ PFNGLALPHAFRAGMENTOP1ATIPROC AlphaFragmentOp1ATI;
        /* 1086 */ PFNGLALPHAFRAGMENTOP2ATIPROC AlphaFragmentOp2ATI;
        /* 1087 */ PFNGLALPHAFRAGMENTOP3ATIPROC AlphaFragmentOp3ATI;
        /* 1088 */ PFNGLSETFRAGMENTSHADERCONSTANTATIPROC SetFragmentShaderConstantATI;
        /* 1089 */ PFNGLMAPOBJECTBUFFERATIPROC MapObjectBufferATI;
        /* 1090 */ PFNGLUNMAPOBJECTBUFFERATIPROC UnmapObjectBufferATI;
        /* 1091 */ PFNGLPNTRIANGLESIATIPROC PNTrianglesiATI;
        /* 1092 */ PFNGLPNTRIANGLESFATIPROC PNTrianglesfATI;
        /* 1093 */ PFNGLSTENCILOPSEPARATEATIPROC StencilOpSeparateATI;
        /* 1094 */ PFNGLSTENCILFUNCSEPARATEATIPROC StencilFuncSeparateATI;
        /* 1095 */ PFNGLNEWOBJECTBUFFERATIPROC NewObjectBufferATI;
        /* 1096 */ PFNGLISOBJECTBUFFERATIPROC IsObjectBufferATI;
        /* 1097 */ PFNGLUPDATEOBJECTBUFFERATIPROC UpdateObjectBufferATI;
        /* 1098 */ PFNGLGETOBJECTBUFFERFVATIPROC GetObjectBufferfvATI;
        /* 1099 */ PFNGLGETOBJECTBUFFERIVATIPROC GetObjectBufferivATI;
        /* 1100 */ PFNGLFREEOBJECTBUFFERATIPROC FreeObjectBufferATI;
        /* 1101 */ PFNGLARRAYOBJECTATIPROC ArrayObjectATI;
        /* 1102 */ PFNGLGETARRAYOBJECTFVATIPROC GetArrayObjectfvATI;
        /* 1103 */ PFNGLGETARRAYOBJECTIVATIPROC GetArrayObjectivATI;
        /* 1104 */ PFNGLVARIANTARRAYOBJECTATIPROC VariantArrayObjectATI;
        /* 1105 */ PFNGLGETVARIANTARRAYOBJECTFVATIPROC GetVariantArrayObjectfvATI;
        /* 1106 */ PFNGLGETVARIANTARRAYOBJECTIVATIPROC GetVariantArrayObjectivATI;
        /* 1107 */ PFNGLVERTEXATTRIBARRAYOBJECTATIPROC VertexAttribArrayObjectATI;
        /* 1108 */ PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC GetVertexAttribArrayObjectfvATI;
        /* 1109 */ PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC GetVertexAttribArrayObjectivATI;
        /* 1110 */ PFNGLVERTEXSTREAM1SATIPROC VertexStream1sATI;
        /* 1111 */ PFNGLVERTEXSTREAM1SVATIPROC VertexStream1svATI;
        /* 1112 */ PFNGLVERTEXSTREAM1IATIPROC VertexStream1iATI;
        /* 1113 */ PFNGLVERTEXSTREAM1IVATIPROC VertexStream1ivATI;
        /* 1114 */ PFNGLVERTEXSTREAM1FATIPROC VertexStream1fATI;
        /* 1115 */ PFNGLVERTEXSTREAM1FVATIPROC VertexStream1fvATI;
        /* 1116 */ PFNGLVERTEXSTREAM1DATIPROC VertexStream1dATI;
        /* 1117 */ PFNGLVERTEXSTREAM1DVATIPROC VertexStream1dvATI;
        /* 1118 */ PFNGLVERTEXSTREAM2SATIPROC VertexStream2sATI;
        /* 1119 */ PFNGLVERTEXSTREAM2SVATIPROC VertexStream2svATI;
        /* 1120 */ PFNGLVERTEXSTREAM2IATIPROC VertexStream2iATI;
        /* 1121 */ PFNGLVERTEXSTREAM2IVATIPROC VertexStream2ivATI;
        /* 1122 */ PFNGLVERTEXSTREAM2FATIPROC VertexStream2fATI;
        /* 1123 */ PFNGLVERTEXSTREAM2FVATIPROC VertexStream2fvATI;
        /* 1124 */ PFNGLVERTEXSTREAM2DATIPROC VertexStream2dATI;
        /* 1125 */ PFNGLVERTEXSTREAM2DVATIPROC VertexStream2dvATI;
        /* 1126 */ PFNGLVERTEXSTREAM3SATIPROC VertexStream3sATI;
        /* 1127 */ PFNGLVERTEXSTREAM3SVATIPROC VertexStream3svATI;
        /* 1128 */ PFNGLVERTEXSTREAM3IATIPROC VertexStream3iATI;
        /* 1129 */ PFNGLVERTEXSTREAM3IVATIPROC VertexStream3ivATI;
        /* 1130 */ PFNGLVERTEXSTREAM3FATIPROC VertexStream3fATI;
        /* 1131 */ PFNGLVERTEXSTREAM3FVATIPROC VertexStream3fvATI;
        /* 1132 */ PFNGLVERTEXSTREAM3DATIPROC VertexStream3dATI;
        /* 1133 */ PFNGLVERTEXSTREAM3DVATIPROC VertexStream3dvATI;
        /* 1134 */ PFNGLVERTEXSTREAM4SATIPROC VertexStream4sATI;
        /* 1135 */ PFNGLVERTEXSTREAM4SVATIPROC VertexStream4svATI;
        /* 1136 */ PFNGLVERTEXSTREAM4IATIPROC VertexStream4iATI;
        /* 1137 */ PFNGLVERTEXSTREAM4IVATIPROC VertexStream4ivATI;
        /* 1138 */ PFNGLVERTEXSTREAM4FATIPROC VertexStream4fATI;
        /* 1139 */ PFNGLVERTEXSTREAM4FVATIPROC VertexStream4fvATI;
        /* 1140 */ PFNGLVERTEXSTREAM4DATIPROC VertexStream4dATI;
        /* 1141 */ PFNGLVERTEXSTREAM4DVATIPROC VertexStream4dvATI;
        /* 1142 */ PFNGLNORMALSTREAM3BATIPROC NormalStream3bATI;
        /* 1143 */ PFNGLNORMALSTREAM3BVATIPROC NormalStream3bvATI;
        /* 1144 */ PFNGLNORMALSTREAM3SATIPROC NormalStream3sATI;
        /* 1145 */ PFNGLNORMALSTREAM3SVATIPROC NormalStream3svATI;
        /* 1146 */ PFNGLNORMALSTREAM3IATIPROC NormalStream3iATI;
        /* 1147 */ PFNGLNORMALSTREAM3IVATIPROC NormalStream3ivATI;
        /* 1148 */ PFNGLNORMALSTREAM3FATIPROC NormalStream3fATI;
        /* 1149 */ PFNGLNORMALSTREAM3FVATIPROC NormalStream3fvATI;
        /* 1150 */ PFNGLNORMALSTREAM3DATIPROC NormalStream3dATI;
        /* 1151 */ PFNGLNORMALSTREAM3DVATIPROC NormalStream3dvATI;
        /* 1152 */ PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC ClientActiveVertexStreamATI;
        /* 1153 */ PFNGLVERTEXBLENDENVIATIPROC VertexBlendEnviATI;
        /* 1154 */ PFNGLVERTEXBLENDENVFATIPROC VertexBlendEnvfATI;
        /* 1155 */ PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC EGLImageTargetTexStorageEXT;
        /* 1156 */ PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC EGLImageTargetTextureStorageEXT;
        /* 1157 */ PFNGLUNIFORMBUFFEREXTPROC UniformBufferEXT;
        /* 1158 */ PFNGLGETUNIFORMBUFFERSIZEEXTPROC GetUniformBufferSizeEXT;
        /* 1159 */ PFNGLGETUNIFORMOFFSETEXTPROC GetUniformOffsetEXT;
        /* 1160 */ PFNGLBLENDCOLOREXTPROC BlendColorEXT;
        /* 1161 */ PFNGLBLENDEQUATIONSEPARATEEXTPROC BlendEquationSeparateEXT;
        /* 1162 */ PFNGLBINDFRAGDATALOCATIONEXTPROC BindFragDataLocationEXT;
        /* 1163 */ PFNGLBLENDFUNCSEPARATEEXTPROC BlendFuncSeparateEXT;
        /* 1164 */ PFNGLBLENDEQUATIONEXTPROC BlendEquationEXT;
        /* 1165 */ PFNGLCOLORSUBTABLEEXTPROC ColorSubTableEXT;
        /* 1166 */ PFNGLCOPYCOLORSUBTABLEEXTPROC CopyColorSubTableEXT;
        /* 1167 */ PFNGLLOCKARRAYSEXTPROC LockArraysEXT;
        /* 1168 */ PFNGLUNLOCKARRAYSEXTPROC UnlockArraysEXT;
        /* 1169 */ PFNGLCONVOLUTIONFILTER1DEXTPROC ConvolutionFilter1DEXT;
        /* 1170 */ PFNGLCONVOLUTIONFILTER2DEXTPROC ConvolutionFilter2DEXT;
        /* 1171 */ PFNGLCONVOLUTIONPARAMETERFEXTPROC ConvolutionParameterfEXT;
        /* 1172 */ PFNGLCONVOLUTIONPARAMETERFVEXTPROC ConvolutionParameterfvEXT;
        /* 1173 */ PFNGLCONVOLUTIONPARAMETERIEXTPROC ConvolutionParameteriEXT;
        /* 1174 */ PFNGLCONVOLUTIONPARAMETERIVEXTPROC ConvolutionParameterivEXT;
        /* 1175 */ PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC CopyConvolutionFilter1DEXT;
        /* 1176 */ PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC CopyConvolutionFilter2DEXT;
        /* 1177 */ PFNGLGETCONVOLUTIONFILTEREXTPROC GetConvolutionFilterEXT;
        /* 1178 */ PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC GetConvolutionParameterfvEXT;
        /* 1179 */ PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC GetConvolutionParameterivEXT;
        /* 1180 */ PFNGLGETSEPARABLEFILTEREXTPROC GetSeparableFilterEXT;
        /* 1181 */ PFNGLSEPARABLEFILTER2DEXTPROC SeparableFilter2DEXT;
        /* 1182 */ PFNGLTANGENT3BEXTPROC Tangent3bEXT;
        /* 1183 */ PFNGLTANGENT3BVEXTPROC Tangent3bvEXT;
        /* 1184 */ PFNGLTANGENT3DEXTPROC Tangent3dEXT;
        /* 1185 */ PFNGLTANGENT3DVEXTPROC Tangent3dvEXT;
        /* 1186 */ PFNGLTANGENT3FEXTPROC Tangent3fEXT;
        /* 1187 */ PFNGLTANGENT3FVEXTPROC Tangent3fvEXT;
        /* 1188 */ PFNGLTANGENT3IEXTPROC Tangent3iEXT;
        /* 1189 */ PFNGLTANGENT3IVEXTPROC Tangent3ivEXT;
        /* 1190 */ PFNGLTANGENT3SEXTPROC Tangent3sEXT;
        /* 1191 */ PFNGLTANGENT3SVEXTPROC Tangent3svEXT;
        /* 1192 */ PFNGLBINORMAL3BEXTPROC Binormal3bEXT;
        /* 1193 */ PFNGLBINORMAL3BVEXTPROC Binormal3bvEXT;
        /* 1194 */ PFNGLBINORMAL3DEXTPROC Binormal3dEXT;
        /* 1195 */ PFNGLBINORMAL3DVEXTPROC Binormal3dvEXT;
        /* 1196 */ PFNGLBINORMAL3FEXTPROC Binormal3fEXT;
        /* 1197 */ PFNGLBINORMAL3FVEXTPROC Binormal3fvEXT;
        /* 1198 */ PFNGLBINORMAL3IEXTPROC Binormal3iEXT;
        /* 1199 */ PFNGLBINORMAL3IVEXTPROC Binormal3ivEXT;
        /* 1200 */ PFNGLBINORMAL3SEXTPROC Binormal3sEXT;
        /* 1201 */ PFNGLBINORMAL3SVEXTPROC Binormal3svEXT;
        /* 1202 */ PFNGLTANGENTPOINTEREXTPROC TangentPointerEXT;
        /* 1203 */ PFNGLBINORMALPOINTEREXTPROC BinormalPointerEXT;
        /* 1204 */ PFNGLCOPYTEXIMAGE1DEXTPROC CopyTexImage1DEXT;
        /* 1205 */ PFNGLCOPYTEXIMAGE2DEXTPROC CopyTexImage2DEXT;
        /* 1206 */ PFNGLCOPYTEXSUBIMAGE1DEXTPROC CopyTexSubImage1DEXT;
        /* 1207 */ PFNGLCOPYTEXSUBIMAGE2DEXTPROC CopyTexSubImage2DEXT;
        /* 1208 */ PFNGLCOPYTEXSUBIMAGE3DEXTPROC CopyTexSubImage3DEXT;
        /* 1209 */ PFNGLCULLPARAMETERDVEXTPROC CullParameterdvEXT;
        /* 1210 */ PFNGLCULLPARAMETERFVEXTPROC CullParameterfvEXT;
        /* 1211 */ PFNGLLABELOBJECTEXTPROC LabelObjectEXT;
        /* 1212 */ PFNGLGETOBJECTLABELEXTPROC GetObjectLabelEXT;
        /* 1213 */ PFNGLINSERTEVENTMARKEREXTPROC InsertEventMarkerEXT;
        /* 1214 */ PFNGLPUSHGROUPMARKEREXTPROC PushGroupMarkerEXT;
        /* 1215 */ PFNGLPOPGROUPMARKEREXTPROC PopGroupMarkerEXT;
        /* 1216 */ PFNGLDEPTHBOUNDSEXTPROC DepthBoundsEXT;
        /* 1217 */ PFNGLMATRIXLOADFEXTPROC MatrixLoadfEXT;
        /* 1218 */ PFNGLMATRIXLOADDEXTPROC MatrixLoaddEXT;
        /* 1219 */ PFNGLMATRIXMULTFEXTPROC MatrixMultfEXT;
        /* 1220 */ PFNGLMATRIXMULTDEXTPROC MatrixMultdEXT;
        /* 1221 */ PFNGLMATRIXLOADIDENTITYEXTPROC MatrixLoadIdentityEXT;
        /* 1222 */ PFNGLMATRIXROTATEFEXTPROC MatrixRotatefEXT;
        /* 1223 */ PFNGLMATRIXROTATEDEXTPROC MatrixRotatedEXT;
        /* 1224 */ PFNGLMATRIXSCALEFEXTPROC MatrixScalefEXT;
        /* 1225 */ PFNGLMATRIXSCALEDEXTPROC MatrixScaledEXT;
        /* 1226 */ PFNGLMATRIXTRANSLATEFEXTPROC MatrixTranslatefEXT;
        /* 1227 */ PFNGLMATRIXTRANSLATEDEXTPROC MatrixTranslatedEXT;
        /* 1228 */ PFNGLMATRIXFRUSTUMEXTPROC MatrixFrustumEXT;
        /* 1229 */ PFNGLMATRIXORTHOEXTPROC MatrixOrthoEXT;
        /* 1230 */ PFNGLMATRIXPOPEXTPROC MatrixPopEXT;
        /* 1231 */ PFNGLMATRIXPUSHEXTPROC MatrixPushEXT;
        /* 1232 */ PFNGLCLIENTATTRIBDEFAULTEXTPROC ClientAttribDefaultEXT;
        /* 1233 */ PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC PushClientAttribDefaultEXT;
        /* 1234 */ PFNGLTEXTUREPARAMETERFEXTPROC TextureParameterfEXT;
        /* 1235 */ PFNGLTEXTUREPARAMETERFVEXTPROC TextureParameterfvEXT;
        /* 1236 */ PFNGLTEXTUREPARAMETERIEXTPROC TextureParameteriEXT;
        /* 1237 */ PFNGLTEXTUREPARAMETERIVEXTPROC TextureParameterivEXT;
        /* 1238 */ PFNGLTEXTUREIMAGE1DEXTPROC TextureImage1DEXT;
        /* 1239 */ PFNGLTEXTUREIMAGE2DEXTPROC TextureImage2DEXT;
        /* 1240 */ PFNGLTEXTURESUBIMAGE1DEXTPROC TextureSubImage1DEXT;
        /* 1241 */ PFNGLTEXTURESUBIMAGE2DEXTPROC TextureSubImage2DEXT;
        /* 1242 */ PFNGLCOPYTEXTUREIMAGE1DEXTPROC CopyTextureImage1DEXT;
        /* 1243 */ PFNGLCOPYTEXTUREIMAGE2DEXTPROC CopyTextureImage2DEXT;
        /* 1244 */ PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC CopyTextureSubImage1DEXT;
        /* 1245 */ PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC CopyTextureSubImage2DEXT;
        /* 1246 */ PFNGLGETTEXTUREIMAGEEXTPROC GetTextureImageEXT;
        /* 1247 */ PFNGLGETTEXTUREPARAMETERFVEXTPROC GetTextureParameterfvEXT;
        /* 1248 */ PFNGLGETTEXTUREPARAMETERIVEXTPROC GetTextureParameterivEXT;
        /* 1249 */ PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC GetTextureLevelParameterfvEXT;
        /* 1250 */ PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC GetTextureLevelParameterivEXT;
        /* 1251 */ PFNGLTEXTUREIMAGE3DEXTPROC TextureImage3DEXT;
        /* 1252 */ PFNGLTEXTURESUBIMAGE3DEXTPROC TextureSubImage3DEXT;
        /* 1253 */ PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC CopyTextureSubImage3DEXT;
        /* 1254 */ PFNGLBINDMULTITEXTUREEXTPROC BindMultiTextureEXT;
        /* 1255 */ PFNGLMULTITEXCOORDPOINTEREXTPROC MultiTexCoordPointerEXT;
        /* 1256 */ PFNGLMULTITEXENVFEXTPROC MultiTexEnvfEXT;
        /* 1257 */ PFNGLMULTITEXENVFVEXTPROC MultiTexEnvfvEXT;
        /* 1258 */ PFNGLMULTITEXENVIEXTPROC MultiTexEnviEXT;
        /* 1259 */ PFNGLMULTITEXENVIVEXTPROC MultiTexEnvivEXT;
        /* 1260 */ PFNGLMULTITEXGENDEXTPROC MultiTexGendEXT;
        /* 1261 */ PFNGLMULTITEXGENDVEXTPROC MultiTexGendvEXT;
        /* 1262 */ PFNGLMULTITEXGENFEXTPROC MultiTexGenfEXT;
        /* 1263 */ PFNGLMULTITEXGENFVEXTPROC MultiTexGenfvEXT;
        /* 1264 */ PFNGLMULTITEXGENIEXTPROC MultiTexGeniEXT;
        /* 1265 */ PFNGLMULTITEXGENIVEXTPROC MultiTexGenivEXT;
        /* 1266 */ PFNGLGETMULTITEXENVFVEXTPROC GetMultiTexEnvfvEXT;
        /* 1267 */ PFNGLGETMULTITEXENVIVEXTPROC GetMultiTexEnvivEXT;
        /* 1268 */ PFNGLGETMULTITEXGENDVEXTPROC GetMultiTexGendvEXT;
        /* 1269 */ PFNGLGETMULTITEXGENFVEXTPROC GetMultiTexGenfvEXT;
        /* 1270 */ PFNGLGETMULTITEXGENIVEXTPROC GetMultiTexGenivEXT;
        /* 1271 */ PFNGLMULTITEXPARAMETERIEXTPROC MultiTexParameteriEXT;
        /* 1272 */ PFNGLMULTITEXPARAMETERIVEXTPROC MultiTexParameterivEXT;
        /* 1273 */ PFNGLMULTITEXPARAMETERFEXTPROC MultiTexParameterfEXT;
        /* 1274 */ PFNGLMULTITEXPARAMETERFVEXTPROC MultiTexParameterfvEXT;
        /* 1275 */ PFNGLMULTITEXIMAGE1DEXTPROC MultiTexImage1DEXT;
        /* 1276 */ PFNGLMULTITEXIMAGE2DEXTPROC MultiTexImage2DEXT;
        /* 1277 */ PFNGLMULTITEXSUBIMAGE1DEXTPROC MultiTexSubImage1DEXT;
        /* 1278 */ PFNGLMULTITEXSUBIMAGE2DEXTPROC MultiTexSubImage2DEXT;
        /* 1279 */ PFNGLCOPYMULTITEXIMAGE1DEXTPROC CopyMultiTexImage1DEXT;
        /* 1280 */ PFNGLCOPYMULTITEXIMAGE2DEXTPROC CopyMultiTexImage2DEXT;
        /* 1281 */ PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC CopyMultiTexSubImage1DEXT;
        /* 1282 */ PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC CopyMultiTexSubImage2DEXT;
        /* 1283 */ PFNGLGETMULTITEXIMAGEEXTPROC GetMultiTexImageEXT;
        /* 1284 */ PFNGLGETMULTITEXPARAMETERFVEXTPROC GetMultiTexParameterfvEXT;
        /* 1285 */ PFNGLGETMULTITEXPARAMETERIVEXTPROC GetMultiTexParameterivEXT;
        /* 1286 */ PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC GetMultiTexLevelParameterfvEXT;
        /* 1287 */ PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC GetMultiTexLevelParameterivEXT;
        /* 1288 */ PFNGLMULTITEXIMAGE3DEXTPROC MultiTexImage3DEXT;
        /* 1289 */ PFNGLMULTITEXSUBIMAGE3DEXTPROC MultiTexSubImage3DEXT;
        /* 1290 */ PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC CopyMultiTexSubImage3DEXT;
        /* 1291 */ PFNGLENABLECLIENTSTATEINDEXEDEXTPROC EnableClientStateIndexedEXT;
        /* 1292 */ PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC DisableClientStateIndexedEXT;
        /* 1293 */ PFNGLGETFLOATINDEXEDVEXTPROC GetFloatIndexedvEXT;
        /* 1294 */ PFNGLGETDOUBLEINDEXEDVEXTPROC GetDoubleIndexedvEXT;
        /* 1295 */ PFNGLGETPOINTERINDEXEDVEXTPROC GetPointerIndexedvEXT;
        /* 1296 */ PFNGLENABLEINDEXEDEXTPROC EnableIndexedEXT;
        /* 1297 */ PFNGLDISABLEINDEXEDEXTPROC DisableIndexedEXT;
        /* 1298 */ PFNGLISENABLEDINDEXEDEXTPROC IsEnabledIndexedEXT;
        /* 1299 */ PFNGLGETINTEGERINDEXEDVEXTPROC GetIntegerIndexedvEXT;
        /* 1300 */ PFNGLGETBOOLEANINDEXEDVEXTPROC GetBooleanIndexedvEXT;
        /* 1301 */ PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC CompressedTextureImage3DEXT;
        /* 1302 */ PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC CompressedTextureImage2DEXT;
        /* 1303 */ PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC CompressedTextureImage1DEXT;
        /* 1304 */ PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC CompressedTextureSubImage3DEXT;
        /* 1305 */ PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC CompressedTextureSubImage2DEXT;
        /* 1306 */ PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC CompressedTextureSubImage1DEXT;
        /* 1307 */ PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC GetCompressedTextureImageEXT;
        /* 1308 */ PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC CompressedMultiTexImage3DEXT;
        /* 1309 */ PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC CompressedMultiTexImage2DEXT;
        /* 1310 */ PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC CompressedMultiTexImage1DEXT;
        /* 1311 */ PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC CompressedMultiTexSubImage3DEXT;
        /* 1312 */ PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC CompressedMultiTexSubImage2DEXT;
        /* 1313 */ PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC CompressedMultiTexSubImage1DEXT;
        /* 1314 */ PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC GetCompressedMultiTexImageEXT;
        /* 1315 */ PFNGLMATRIXLOADTRANSPOSEFEXTPROC MatrixLoadTransposefEXT;
        /* 1316 */ PFNGLMATRIXLOADTRANSPOSEDEXTPROC MatrixLoadTransposedEXT;
        /* 1317 */ PFNGLMATRIXMULTTRANSPOSEFEXTPROC MatrixMultTransposefEXT;
        /* 1318 */ PFNGLMATRIXMULTTRANSPOSEDEXTPROC MatrixMultTransposedEXT;
        /* 1319 */ PFNGLNAMEDBUFFERDATAEXTPROC NamedBufferDataEXT;
        /* 1320 */ PFNGLNAMEDBUFFERSUBDATAEXTPROC NamedBufferSubDataEXT;
        /* 1321 */ PFNGLMAPNAMEDBUFFEREXTPROC MapNamedBufferEXT;
        /* 1322 */ PFNGLUNMAPNAMEDBUFFEREXTPROC UnmapNamedBufferEXT;
        /* 1323 */ PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC GetNamedBufferParameterivEXT;
        /* 1324 */ PFNGLGETNAMEDBUFFERPOINTERVEXTPROC GetNamedBufferPointervEXT;
        /* 1325 */ PFNGLGETNAMEDBUFFERSUBDATAEXTPROC GetNamedBufferSubDataEXT;
        /* 1326 */ PFNGLPROGRAMUNIFORM1FEXTPROC ProgramUniform1fEXT;
        /* 1327 */ PFNGLPROGRAMUNIFORM2FEXTPROC ProgramUniform2fEXT;
        /* 1328 */ PFNGLPROGRAMUNIFORM3FEXTPROC ProgramUniform3fEXT;
        /* 1329 */ PFNGLPROGRAMUNIFORM4FEXTPROC ProgramUniform4fEXT;
        /* 1330 */ PFNGLPROGRAMUNIFORM1IEXTPROC ProgramUniform1iEXT;
        /* 1331 */ PFNGLPROGRAMUNIFORM2IEXTPROC ProgramUniform2iEXT;
        /* 1332 */ PFNGLPROGRAMUNIFORM3IEXTPROC ProgramUniform3iEXT;
        /* 1333 */ PFNGLPROGRAMUNIFORM4IEXTPROC ProgramUniform4iEXT;
        /* 1334 */ PFNGLPROGRAMUNIFORM1FVEXTPROC ProgramUniform1fvEXT;
        /* 1335 */ PFNGLPROGRAMUNIFORM2FVEXTPROC ProgramUniform2fvEXT;
        /* 1336 */ PFNGLPROGRAMUNIFORM3FVEXTPROC ProgramUniform3fvEXT;
        /* 1337 */ PFNGLPROGRAMUNIFORM4FVEXTPROC ProgramUniform4fvEXT;
        /* 1338 */ PFNGLPROGRAMUNIFORM1IVEXTPROC ProgramUniform1ivEXT;
        /* 1339 */ PFNGLPROGRAMUNIFORM2IVEXTPROC ProgramUniform2ivEXT;
        /* 1340 */ PFNGLPROGRAMUNIFORM3IVEXTPROC ProgramUniform3ivEXT;
        /* 1341 */ PFNGLPROGRAMUNIFORM4IVEXTPROC ProgramUniform4ivEXT;
        /* 1342 */ PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC ProgramUniformMatrix2fvEXT;
        /* 1343 */ PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC ProgramUniformMatrix3fvEXT;
        /* 1344 */ PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC ProgramUniformMatrix4fvEXT;
        /* 1345 */ PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC ProgramUniformMatrix2x3fvEXT;
        /* 1346 */ PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC ProgramUniformMatrix3x2fvEXT;
        /* 1347 */ PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC ProgramUniformMatrix2x4fvEXT;
        /* 1348 */ PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC ProgramUniformMatrix4x2fvEXT;
        /* 1349 */ PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC ProgramUniformMatrix3x4fvEXT;
        /* 1350 */ PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC ProgramUniformMatrix4x3fvEXT;
        /* 1351 */ PFNGLTEXTUREBUFFEREXTPROC TextureBufferEXT;
        /* 1352 */ PFNGLMULTITEXBUFFEREXTPROC MultiTexBufferEXT;
        /* 1353 */ PFNGLTEXTUREPARAMETERIIVEXTPROC TextureParameterIivEXT;
        /* 1354 */ PFNGLTEXTUREPARAMETERIUIVEXTPROC TextureParameterIuivEXT;
        /* 1355 */ PFNGLGETTEXTUREPARAMETERIIVEXTPROC GetTextureParameterIivEXT;
        /* 1356 */ PFNGLGETTEXTUREPARAMETERIUIVEXTPROC GetTextureParameterIuivEXT;
        /* 1357 */ PFNGLMULTITEXPARAMETERIIVEXTPROC MultiTexParameterIivEXT;
        /* 1358 */ PFNGLMULTITEXPARAMETERIUIVEXTPROC MultiTexParameterIuivEXT;
        /* 1359 */ PFNGLGETMULTITEXPARAMETERIIVEXTPROC GetMultiTexParameterIivEXT;
        /* 1360 */ PFNGLGETMULTITEXPARAMETERIUIVEXTPROC GetMultiTexParameterIuivEXT;
        /* 1361 */ PFNGLPROGRAMUNIFORM1UIEXTPROC ProgramUniform1uiEXT;
        /* 1362 */ PFNGLPROGRAMUNIFORM2UIEXTPROC ProgramUniform2uiEXT;
        /* 1363 */ PFNGLPROGRAMUNIFORM3UIEXTPROC ProgramUniform3uiEXT;
        /* 1364 */ PFNGLPROGRAMUNIFORM4UIEXTPROC ProgramUniform4uiEXT;
        /* 1365 */ PFNGLPROGRAMUNIFORM1UIVEXTPROC ProgramUniform1uivEXT;
        /* 1366 */ PFNGLPROGRAMUNIFORM2UIVEXTPROC ProgramUniform2uivEXT;
        /* 1367 */ PFNGLPROGRAMUNIFORM3UIVEXTPROC ProgramUniform3uivEXT;
        /* 1368 */ PFNGLPROGRAMUNIFORM4UIVEXTPROC ProgramUniform4uivEXT;
        /* 1369 */ PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC NamedProgramLocalParameters4fvEXT;
        /* 1370 */ PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC NamedProgramLocalParameterI4iEXT;
        /* 1371 */ PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC NamedProgramLocalParameterI4ivEXT;
        /* 1372 */ PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC NamedProgramLocalParametersI4ivEXT;
        /* 1373 */ PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC NamedProgramLocalParameterI4uiEXT;
        /* 1374 */ PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC NamedProgramLocalParameterI4uivEXT;
        /* 1375 */ PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC NamedProgramLocalParametersI4uivEXT;
        /* 1376 */ PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC GetNamedProgramLocalParameterIivEXT;
        /* 1377 */ PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC GetNamedProgramLocalParameterIuivEXT;
        /* 1378 */ PFNGLENABLECLIENTSTATEIEXTPROC EnableClientStateiEXT;
        /* 1379 */ PFNGLDISABLECLIENTSTATEIEXTPROC DisableClientStateiEXT;
        /* 1380 */ PFNGLGETFLOATI_VEXTPROC GetFloati_vEXT;
        /* 1381 */ PFNGLGETDOUBLEI_VEXTPROC GetDoublei_vEXT;
        /* 1382 */ PFNGLGETPOINTERI_VEXTPROC GetPointeri_vEXT;
        /* 1383 */ PFNGLNAMEDPROGRAMSTRINGEXTPROC NamedProgramStringEXT;
        /* 1384 */ PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC NamedProgramLocalParameter4dEXT;
        /* 1385 */ PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC NamedProgramLocalParameter4dvEXT;
        /* 1386 */ PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC NamedProgramLocalParameter4fEXT;
        /* 1387 */ PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC NamedProgramLocalParameter4fvEXT;
        /* 1388 */ PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC GetNamedProgramLocalParameterdvEXT;
        /* 1389 */ PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC GetNamedProgramLocalParameterfvEXT;
        /* 1390 */ PFNGLGETNAMEDPROGRAMIVEXTPROC GetNamedProgramivEXT;
        /* 1391 */ PFNGLGETNAMEDPROGRAMSTRINGEXTPROC GetNamedProgramStringEXT;
        /* 1392 */ PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC NamedRenderbufferStorageEXT;
        /* 1393 */ PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC GetNamedRenderbufferParameterivEXT;
        /* 1394 */ PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC NamedRenderbufferStorageMultisampleEXT;
        /* 1395 */ PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC NamedRenderbufferStorageMultisampleCoverageEXT;
        /* 1396 */ PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC CheckNamedFramebufferStatusEXT;
        /* 1397 */ PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC NamedFramebufferTexture1DEXT;
        /* 1398 */ PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC NamedFramebufferTexture2DEXT;
        /* 1399 */ PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC NamedFramebufferTexture3DEXT;
        /* 1400 */ PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC NamedFramebufferRenderbufferEXT;
        /* 1401 */ PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC GetNamedFramebufferAttachmentParameterivEXT;
        /* 1402 */ PFNGLGENERATETEXTUREMIPMAPEXTPROC GenerateTextureMipmapEXT;
        /* 1403 */ PFNGLGENERATEMULTITEXMIPMAPEXTPROC GenerateMultiTexMipmapEXT;
        /* 1404 */ PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC FramebufferDrawBufferEXT;
        /* 1405 */ PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC FramebufferDrawBuffersEXT;
        /* 1406 */ PFNGLFRAMEBUFFERREADBUFFEREXTPROC FramebufferReadBufferEXT;
        /* 1407 */ PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC GetFramebufferParameterivEXT;
        /* 1408 */ PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC NamedCopyBufferSubDataEXT;
        /* 1409 */ PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC NamedFramebufferTextureEXT;
        /* 1410 */ PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC NamedFramebufferTextureLayerEXT;
        /* 1411 */ PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC NamedFramebufferTextureFaceEXT;
        /* 1412 */ PFNGLTEXTURERENDERBUFFEREXTPROC TextureRenderbufferEXT;
        /* 1413 */ PFNGLMULTITEXRENDERBUFFEREXTPROC MultiTexRenderbufferEXT;
        /* 1414 */ PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC VertexArrayVertexOffsetEXT;
        /* 1415 */ PFNGLVERTEXARRAYCOLOROFFSETEXTPROC VertexArrayColorOffsetEXT;
        /* 1416 */ PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC VertexArrayEdgeFlagOffsetEXT;
        /* 1417 */ PFNGLVERTEXARRAYINDEXOFFSETEXTPROC VertexArrayIndexOffsetEXT;
        /* 1418 */ PFNGLVERTEXARRAYNORMALOFFSETEXTPROC VertexArrayNormalOffsetEXT;
        /* 1419 */ PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC VertexArrayTexCoordOffsetEXT;
        /* 1420 */ PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC VertexArrayMultiTexCoordOffsetEXT;
        /* 1421 */ PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC VertexArrayFogCoordOffsetEXT;
        /* 1422 */ PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC VertexArraySecondaryColorOffsetEXT;
        /* 1423 */ PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC VertexArrayVertexAttribOffsetEXT;
        /* 1424 */ PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC VertexArrayVertexAttribIOffsetEXT;
        /* 1425 */ PFNGLENABLEVERTEXARRAYEXTPROC EnableVertexArrayEXT;
        /* 1426 */ PFNGLDISABLEVERTEXARRAYEXTPROC DisableVertexArrayEXT;
        /* 1427 */ PFNGLENABLEVERTEXARRAYATTRIBEXTPROC EnableVertexArrayAttribEXT;
        /* 1428 */ PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC DisableVertexArrayAttribEXT;
        /* 1429 */ PFNGLGETVERTEXARRAYINTEGERVEXTPROC GetVertexArrayIntegervEXT;
        /* 1430 */ PFNGLGETVERTEXARRAYPOINTERVEXTPROC GetVertexArrayPointervEXT;
        /* 1431 */ PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC GetVertexArrayIntegeri_vEXT;
        /* 1432 */ PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC GetVertexArrayPointeri_vEXT;
        /* 1433 */ PFNGLMAPNAMEDBUFFERRANGEEXTPROC MapNamedBufferRangeEXT;
        /* 1434 */ PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC FlushMappedNamedBufferRangeEXT;
        /* 1435 */ PFNGLNAMEDBUFFERSTORAGEEXTPROC NamedBufferStorageEXT;
        /* 1436 */ PFNGLCLEARNAMEDBUFFERDATAEXTPROC ClearNamedBufferDataEXT;
        /* 1437 */ PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC ClearNamedBufferSubDataEXT;
        /* 1438 */ PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC NamedFramebufferParameteriEXT;
        /* 1439 */ PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC GetNamedFramebufferParameterivEXT;
        /* 1440 */ PFNGLPROGRAMUNIFORM1DEXTPROC ProgramUniform1dEXT;
        /* 1441 */ PFNGLPROGRAMUNIFORM2DEXTPROC ProgramUniform2dEXT;
        /* 1442 */ PFNGLPROGRAMUNIFORM3DEXTPROC ProgramUniform3dEXT;
        /* 1443 */ PFNGLPROGRAMUNIFORM4DEXTPROC ProgramUniform4dEXT;
        /* 1444 */ PFNGLPROGRAMUNIFORM1DVEXTPROC ProgramUniform1dvEXT;
        /* 1445 */ PFNGLPROGRAMUNIFORM2DVEXTPROC ProgramUniform2dvEXT;
        /* 1446 */ PFNGLPROGRAMUNIFORM3DVEXTPROC ProgramUniform3dvEXT;
        /* 1447 */ PFNGLPROGRAMUNIFORM4DVEXTPROC ProgramUniform4dvEXT;
        /* 1448 */ PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC ProgramUniformMatrix2dvEXT;
        /* 1449 */ PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC ProgramUniformMatrix3dvEXT;
        /* 1450 */ PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC ProgramUniformMatrix4dvEXT;
        /* 1451 */ PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC ProgramUniformMatrix2x3dvEXT;
        /* 1452 */ PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC ProgramUniformMatrix2x4dvEXT;
        /* 1453 */ PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC ProgramUniformMatrix3x2dvEXT;
        /* 1454 */ PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC ProgramUniformMatrix3x4dvEXT;
        /* 1455 */ PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC ProgramUniformMatrix4x2dvEXT;
        /* 1456 */ PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC ProgramUniformMatrix4x3dvEXT;
        /* 1457 */ PFNGLTEXTUREBUFFERRANGEEXTPROC TextureBufferRangeEXT;
        /* 1458 */ PFNGLTEXTURESTORAGE1DEXTPROC TextureStorage1DEXT;
        /* 1459 */ PFNGLTEXTURESTORAGE2DEXTPROC TextureStorage2DEXT;
        /* 1460 */ PFNGLTEXTURESTORAGE3DEXTPROC TextureStorage3DEXT;
        /* 1461 */ PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC TextureStorage2DMultisampleEXT;
        /* 1462 */ PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC TextureStorage3DMultisampleEXT;
        /* 1463 */ PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC VertexArrayBindVertexBufferEXT;
        /* 1464 */ PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC VertexArrayVertexAttribFormatEXT;
        /* 1465 */ PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC VertexArrayVertexAttribIFormatEXT;
        /* 1466 */ PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC VertexArrayVertexAttribLFormatEXT;
        /* 1467 */ PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC VertexArrayVertexAttribBindingEXT;
        /* 1468 */ PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC VertexArrayVertexBindingDivisorEXT;
        /* 1469 */ PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC VertexArrayVertexAttribLOffsetEXT;
        /* 1470 */ PFNGLTEXTUREPAGECOMMITMENTEXTPROC TexturePageCommitmentEXT;
        /* 1471 */ PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC VertexArrayVertexAttribDivisorEXT;
        /* 1472 */ PFNGLGETQUERYOBJECTI64VEXTPROC GetQueryObjecti64vEXT;
        /* 1473 */ PFNGLGETQUERYOBJECTUI64VEXTPROC GetQueryObjectui64vEXT;
        /* 1474 */ PFNGLCOLORMASKINDEXEDEXTPROC ColorMaskIndexedEXT;
        /* 1475 */ PFNGLDRAWARRAYSINSTANCEDEXTPROC DrawArraysInstancedEXT;
        /* 1476 */ PFNGLDRAWELEMENTSINSTANCEDEXTPROC DrawElementsInstancedEXT;
        /* 1477 */ PFNGLDRAWRANGEELEMENTSEXTPROC DrawRangeElementsEXT;
        /* 1478 */ PFNGLBUFFERSTORAGEEXTERNALEXTPROC BufferStorageExternalEXT;
        /* 1479 */ PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC NamedBufferStorageExternalEXT;
        /* 1480 */ PFNGLFOGCOORDFEXTPROC FogCoordfEXT;
        /* 1481 */ PFNGLFOGCOORDFVEXTPROC FogCoordfvEXT;
        /* 1482 */ PFNGLFOGCOORDDEXTPROC FogCoorddEXT;
        /* 1483 */ PFNGLFOGCOORDDVEXTPROC FogCoorddvEXT;
        /* 1484 */ PFNGLFOGCOORDPOINTEREXTPROC FogCoordPointerEXT;
        /* 1485 */ PFNGLBLITFRAMEBUFFEREXTPROC BlitFramebufferEXT;
        /* 1486 */ PFNGLBLITFRAMEBUFFERLAYERSEXTPROC BlitFramebufferLayersEXT;
        /* 1487 */ PFNGLBLITFRAMEBUFFERLAYEREXTPROC BlitFramebufferLayerEXT;
        /* 1488 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC RenderbufferStorageMultisampleEXT;
        /* 1489 */ PFNGLISRENDERBUFFEREXTPROC IsRenderbufferEXT;
        /* 1490 */ PFNGLBINDRENDERBUFFEREXTPROC BindRenderbufferEXT;
        /* 1491 */ PFNGLDELETERENDERBUFFERSEXTPROC DeleteRenderbuffersEXT;
        /* 1492 */ PFNGLGENRENDERBUFFERSEXTPROC GenRenderbuffersEXT;
        /* 1493 */ PFNGLRENDERBUFFERSTORAGEEXTPROC RenderbufferStorageEXT;
        /* 1494 */ PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC GetRenderbufferParameterivEXT;
        /* 1495 */ PFNGLISFRAMEBUFFEREXTPROC IsFramebufferEXT;
        /* 1496 */ PFNGLBINDFRAMEBUFFEREXTPROC BindFramebufferEXT;
        /* 1497 */ PFNGLDELETEFRAMEBUFFERSEXTPROC DeleteFramebuffersEXT;
        /* 1498 */ PFNGLGENFRAMEBUFFERSEXTPROC GenFramebuffersEXT;
        /* 1499 */ PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC CheckFramebufferStatusEXT;
        /* 1500 */ PFNGLFRAMEBUFFERTEXTURE1DEXTPROC FramebufferTexture1DEXT;
        /* 1501 */ PFNGLFRAMEBUFFERTEXTURE2DEXTPROC FramebufferTexture2DEXT;
        /* 1502 */ PFNGLFRAMEBUFFERTEXTURE3DEXTPROC FramebufferTexture3DEXT;
        /* 1503 */ PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC FramebufferRenderbufferEXT;
        /* 1504 */ PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC GetFramebufferAttachmentParameterivEXT;
        /* 1505 */ PFNGLGENERATEMIPMAPEXTPROC GenerateMipmapEXT;
        /* 1506 */ PFNGLFRAMEBUFFERTEXTUREEXTPROC FramebufferTextureEXT;
        /* 1507 */ PFNGLPROGRAMPARAMETERIEXTPROC ProgramParameteriEXT;
        /* 1508 */ PFNGLPROGRAMENVPARAMETERS4FVEXTPROC ProgramEnvParameters4fvEXT;
        /* 1509 */ PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC ProgramLocalParameters4fvEXT;
        /* 1510 */ PFNGLGETUNIFORMUIVEXTPROC GetUniformuivEXT;
        /* 1511 */ PFNGLGETFRAGDATALOCATIONEXTPROC GetFragDataLocationEXT;
        /* 1512 */ PFNGLUNIFORM1UIEXTPROC Uniform1uiEXT;
        /* 1513 */ PFNGLUNIFORM2UIEXTPROC Uniform2uiEXT;
        /* 1514 */ PFNGLUNIFORM3UIEXTPROC Uniform3uiEXT;
        /* 1515 */ PFNGLUNIFORM4UIEXTPROC Uniform4uiEXT;
        /* 1516 */ PFNGLUNIFORM1UIVEXTPROC Uniform1uivEXT;
        /* 1517 */ PFNGLUNIFORM2UIVEXTPROC Uniform2uivEXT;
        /* 1518 */ PFNGLUNIFORM3UIVEXTPROC Uniform3uivEXT;
        /* 1519 */ PFNGLUNIFORM4UIVEXTPROC Uniform4uivEXT;
        /* 1520 */ PFNGLVERTEXATTRIBI1IEXTPROC VertexAttribI1iEXT;
        /* 1521 */ PFNGLVERTEXATTRIBI2IEXTPROC VertexAttribI2iEXT;
        /* 1522 */ PFNGLVERTEXATTRIBI3IEXTPROC VertexAttribI3iEXT;
        /* 1523 */ PFNGLVERTEXATTRIBI4IEXTPROC VertexAttribI4iEXT;
        /* 1524 */ PFNGLVERTEXATTRIBI1UIEXTPROC VertexAttribI1uiEXT;
        /* 1525 */ PFNGLVERTEXATTRIBI2UIEXTPROC VertexAttribI2uiEXT;
        /* 1526 */ PFNGLVERTEXATTRIBI3UIEXTPROC VertexAttribI3uiEXT;
        /* 1527 */ PFNGLVERTEXATTRIBI4UIEXTPROC VertexAttribI4uiEXT;
        /* 1528 */ PFNGLVERTEXATTRIBI1IVEXTPROC VertexAttribI1ivEXT;
        /* 1529 */ PFNGLVERTEXATTRIBI2IVEXTPROC VertexAttribI2ivEXT;
        /* 1530 */ PFNGLVERTEXATTRIBI3IVEXTPROC VertexAttribI3ivEXT;
        /* 1531 */ PFNGLVERTEXATTRIBI4IVEXTPROC VertexAttribI4ivEXT;
        /* 1532 */ PFNGLVERTEXATTRIBI1UIVEXTPROC VertexAttribI1uivEXT;
        /* 1533 */ PFNGLVERTEXATTRIBI2UIVEXTPROC VertexAttribI2uivEXT;
        /* 1534 */ PFNGLVERTEXATTRIBI3UIVEXTPROC VertexAttribI3uivEXT;
        /* 1535 */ PFNGLVERTEXATTRIBI4UIVEXTPROC VertexAttribI4uivEXT;
        /* 1536 */ PFNGLVERTEXATTRIBI4BVEXTPROC VertexAttribI4bvEXT;
        /* 1537 */ PFNGLVERTEXATTRIBI4SVEXTPROC VertexAttribI4svEXT;
        /* 1538 */ PFNGLVERTEXATTRIBI4UBVEXTPROC VertexAttribI4ubvEXT;
        /* 1539 */ PFNGLVERTEXATTRIBI4USVEXTPROC VertexAttribI4usvEXT;
        /* 1540 */ PFNGLVERTEXATTRIBIPOINTEREXTPROC VertexAttribIPointerEXT;
        /* 1541 */ PFNGLGETVERTEXATTRIBIIVEXTPROC GetVertexAttribIivEXT;
        /* 1542 */ PFNGLGETVERTEXATTRIBIUIVEXTPROC GetVertexAttribIuivEXT;
        /* 1543 */ PFNGLGETHISTOGRAMEXTPROC GetHistogramEXT;
        /* 1544 */ PFNGLGETHISTOGRAMPARAMETERFVEXTPROC GetHistogramParameterfvEXT;
        /* 1545 */ PFNGLGETHISTOGRAMPARAMETERIVEXTPROC GetHistogramParameterivEXT;
        /* 1546 */ PFNGLGETMINMAXEXTPROC GetMinmaxEXT;
        /* 1547 */ PFNGLGETMINMAXPARAMETERFVEXTPROC GetMinmaxParameterfvEXT;
        /* 1548 */ PFNGLGETMINMAXPARAMETERIVEXTPROC GetMinmaxParameterivEXT;
        /* 1549 */ PFNGLHISTOGRAMEXTPROC HistogramEXT;
        /* 1550 */ PFNGLMINMAXEXTPROC MinmaxEXT;
        /* 1551 */ PFNGLRESETHISTOGRAMEXTPROC ResetHistogramEXT;
        /* 1552 */ PFNGLRESETMINMAXEXTPROC ResetMinmaxEXT;
        /* 1553 */ PFNGLINDEXFUNCEXTPROC IndexFuncEXT;
        /* 1554 */ PFNGLINDEXMATERIALEXTPROC IndexMaterialEXT;
        /* 1555 */ PFNGLAPPLYTEXTUREEXTPROC ApplyTextureEXT;
        /* 1556 */ PFNGLTEXTURELIGHTEXTPROC TextureLightEXT;
        /* 1557 */ PFNGLTEXTUREMATERIALEXTPROC TextureMaterialEXT;
        /* 1558 */ PFNGLGETUNSIGNEDBYTEVEXTPROC GetUnsignedBytevEXT;
        /* 1559 */ PFNGLGETUNSIGNEDBYTEI_VEXTPROC GetUnsignedBytei_vEXT;
        /* 1560 */ PFNGLDELETEMEMORYOBJECTSEXTPROC DeleteMemoryObjectsEXT;
        /* 1561 */ PFNGLISMEMORYOBJECTEXTPROC IsMemoryObjectEXT;
        /* 1562 */ PFNGLCREATEMEMORYOBJECTSEXTPROC CreateMemoryObjectsEXT;
        /* 1563 */ PFNGLMEMORYOBJECTPARAMETERIVEXTPROC MemoryObjectParameterivEXT;
        /* 1564 */ PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC GetMemoryObjectParameterivEXT;
        /* 1565 */ PFNGLTEXSTORAGEMEM2DEXTPROC TexStorageMem2DEXT;
        /* 1566 */ PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC TexStorageMem2DMultisampleEXT;
        /* 1567 */ PFNGLTEXSTORAGEMEM3DEXTPROC TexStorageMem3DEXT;
        /* 1568 */ PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC TexStorageMem3DMultisampleEXT;
        /* 1569 */ PFNGLBUFFERSTORAGEMEMEXTPROC BufferStorageMemEXT;
        /* 1570 */ PFNGLTEXTURESTORAGEMEM2DEXTPROC TextureStorageMem2DEXT;
        /* 1571 */ PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC TextureStorageMem2DMultisampleEXT;
        /* 1572 */ PFNGLTEXTURESTORAGEMEM3DEXTPROC TextureStorageMem3DEXT;
        /* 1573 */ PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC TextureStorageMem3DMultisampleEXT;
        /* 1574 */ PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC NamedBufferStorageMemEXT;
        /* 1575 */ PFNGLTEXSTORAGEMEM1DEXTPROC TexStorageMem1DEXT;
        /* 1576 */ PFNGLTEXTURESTORAGEMEM1DEXTPROC TextureStorageMem1DEXT;
        /* 1577 */ PFNGLIMPORTMEMORYFDEXTPROC ImportMemoryFdEXT;
        /* 1578 */ PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC ImportMemoryWin32HandleEXT;
        /* 1579 */ PFNGLIMPORTMEMORYWIN32NAMEEXTPROC ImportMemoryWin32NameEXT;
        /* 1580 */ PFNGLMULTIDRAWARRAYSEXTPROC MultiDrawArraysEXT;
        /* 1581 */ PFNGLMULTIDRAWELEMENTSEXTPROC MultiDrawElementsEXT;
        /* 1582 */ PFNGLSAMPLEMASKEXTPROC SampleMaskEXT;
        /* 1583 */ PFNGLSAMPLEPATTERNEXTPROC SamplePatternEXT;
        /* 1584 */ PFNGLCOLORTABLEEXTPROC ColorTableEXT;
        /* 1585 */ PFNGLGETCOLORTABLEEXTPROC GetColorTableEXT;
        /* 1586 */ PFNGLGETCOLORTABLEPARAMETERIVEXTPROC GetColorTableParameterivEXT;
        /* 1587 */ PFNGLGETCOLORTABLEPARAMETERFVEXTPROC GetColorTableParameterfvEXT;
        /* 1588 */ PFNGLPIXELTRANSFORMPARAMETERIEXTPROC PixelTransformParameteriEXT;
        /* 1589 */ PFNGLPIXELTRANSFORMPARAMETERFEXTPROC PixelTransformParameterfEXT;
        /* 1590 */ PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC PixelTransformParameterivEXT;
        /* 1591 */ PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC PixelTransformParameterfvEXT;
        /* 1592 */ PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC GetPixelTransformParameterivEXT;
        /* 1593 */ PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC GetPixelTransformParameterfvEXT;
        /* 1594 */ PFNGLPOINTPARAMETERFEXTPROC PointParameterfEXT;
        /* 1595 */ PFNGLPOINTPARAMETERFVEXTPROC PointParameterfvEXT;
        /* 1596 */ PFNGLPOLYGONOFFSETEXTPROC PolygonOffsetEXT;
        /* 1597 */ PFNGLPOLYGONOFFSETCLAMPEXTPROC PolygonOffsetClampEXT;
        /* 1598 */ PFNGLPROVOKINGVERTEXEXTPROC ProvokingVertexEXT;
        /* 1599 */ PFNGLRASTERSAMPLESEXTPROC RasterSamplesEXT;
        /* 1600 */ PFNGLGENSEMAPHORESEXTPROC GenSemaphoresEXT;
        /* 1601 */ PFNGLDELETESEMAPHORESEXTPROC DeleteSemaphoresEXT;
        /* 1602 */ PFNGLISSEMAPHOREEXTPROC IsSemaphoreEXT;
        /* 1603 */ PFNGLSEMAPHOREPARAMETERUI64VEXTPROC SemaphoreParameterui64vEXT;
        /* 1604 */ PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC GetSemaphoreParameterui64vEXT;
        /* 1605 */ PFNGLWAITSEMAPHOREEXTPROC WaitSemaphoreEXT;
        /* 1606 */ PFNGLSIGNALSEMAPHOREEXTPROC SignalSemaphoreEXT;
        /* 1607 */ PFNGLIMPORTSEMAPHOREFDEXTPROC ImportSemaphoreFdEXT;
        /* 1608 */ PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC ImportSemaphoreWin32HandleEXT;
        /* 1609 */ PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC ImportSemaphoreWin32NameEXT;
        /* 1610 */ PFNGLSECONDARYCOLOR3BEXTPROC SecondaryColor3bEXT;
        /* 1611 */ PFNGLSECONDARYCOLOR3BVEXTPROC SecondaryColor3bvEXT;
        /* 1612 */ PFNGLSECONDARYCOLOR3DEXTPROC SecondaryColor3dEXT;
        /* 1613 */ PFNGLSECONDARYCOLOR3DVEXTPROC SecondaryColor3dvEXT;
        /* 1614 */ PFNGLSECONDARYCOLOR3FEXTPROC SecondaryColor3fEXT;
        /* 1615 */ PFNGLSECONDARYCOLOR3FVEXTPROC SecondaryColor3fvEXT;
        /* 1616 */ PFNGLSECONDARYCOLOR3IEXTPROC SecondaryColor3iEXT;
        /* 1617 */ PFNGLSECONDARYCOLOR3IVEXTPROC SecondaryColor3ivEXT;
        /* 1618 */ PFNGLSECONDARYCOLOR3SEXTPROC SecondaryColor3sEXT;
        /* 1619 */ PFNGLSECONDARYCOLOR3SVEXTPROC SecondaryColor3svEXT;
        /* 1620 */ PFNGLSECONDARYCOLOR3UBEXTPROC SecondaryColor3ubEXT;
        /* 1621 */ PFNGLSECONDARYCOLOR3UBVEXTPROC SecondaryColor3ubvEXT;
        /* 1622 */ PFNGLSECONDARYCOLOR3UIEXTPROC SecondaryColor3uiEXT;
        /* 1623 */ PFNGLSECONDARYCOLOR3UIVEXTPROC SecondaryColor3uivEXT;
        /* 1624 */ PFNGLSECONDARYCOLOR3USEXTPROC SecondaryColor3usEXT;
        /* 1625 */ PFNGLSECONDARYCOLOR3USVEXTPROC SecondaryColor3usvEXT;
        /* 1626 */ PFNGLSECONDARYCOLORPOINTEREXTPROC SecondaryColorPointerEXT;
        /* 1627 */ PFNGLUSESHADERPROGRAMEXTPROC UseShaderProgramEXT;
        /* 1628 */ PFNGLACTIVEPROGRAMEXTPROC ActiveProgramEXT;
        /* 1629 */ PFNGLCREATESHADERPROGRAMEXTPROC CreateShaderProgramEXT;
        /* 1630 */ PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC FramebufferFetchBarrierEXT;
        /* 1631 */ PFNGLBINDIMAGETEXTUREEXTPROC BindImageTextureEXT;
        /* 1632 */ PFNGLMEMORYBARRIEREXTPROC MemoryBarrierEXT;
        /* 1633 */ PFNGLSTENCILCLEARTAGEXTPROC StencilClearTagEXT;
        /* 1634 */ PFNGLACTIVESTENCILFACEEXTPROC ActiveStencilFaceEXT;
        /* 1635 */ PFNGLTEXSUBIMAGE1DEXTPROC TexSubImage1DEXT;
        /* 1636 */ PFNGLTEXSUBIMAGE2DEXTPROC TexSubImage2DEXT;
        /* 1637 */ PFNGLTEXIMAGE3DEXTPROC TexImage3DEXT;
        /* 1638 */ PFNGLTEXSUBIMAGE3DEXTPROC TexSubImage3DEXT;
        /* 1639 */ PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC FramebufferTextureLayerEXT;
        /* 1640 */ PFNGLTEXPARAMETERIIVEXTPROC TexParameterIivEXT;
        /* 1641 */ PFNGLTEXPARAMETERIUIVEXTPROC TexParameterIuivEXT;
        /* 1642 */ PFNGLGETTEXPARAMETERIIVEXTPROC GetTexParameterIivEXT;
        /* 1643 */ PFNGLGETTEXPARAMETERIUIVEXTPROC GetTexParameterIuivEXT;
        /* 1644 */ PFNGLTEXBUFFEREXTPROC TexBufferEXT;
        /* 1645 */ PFNGLCLEARCOLORIIEXTPROC ClearColorIiEXT;
        /* 1646 */ PFNGLCLEARCOLORIUIEXTPROC ClearColorIuiEXT;
        /* 1647 */ PFNGLARETEXTURESRESIDENTEXTPROC AreTexturesResidentEXT;
        /* 1648 */ PFNGLBINDTEXTUREEXTPROC BindTextureEXT;
        /* 1649 */ PFNGLDELETETEXTURESEXTPROC DeleteTexturesEXT;
        /* 1650 */ PFNGLGENTEXTURESEXTPROC GenTexturesEXT;
        /* 1651 */ PFNGLISTEXTUREEXTPROC IsTextureEXT;
        /* 1652 */ PFNGLPRIORITIZETEXTURESEXTPROC PrioritizeTexturesEXT;
        /* 1653 */ PFNGLTEXTURENORMALEXTPROC TextureNormalEXT;
        /* 1654 */ PFNGLTEXSTORAGE1DEXTPROC TexStorage1DEXT;
        /* 1655 */ PFNGLTEXSTORAGE2DEXTPROC TexStorage2DEXT;
        /* 1656 */ PFNGLTEXSTORAGE3DEXTPROC TexStorage3DEXT;
        /* 1657 */ PFNGLCREATESEMAPHORESNVPROC CreateSemaphoresNV;
        /* 1658 */ PFNGLSEMAPHOREPARAMETERIVNVPROC SemaphoreParameterivNV;
        /* 1659 */ PFNGLGETSEMAPHOREPARAMETERIVNVPROC GetSemaphoreParameterivNV;
        /* 1660 */ PFNGLBEGINTRANSFORMFEEDBACKEXTPROC BeginTransformFeedbackEXT;
        /* 1661 */ PFNGLENDTRANSFORMFEEDBACKEXTPROC EndTransformFeedbackEXT;
        /* 1662 */ PFNGLBINDBUFFERRANGEEXTPROC BindBufferRangeEXT;
        /* 1663 */ PFNGLBINDBUFFEROFFSETEXTPROC BindBufferOffsetEXT;
        /* 1664 */ PFNGLBINDBUFFERBASEEXTPROC BindBufferBaseEXT;
        /* 1665 */ PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC TransformFeedbackVaryingsEXT;
        /* 1666 */ PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC GetTransformFeedbackVaryingEXT;
        /* 1667 */ PFNGLARRAYELEMENTEXTPROC ArrayElementEXT;
        /* 1668 */ PFNGLCOLORPOINTEREXTPROC ColorPointerEXT;
        /* 1669 */ PFNGLDRAWARRAYSEXTPROC DrawArraysEXT;
        /* 1670 */ PFNGLEDGEFLAGPOINTEREXTPROC EdgeFlagPointerEXT;
        /* 1671 */ PFNGLGETPOINTERVEXTPROC GetPointervEXT;
        /* 1672 */ PFNGLINDEXPOINTEREXTPROC IndexPointerEXT;
        /* 1673 */ PFNGLNORMALPOINTEREXTPROC NormalPointerEXT;
        /* 1674 */ PFNGLTEXCOORDPOINTEREXTPROC TexCoordPointerEXT;
        /* 1675 */ PFNGLVERTEXPOINTEREXTPROC VertexPointerEXT;
        /* 1676 */ PFNGLVERTEXATTRIBL1DEXTPROC VertexAttribL1dEXT;
        /* 1677 */ PFNGLVERTEXATTRIBL2DEXTPROC VertexAttribL2dEXT;
        /* 1678 */ PFNGLVERTEXATTRIBL3DEXTPROC VertexAttribL3dEXT;
        /* 1679 */ PFNGLVERTEXATTRIBL4DEXTPROC VertexAttribL4dEXT;
        /* 1680 */ PFNGLVERTEXATTRIBL1DVEXTPROC VertexAttribL1dvEXT;
        /* 1681 */ PFNGLVERTEXATTRIBL2DVEXTPROC VertexAttribL2dvEXT;
        /* 1682 */ PFNGLVERTEXATTRIBL3DVEXTPROC VertexAttribL3dvEXT;
        /* 1683 */ PFNGLVERTEXATTRIBL4DVEXTPROC VertexAttribL4dvEXT;
        /* 1684 */ PFNGLVERTEXATTRIBLPOINTEREXTPROC VertexAttribLPointerEXT;
        /* 1685 */ PFNGLGETVERTEXATTRIBLDVEXTPROC GetVertexAttribLdvEXT;
        /* 1686 */ PFNGLBEGINVERTEXSHADEREXTPROC BeginVertexShaderEXT;
        /* 1687 */ PFNGLENDVERTEXSHADEREXTPROC EndVertexShaderEXT;
        /* 1688 */ PFNGLBINDVERTEXSHADEREXTPROC BindVertexShaderEXT;
        /* 1689 */ PFNGLGENVERTEXSHADERSEXTPROC GenVertexShadersEXT;
        /* 1690 */ PFNGLDELETEVERTEXSHADEREXTPROC DeleteVertexShaderEXT;
        /* 1691 */ PFNGLSHADEROP1EXTPROC ShaderOp1EXT;
        /* 1692 */ PFNGLSHADEROP2EXTPROC ShaderOp2EXT;
        /* 1693 */ PFNGLSHADEROP3EXTPROC ShaderOp3EXT;
        /* 1694 */ PFNGLSWIZZLEEXTPROC SwizzleEXT;
        /* 1695 */ PFNGLWRITEMASKEXTPROC WriteMaskEXT;
        /* 1696 */ PFNGLINSERTCOMPONENTEXTPROC InsertComponentEXT;
        /* 1697 */ PFNGLEXTRACTCOMPONENTEXTPROC ExtractComponentEXT;
        /* 1698 */ PFNGLGENSYMBOLSEXTPROC GenSymbolsEXT;
        /* 1699 */ PFNGLSETINVARIANTEXTPROC SetInvariantEXT;
        /* 1700 */ PFNGLSETLOCALCONSTANTEXTPROC SetLocalConstantEXT;
        /* 1701 */ PFNGLVARIANTBVEXTPROC VariantbvEXT;
        /* 1702 */ PFNGLVARIANTSVEXTPROC VariantsvEXT;
        /* 1703 */ PFNGLVARIANTIVEXTPROC VariantivEXT;
        /* 1704 */ PFNGLVARIANTFVEXTPROC VariantfvEXT;
        /* 1705 */ PFNGLVARIANTDVEXTPROC VariantdvEXT;
        /* 1706 */ PFNGLVARIANTUBVEXTPROC VariantubvEXT;
        /* 1707 */ PFNGLVARIANTUSVEXTPROC VariantusvEXT;
        /* 1708 */ PFNGLVARIANTUIVEXTPROC VariantuivEXT;
        /* 1709 */ PFNGLVARIANTPOINTEREXTPROC VariantPointerEXT;
        /* 1710 */ PFNGLENABLEVARIANTCLIENTSTATEEXTPROC EnableVariantClientStateEXT;
        /* 1711 */ PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC DisableVariantClientStateEXT;
        /* 1712 */ PFNGLBINDLIGHTPARAMETEREXTPROC BindLightParameterEXT;
        /* 1713 */ PFNGLBINDMATERIALPARAMETEREXTPROC BindMaterialParameterEXT;
        /* 1714 */ PFNGLBINDTEXGENPARAMETEREXTPROC BindTexGenParameterEXT;
        /* 1715 */ PFNGLBINDTEXTUREUNITPARAMETEREXTPROC BindTextureUnitParameterEXT;
        /* 1716 */ PFNGLBINDPARAMETEREXTPROC BindParameterEXT;
        /* 1717 */ PFNGLISVARIANTENABLEDEXTPROC IsVariantEnabledEXT;
        /* 1718 */ PFNGLGETVARIANTBOOLEANVEXTPROC GetVariantBooleanvEXT;
        /* 1719 */ PFNGLGETVARIANTINTEGERVEXTPROC GetVariantIntegervEXT;
        /* 1720 */ PFNGLGETVARIANTFLOATVEXTPROC GetVariantFloatvEXT;
        /* 1721 */ PFNGLGETVARIANTPOINTERVEXTPROC GetVariantPointervEXT;
        /* 1722 */ PFNGLGETINVARIANTBOOLEANVEXTPROC GetInvariantBooleanvEXT;
        /* 1723 */ PFNGLGETINVARIANTINTEGERVEXTPROC GetInvariantIntegervEXT;
        /* 1724 */ PFNGLGETINVARIANTFLOATVEXTPROC GetInvariantFloatvEXT;
        /* 1725 */ PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC GetLocalConstantBooleanvEXT;
        /* 1726 */ PFNGLGETLOCALCONSTANTINTEGERVEXTPROC GetLocalConstantIntegervEXT;
        /* 1727 */ PFNGLGETLOCALCONSTANTFLOATVEXTPROC GetLocalConstantFloatvEXT;
        /* 1728 */ PFNGLVERTEXWEIGHTFEXTPROC VertexWeightfEXT;
        /* 1729 */ PFNGLVERTEXWEIGHTFVEXTPROC VertexWeightfvEXT;
        /* 1730 */ PFNGLVERTEXWEIGHTPOINTEREXTPROC VertexWeightPointerEXT;
        /* 1731 */ PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC AcquireKeyedMutexWin32EXT;
        /* 1732 */ PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC ReleaseKeyedMutexWin32EXT;
        /* 1733 */ PFNGLWINDOWRECTANGLESEXTPROC WindowRectanglesEXT;
        /* 1734 */ PFNGLIMPORTSYNCEXTPROC ImportSyncEXT;
        /* 1735 */ PFNGLFRAMETERMINATORGREMEDYPROC FrameTerminatorGREMEDY;
        /* 1736 */ PFNGLSTRINGMARKERGREMEDYPROC StringMarkerGREMEDY;
        /* 1737 */ PFNGLIMAGETRANSFORMPARAMETERIHPPROC ImageTransformParameteriHP;
        /* 1738 */ PFNGLIMAGETRANSFORMPARAMETERFHPPROC ImageTransformParameterfHP;
        /* 1739 */ PFNGLIMAGETRANSFORMPARAMETERIVHPPROC ImageTransformParameterivHP;
        /* 1740 */ PFNGLIMAGETRANSFORMPARAMETERFVHPPROC ImageTransformParameterfvHP;
        /* 1741 */ PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC GetImageTransformParameterivHP;
        /* 1742 */ PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC GetImageTransformParameterfvHP;
        /* 1743 */ PFNGLMULTIMODEDRAWARRAYSIBMPROC MultiModeDrawArraysIBM;
        /* 1744 */ PFNGLMULTIMODEDRAWELEMENTSIBMPROC MultiModeDrawElementsIBM;
        /* 1745 */ PFNGLFLUSHSTATICDATAIBMPROC FlushStaticDataIBM;
        /* 1746 */ PFNGLCOLORPOINTERLISTIBMPROC ColorPointerListIBM;
        /* 1747 */ PFNGLSECONDARYCOLORPOINTERLISTIBMPROC SecondaryColorPointerListIBM;
        /* 1748 */ PFNGLEDGEFLAGPOINTERLISTIBMPROC EdgeFlagPointerListIBM;
        /* 1749 */ PFNGLFOGCOORDPOINTERLISTIBMPROC FogCoordPointerListIBM;
        /* 1750 */ PFNGLINDEXPOINTERLISTIBMPROC IndexPointerListIBM;
        /* 1751 */ PFNGLNORMALPOINTERLISTIBMPROC NormalPointerListIBM;
        /* 1752 */ PFNGLTEXCOORDPOINTERLISTIBMPROC TexCoordPointerListIBM;
        /* 1753 */ PFNGLVERTEXPOINTERLISTIBMPROC VertexPointerListIBM;
        /* 1754 */ PFNGLBLENDFUNCSEPARATEINGRPROC BlendFuncSeparateINGR;
        /* 1755 */ PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC ApplyFramebufferAttachmentCMAAINTEL;
        /* 1756 */ PFNGLSYNCTEXTUREINTELPROC SyncTextureINTEL;
        /* 1757 */ PFNGLUNMAPTEXTURE2DINTELPROC UnmapTexture2DINTEL;
        /* 1758 */ PFNGLMAPTEXTURE2DINTELPROC MapTexture2DINTEL;
        /* 1759 */ PFNGLVERTEXPOINTERVINTELPROC VertexPointervINTEL;
        /* 1760 */ PFNGLNORMALPOINTERVINTELPROC NormalPointervINTEL;
        /* 1761 */ PFNGLCOLORPOINTERVINTELPROC ColorPointervINTEL;
        /* 1762 */ PFNGLTEXCOORDPOINTERVINTELPROC TexCoordPointervINTEL;
        /* 1763 */ PFNGLBEGINPERFQUERYINTELPROC BeginPerfQueryINTEL;
        /* 1764 */ PFNGLCREATEPERFQUERYINTELPROC CreatePerfQueryINTEL;
        /* 1765 */ PFNGLDELETEPERFQUERYINTELPROC DeletePerfQueryINTEL;
        /* 1766 */ PFNGLENDPERFQUERYINTELPROC EndPerfQueryINTEL;
        /* 1767 */ PFNGLGETFIRSTPERFQUERYIDINTELPROC GetFirstPerfQueryIdINTEL;
        /* 1768 */ PFNGLGETNEXTPERFQUERYIDINTELPROC GetNextPerfQueryIdINTEL;
        /* 1769 */ PFNGLGETPERFCOUNTERINFOINTELPROC GetPerfCounterInfoINTEL;
        /* 1770 */ PFNGLGETPERFQUERYDATAINTELPROC GetPerfQueryDataINTEL;
        /* 1771 */ PFNGLGETPERFQUERYIDBYNAMEINTELPROC GetPerfQueryIdByNameINTEL;
        /* 1772 */ PFNGLGETPERFQUERYINFOINTELPROC GetPerfQueryInfoINTEL;
        /* 1773 */ PFNGLBLENDBARRIERKHRPROC BlendBarrierKHR;
        /* 1774 */ PFNGLMAXSHADERCOMPILERTHREADSKHRPROC MaxShaderCompilerThreadsKHR;
        /* 1775 */ PFNGLFRAMEBUFFERPARAMETERIMESAPROC FramebufferParameteriMESA;
        /* 1776 */ PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC GetFramebufferParameterivMESA;
        /* 1777 */ PFNGLRESIZEBUFFERSMESAPROC ResizeBuffersMESA;
        /* 1778 */ PFNGLWINDOWPOS2DMESAPROC WindowPos2dMESA;
        /* 1779 */ PFNGLWINDOWPOS2DVMESAPROC WindowPos2dvMESA;
        /* 1780 */ PFNGLWINDOWPOS2FMESAPROC WindowPos2fMESA;
        /* 1781 */ PFNGLWINDOWPOS2FVMESAPROC WindowPos2fvMESA;
        /* 1782 */ PFNGLWINDOWPOS2IMESAPROC WindowPos2iMESA;
        /* 1783 */ PFNGLWINDOWPOS2IVMESAPROC WindowPos2ivMESA;
        /* 1784 */ PFNGLWINDOWPOS2SMESAPROC WindowPos2sMESA;
        /* 1785 */ PFNGLWINDOWPOS2SVMESAPROC WindowPos2svMESA;
        /* 1786 */ PFNGLWINDOWPOS3DMESAPROC WindowPos3dMESA;
        /* 1787 */ PFNGLWINDOWPOS3DVMESAPROC WindowPos3dvMESA;
        /* 1788 */ PFNGLWINDOWPOS3FMESAPROC WindowPos3fMESA;
        /* 1789 */ PFNGLWINDOWPOS3FVMESAPROC WindowPos3fvMESA;
        /* 1790 */ PFNGLWINDOWPOS3IMESAPROC WindowPos3iMESA;
        /* 1791 */ PFNGLWINDOWPOS3IVMESAPROC WindowPos3ivMESA;
        /* 1792 */ PFNGLWINDOWPOS3SMESAPROC WindowPos3sMESA;
        /* 1793 */ PFNGLWINDOWPOS3SVMESAPROC WindowPos3svMESA;
        /* 1794 */ PFNGLWINDOWPOS4DMESAPROC WindowPos4dMESA;
        /* 1795 */ PFNGLWINDOWPOS4DVMESAPROC WindowPos4dvMESA;
        /* 1796 */ PFNGLWINDOWPOS4FMESAPROC WindowPos4fMESA;
        /* 1797 */ PFNGLWINDOWPOS4FVMESAPROC WindowPos4fvMESA;
        /* 1798 */ PFNGLWINDOWPOS4IMESAPROC WindowPos4iMESA;
        /* 1799 */ PFNGLWINDOWPOS4IVMESAPROC WindowPos4ivMESA;
        /* 1800 */ PFNGLWINDOWPOS4SMESAPROC WindowPos4sMESA;
        /* 1801 */ PFNGLWINDOWPOS4SVMESAPROC WindowPos4svMESA;
        /* 1802 */ PFNGLBEGINCONDITIONALRENDERNVXPROC BeginConditionalRenderNVX;
        /* 1803 */ PFNGLENDCONDITIONALRENDERNVXPROC EndConditionalRenderNVX;
        /* 1804 */ PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC LGPUNamedBufferSubDataNVX;
        /* 1805 */ PFNGLLGPUCOPYIMAGESUBDATANVXPROC LGPUCopyImageSubDataNVX;
        /* 1806 */ PFNGLLGPUINTERLOCKNVXPROC LGPUInterlockNVX;
        /* 1807 */ PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC AlphaToCoverageDitherControlNV;
        /* 1808 */ PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC MultiDrawArraysIndirectBindlessNV;
        /* 1809 */ PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC MultiDrawElementsIndirectBindlessNV;
        /* 1810 */ PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC MultiDrawArraysIndirectBindlessCountNV;
        /* 1811 */ PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC MultiDrawElementsIndirectBindlessCountNV;
        /* 1812 */ PFNGLGETTEXTUREHANDLENVPROC GetTextureHandleNV;
        /* 1813 */ PFNGLGETTEXTURESAMPLERHANDLENVPROC GetTextureSamplerHandleNV;
        /* 1814 */ PFNGLMAKETEXTUREHANDLERESIDENTNVPROC MakeTextureHandleResidentNV;
        /* 1815 */ PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC MakeTextureHandleNonResidentNV;
        /* 1816 */ PFNGLGETIMAGEHANDLENVPROC GetImageHandleNV;
        /* 1817 */ PFNGLMAKEIMAGEHANDLERESIDENTNVPROC MakeImageHandleResidentNV;
        /* 1818 */ PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC MakeImageHandleNonResidentNV;
        /* 1819 */ PFNGLUNIFORMHANDLEUI64NVPROC UniformHandleui64NV;
        /* 1820 */ PFNGLUNIFORMHANDLEUI64VNVPROC UniformHandleui64vNV;
        /* 1821 */ PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC ProgramUniformHandleui64NV;
        /* 1822 */ PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC ProgramUniformHandleui64vNV;
        /* 1823 */ PFNGLISTEXTUREHANDLERESIDENTNVPROC IsTextureHandleResidentNV;
        /* 1824 */ PFNGLISIMAGEHANDLERESIDENTNVPROC IsImageHandleResidentNV;
        /* 1825 */ PFNGLBLENDPARAMETERINVPROC BlendParameteriNV;
        /* 1826 */ PFNGLBLENDBARRIERNVPROC BlendBarrierNV;
        /* 1827 */ PFNGLVIEWPORTPOSITIONWSCALENVPROC ViewportPositionWScaleNV;
        /* 1828 */ PFNGLCREATESTATESNVPROC CreateStatesNV;
        /* 1829 */ PFNGLDELETESTATESNVPROC DeleteStatesNV;
        /* 1830 */ PFNGLISSTATENVPROC IsStateNV;
        /* 1831 */ PFNGLSTATECAPTURENVPROC StateCaptureNV;
        /* 1832 */ PFNGLGETCOMMANDHEADERNVPROC GetCommandHeaderNV;
        /* 1833 */ PFNGLGETSTAGEINDEXNVPROC GetStageIndexNV;
        /* 1834 */ PFNGLDRAWCOMMANDSNVPROC DrawCommandsNV;
        /* 1835 */ PFNGLDRAWCOMMANDSADDRESSNVPROC DrawCommandsAddressNV;
        /* 1836 */ PFNGLDRAWCOMMANDSSTATESNVPROC DrawCommandsStatesNV;
        /* 1837 */ PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC DrawCommandsStatesAddressNV;
        /* 1838 */ PFNGLCREATECOMMANDLISTSNVPROC CreateCommandListsNV;
        /* 1839 */ PFNGLDELETECOMMANDLISTSNVPROC DeleteCommandListsNV;
        /* 1840 */ PFNGLISCOMMANDLISTNVPROC IsCommandListNV;
        /* 1841 */ PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC ListDrawCommandsStatesClientNV;
        /* 1842 */ PFNGLCOMMANDLISTSEGMENTSNVPROC CommandListSegmentsNV;
        /* 1843 */ PFNGLCOMPILECOMMANDLISTNVPROC CompileCommandListNV;
        /* 1844 */ PFNGLCALLCOMMANDLISTNVPROC CallCommandListNV;
        /* 1845 */ PFNGLBEGINCONDITIONALRENDERNVPROC BeginConditionalRenderNV;
        /* 1846 */ PFNGLENDCONDITIONALRENDERNVPROC EndConditionalRenderNV;
        /* 1847 */ PFNGLSUBPIXELPRECISIONBIASNVPROC SubpixelPrecisionBiasNV;
        /* 1848 */ PFNGLCONSERVATIVERASTERPARAMETERFNVPROC ConservativeRasterParameterfNV;
        /* 1849 */ PFNGLCONSERVATIVERASTERPARAMETERINVPROC ConservativeRasterParameteriNV;
        /* 1850 */ PFNGLCOPYIMAGESUBDATANVPROC CopyImageSubDataNV;
        /* 1851 */ PFNGLDEPTHRANGEDNVPROC DepthRangedNV;
        /* 1852 */ PFNGLCLEARDEPTHDNVPROC ClearDepthdNV;
        /* 1853 */ PFNGLDEPTHBOUNDSDNVPROC DepthBoundsdNV;
        /* 1854 */ PFNGLDRAWTEXTURENVPROC DrawTextureNV;
        /* 1855 */ PFNGLDRAWVKIMAGENVPROC DrawVkImageNV;
        /* 1856 */ PFNGLGETVKPROCADDRNVPROC GetVkProcAddrNV;
        /* 1857 */ PFNGLWAITVKSEMAPHORENVPROC WaitVkSemaphoreNV;
        /* 1858 */ PFNGLSIGNALVKSEMAPHORENVPROC SignalVkSemaphoreNV;
        /* 1859 */ PFNGLSIGNALVKFENCENVPROC SignalVkFenceNV;
        /* 1860 */ PFNGLMAPCONTROLPOINTSNVPROC MapControlPointsNV;
        /* 1861 */ PFNGLMAPPARAMETERIVNVPROC MapParameterivNV;
        /* 1862 */ PFNGLMAPPARAMETERFVNVPROC MapParameterfvNV;
        /* 1863 */ PFNGLGETMAPCONTROLPOINTSNVPROC GetMapControlPointsNV;
        /* 1864 */ PFNGLGETMAPPARAMETERIVNVPROC GetMapParameterivNV;
        /* 1865 */ PFNGLGETMAPPARAMETERFVNVPROC GetMapParameterfvNV;
        /* 1866 */ PFNGLGETMAPATTRIBPARAMETERIVNVPROC GetMapAttribParameterivNV;
        /* 1867 */ PFNGLGETMAPATTRIBPARAMETERFVNVPROC GetMapAttribParameterfvNV;
        /* 1868 */ PFNGLEVALMAPSNVPROC EvalMapsNV;
        /* 1869 */ PFNGLGETMULTISAMPLEFVNVPROC GetMultisamplefvNV;
        /* 1870 */ PFNGLSAMPLEMASKINDEXEDNVPROC SampleMaskIndexedNV;
        /* 1871 */ PFNGLTEXRENDERBUFFERNVPROC TexRenderbufferNV;
        /* 1872 */ PFNGLDELETEFENCESNVPROC DeleteFencesNV;
        /* 1873 */ PFNGLGENFENCESNVPROC GenFencesNV;
        /* 1874 */ PFNGLISFENCENVPROC IsFenceNV;
        /* 1875 */ PFNGLTESTFENCENVPROC TestFenceNV;
        /* 1876 */ PFNGLGETFENCEIVNVPROC GetFenceivNV;
        /* 1877 */ PFNGLFINISHFENCENVPROC FinishFenceNV;
        /* 1878 */ PFNGLSETFENCENVPROC SetFenceNV;
        /* 1879 */ PFNGLFRAGMENTCOVERAGECOLORNVPROC FragmentCoverageColorNV;
        /* 1880 */ PFNGLPROGRAMNAMEDPARAMETER4FNVPROC ProgramNamedParameter4fNV;
        /* 1881 */ PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC ProgramNamedParameter4fvNV;
        /* 1882 */ PFNGLPROGRAMNAMEDPARAMETER4DNVPROC ProgramNamedParameter4dNV;
        /* 1883 */ PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC ProgramNamedParameter4dvNV;
        /* 1884 */ PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC GetProgramNamedParameterfvNV;
        /* 1885 */ PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC GetProgramNamedParameterdvNV;
        /* 1886 */ PFNGLCOVERAGEMODULATIONTABLENVPROC CoverageModulationTableNV;
        /* 1887 */ PFNGLGETCOVERAGEMODULATIONTABLENVPROC GetCoverageModulationTableNV;
        /* 1888 */ PFNGLCOVERAGEMODULATIONNVPROC CoverageModulationNV;
        /* 1889 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC RenderbufferStorageMultisampleCoverageNV;
        /* 1890 */ PFNGLPROGRAMVERTEXLIMITNVPROC ProgramVertexLimitNV;
        /* 1891 */ PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC FramebufferTextureFaceEXT;
        /* 1892 */ PFNGLPROGRAMLOCALPARAMETERI4INVPROC ProgramLocalParameterI4iNV;
        /* 1893 */ PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC ProgramLocalParameterI4ivNV;
        /* 1894 */ PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC ProgramLocalParametersI4ivNV;
        /* 1895 */ PFNGLPROGRAMLOCALPARAMETERI4UINVPROC ProgramLocalParameterI4uiNV;
        /* 1896 */ PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC ProgramLocalParameterI4uivNV;
        /* 1897 */ PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC ProgramLocalParametersI4uivNV;
        /* 1898 */ PFNGLPROGRAMENVPARAMETERI4INVPROC ProgramEnvParameterI4iNV;
        /* 1899 */ PFNGLPROGRAMENVPARAMETERI4IVNVPROC ProgramEnvParameterI4ivNV;
        /* 1900 */ PFNGLPROGRAMENVPARAMETERSI4IVNVPROC ProgramEnvParametersI4ivNV;
        /* 1901 */ PFNGLPROGRAMENVPARAMETERI4UINVPROC ProgramEnvParameterI4uiNV;
        /* 1902 */ PFNGLPROGRAMENVPARAMETERI4UIVNVPROC ProgramEnvParameterI4uivNV;
        /* 1903 */ PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC ProgramEnvParametersI4uivNV;
        /* 1904 */ PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC GetProgramLocalParameterIivNV;
        /* 1905 */ PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC GetProgramLocalParameterIuivNV;
        /* 1906 */ PFNGLGETPROGRAMENVPARAMETERIIVNVPROC GetProgramEnvParameterIivNV;
        /* 1907 */ PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC GetProgramEnvParameterIuivNV;
        /* 1908 */ PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC ProgramSubroutineParametersuivNV;
        /* 1909 */ PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC GetProgramSubroutineParameteruivNV;
        /* 1910 */ PFNGLVERTEX2HNVPROC Vertex2hNV;
        /* 1911 */ PFNGLVERTEX2HVNVPROC Vertex2hvNV;
        /* 1912 */ PFNGLVERTEX3HNVPROC Vertex3hNV;
        /* 1913 */ PFNGLVERTEX3HVNVPROC Vertex3hvNV;
        /* 1914 */ PFNGLVERTEX4HNVPROC Vertex4hNV;
        /* 1915 */ PFNGLVERTEX4HVNVPROC Vertex4hvNV;
        /* 1916 */ PFNGLNORMAL3HNVPROC Normal3hNV;
        /* 1917 */ PFNGLNORMAL3HVNVPROC Normal3hvNV;
        /* 1918 */ PFNGLCOLOR3HNVPROC Color3hNV;
        /* 1919 */ PFNGLCOLOR3HVNVPROC Color3hvNV;
        /* 1920 */ PFNGLCOLOR4HNVPROC Color4hNV;
        /* 1921 */ PFNGLCOLOR4HVNVPROC Color4hvNV;
        /* 1922 */ PFNGLTEXCOORD1HNVPROC TexCoord1hNV;
        /* 1923 */ PFNGLTEXCOORD1HVNVPROC TexCoord1hvNV;
        /* 1924 */ PFNGLTEXCOORD2HNVPROC TexCoord2hNV;
        /* 1925 */ PFNGLTEXCOORD2HVNVPROC TexCoord2hvNV;
        /* 1926 */ PFNGLTEXCOORD3HNVPROC TexCoord3hNV;
        /* 1927 */ PFNGLTEXCOORD3HVNVPROC TexCoord3hvNV;
        /* 1928 */ PFNGLTEXCOORD4HNVPROC TexCoord4hNV;
        /* 1929 */ PFNGLTEXCOORD4HVNVPROC TexCoord4hvNV;
        /* 1930 */ PFNGLMULTITEXCOORD1HNVPROC MultiTexCoord1hNV;
        /* 1931 */ PFNGLMULTITEXCOORD1HVNVPROC MultiTexCoord1hvNV;
        /* 1932 */ PFNGLMULTITEXCOORD2HNVPROC MultiTexCoord2hNV;
        /* 1933 */ PFNGLMULTITEXCOORD2HVNVPROC MultiTexCoord2hvNV;
        /* 1934 */ PFNGLMULTITEXCOORD3HNVPROC MultiTexCoord3hNV;
        /* 1935 */ PFNGLMULTITEXCOORD3HVNVPROC MultiTexCoord3hvNV;
        /* 1936 */ PFNGLMULTITEXCOORD4HNVPROC MultiTexCoord4hNV;
        /* 1937 */ PFNGLMULTITEXCOORD4HVNVPROC MultiTexCoord4hvNV;
        /* 1938 */ PFNGLVERTEXATTRIB1HNVPROC VertexAttrib1hNV;
        /* 1939 */ PFNGLVERTEXATTRIB1HVNVPROC VertexAttrib1hvNV;
        /* 1940 */ PFNGLVERTEXATTRIB2HNVPROC VertexAttrib2hNV;
        /* 1941 */ PFNGLVERTEXATTRIB2HVNVPROC VertexAttrib2hvNV;
        /* 1942 */ PFNGLVERTEXATTRIB3HNVPROC VertexAttrib3hNV;
        /* 1943 */ PFNGLVERTEXATTRIB3HVNVPROC VertexAttrib3hvNV;
        /* 1944 */ PFNGLVERTEXATTRIB4HNVPROC VertexAttrib4hNV;
        /* 1945 */ PFNGLVERTEXATTRIB4HVNVPROC VertexAttrib4hvNV;
        /* 1946 */ PFNGLVERTEXATTRIBS1HVNVPROC VertexAttribs1hvNV;
        /* 1947 */ PFNGLVERTEXATTRIBS2HVNVPROC VertexAttribs2hvNV;
        /* 1948 */ PFNGLVERTEXATTRIBS3HVNVPROC VertexAttribs3hvNV;
        /* 1949 */ PFNGLVERTEXATTRIBS4HVNVPROC VertexAttribs4hvNV;
        /* 1950 */ PFNGLFOGCOORDHNVPROC FogCoordhNV;
        /* 1951 */ PFNGLFOGCOORDHVNVPROC FogCoordhvNV;
        /* 1952 */ PFNGLSECONDARYCOLOR3HNVPROC SecondaryColor3hNV;
        /* 1953 */ PFNGLSECONDARYCOLOR3HVNVPROC SecondaryColor3hvNV;
        /* 1954 */ PFNGLVERTEXWEIGHTHNVPROC VertexWeighthNV;
        /* 1955 */ PFNGLVERTEXWEIGHTHVNVPROC VertexWeighthvNV;
        /* 1956 */ PFNGLGETINTERNALFORMATSAMPLEIVNVPROC GetInternalformatSampleivNV;
        /* 1957 */ PFNGLRENDERGPUMASKNVPROC RenderGpuMaskNV;
        /* 1958 */ PFNGLMULTICASTBUFFERSUBDATANVPROC MulticastBufferSubDataNV;
        /* 1959 */ PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC MulticastCopyBufferSubDataNV;
        /* 1960 */ PFNGLMULTICASTCOPYIMAGESUBDATANVPROC MulticastCopyImageSubDataNV;
        /* 1961 */ PFNGLMULTICASTBLITFRAMEBUFFERNVPROC MulticastBlitFramebufferNV;
        /* 1962 */ PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC MulticastFramebufferSampleLocationsfvNV;
        /* 1963 */ PFNGLMULTICASTBARRIERNVPROC MulticastBarrierNV;
        /* 1964 */ PFNGLMULTICASTWAITSYNCNVPROC MulticastWaitSyncNV;
        /* 1965 */ PFNGLMULTICASTGETQUERYOBJECTIVNVPROC MulticastGetQueryObjectivNV;
        /* 1966 */ PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC MulticastGetQueryObjectuivNV;
        /* 1967 */ PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC MulticastGetQueryObjecti64vNV;
        /* 1968 */ PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC MulticastGetQueryObjectui64vNV;
        /* 1969 */ PFNGLUPLOADGPUMASKNVXPROC UploadGpuMaskNVX;
        /* 1970 */ PFNGLMULTICASTVIEWPORTARRAYVNVXPROC MulticastViewportArrayvNVX;
        /* 1971 */ PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC MulticastViewportPositionWScaleNVX;
        /* 1972 */ PFNGLMULTICASTSCISSORARRAYVNVXPROC MulticastScissorArrayvNVX;
        /* 1973 */ PFNGLASYNCCOPYBUFFERSUBDATANVXPROC AsyncCopyBufferSubDataNVX;
        /* 1974 */ PFNGLASYNCCOPYIMAGESUBDATANVXPROC AsyncCopyImageSubDataNVX;
        /* 1975 */ PFNGLCREATEPROGRESSFENCENVXPROC CreateProgressFenceNVX;
        /* 1976 */ PFNGLSIGNALSEMAPHOREUI64NVXPROC SignalSemaphoreui64NVX;
        /* 1977 */ PFNGLWAITSEMAPHOREUI64NVXPROC WaitSemaphoreui64NVX;
        /* 1978 */ PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC ClientWaitSemaphoreui64NVX;
        /* 1979 */ PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC GetMemoryObjectDetachedResourcesuivNV;
        /* 1980 */ PFNGLRESETMEMORYOBJECTPARAMETERNVPROC ResetMemoryObjectParameterNV;
        /* 1981 */ PFNGLTEXATTACHMEMORYNVPROC TexAttachMemoryNV;
        /* 1982 */ PFNGLBUFFERATTACHMEMORYNVPROC BufferAttachMemoryNV;
        /* 1983 */ PFNGLTEXTUREATTACHMEMORYNVPROC TextureAttachMemoryNV;
        /* 1984 */ PFNGLNAMEDBUFFERATTACHMEMORYNVPROC NamedBufferAttachMemoryNV;
        /* 1985 */ PFNGLBUFFERPAGECOMMITMENTMEMNVPROC BufferPageCommitmentMemNV;
        /* 1986 */ PFNGLTEXPAGECOMMITMENTMEMNVPROC TexPageCommitmentMemNV;
        /* 1987 */ PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC NamedBufferPageCommitmentMemNV;
        /* 1988 */ PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC TexturePageCommitmentMemNV;
        /* 1989 */ PFNGLDRAWMESHTASKSNVPROC DrawMeshTasksNV;
        /* 1990 */ PFNGLDRAWMESHTASKSINDIRECTNVPROC DrawMeshTasksIndirectNV;
        /* 1991 */ PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC MultiDrawMeshTasksIndirectNV;
        /* 1992 */ PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC MultiDrawMeshTasksIndirectCountNV;
        /* 1993 */ PFNGLGENOCCLUSIONQUERIESNVPROC GenOcclusionQueriesNV;
        /* 1994 */ PFNGLDELETEOCCLUSIONQUERIESNVPROC DeleteOcclusionQueriesNV;
        /* 1995 */ PFNGLISOCCLUSIONQUERYNVPROC IsOcclusionQueryNV;
        /* 1996 */ PFNGLBEGINOCCLUSIONQUERYNVPROC BeginOcclusionQueryNV;
        /* 1997 */ PFNGLENDOCCLUSIONQUERYNVPROC EndOcclusionQueryNV;
        /* 1998 */ PFNGLGETOCCLUSIONQUERYIVNVPROC GetOcclusionQueryivNV;
        /* 1999 */ PFNGLGETOCCLUSIONQUERYUIVNVPROC GetOcclusionQueryuivNV;
        /* 2000 */ PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC ProgramBufferParametersfvNV;
        /* 2001 */ PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC ProgramBufferParametersIivNV;
        /* 2002 */ PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC ProgramBufferParametersIuivNV;
        /* 2003 */ PFNGLGENPATHSNVPROC GenPathsNV;
        /* 2004 */ PFNGLDELETEPATHSNVPROC DeletePathsNV;
        /* 2005 */ PFNGLISPATHNVPROC IsPathNV;
        /* 2006 */ PFNGLPATHCOMMANDSNVPROC PathCommandsNV;
        /* 2007 */ PFNGLPATHCOORDSNVPROC PathCoordsNV;
        /* 2008 */ PFNGLPATHSUBCOMMANDSNVPROC PathSubCommandsNV;
        /* 2009 */ PFNGLPATHSUBCOORDSNVPROC PathSubCoordsNV;
        /* 2010 */ PFNGLPATHSTRINGNVPROC PathStringNV;
        /* 2011 */ PFNGLPATHGLYPHSNVPROC PathGlyphsNV;
        /* 2012 */ PFNGLPATHGLYPHRANGENVPROC PathGlyphRangeNV;
        /* 2013 */ PFNGLWEIGHTPATHSNVPROC WeightPathsNV;
        /* 2014 */ PFNGLCOPYPATHNVPROC CopyPathNV;
        /* 2015 */ PFNGLINTERPOLATEPATHSNVPROC InterpolatePathsNV;
        /* 2016 */ PFNGLTRANSFORMPATHNVPROC TransformPathNV;
        /* 2017 */ PFNGLPATHPARAMETERIVNVPROC PathParameterivNV;
        /* 2018 */ PFNGLPATHPARAMETERINVPROC PathParameteriNV;
        /* 2019 */ PFNGLPATHPARAMETERFVNVPROC PathParameterfvNV;
        /* 2020 */ PFNGLPATHPARAMETERFNVPROC PathParameterfNV;
        /* 2021 */ PFNGLPATHDASHARRAYNVPROC PathDashArrayNV;
        /* 2022 */ PFNGLPATHSTENCILFUNCNVPROC PathStencilFuncNV;
        /* 2023 */ PFNGLPATHSTENCILDEPTHOFFSETNVPROC PathStencilDepthOffsetNV;
        /* 2024 */ PFNGLSTENCILFILLPATHNVPROC StencilFillPathNV;
        /* 2025 */ PFNGLSTENCILSTROKEPATHNVPROC StencilStrokePathNV;
        /* 2026 */ PFNGLSTENCILFILLPATHINSTANCEDNVPROC StencilFillPathInstancedNV;
        /* 2027 */ PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC StencilStrokePathInstancedNV;
        /* 2028 */ PFNGLPATHCOVERDEPTHFUNCNVPROC PathCoverDepthFuncNV;
        /* 2029 */ PFNGLCOVERFILLPATHNVPROC CoverFillPathNV;
        /* 2030 */ PFNGLCOVERSTROKEPATHNVPROC CoverStrokePathNV;
        /* 2031 */ PFNGLCOVERFILLPATHINSTANCEDNVPROC CoverFillPathInstancedNV;
        /* 2032 */ PFNGLCOVERSTROKEPATHINSTANCEDNVPROC CoverStrokePathInstancedNV;
        /* 2033 */ PFNGLGETPATHPARAMETERIVNVPROC GetPathParameterivNV;
        /* 2034 */ PFNGLGETPATHPARAMETERFVNVPROC GetPathParameterfvNV;
        /* 2035 */ PFNGLGETPATHCOMMANDSNVPROC GetPathCommandsNV;
        /* 2036 */ PFNGLGETPATHCOORDSNVPROC GetPathCoordsNV;
        /* 2037 */ PFNGLGETPATHDASHARRAYNVPROC GetPathDashArrayNV;
        /* 2038 */ PFNGLGETPATHMETRICSNVPROC GetPathMetricsNV;
        /* 2039 */ PFNGLGETPATHMETRICRANGENVPROC GetPathMetricRangeNV;
        /* 2040 */ PFNGLGETPATHSPACINGNVPROC GetPathSpacingNV;
        /* 2041 */ PFNGLISPOINTINFILLPATHNVPROC IsPointInFillPathNV;
        /* 2042 */ PFNGLISPOINTINSTROKEPATHNVPROC IsPointInStrokePathNV;
        /* 2043 */ PFNGLGETPATHLENGTHNVPROC GetPathLengthNV;
        /* 2044 */ PFNGLPOINTALONGPATHNVPROC PointAlongPathNV;
        /* 2045 */ PFNGLMATRIXLOAD3X2FNVPROC MatrixLoad3x2fNV;
        /* 2046 */ PFNGLMATRIXLOAD3X3FNVPROC MatrixLoad3x3fNV;
        /* 2047 */ PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC MatrixLoadTranspose3x3fNV;
        /* 2048 */ PFNGLMATRIXMULT3X2FNVPROC MatrixMult3x2fNV;
        /* 2049 */ PFNGLMATRIXMULT3X3FNVPROC MatrixMult3x3fNV;
        /* 2050 */ PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC MatrixMultTranspose3x3fNV;
        /* 2051 */ PFNGLSTENCILTHENCOVERFILLPATHNVPROC StencilThenCoverFillPathNV;
        /* 2052 */ PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC StencilThenCoverStrokePathNV;
        /* 2053 */ PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC StencilThenCoverFillPathInstancedNV;
        /* 2054 */ PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC StencilThenCoverStrokePathInstancedNV;
        /* 2055 */ PFNGLPATHGLYPHINDEXRANGENVPROC PathGlyphIndexRangeNV;
        /* 2056 */ PFNGLPATHGLYPHINDEXARRAYNVPROC PathGlyphIndexArrayNV;
        /* 2057 */ PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC PathMemoryGlyphIndexArrayNV;
        /* 2058 */ PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC ProgramPathFragmentInputGenNV;
        /* 2059 */ PFNGLGETPROGRAMRESOURCEFVNVPROC GetProgramResourcefvNV;
        /* 2060 */ PFNGLPIXELDATARANGENVPROC PixelDataRangeNV;
        /* 2061 */ PFNGLFLUSHPIXELDATARANGENVPROC FlushPixelDataRangeNV;
        /* 2062 */ PFNGLPOINTPARAMETERINVPROC PointParameteriNV;
        /* 2063 */ PFNGLPOINTPARAMETERIVNVPROC PointParameterivNV;
        /* 2064 */ PFNGLPRESENTFRAMEKEYEDNVPROC PresentFrameKeyedNV;
        /* 2065 */ PFNGLPRESENTFRAMEDUALFILLNVPROC PresentFrameDualFillNV;
        /* 2066 */ PFNGLGETVIDEOIVNVPROC GetVideoivNV;
        /* 2067 */ PFNGLGETVIDEOUIVNVPROC GetVideouivNV;
        /* 2068 */ PFNGLGETVIDEOI64VNVPROC GetVideoi64vNV;
        /* 2069 */ PFNGLGETVIDEOUI64VNVPROC GetVideoui64vNV;
        /* 2070 */ PFNGLPRIMITIVERESTARTNVPROC PrimitiveRestartNV;
        /* 2071 */ PFNGLPRIMITIVERESTARTINDEXNVPROC PrimitiveRestartIndexNV;
        /* 2072 */ PFNGLQUERYRESOURCENVPROC QueryResourceNV;
        /* 2073 */ PFNGLGENQUERYRESOURCETAGNVPROC GenQueryResourceTagNV;
        /* 2074 */ PFNGLDELETEQUERYRESOURCETAGNVPROC DeleteQueryResourceTagNV;
        /* 2075 */ PFNGLQUERYRESOURCETAGNVPROC QueryResourceTagNV;
        /* 2076 */ PFNGLCOMBINERPARAMETERFVNVPROC CombinerParameterfvNV;
        /* 2077 */ PFNGLCOMBINERPARAMETERFNVPROC CombinerParameterfNV;
        /* 2078 */ PFNGLCOMBINERPARAMETERIVNVPROC CombinerParameterivNV;
        /* 2079 */ PFNGLCOMBINERPARAMETERINVPROC CombinerParameteriNV;
        /* 2080 */ PFNGLCOMBINERINPUTNVPROC CombinerInputNV;
        /* 2081 */ PFNGLCOMBINEROUTPUTNVPROC CombinerOutputNV;
        /* 2082 */ PFNGLFINALCOMBINERINPUTNVPROC FinalCombinerInputNV;
        /* 2083 */ PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC GetCombinerInputParameterfvNV;
        /* 2084 */ PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC GetCombinerInputParameterivNV;
        /* 2085 */ PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC GetCombinerOutputParameterfvNV;
        /* 2086 */ PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC GetCombinerOutputParameterivNV;
        /* 2087 */ PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC GetFinalCombinerInputParameterfvNV;
        /* 2088 */ PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC GetFinalCombinerInputParameterivNV;
        /* 2089 */ PFNGLCOMBINERSTAGEPARAMETERFVNVPROC CombinerStageParameterfvNV;
        /* 2090 */ PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC GetCombinerStageParameterfvNV;
        /* 2091 */ PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC FramebufferSampleLocationsfvNV;
        /* 2092 */ PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC NamedFramebufferSampleLocationsfvNV;
        /* 2093 */ PFNGLRESOLVEDEPTHVALUESNVPROC ResolveDepthValuesNV;
        /* 2094 */ PFNGLSCISSOREXCLUSIVENVPROC ScissorExclusiveNV;
        /* 2095 */ PFNGLSCISSOREXCLUSIVEARRAYVNVPROC ScissorExclusiveArrayvNV;
        /* 2096 */ PFNGLMAKEBUFFERRESIDENTNVPROC MakeBufferResidentNV;
        /* 2097 */ PFNGLMAKEBUFFERNONRESIDENTNVPROC MakeBufferNonResidentNV;
        /* 2098 */ PFNGLISBUFFERRESIDENTNVPROC IsBufferResidentNV;
        /* 2099 */ PFNGLMAKENAMEDBUFFERRESIDENTNVPROC MakeNamedBufferResidentNV;
        /* 2100 */ PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC MakeNamedBufferNonResidentNV;
        /* 2101 */ PFNGLISNAMEDBUFFERRESIDENTNVPROC IsNamedBufferResidentNV;
        /* 2102 */ PFNGLGETBUFFERPARAMETERUI64VNVPROC GetBufferParameterui64vNV;
        /* 2103 */ PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC GetNamedBufferParameterui64vNV;
        /* 2104 */ PFNGLGETINTEGERUI64VNVPROC GetIntegerui64vNV;
        /* 2105 */ PFNGLUNIFORMUI64NVPROC Uniformui64NV;
        /* 2106 */ PFNGLUNIFORMUI64VNVPROC Uniformui64vNV;
        /* 2107 */ PFNGLPROGRAMUNIFORMUI64NVPROC ProgramUniformui64NV;
        /* 2108 */ PFNGLPROGRAMUNIFORMUI64VNVPROC ProgramUniformui64vNV;
        /* 2109 */ PFNGLBINDSHADINGRATEIMAGENVPROC BindShadingRateImageNV;
        /* 2110 */ PFNGLGETSHADINGRATEIMAGEPALETTENVPROC GetShadingRateImagePaletteNV;
        /* 2111 */ PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC GetShadingRateSampleLocationivNV;
        /* 2112 */ PFNGLSHADINGRATEIMAGEBARRIERNVPROC ShadingRateImageBarrierNV;
        /* 2113 */ PFNGLSHADINGRATEIMAGEPALETTENVPROC ShadingRateImagePaletteNV;
        /* 2114 */ PFNGLSHADINGRATESAMPLEORDERNVPROC ShadingRateSampleOrderNV;
        /* 2115 */ PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC ShadingRateSampleOrderCustomNV;
        /* 2116 */ PFNGLTEXTUREBARRIERNVPROC TextureBarrierNV;
        /* 2117 */ PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC TexImage2DMultisampleCoverageNV;
        /* 2118 */ PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC TexImage3DMultisampleCoverageNV;
        /* 2119 */ PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC TextureImage2DMultisampleNV;
        /* 2120 */ PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC TextureImage3DMultisampleNV;
        /* 2121 */ PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC TextureImage2DMultisampleCoverageNV;
        /* 2122 */ PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC TextureImage3DMultisampleCoverageNV;
        /* 2123 */ PFNGLBEGINTRANSFORMFEEDBACKNVPROC BeginTransformFeedbackNV;
        /* 2124 */ PFNGLENDTRANSFORMFEEDBACKNVPROC EndTransformFeedbackNV;
        /* 2125 */ PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC TransformFeedbackAttribsNV;
        /* 2126 */ PFNGLBINDBUFFERRANGENVPROC BindBufferRangeNV;
        /* 2127 */ PFNGLBINDBUFFEROFFSETNVPROC BindBufferOffsetNV;
        /* 2128 */ PFNGLBINDBUFFERBASENVPROC BindBufferBaseNV;
        /* 2129 */ PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC TransformFeedbackVaryingsNV;
        /* 2130 */ PFNGLACTIVEVARYINGNVPROC ActiveVaryingNV;
        /* 2131 */ PFNGLGETVARYINGLOCATIONNVPROC GetVaryingLocationNV;
        /* 2132 */ PFNGLGETACTIVEVARYINGNVPROC GetActiveVaryingNV;
        /* 2133 */ PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC GetTransformFeedbackVaryingNV;
        /* 2134 */ PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC TransformFeedbackStreamAttribsNV;
        /* 2135 */ PFNGLBINDTRANSFORMFEEDBACKNVPROC BindTransformFeedbackNV;
        /* 2136 */ PFNGLDELETETRANSFORMFEEDBACKSNVPROC DeleteTransformFeedbacksNV;
        /* 2137 */ PFNGLGENTRANSFORMFEEDBACKSNVPROC GenTransformFeedbacksNV;
        /* 2138 */ PFNGLISTRANSFORMFEEDBACKNVPROC IsTransformFeedbackNV;
        /* 2139 */ PFNGLPAUSETRANSFORMFEEDBACKNVPROC PauseTransformFeedbackNV;
        /* 2140 */ PFNGLRESUMETRANSFORMFEEDBACKNVPROC ResumeTransformFeedbackNV;
        /* 2141 */ PFNGLDRAWTRANSFORMFEEDBACKNVPROC DrawTransformFeedbackNV;
        /* 2142 */ PFNGLVDPAUINITNVPROC VDPAUInitNV;
        /* 2143 */ PFNGLVDPAUFININVPROC VDPAUFiniNV;
        /* 2144 */ PFNGLVDPAUREGISTERVIDEOSURFACENVPROC VDPAURegisterVideoSurfaceNV;
        /* 2145 */ PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC VDPAURegisterOutputSurfaceNV;
        /* 2146 */ PFNGLVDPAUISSURFACENVPROC VDPAUIsSurfaceNV;
        /* 2147 */ PFNGLVDPAUUNREGISTERSURFACENVPROC VDPAUUnregisterSurfaceNV;
        /* 2148 */ PFNGLVDPAUGETSURFACEIVNVPROC VDPAUGetSurfaceivNV;
        /* 2149 */ PFNGLVDPAUSURFACEACCESSNVPROC VDPAUSurfaceAccessNV;
        /* 2150 */ PFNGLVDPAUMAPSURFACESNVPROC VDPAUMapSurfacesNV;
        /* 2151 */ PFNGLVDPAUUNMAPSURFACESNVPROC VDPAUUnmapSurfacesNV;
        /* 2152 */ PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC VDPAURegisterVideoSurfaceWithPictureStructureNV;
        /* 2153 */ PFNGLFLUSHVERTEXARRAYRANGENVPROC FlushVertexArrayRangeNV;
        /* 2154 */ PFNGLVERTEXARRAYRANGENVPROC VertexArrayRangeNV;
        /* 2155 */ PFNGLVERTEXATTRIBL1I64NVPROC VertexAttribL1i64NV;
        /* 2156 */ PFNGLVERTEXATTRIBL2I64NVPROC VertexAttribL2i64NV;
        /* 2157 */ PFNGLVERTEXATTRIBL3I64NVPROC VertexAttribL3i64NV;
        /* 2158 */ PFNGLVERTEXATTRIBL4I64NVPROC VertexAttribL4i64NV;
        /* 2159 */ PFNGLVERTEXATTRIBL1I64VNVPROC VertexAttribL1i64vNV;
        /* 2160 */ PFNGLVERTEXATTRIBL2I64VNVPROC VertexAttribL2i64vNV;
        /* 2161 */ PFNGLVERTEXATTRIBL3I64VNVPROC VertexAttribL3i64vNV;
        /* 2162 */ PFNGLVERTEXATTRIBL4I64VNVPROC VertexAttribL4i64vNV;
        /* 2163 */ PFNGLVERTEXATTRIBL1UI64NVPROC VertexAttribL1ui64NV;
        /* 2164 */ PFNGLVERTEXATTRIBL2UI64NVPROC VertexAttribL2ui64NV;
        /* 2165 */ PFNGLVERTEXATTRIBL3UI64NVPROC VertexAttribL3ui64NV;
        /* 2166 */ PFNGLVERTEXATTRIBL4UI64NVPROC VertexAttribL4ui64NV;
        /* 2167 */ PFNGLVERTEXATTRIBL1UI64VNVPROC VertexAttribL1ui64vNV;
        /* 2168 */ PFNGLVERTEXATTRIBL2UI64VNVPROC VertexAttribL2ui64vNV;
        /* 2169 */ PFNGLVERTEXATTRIBL3UI64VNVPROC VertexAttribL3ui64vNV;
        /* 2170 */ PFNGLVERTEXATTRIBL4UI64VNVPROC VertexAttribL4ui64vNV;
        /* 2171 */ PFNGLGETVERTEXATTRIBLI64VNVPROC GetVertexAttribLi64vNV;
        /* 2172 */ PFNGLGETVERTEXATTRIBLUI64VNVPROC GetVertexAttribLui64vNV;
        /* 2173 */ PFNGLVERTEXATTRIBLFORMATNVPROC VertexAttribLFormatNV;
        /* 2174 */ PFNGLBUFFERADDRESSRANGENVPROC BufferAddressRangeNV;
        /* 2175 */ PFNGLVERTEXFORMATNVPROC VertexFormatNV;
        /* 2176 */ PFNGLNORMALFORMATNVPROC NormalFormatNV;
        /* 2177 */ PFNGLCOLORFORMATNVPROC ColorFormatNV;
        /* 2178 */ PFNGLINDEXFORMATNVPROC IndexFormatNV;
        /* 2179 */ PFNGLTEXCOORDFORMATNVPROC TexCoordFormatNV;
        /* 2180 */ PFNGLEDGEFLAGFORMATNVPROC EdgeFlagFormatNV;
        /* 2181 */ PFNGLSECONDARYCOLORFORMATNVPROC SecondaryColorFormatNV;
        /* 2182 */ PFNGLFOGCOORDFORMATNVPROC FogCoordFormatNV;
        /* 2183 */ PFNGLVERTEXATTRIBFORMATNVPROC VertexAttribFormatNV;
        /* 2184 */ PFNGLVERTEXATTRIBIFORMATNVPROC VertexAttribIFormatNV;
        /* 2185 */ PFNGLGETINTEGERUI64I_VNVPROC GetIntegerui64i_vNV;
        /* 2186 */ PFNGLAREPROGRAMSRESIDENTNVPROC AreProgramsResidentNV;
        /* 2187 */ PFNGLBINDPROGRAMNVPROC BindProgramNV;
        /* 2188 */ PFNGLDELETEPROGRAMSNVPROC DeleteProgramsNV;
        /* 2189 */ PFNGLEXECUTEPROGRAMNVPROC ExecuteProgramNV;
        /* 2190 */ PFNGLGENPROGRAMSNVPROC GenProgramsNV;
        /* 2191 */ PFNGLGETPROGRAMPARAMETERDVNVPROC GetProgramParameterdvNV;
        /* 2192 */ PFNGLGETPROGRAMPARAMETERFVNVPROC GetProgramParameterfvNV;
        /* 2193 */ PFNGLGETPROGRAMIVNVPROC GetProgramivNV;
        /* 2194 */ PFNGLGETPROGRAMSTRINGNVPROC GetProgramStringNV;
        /* 2195 */ PFNGLGETTRACKMATRIXIVNVPROC GetTrackMatrixivNV;
        /* 2196 */ PFNGLGETVERTEXATTRIBDVNVPROC GetVertexAttribdvNV;
        /* 2197 */ PFNGLGETVERTEXATTRIBFVNVPROC GetVertexAttribfvNV;
        /* 2198 */ PFNGLGETVERTEXATTRIBIVNVPROC GetVertexAttribivNV;
        /* 2199 */ PFNGLGETVERTEXATTRIBPOINTERVNVPROC GetVertexAttribPointervNV;
        /* 2200 */ PFNGLISPROGRAMNVPROC IsProgramNV;
        /* 2201 */ PFNGLLOADPROGRAMNVPROC LoadProgramNV;
        /* 2202 */ PFNGLPROGRAMPARAMETER4DNVPROC ProgramParameter4dNV;
        /* 2203 */ PFNGLPROGRAMPARAMETER4DVNVPROC ProgramParameter4dvNV;
        /* 2204 */ PFNGLPROGRAMPARAMETER4FNVPROC ProgramParameter4fNV;
        /* 2205 */ PFNGLPROGRAMPARAMETER4FVNVPROC ProgramParameter4fvNV;
        /* 2206 */ PFNGLPROGRAMPARAMETERS4DVNVPROC ProgramParameters4dvNV;
        /* 2207 */ PFNGLPROGRAMPARAMETERS4FVNVPROC ProgramParameters4fvNV;
        /* 2208 */ PFNGLREQUESTRESIDENTPROGRAMSNVPROC RequestResidentProgramsNV;
        /* 2209 */ PFNGLTRACKMATRIXNVPROC TrackMatrixNV;
        /* 2210 */ PFNGLVERTEXATTRIBPOINTERNVPROC VertexAttribPointerNV;
        /* 2211 */ PFNGLVERTEXATTRIB1DNVPROC VertexAttrib1dNV;
        /* 2212 */ PFNGLVERTEXATTRIB1DVNVPROC VertexAttrib1dvNV;
        /* 2213 */ PFNGLVERTEXATTRIB1FNVPROC VertexAttrib1fNV;
        /* 2214 */ PFNGLVERTEXATTRIB1FVNVPROC VertexAttrib1fvNV;
        /* 2215 */ PFNGLVERTEXATTRIB1SNVPROC VertexAttrib1sNV;
        /* 2216 */ PFNGLVERTEXATTRIB1SVNVPROC VertexAttrib1svNV;
        /* 2217 */ PFNGLVERTEXATTRIB2DNVPROC VertexAttrib2dNV;
        /* 2218 */ PFNGLVERTEXATTRIB2DVNVPROC VertexAttrib2dvNV;
        /* 2219 */ PFNGLVERTEXATTRIB2FNVPROC VertexAttrib2fNV;
        /* 2220 */ PFNGLVERTEXATTRIB2FVNVPROC VertexAttrib2fvNV;
        /* 2221 */ PFNGLVERTEXATTRIB2SNVPROC VertexAttrib2sNV;
        /* 2222 */ PFNGLVERTEXATTRIB2SVNVPROC VertexAttrib2svNV;
        /* 2223 */ PFNGLVERTEXATTRIB3DNVPROC VertexAttrib3dNV;
        /* 2224 */ PFNGLVERTEXATTRIB3DVNVPROC VertexAttrib3dvNV;
        /* 2225 */ PFNGLVERTEXATTRIB3FNVPROC VertexAttrib3fNV;
        /* 2226 */ PFNGLVERTEXATTRIB3FVNVPROC VertexAttrib3fvNV;
        /* 2227 */ PFNGLVERTEXATTRIB3SNVPROC VertexAttrib3sNV;
        /* 2228 */ PFNGLVERTEXATTRIB3SVNVPROC VertexAttrib3svNV;
        /* 2229 */ PFNGLVERTEXATTRIB4DNVPROC VertexAttrib4dNV;
        /* 2230 */ PFNGLVERTEXATTRIB4DVNVPROC VertexAttrib4dvNV;
        /* 2231 */ PFNGLVERTEXATTRIB4FNVPROC VertexAttrib4fNV;
        /* 2232 */ PFNGLVERTEXATTRIB4FVNVPROC VertexAttrib4fvNV;
        /* 2233 */ PFNGLVERTEXATTRIB4SNVPROC VertexAttrib4sNV;
        /* 2234 */ PFNGLVERTEXATTRIB4SVNVPROC VertexAttrib4svNV;
        /* 2235 */ PFNGLVERTEXATTRIB4UBNVPROC VertexAttrib4ubNV;
        /* 2236 */ PFNGLVERTEXATTRIB4UBVNVPROC VertexAttrib4ubvNV;
        /* 2237 */ PFNGLVERTEXATTRIBS1DVNVPROC VertexAttribs1dvNV;
        /* 2238 */ PFNGLVERTEXATTRIBS1FVNVPROC VertexAttribs1fvNV;
        /* 2239 */ PFNGLVERTEXATTRIBS1SVNVPROC VertexAttribs1svNV;
        /* 2240 */ PFNGLVERTEXATTRIBS2DVNVPROC VertexAttribs2dvNV;
        /* 2241 */ PFNGLVERTEXATTRIBS2FVNVPROC VertexAttribs2fvNV;
        /* 2242 */ PFNGLVERTEXATTRIBS2SVNVPROC VertexAttribs2svNV;
        /* 2243 */ PFNGLVERTEXATTRIBS3DVNVPROC VertexAttribs3dvNV;
        /* 2244 */ PFNGLVERTEXATTRIBS3FVNVPROC VertexAttribs3fvNV;
        /* 2245 */ PFNGLVERTEXATTRIBS3SVNVPROC VertexAttribs3svNV;
        /* 2246 */ PFNGLVERTEXATTRIBS4DVNVPROC VertexAttribs4dvNV;
        /* 2247 */ PFNGLVERTEXATTRIBS4FVNVPROC VertexAttribs4fvNV;
        /* 2248 */ PFNGLVERTEXATTRIBS4SVNVPROC VertexAttribs4svNV;
        /* 2249 */ PFNGLVERTEXATTRIBS4UBVNVPROC VertexAttribs4ubvNV;
        /* 2250 */ PFNGLBEGINVIDEOCAPTURENVPROC BeginVideoCaptureNV;
        /* 2251 */ PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC BindVideoCaptureStreamBufferNV;
        /* 2252 */ PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC BindVideoCaptureStreamTextureNV;
        /* 2253 */ PFNGLENDVIDEOCAPTURENVPROC EndVideoCaptureNV;
        /* 2254 */ PFNGLGETVIDEOCAPTUREIVNVPROC GetVideoCaptureivNV;
        /* 2255 */ PFNGLGETVIDEOCAPTURESTREAMIVNVPROC GetVideoCaptureStreamivNV;
        /* 2256 */ PFNGLGETVIDEOCAPTURESTREAMFVNVPROC GetVideoCaptureStreamfvNV;
        /* 2257 */ PFNGLGETVIDEOCAPTURESTREAMDVNVPROC GetVideoCaptureStreamdvNV;
        /* 2258 */ PFNGLVIDEOCAPTURENVPROC VideoCaptureNV;
        /* 2259 */ PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC VideoCaptureStreamParameterivNV;
        /* 2260 */ PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC VideoCaptureStreamParameterfvNV;
        /* 2261 */ PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC VideoCaptureStreamParameterdvNV;
        /* 2262 */ PFNGLVIEWPORTSWIZZLENVPROC ViewportSwizzleNV;
        /* 2263 */ PFNGLMULTITEXCOORD1BOESPROC MultiTexCoord1bOES;
        /* 2264 */ PFNGLMULTITEXCOORD1BVOESPROC MultiTexCoord1bvOES;
        /* 2265 */ PFNGLMULTITEXCOORD2BOESPROC MultiTexCoord2bOES;
        /* 2266 */ PFNGLMULTITEXCOORD2BVOESPROC MultiTexCoord2bvOES;
        /* 2267 */ PFNGLMULTITEXCOORD3BOESPROC MultiTexCoord3bOES;
        /* 2268 */ PFNGLMULTITEXCOORD3BVOESPROC MultiTexCoord3bvOES;
        /* 2269 */ PFNGLMULTITEXCOORD4BOESPROC MultiTexCoord4bOES;
        /* 2270 */ PFNGLMULTITEXCOORD4BVOESPROC MultiTexCoord4bvOES;
        /* 2271 */ PFNGLTEXCOORD1BOESPROC TexCoord1bOES;
        /* 2272 */ PFNGLTEXCOORD1BVOESPROC TexCoord1bvOES;
        /* 2273 */ PFNGLTEXCOORD2BOESPROC TexCoord2bOES;
        /* 2274 */ PFNGLTEXCOORD2BVOESPROC TexCoord2bvOES;
        /* 2275 */ PFNGLTEXCOORD3BOESPROC TexCoord3bOES;
        /* 2276 */ PFNGLTEXCOORD3BVOESPROC TexCoord3bvOES;
        /* 2277 */ PFNGLTEXCOORD4BOESPROC TexCoord4bOES;
        /* 2278 */ PFNGLTEXCOORD4BVOESPROC TexCoord4bvOES;
        /* 2279 */ PFNGLVERTEX2BOESPROC Vertex2bOES;
        /* 2280 */ PFNGLVERTEX2BVOESPROC Vertex2bvOES;
        /* 2281 */ PFNGLVERTEX3BOESPROC Vertex3bOES;
        /* 2282 */ PFNGLVERTEX3BVOESPROC Vertex3bvOES;
        /* 2283 */ PFNGLVERTEX4BOESPROC Vertex4bOES;
        /* 2284 */ PFNGLVERTEX4BVOESPROC Vertex4bvOES;
        /* 2285 */ PFNGLALPHAFUNCXOESPROC AlphaFuncxOES;
        /* 2286 */ PFNGLCLEARCOLORXOESPROC ClearColorxOES;
        /* 2287 */ PFNGLCLEARDEPTHXOESPROC ClearDepthxOES;
        /* 2288 */ PFNGLCLIPPLANEXOESPROC ClipPlanexOES;
        /* 2289 */ PFNGLCOLOR4XOESPROC Color4xOES;
        /* 2290 */ PFNGLDEPTHRANGEXOESPROC DepthRangexOES;
        /* 2291 */ PFNGLFOGXOESPROC FogxOES;
        /* 2292 */ PFNGLFOGXVOESPROC FogxvOES;
        /* 2293 */ PFNGLFRUSTUMXOESPROC FrustumxOES;
        /* 2294 */ PFNGLGETCLIPPLANEXOESPROC GetClipPlanexOES;
        /* 2295 */ PFNGLGETFIXEDVOESPROC GetFixedvOES;
        /* 2296 */ PFNGLGETTEXENVXVOESPROC GetTexEnvxvOES;
        /* 2297 */ PFNGLGETTEXPARAMETERXVOESPROC GetTexParameterxvOES;
        /* 2298 */ PFNGLLIGHTMODELXOESPROC LightModelxOES;
        /* 2299 */ PFNGLLIGHTMODELXVOESPROC LightModelxvOES;
        /* 2300 */ PFNGLLIGHTXOESPROC LightxOES;
        /* 2301 */ PFNGLLIGHTXVOESPROC LightxvOES;
        /* 2302 */ PFNGLLINEWIDTHXOESPROC LineWidthxOES;
        /* 2303 */ PFNGLLOADMATRIXXOESPROC LoadMatrixxOES;
        /* 2304 */ PFNGLMATERIALXOESPROC MaterialxOES;
        /* 2305 */ PFNGLMATERIALXVOESPROC MaterialxvOES;
        /* 2306 */ PFNGLMULTMATRIXXOESPROC MultMatrixxOES;
        /* 2307 */ PFNGLMULTITEXCOORD4XOESPROC MultiTexCoord4xOES;
        /* 2308 */ PFNGLNORMAL3XOESPROC Normal3xOES;
        /* 2309 */ PFNGLORTHOXOESPROC OrthoxOES;
        /* 2310 */ PFNGLPOINTPARAMETERXVOESPROC PointParameterxvOES;
        /* 2311 */ PFNGLPOINTSIZEXOESPROC PointSizexOES;
        /* 2312 */ PFNGLPOLYGONOFFSETXOESPROC PolygonOffsetxOES;
        /* 2313 */ PFNGLROTATEXOESPROC RotatexOES;
        /* 2314 */ PFNGLSCALEXOESPROC ScalexOES;
        /* 2315 */ PFNGLTEXENVXOESPROC TexEnvxOES;
        /* 2316 */ PFNGLTEXENVXVOESPROC TexEnvxvOES;
        /* 2317 */ PFNGLTEXPARAMETERXOESPROC TexParameterxOES;
        /* 2318 */ PFNGLTEXPARAMETERXVOESPROC TexParameterxvOES;
        /* 2319 */ PFNGLTRANSLATEXOESPROC TranslatexOES;
        /* 2320 */ PFNGLACCUMXOESPROC AccumxOES;
        /* 2321 */ PFNGLBITMAPXOESPROC BitmapxOES;
        /* 2322 */ PFNGLBLENDCOLORXOESPROC BlendColorxOES;
        /* 2323 */ PFNGLCLEARACCUMXOESPROC ClearAccumxOES;
        /* 2324 */ PFNGLCOLOR3XOESPROC Color3xOES;
        /* 2325 */ PFNGLCOLOR3XVOESPROC Color3xvOES;
        /* 2326 */ PFNGLCOLOR4XVOESPROC Color4xvOES;
        /* 2327 */ PFNGLCONVOLUTIONPARAMETERXOESPROC ConvolutionParameterxOES;
        /* 2328 */ PFNGLCONVOLUTIONPARAMETERXVOESPROC ConvolutionParameterxvOES;
        /* 2329 */ PFNGLEVALCOORD1XOESPROC EvalCoord1xOES;
        /* 2330 */ PFNGLEVALCOORD1XVOESPROC EvalCoord1xvOES;
        /* 2331 */ PFNGLEVALCOORD2XOESPROC EvalCoord2xOES;
        /* 2332 */ PFNGLEVALCOORD2XVOESPROC EvalCoord2xvOES;
        /* 2333 */ PFNGLFEEDBACKBUFFERXOESPROC FeedbackBufferxOES;
        /* 2334 */ PFNGLGETCONVOLUTIONPARAMETERXVOESPROC GetConvolutionParameterxvOES;
        /* 2335 */ PFNGLGETHISTOGRAMPARAMETERXVOESPROC GetHistogramParameterxvOES;
        /* 2336 */ PFNGLGETLIGHTXOESPROC GetLightxOES;
        /* 2337 */ PFNGLGETMAPXVOESPROC GetMapxvOES;
        /* 2338 */ PFNGLGETMATERIALXOESPROC GetMaterialxOES;
        /* 2339 */ PFNGLGETPIXELMAPXVPROC GetPixelMapxv;
        /* 2340 */ PFNGLGETTEXGENXVOESPROC GetTexGenxvOES;
        /* 2341 */ PFNGLGETTEXLEVELPARAMETERXVOESPROC GetTexLevelParameterxvOES;
        /* 2342 */ PFNGLINDEXXOESPROC IndexxOES;
        /* 2343 */ PFNGLINDEXXVOESPROC IndexxvOES;
        /* 2344 */ PFNGLLOADTRANSPOSEMATRIXXOESPROC LoadTransposeMatrixxOES;
        /* 2345 */ PFNGLMAP1XOESPROC Map1xOES;
        /* 2346 */ PFNGLMAP2XOESPROC Map2xOES;
        /* 2347 */ PFNGLMAPGRID1XOESPROC MapGrid1xOES;
        /* 2348 */ PFNGLMAPGRID2XOESPROC MapGrid2xOES;
        /* 2349 */ PFNGLMULTTRANSPOSEMATRIXXOESPROC MultTransposeMatrixxOES;
        /* 2350 */ PFNGLMULTITEXCOORD1XOESPROC MultiTexCoord1xOES;
        /* 2351 */ PFNGLMULTITEXCOORD1XVOESPROC MultiTexCoord1xvOES;
        /* 2352 */ PFNGLMULTITEXCOORD2XOESPROC MultiTexCoord2xOES;
        /* 2353 */ PFNGLMULTITEXCOORD2XVOESPROC MultiTexCoord2xvOES;
        /* 2354 */ PFNGLMULTITEXCOORD3XOESPROC MultiTexCoord3xOES;
        /* 2355 */ PFNGLMULTITEXCOORD3XVOESPROC MultiTexCoord3xvOES;
        /* 2356 */ PFNGLMULTITEXCOORD4XVOESPROC MultiTexCoord4xvOES;
        /* 2357 */ PFNGLNORMAL3XVOESPROC Normal3xvOES;
        /* 2358 */ PFNGLPASSTHROUGHXOESPROC PassThroughxOES;
        /* 2359 */ PFNGLPIXELMAPXPROC PixelMapx;
        /* 2360 */ PFNGLPIXELSTOREXPROC PixelStorex;
        /* 2361 */ PFNGLPIXELTRANSFERXOESPROC PixelTransferxOES;
        /* 2362 */ PFNGLPIXELZOOMXOESPROC PixelZoomxOES;
        /* 2363 */ PFNGLPRIORITIZETEXTURESXOESPROC PrioritizeTexturesxOES;
        /* 2364 */ PFNGLRASTERPOS2XOESPROC RasterPos2xOES;
        /* 2365 */ PFNGLRASTERPOS2XVOESPROC RasterPos2xvOES;
        /* 2366 */ PFNGLRASTERPOS3XOESPROC RasterPos3xOES;
        /* 2367 */ PFNGLRASTERPOS3XVOESPROC RasterPos3xvOES;
        /* 2368 */ PFNGLRASTERPOS4XOESPROC RasterPos4xOES;
        /* 2369 */ PFNGLRASTERPOS4XVOESPROC RasterPos4xvOES;
        /* 2370 */ PFNGLRECTXOESPROC RectxOES;
        /* 2371 */ PFNGLRECTXVOESPROC RectxvOES;
        /* 2372 */ PFNGLTEXCOORD1XOESPROC TexCoord1xOES;
        /* 2373 */ PFNGLTEXCOORD1XVOESPROC TexCoord1xvOES;
        /* 2374 */ PFNGLTEXCOORD2XOESPROC TexCoord2xOES;
        /* 2375 */ PFNGLTEXCOORD2XVOESPROC TexCoord2xvOES;
        /* 2376 */ PFNGLTEXCOORD3XOESPROC TexCoord3xOES;
        /* 2377 */ PFNGLTEXCOORD3XVOESPROC TexCoord3xvOES;
        /* 2378 */ PFNGLTEXCOORD4XOESPROC TexCoord4xOES;
        /* 2379 */ PFNGLTEXCOORD4XVOESPROC TexCoord4xvOES;
        /* 2380 */ PFNGLTEXGENXOESPROC TexGenxOES;
        /* 2381 */ PFNGLTEXGENXVOESPROC TexGenxvOES;
        /* 2382 */ PFNGLVERTEX2XOESPROC Vertex2xOES;
        /* 2383 */ PFNGLVERTEX2XVOESPROC Vertex2xvOES;
        /* 2384 */ PFNGLVERTEX3XOESPROC Vertex3xOES;
        /* 2385 */ PFNGLVERTEX3XVOESPROC Vertex3xvOES;
        /* 2386 */ PFNGLVERTEX4XOESPROC Vertex4xOES;
        /* 2387 */ PFNGLVERTEX4XVOESPROC Vertex4xvOES;
        /* 2388 */ PFNGLQUERYMATRIXXOESPROC QueryMatrixxOES;
        /* 2389 */ PFNGLCLEARDEPTHFOESPROC ClearDepthfOES;
        /* 2390 */ PFNGLCLIPPLANEFOESPROC ClipPlanefOES;
        /* 2391 */ PFNGLDEPTHRANGEFOESPROC DepthRangefOES;
        /* 2392 */ PFNGLFRUSTUMFOESPROC FrustumfOES;
        /* 2393 */ PFNGLGETCLIPPLANEFOESPROC GetClipPlanefOES;
        /* 2394 */ PFNGLORTHOFOESPROC OrthofOES;
        /* 2395 */ PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC FramebufferTextureMultiviewOVR;
        /* 2396 */ PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC NamedFramebufferTextureMultiviewOVR;
        /* 2397 */ PFNGLHINTPGIPROC HintPGI;
        /* 2398 */ PFNGLDETAILTEXFUNCSGISPROC DetailTexFuncSGIS;
        /* 2399 */ PFNGLGETDETAILTEXFUNCSGISPROC GetDetailTexFuncSGIS;
        /* 2400 */ PFNGLFOGFUNCSGISPROC FogFuncSGIS;
        /* 2401 */ PFNGLGETFOGFUNCSGISPROC GetFogFuncSGIS;
        /* 2402 */ PFNGLSAMPLEMASKSGISPROC SampleMaskSGIS;
        /* 2403 */ PFNGLSAMPLEPATTERNSGISPROC SamplePatternSGIS;
        /* 2404 */ PFNGLPIXELTEXGENPARAMETERISGISPROC PixelTexGenParameteriSGIS;
        /* 2405 */ PFNGLPIXELTEXGENPARAMETERIVSGISPROC PixelTexGenParameterivSGIS;
        /* 2406 */ PFNGLPIXELTEXGENPARAMETERFSGISPROC PixelTexGenParameterfSGIS;
        /* 2407 */ PFNGLPIXELTEXGENPARAMETERFVSGISPROC PixelTexGenParameterfvSGIS;
        /* 2408 */ PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC GetPixelTexGenParameterivSGIS;
        /* 2409 */ PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC GetPixelTexGenParameterfvSGIS;
        /* 2410 */ PFNGLPOINTPARAMETERFSGISPROC PointParameterfSGIS;
        /* 2411 */ PFNGLPOINTPARAMETERFVSGISPROC PointParameterfvSGIS;
        /* 2412 */ PFNGLSHARPENTEXFUNCSGISPROC SharpenTexFuncSGIS;
        /* 2413 */ PFNGLGETSHARPENTEXFUNCSGISPROC GetSharpenTexFuncSGIS;
        /* 2414 */ PFNGLTEXIMAGE4DSGISPROC TexImage4DSGIS;
        /* 2415 */ PFNGLTEXSUBIMAGE4DSGISPROC TexSubImage4DSGIS;
        /* 2416 */ PFNGLTEXTURECOLORMASKSGISPROC TextureColorMaskSGIS;
        /* 2417 */ PFNGLGETTEXFILTERFUNCSGISPROC GetTexFilterFuncSGIS;
        /* 2418 */ PFNGLTEXFILTERFUNCSGISPROC TexFilterFuncSGIS;
        /* 2419 */ PFNGLASYNCMARKERSGIXPROC AsyncMarkerSGIX;
        /* 2420 */ PFNGLFINISHASYNCSGIXPROC FinishAsyncSGIX;
        /* 2421 */ PFNGLPOLLASYNCSGIXPROC PollAsyncSGIX;
        /* 2422 */ PFNGLGENASYNCMARKERSSGIXPROC GenAsyncMarkersSGIX;
        /* 2423 */ PFNGLDELETEASYNCMARKERSSGIXPROC DeleteAsyncMarkersSGIX;
        /* 2424 */ PFNGLISASYNCMARKERSGIXPROC IsAsyncMarkerSGIX;
        /* 2425 */ PFNGLFLUSHRASTERSGIXPROC FlushRasterSGIX;
        /* 2426 */ PFNGLFRAGMENTCOLORMATERIALSGIXPROC FragmentColorMaterialSGIX;
        /* 2427 */ PFNGLFRAGMENTLIGHTFSGIXPROC FragmentLightfSGIX;
        /* 2428 */ PFNGLFRAGMENTLIGHTFVSGIXPROC FragmentLightfvSGIX;
        /* 2429 */ PFNGLFRAGMENTLIGHTISGIXPROC FragmentLightiSGIX;
        /* 2430 */ PFNGLFRAGMENTLIGHTIVSGIXPROC FragmentLightivSGIX;
        /* 2431 */ PFNGLFRAGMENTLIGHTMODELFSGIXPROC FragmentLightModelfSGIX;
        /* 2432 */ PFNGLFRAGMENTLIGHTMODELFVSGIXPROC FragmentLightModelfvSGIX;
        /* 2433 */ PFNGLFRAGMENTLIGHTMODELISGIXPROC FragmentLightModeliSGIX;
        /* 2434 */ PFNGLFRAGMENTLIGHTMODELIVSGIXPROC FragmentLightModelivSGIX;
        /* 2435 */ PFNGLFRAGMENTMATERIALFSGIXPROC FragmentMaterialfSGIX;
        /* 2436 */ PFNGLFRAGMENTMATERIALFVSGIXPROC FragmentMaterialfvSGIX;
        /* 2437 */ PFNGLFRAGMENTMATERIALISGIXPROC FragmentMaterialiSGIX;
        /* 2438 */ PFNGLFRAGMENTMATERIALIVSGIXPROC FragmentMaterialivSGIX;
        /* 2439 */ PFNGLGETFRAGMENTLIGHTFVSGIXPROC GetFragmentLightfvSGIX;
        /* 2440 */ PFNGLGETFRAGMENTLIGHTIVSGIXPROC GetFragmentLightivSGIX;
        /* 2441 */ PFNGLGETFRAGMENTMATERIALFVSGIXPROC GetFragmentMaterialfvSGIX;
        /* 2442 */ PFNGLGETFRAGMENTMATERIALIVSGIXPROC GetFragmentMaterialivSGIX;
        /* 2443 */ PFNGLLIGHTENVISGIXPROC LightEnviSGIX;
        /* 2444 */ PFNGLFRAMEZOOMSGIXPROC FrameZoomSGIX;
        /* 2445 */ PFNGLIGLOOINTERFACESGIXPROC IglooInterfaceSGIX;
        /* 2446 */ PFNGLGETINSTRUMENTSSGIXPROC GetInstrumentsSGIX;
        /* 2447 */ PFNGLINSTRUMENTSBUFFERSGIXPROC InstrumentsBufferSGIX;
        /* 2448 */ PFNGLPOLLINSTRUMENTSSGIXPROC PollInstrumentsSGIX;
        /* 2449 */ PFNGLREADINSTRUMENTSSGIXPROC ReadInstrumentsSGIX;
        /* 2450 */ PFNGLSTARTINSTRUMENTSSGIXPROC StartInstrumentsSGIX;
        /* 2451 */ PFNGLSTOPINSTRUMENTSSGIXPROC StopInstrumentsSGIX;
        /* 2452 */ PFNGLGETLISTPARAMETERFVSGIXPROC GetListParameterfvSGIX;
        /* 2453 */ PFNGLGETLISTPARAMETERIVSGIXPROC GetListParameterivSGIX;
        /* 2454 */ PFNGLLISTPARAMETERFSGIXPROC ListParameterfSGIX;
        /* 2455 */ PFNGLLISTPARAMETERFVSGIXPROC ListParameterfvSGIX;
        /* 2456 */ PFNGLLISTPARAMETERISGIXPROC ListParameteriSGIX;
        /* 2457 */ PFNGLLISTPARAMETERIVSGIXPROC ListParameterivSGIX;
        /* 2458 */ PFNGLPIXELTEXGENSGIXPROC PixelTexGenSGIX;
        /* 2459 */ PFNGLDEFORMATIONMAP3DSGIXPROC DeformationMap3dSGIX;
        /* 2460 */ PFNGLDEFORMATIONMAP3FSGIXPROC DeformationMap3fSGIX;
        /* 2461 */ PFNGLDEFORMSGIXPROC DeformSGIX;
        /* 2462 */ PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC LoadIdentityDeformationMapSGIX;
        /* 2463 */ PFNGLREFERENCEPLANESGIXPROC ReferencePlaneSGIX;
        /* 2464 */ PFNGLSPRITEPARAMETERFSGIXPROC SpriteParameterfSGIX;
        /* 2465 */ PFNGLSPRITEPARAMETERFVSGIXPROC SpriteParameterfvSGIX;
        /* 2466 */ PFNGLSPRITEPARAMETERISGIXPROC SpriteParameteriSGIX;
        /* 2467 */ PFNGLSPRITEPARAMETERIVSGIXPROC SpriteParameterivSGIX;
        /* 2468 */ PFNGLTAGSAMPLEBUFFERSGIXPROC TagSampleBufferSGIX;
        /* 2469 */ PFNGLCOLORTABLESGIPROC ColorTableSGI;
        /* 2470 */ PFNGLCOLORTABLEPARAMETERFVSGIPROC ColorTableParameterfvSGI;
        /* 2471 */ PFNGLCOLORTABLEPARAMETERIVSGIPROC ColorTableParameterivSGI;
        /* 2472 */ PFNGLCOPYCOLORTABLESGIPROC CopyColorTableSGI;
        /* 2473 */ PFNGLGETCOLORTABLESGIPROC GetColorTableSGI;
        /* 2474 */ PFNGLGETCOLORTABLEPARAMETERFVSGIPROC GetColorTableParameterfvSGI;
        /* 2475 */ PFNGLGETCOLORTABLEPARAMETERIVSGIPROC GetColorTableParameterivSGI;
        /* 2476 */ PFNGLFINISHTEXTURESUNXPROC FinishTextureSUNX;
        /* 2477 */ PFNGLGLOBALALPHAFACTORBSUNPROC GlobalAlphaFactorbSUN;
        /* 2478 */ PFNGLGLOBALALPHAFACTORSSUNPROC GlobalAlphaFactorsSUN;
        /* 2479 */ PFNGLGLOBALALPHAFACTORISUNPROC GlobalAlphaFactoriSUN;
        /* 2480 */ PFNGLGLOBALALPHAFACTORFSUNPROC GlobalAlphaFactorfSUN;
        /* 2481 */ PFNGLGLOBALALPHAFACTORDSUNPROC GlobalAlphaFactordSUN;
        /* 2482 */ PFNGLGLOBALALPHAFACTORUBSUNPROC GlobalAlphaFactorubSUN;
        /* 2483 */ PFNGLGLOBALALPHAFACTORUSSUNPROC GlobalAlphaFactorusSUN;
        /* 2484 */ PFNGLGLOBALALPHAFACTORUISUNPROC GlobalAlphaFactoruiSUN;
        /* 2485 */ PFNGLDRAWMESHARRAYSSUNPROC DrawMeshArraysSUN;
        /* 2486 */ PFNGLREPLACEMENTCODEUISUNPROC ReplacementCodeuiSUN;
        /* 2487 */ PFNGLREPLACEMENTCODEUSSUNPROC ReplacementCodeusSUN;
        /* 2488 */ PFNGLREPLACEMENTCODEUBSUNPROC ReplacementCodeubSUN;
        /* 2489 */ PFNGLREPLACEMENTCODEUIVSUNPROC ReplacementCodeuivSUN;
        /* 2490 */ PFNGLREPLACEMENTCODEUSVSUNPROC ReplacementCodeusvSUN;
        /* 2491 */ PFNGLREPLACEMENTCODEUBVSUNPROC ReplacementCodeubvSUN;
        /* 2492 */ PFNGLREPLACEMENTCODEPOINTERSUNPROC ReplacementCodePointerSUN;
        /* 2493 */ PFNGLCOLOR4UBVERTEX2FSUNPROC Color4ubVertex2fSUN;
        /* 2494 */ PFNGLCOLOR4UBVERTEX2FVSUNPROC Color4ubVertex2fvSUN;
        /* 2495 */ PFNGLCOLOR4UBVERTEX3FSUNPROC Color4ubVertex3fSUN;
        /* 2496 */ PFNGLCOLOR4UBVERTEX3FVSUNPROC Color4ubVertex3fvSUN;
        /* 2497 */ PFNGLCOLOR3FVERTEX3FSUNPROC Color3fVertex3fSUN;
        /* 2498 */ PFNGLCOLOR3FVERTEX3FVSUNPROC Color3fVertex3fvSUN;
        /* 2499 */ PFNGLNORMAL3FVERTEX3FSUNPROC Normal3fVertex3fSUN;
        /* 2500 */ PFNGLNORMAL3FVERTEX3FVSUNPROC Normal3fVertex3fvSUN;
        /* 2501 */ PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC Color4fNormal3fVertex3fSUN;
        /* 2502 */ PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC Color4fNormal3fVertex3fvSUN;
        /* 2503 */ PFNGLTEXCOORD2FVERTEX3FSUNPROC TexCoord2fVertex3fSUN;
        /* 2504 */ PFNGLTEXCOORD2FVERTEX3FVSUNPROC TexCoord2fVertex3fvSUN;
        /* 2505 */ PFNGLTEXCOORD4FVERTEX4FSUNPROC TexCoord4fVertex4fSUN;
        /* 2506 */ PFNGLTEXCOORD4FVERTEX4FVSUNPROC TexCoord4fVertex4fvSUN;
        /* 2507 */ PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC TexCoord2fColor4ubVertex3fSUN;
        /* 2508 */ PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC TexCoord2fColor4ubVertex3fvSUN;
        /* 2509 */ PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC TexCoord2fColor3fVertex3fSUN;
        /* 2510 */ PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC TexCoord2fColor3fVertex3fvSUN;
        /* 2511 */ PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC TexCoord2fNormal3fVertex3fSUN;
        /* 2512 */ PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC TexCoord2fNormal3fVertex3fvSUN;
        /* 2513 */ PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC TexCoord2fColor4fNormal3fVertex3fSUN;
        /* 2514 */ PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC TexCoord2fColor4fNormal3fVertex3fvSUN;
        /* 2515 */ PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC TexCoord4fColor4fNormal3fVertex4fSUN;
        /* 2516 */ PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC TexCoord4fColor4fNormal3fVertex4fvSUN;
        /* 2517 */ PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC ReplacementCodeuiVertex3fSUN;
        /* 2518 */ PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC ReplacementCodeuiVertex3fvSUN;
        /* 2519 */ PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC ReplacementCodeuiColor4ubVertex3fSUN;
        /* 2520 */ PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC ReplacementCodeuiColor4ubVertex3fvSUN;
        /* 2521 */ PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC ReplacementCodeuiColor3fVertex3fSUN;
        /* 2522 */ PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC ReplacementCodeuiColor3fVertex3fvSUN;
        /* 2523 */ PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC ReplacementCodeuiNormal3fVertex3fSUN;
        /* 2524 */ PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC ReplacementCodeuiNormal3fVertex3fvSUN;
        /* 2525 */ PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC ReplacementCodeuiColor4fNormal3fVertex3fSUN;
        /* 2526 */ PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC ReplacementCodeuiColor4fNormal3fVertex3fvSUN;
        /* 2527 */ PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC ReplacementCodeuiTexCoord2fVertex3fSUN;
        /* 2528 */ PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC ReplacementCodeuiTexCoord2fVertex3fvSUN;
        /* 2529 */ PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
        /* 2530 */ PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
        /* 2531 */ PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
        /* 2532 */ PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
        /* 2533 */ PFNGLTEXIMAGE2DEXTERNALANGLEPROC TexImage2DExternalANGLE;
        /* 2534 */ PFNGLINVALIDATETEXTUREANGLEPROC InvalidateTextureANGLE;
        /* 2535 */ PFNGLTEXSTORAGEMEMFLAGS2DANGLEPROC TexStorageMemFlags2DANGLE;
        /* 2536 */ PFNGLTEXSTORAGEMEMFLAGS2DMULTISAMPLEANGLEPROC TexStorageMemFlags2DMultisampleANGLE;
        /* 2537 */ PFNGLTEXSTORAGEMEMFLAGS3DANGLEPROC TexStorageMemFlags3DANGLE;
        /* 2538 */ PFNGLTEXSTORAGEMEMFLAGS3DMULTISAMPLEANGLEPROC TexStorageMemFlags3DMultisampleANGLE;
        /* 2539 */ PFNGLIMPORTMEMORYZIRCONHANDLEANGLEPROC ImportMemoryZirconHandleANGLE;
        /* 2540 */ PFNGLIMPORTSEMAPHOREZIRCONHANDLEANGLEPROC ImportSemaphoreZirconHandleANGLE;
        /* 2541 */ PFNGLBLENDBARRIERPROC BlendBarrier;
        /* 2542 */ PFNGLPRIMITIVEBOUNDINGBOXPROC PrimitiveBoundingBox;
        /* 2543 */ PFNGLBLITFRAMEBUFFERANGLEPROC BlitFramebufferANGLE;
        /* 2544 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC RenderbufferStorageMultisampleANGLE;
        /* 2545 */ PFNGLDRAWARRAYSINSTANCEDANGLEPROC DrawArraysInstancedANGLE;
        /* 2546 */ PFNGLDRAWELEMENTSINSTANCEDANGLEPROC DrawElementsInstancedANGLE;
        /* 2547 */ PFNGLVERTEXATTRIBDIVISORANGLEPROC VertexAttribDivisorANGLE;
        /* 2548 */ PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC GetTranslatedShaderSourceANGLE;
        /* 2549 */ PFNGLCOPYTEXTURELEVELSAPPLEPROC CopyTextureLevelsAPPLE;
        /* 2550 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC RenderbufferStorageMultisampleAPPLE;
        /* 2551 */ PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC ResolveMultisampleFramebufferAPPLE;
        /* 2552 */ PFNGLFENCESYNCAPPLEPROC FenceSyncAPPLE;
        /* 2553 */ PFNGLISSYNCAPPLEPROC IsSyncAPPLE;
        /* 2554 */ PFNGLDELETESYNCAPPLEPROC DeleteSyncAPPLE;
        /* 2555 */ PFNGLCLIENTWAITSYNCAPPLEPROC ClientWaitSyncAPPLE;
        /* 2556 */ PFNGLWAITSYNCAPPLEPROC WaitSyncAPPLE;
        /* 2557 */ PFNGLGETINTEGER64VAPPLEPROC GetInteger64vAPPLE;
        /* 2558 */ PFNGLGETSYNCIVAPPLEPROC GetSyncivAPPLE;
        /* 2559 */ PFNGLMAXACTIVESHADERCORESARMPROC MaxActiveShaderCoresARM;
        /* 2560 */ PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC DrawArraysInstancedBaseInstanceEXT;
        /* 2561 */ PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC DrawElementsInstancedBaseInstanceEXT;
        /* 2562 */ PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC DrawElementsInstancedBaseVertexBaseInstanceEXT;
        /* 2563 */ PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC BindFragDataLocationIndexedEXT;
        /* 2564 */ PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC GetProgramResourceLocationIndexEXT;
        /* 2565 */ PFNGLGETFRAGDATAINDEXEXTPROC GetFragDataIndexEXT;
        /* 2566 */ PFNGLBUFFERSTORAGEEXTPROC BufferStorageEXT;
        /* 2567 */ PFNGLCLEARTEXIMAGEEXTPROC ClearTexImageEXT;
        /* 2568 */ PFNGLCLEARTEXSUBIMAGEEXTPROC ClearTexSubImageEXT;
        /* 2569 */ PFNGLCLIPCONTROLEXTPROC ClipControlEXT;
        /* 2570 */ PFNGLCOPYIMAGESUBDATAEXTPROC CopyImageSubDataEXT;
        /* 2571 */ PFNGLDISCARDFRAMEBUFFEREXTPROC DiscardFramebufferEXT;
        /* 2572 */ PFNGLGENQUERIESEXTPROC GenQueriesEXT;
        /* 2573 */ PFNGLDELETEQUERIESEXTPROC DeleteQueriesEXT;
        /* 2574 */ PFNGLISQUERYEXTPROC IsQueryEXT;
        /* 2575 */ PFNGLBEGINQUERYEXTPROC BeginQueryEXT;
        /* 2576 */ PFNGLENDQUERYEXTPROC EndQueryEXT;
        /* 2577 */ PFNGLQUERYCOUNTEREXTPROC QueryCounterEXT;
        /* 2578 */ PFNGLGETQUERYIVEXTPROC GetQueryivEXT;
        /* 2579 */ PFNGLGETQUERYOBJECTIVEXTPROC GetQueryObjectivEXT;
        /* 2580 */ PFNGLGETQUERYOBJECTUIVEXTPROC GetQueryObjectuivEXT;
        /* 2581 */ PFNGLGETINTEGER64VEXTPROC GetInteger64vEXT;
        /* 2582 */ PFNGLDRAWBUFFERSEXTPROC DrawBuffersEXT;
        /* 2583 */ PFNGLENABLEIEXTPROC EnableiEXT;
        /* 2584 */ PFNGLDISABLEIEXTPROC DisableiEXT;
        /* 2585 */ PFNGLBLENDEQUATIONIEXTPROC BlendEquationiEXT;
        /* 2586 */ PFNGLBLENDEQUATIONSEPARATEIEXTPROC BlendEquationSeparateiEXT;
        /* 2587 */ PFNGLBLENDFUNCIEXTPROC BlendFunciEXT;
        /* 2588 */ PFNGLBLENDFUNCSEPARATEIEXTPROC BlendFuncSeparateiEXT;
        /* 2589 */ PFNGLCOLORMASKIEXTPROC ColorMaskiEXT;
        /* 2590 */ PFNGLISENABLEDIEXTPROC IsEnablediEXT;
        /* 2591 */ PFNGLDRAWELEMENTSBASEVERTEXEXTPROC DrawElementsBaseVertexEXT;
        /* 2592 */ PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC DrawRangeElementsBaseVertexEXT;
        /* 2593 */ PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC DrawElementsInstancedBaseVertexEXT;
        /* 2594 */ PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC MultiDrawElementsBaseVertexEXT;
        /* 2595 */ PFNGLDRAWTRANSFORMFEEDBACKEXTPROC DrawTransformFeedbackEXT;
        /* 2596 */ PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC DrawTransformFeedbackInstancedEXT;
        /* 2597 */ PFNGLGETFRAGMENTSHADINGRATESEXTPROC GetFragmentShadingRatesEXT;
        /* 2598 */ PFNGLSHADINGRATEEXTPROC ShadingRateEXT;
        /* 2599 */ PFNGLSHADINGRATECOMBINEROPSEXTPROC ShadingRateCombinerOpsEXT;
        /* 2600 */ PFNGLFRAMEBUFFERSHADINGRATEEXTPROC FramebufferShadingRateEXT;
        /* 2601 */ PFNGLVERTEXATTRIBDIVISOREXTPROC VertexAttribDivisorEXT;
        /* 2602 */ PFNGLMAPBUFFERRANGEEXTPROC MapBufferRangeEXT;
        /* 2603 */ PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC FlushMappedBufferRangeEXT;
        /* 2604 */ PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC MultiDrawArraysIndirectEXT;
        /* 2605 */ PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC MultiDrawElementsIndirectEXT;
        /* 2606 */ PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC FramebufferTexture2DMultisampleEXT;
        /* 2607 */ PFNGLREADBUFFERINDEXEDEXTPROC ReadBufferIndexedEXT;
        /* 2608 */ PFNGLDRAWBUFFERSINDEXEDEXTPROC DrawBuffersIndexedEXT;
        /* 2609 */ PFNGLGETINTEGERI_VEXTPROC GetIntegeri_vEXT;
        /* 2610 */ PFNGLPRIMITIVEBOUNDINGBOXEXTPROC PrimitiveBoundingBoxEXT;
        /* 2611 */ PFNGLGETGRAPHICSRESETSTATUSEXTPROC GetGraphicsResetStatusEXT;
        /* 2612 */ PFNGLREADNPIXELSEXTPROC ReadnPixelsEXT;
        /* 2613 */ PFNGLGETNUNIFORMFVEXTPROC GetnUniformfvEXT;
        /* 2614 */ PFNGLGETNUNIFORMIVEXTPROC GetnUniformivEXT;
        /* 2615 */ PFNGLACTIVESHADERPROGRAMEXTPROC ActiveShaderProgramEXT;
        /* 2616 */ PFNGLBINDPROGRAMPIPELINEEXTPROC BindProgramPipelineEXT;
        /* 2617 */ PFNGLCREATESHADERPROGRAMVEXTPROC CreateShaderProgramvEXT;
        /* 2618 */ PFNGLDELETEPROGRAMPIPELINESEXTPROC DeleteProgramPipelinesEXT;
        /* 2619 */ PFNGLGENPROGRAMPIPELINESEXTPROC GenProgramPipelinesEXT;
        /* 2620 */ PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC GetProgramPipelineInfoLogEXT;
        /* 2621 */ PFNGLGETPROGRAMPIPELINEIVEXTPROC GetProgramPipelineivEXT;
        /* 2622 */ PFNGLISPROGRAMPIPELINEEXTPROC IsProgramPipelineEXT;
        /* 2623 */ PFNGLUSEPROGRAMSTAGESEXTPROC UseProgramStagesEXT;
        /* 2624 */ PFNGLVALIDATEPROGRAMPIPELINEEXTPROC ValidateProgramPipelineEXT;
        /* 2625 */ PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC FramebufferPixelLocalStorageSizeEXT;
        /* 2626 */ PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC GetFramebufferPixelLocalStorageSizeEXT;
        /* 2627 */ PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC ClearPixelLocalStorageuiEXT;
        /* 2628 */ PFNGLTEXPAGECOMMITMENTEXTPROC TexPageCommitmentEXT;
        /* 2629 */ PFNGLPATCHPARAMETERIEXTPROC PatchParameteriEXT;
        /* 2630 */ PFNGLSAMPLERPARAMETERIIVEXTPROC SamplerParameterIivEXT;
        /* 2631 */ PFNGLSAMPLERPARAMETERIUIVEXTPROC SamplerParameterIuivEXT;
        /* 2632 */ PFNGLGETSAMPLERPARAMETERIIVEXTPROC GetSamplerParameterIivEXT;
        /* 2633 */ PFNGLGETSAMPLERPARAMETERIUIVEXTPROC GetSamplerParameterIuivEXT;
        /* 2634 */ PFNGLTEXBUFFERRANGEEXTPROC TexBufferRangeEXT;
        /* 2635 */ PFNGLTEXSTORAGEATTRIBS2DEXTPROC TexStorageAttribs2DEXT;
        /* 2636 */ PFNGLTEXSTORAGEATTRIBS3DEXTPROC TexStorageAttribs3DEXT;
        /* 2637 */ PFNGLTEXTUREVIEWEXTPROC TextureViewEXT;
        /* 2638 */ PFNGLGETTEXTUREHANDLEIMGPROC GetTextureHandleIMG;
        /* 2639 */ PFNGLGETTEXTURESAMPLERHANDLEIMGPROC GetTextureSamplerHandleIMG;
        /* 2640 */ PFNGLUNIFORMHANDLEUI64IMGPROC UniformHandleui64IMG;
        /* 2641 */ PFNGLUNIFORMHANDLEUI64VIMGPROC UniformHandleui64vIMG;
        /* 2642 */ PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC ProgramUniformHandleui64IMG;
        /* 2643 */ PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC ProgramUniformHandleui64vIMG;
        /* 2644 */ PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC FramebufferTexture2DDownsampleIMG;
        /* 2645 */ PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC FramebufferTextureLayerDownsampleIMG;
        /* 2646 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC RenderbufferStorageMultisampleIMG;
        /* 2647 */ PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC FramebufferTexture2DMultisampleIMG;
        /* 2648 */ PFNGLDEBUGMESSAGECONTROLKHRPROC DebugMessageControlKHR;
        /* 2649 */ PFNGLDEBUGMESSAGEINSERTKHRPROC DebugMessageInsertKHR;
        /* 2650 */ PFNGLDEBUGMESSAGECALLBACKKHRPROC DebugMessageCallbackKHR;
        /* 2651 */ PFNGLGETDEBUGMESSAGELOGKHRPROC GetDebugMessageLogKHR;
        /* 2652 */ PFNGLPUSHDEBUGGROUPKHRPROC PushDebugGroupKHR;
        /* 2653 */ PFNGLPOPDEBUGGROUPKHRPROC PopDebugGroupKHR;
        /* 2654 */ PFNGLOBJECTLABELKHRPROC ObjectLabelKHR;
        /* 2655 */ PFNGLGETOBJECTLABELKHRPROC GetObjectLabelKHR;
        /* 2656 */ PFNGLOBJECTPTRLABELKHRPROC ObjectPtrLabelKHR;
        /* 2657 */ PFNGLGETOBJECTPTRLABELKHRPROC GetObjectPtrLabelKHR;
        /* 2658 */ PFNGLGETPOINTERVKHRPROC GetPointervKHR;
        /* 2659 */ PFNGLGETGRAPHICSRESETSTATUSKHRPROC GetGraphicsResetStatusKHR;
        /* 2660 */ PFNGLREADNPIXELSKHRPROC ReadnPixelsKHR;
        /* 2661 */ PFNGLGETNUNIFORMFVKHRPROC GetnUniformfvKHR;
        /* 2662 */ PFNGLGETNUNIFORMIVKHRPROC GetnUniformivKHR;
        /* 2663 */ PFNGLGETNUNIFORMUIVKHRPROC GetnUniformuivKHR;
        /* 2664 */ PFNGLCOPYBUFFERSUBDATANVPROC CopyBufferSubDataNV;
        /* 2665 */ PFNGLCOVERAGEMASKNVPROC CoverageMaskNV;
        /* 2666 */ PFNGLCOVERAGEOPERATIONNVPROC CoverageOperationNV;
        /* 2667 */ PFNGLDRAWBUFFERSNVPROC DrawBuffersNV;
        /* 2668 */ PFNGLDRAWARRAYSINSTANCEDNVPROC DrawArraysInstancedNV;
        /* 2669 */ PFNGLDRAWELEMENTSINSTANCEDNVPROC DrawElementsInstancedNV;
        /* 2670 */ PFNGLBLITFRAMEBUFFERNVPROC BlitFramebufferNV;
        /* 2671 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC RenderbufferStorageMultisampleNV;
        /* 2672 */ PFNGLVERTEXATTRIBDIVISORNVPROC VertexAttribDivisorNV;
        /* 2673 */ PFNGLUNIFORMMATRIX2X3FVNVPROC UniformMatrix2x3fvNV;
        /* 2674 */ PFNGLUNIFORMMATRIX3X2FVNVPROC UniformMatrix3x2fvNV;
        /* 2675 */ PFNGLUNIFORMMATRIX2X4FVNVPROC UniformMatrix2x4fvNV;
        /* 2676 */ PFNGLUNIFORMMATRIX4X2FVNVPROC UniformMatrix4x2fvNV;
        /* 2677 */ PFNGLUNIFORMMATRIX3X4FVNVPROC UniformMatrix3x4fvNV;
        /* 2678 */ PFNGLUNIFORMMATRIX4X3FVNVPROC UniformMatrix4x3fvNV;
        /* 2679 */ PFNGLPOLYGONMODENVPROC PolygonModeNV;
        /* 2680 */ PFNGLREADBUFFERNVPROC ReadBufferNV;
        /* 2681 */ PFNGLVIEWPORTARRAYVNVPROC ViewportArrayvNV;
        /* 2682 */ PFNGLVIEWPORTINDEXEDFNVPROC ViewportIndexedfNV;
        /* 2683 */ PFNGLVIEWPORTINDEXEDFVNVPROC ViewportIndexedfvNV;
        /* 2684 */ PFNGLSCISSORARRAYVNVPROC ScissorArrayvNV;
        /* 2685 */ PFNGLSCISSORINDEXEDNVPROC ScissorIndexedNV;
        /* 2686 */ PFNGLSCISSORINDEXEDVNVPROC ScissorIndexedvNV;
        /* 2687 */ PFNGLDEPTHRANGEARRAYFVNVPROC DepthRangeArrayfvNV;
        /* 2688 */ PFNGLDEPTHRANGEINDEXEDFNVPROC DepthRangeIndexedfNV;
        /* 2689 */ PFNGLGETFLOATI_VNVPROC GetFloati_vNV;
        /* 2690 */ PFNGLENABLEINVPROC EnableiNV;
        /* 2691 */ PFNGLDISABLEINVPROC DisableiNV;
        /* 2692 */ PFNGLISENABLEDINVPROC IsEnablediNV;
        /* 2693 */ PFNGLEGLIMAGETARGETTEXTURE2DOESPROC EGLImageTargetTexture2DOES;
        /* 2694 */ PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC EGLImageTargetRenderbufferStorageOES;
        /* 2695 */ PFNGLCOPYIMAGESUBDATAOESPROC CopyImageSubDataOES;
        /* 2696 */ PFNGLENABLEIOESPROC EnableiOES;
        /* 2697 */ PFNGLDISABLEIOESPROC DisableiOES;
        /* 2698 */ PFNGLBLENDEQUATIONIOESPROC BlendEquationiOES;
        /* 2699 */ PFNGLBLENDEQUATIONSEPARATEIOESPROC BlendEquationSeparateiOES;
        /* 2700 */ PFNGLBLENDFUNCIOESPROC BlendFunciOES;
        /* 2701 */ PFNGLBLENDFUNCSEPARATEIOESPROC BlendFuncSeparateiOES;
        /* 2702 */ PFNGLCOLORMASKIOESPROC ColorMaskiOES;
        /* 2703 */ PFNGLISENABLEDIOESPROC IsEnablediOES;
        /* 2704 */ PFNGLDRAWELEMENTSBASEVERTEXOESPROC DrawElementsBaseVertexOES;
        /* 2705 */ PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC DrawRangeElementsBaseVertexOES;
        /* 2706 */ PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC DrawElementsInstancedBaseVertexOES;
        /* 2707 */ PFNGLFRAMEBUFFERTEXTUREOESPROC FramebufferTextureOES;
        /* 2708 */ PFNGLGETPROGRAMBINARYOESPROC GetProgramBinaryOES;
        /* 2709 */ PFNGLPROGRAMBINARYOESPROC ProgramBinaryOES;
        /* 2710 */ PFNGLMAPBUFFEROESPROC MapBufferOES;
        /* 2711 */ PFNGLUNMAPBUFFEROESPROC UnmapBufferOES;
        /* 2712 */ PFNGLGETBUFFERPOINTERVOESPROC GetBufferPointervOES;
        /* 2713 */ PFNGLPRIMITIVEBOUNDINGBOXOESPROC PrimitiveBoundingBoxOES;
        /* 2714 */ PFNGLMINSAMPLESHADINGOESPROC MinSampleShadingOES;
        /* 2715 */ PFNGLPATCHPARAMETERIOESPROC PatchParameteriOES;
        /* 2716 */ PFNGLTEXIMAGE3DOESPROC TexImage3DOES;
        /* 2717 */ PFNGLTEXSUBIMAGE3DOESPROC TexSubImage3DOES;
        /* 2718 */ PFNGLCOPYTEXSUBIMAGE3DOESPROC CopyTexSubImage3DOES;
        /* 2719 */ PFNGLCOMPRESSEDTEXIMAGE3DOESPROC CompressedTexImage3DOES;
        /* 2720 */ PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC CompressedTexSubImage3DOES;
        /* 2721 */ PFNGLFRAMEBUFFERTEXTURE3DOESPROC FramebufferTexture3DOES;
        /* 2722 */ PFNGLTEXPARAMETERIIVOESPROC TexParameterIivOES;
        /* 2723 */ PFNGLTEXPARAMETERIUIVOESPROC TexParameterIuivOES;
        /* 2724 */ PFNGLGETTEXPARAMETERIIVOESPROC GetTexParameterIivOES;
        /* 2725 */ PFNGLGETTEXPARAMETERIUIVOESPROC GetTexParameterIuivOES;
        /* 2726 */ PFNGLSAMPLERPARAMETERIIVOESPROC SamplerParameterIivOES;
        /* 2727 */ PFNGLSAMPLERPARAMETERIUIVOESPROC SamplerParameterIuivOES;
        /* 2728 */ PFNGLGETSAMPLERPARAMETERIIVOESPROC GetSamplerParameterIivOES;
        /* 2729 */ PFNGLGETSAMPLERPARAMETERIUIVOESPROC GetSamplerParameterIuivOES;
        /* 2730 */ PFNGLTEXBUFFEROESPROC TexBufferOES;
        /* 2731 */ PFNGLTEXBUFFERRANGEOESPROC TexBufferRangeOES;
        /* 2732 */ PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC TexStorage3DMultisampleOES;
        /* 2733 */ PFNGLTEXTUREVIEWOESPROC TextureViewOES;
        /* 2734 */ PFNGLBINDVERTEXARRAYOESPROC BindVertexArrayOES;
        /* 2735 */ PFNGLDELETEVERTEXARRAYSOESPROC DeleteVertexArraysOES;
        /* 2736 */ PFNGLGENVERTEXARRAYSOESPROC GenVertexArraysOES;
        /* 2737 */ PFNGLISVERTEXARRAYOESPROC IsVertexArrayOES;
        /* 2738 */ PFNGLVIEWPORTARRAYVOESPROC ViewportArrayvOES;
        /* 2739 */ PFNGLVIEWPORTINDEXEDFOESPROC ViewportIndexedfOES;
        /* 2740 */ PFNGLVIEWPORTINDEXEDFVOESPROC ViewportIndexedfvOES;
        /* 2741 */ PFNGLSCISSORARRAYVOESPROC ScissorArrayvOES;
        /* 2742 */ PFNGLSCISSORINDEXEDOESPROC ScissorIndexedOES;
        /* 2743 */ PFNGLSCISSORINDEXEDVOESPROC ScissorIndexedvOES;
        /* 2744 */ PFNGLDEPTHRANGEARRAYFVOESPROC DepthRangeArrayfvOES;
        /* 2745 */ PFNGLDEPTHRANGEINDEXEDFOESPROC DepthRangeIndexedfOES;
        /* 2746 */ PFNGLGETFLOATI_VOESPROC GetFloati_vOES;
        /* 2747 */ PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC FramebufferTextureMultisampleMultiviewOVR;
        /* 2748 */ PFNGLALPHAFUNCQCOMPROC AlphaFuncQCOM;
        /* 2749 */ PFNGLGETDRIVERCONTROLSQCOMPROC GetDriverControlsQCOM;
        /* 2750 */ PFNGLGETDRIVERCONTROLSTRINGQCOMPROC GetDriverControlStringQCOM;
        /* 2751 */ PFNGLENABLEDRIVERCONTROLQCOMPROC EnableDriverControlQCOM;
        /* 2752 */ PFNGLDISABLEDRIVERCONTROLQCOMPROC DisableDriverControlQCOM;
        /* 2753 */ PFNGLEXTGETTEXTURESQCOMPROC ExtGetTexturesQCOM;
        /* 2754 */ PFNGLEXTGETBUFFERSQCOMPROC ExtGetBuffersQCOM;
        /* 2755 */ PFNGLEXTGETRENDERBUFFERSQCOMPROC ExtGetRenderbuffersQCOM;
        /* 2756 */ PFNGLEXTGETFRAMEBUFFERSQCOMPROC ExtGetFramebuffersQCOM;
        /* 2757 */ PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC ExtGetTexLevelParameterivQCOM;
        /* 2758 */ PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC ExtTexObjectStateOverrideiQCOM;
        /* 2759 */ PFNGLEXTGETTEXSUBIMAGEQCOMPROC ExtGetTexSubImageQCOM;
        /* 2760 */ PFNGLEXTGETBUFFERPOINTERVQCOMPROC ExtGetBufferPointervQCOM;
        /* 2761 */ PFNGLEXTGETSHADERSQCOMPROC ExtGetShadersQCOM;
        /* 2762 */ PFNGLEXTGETPROGRAMSQCOMPROC ExtGetProgramsQCOM;
        /* 2763 */ PFNGLEXTISPROGRAMBINARYQCOMPROC ExtIsProgramBinaryQCOM;
        /* 2764 */ PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC ExtGetProgramBinarySourceQCOM;
        /* 2765 */ PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC FramebufferFoveationConfigQCOM;
        /* 2766 */ PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC FramebufferFoveationParametersQCOM;
        /* 2767 */ PFNGLTEXESTIMATEMOTIONQCOMPROC TexEstimateMotionQCOM;
        /* 2768 */ PFNGLTEXESTIMATEMOTIONREGIONSQCOMPROC TexEstimateMotionRegionsQCOM;
        /* 2769 */ PFNGLEXTRAPOLATETEX2DQCOMPROC ExtrapolateTex2DQCOM;
        /* 2770 */ PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC TextureFoveationParametersQCOM;
        /* 2771 */ PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC FramebufferFetchBarrierQCOM;
        /* 2772 */ PFNGLSHADINGRATEQCOMPROC ShadingRateQCOM;
        /* 2773 */ PFNGLSTARTTILINGQCOMPROC StartTilingQCOM;
        /* 2774 */ PFNGLENDTILINGQCOMPROC EndTilingQCOM;
        /* 2775 */ PFNGLBINDUNIFORMLOCATIONCHROMIUMPROC BindUniformLocationCHROMIUM;
        /* 2776 */ PFNGLCOVERAGEMODULATIONCHROMIUMPROC CoverageModulationCHROMIUM;
        /* 2777 */ PFNGLCOPYTEXTURECHROMIUMPROC CopyTextureCHROMIUM;
        /* 2778 */ PFNGLCOPYSUBTEXTURECHROMIUMPROC CopySubTextureCHROMIUM;
        /* 2779 */ PFNGLCOMPRESSEDCOPYTEXTURECHROMIUMPROC CompressedCopyTextureCHROMIUM;
        /* 2780 */ PFNGLREQUESTEXTENSIONANGLEPROC RequestExtensionANGLE;
        /* 2781 */ PFNGLDISABLEEXTENSIONANGLEPROC DisableExtensionANGLE;
        /* 2782 */ PFNGLACQUIRETEXTURESANGLEPROC AcquireTexturesANGLE;
        /* 2783 */ PFNGLRELEASETEXTURESANGLEPROC ReleaseTexturesANGLE;
        /* 2784 */ PFNGLGETBOOLEANVROBUSTANGLEPROC GetBooleanvRobustANGLE;
        /* 2785 */ PFNGLGETBUFFERPARAMETERIVROBUSTANGLEPROC GetBufferParameterivRobustANGLE;
        /* 2786 */ PFNGLGETBUFFERPARAMETERI64VROBUSTANGLEPROC GetBufferParameteri64vRobustANGLE;
        /* 2787 */ PFNGLGETFLOATVROBUSTANGLEPROC GetFloatvRobustANGLE;
        /* 2788 */ PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVROBUSTANGLEPROC GetFramebufferAttachmentParameterivRobustANGLE;
        /* 2789 */ PFNGLGETINTEGERVROBUSTANGLEPROC GetIntegervRobustANGLE;
        /* 2790 */ PFNGLGETPROGRAMIVROBUSTANGLEPROC GetProgramivRobustANGLE;
        /* 2791 */ PFNGLGETRENDERBUFFERPARAMETERIVROBUSTANGLEPROC GetRenderbufferParameterivRobustANGLE;
        /* 2792 */ PFNGLGETSHADERIVROBUSTANGLEPROC GetShaderivRobustANGLE;
        /* 2793 */ PFNGLGETTEXPARAMETERFVROBUSTANGLEPROC GetTexParameterfvRobustANGLE;
        /* 2794 */ PFNGLGETTEXPARAMETERIVROBUSTANGLEPROC GetTexParameterivRobustANGLE;
        /* 2795 */ PFNGLGETUNIFORMFVROBUSTANGLEPROC GetUniformfvRobustANGLE;
        /* 2796 */ PFNGLGETUNIFORMIVROBUSTANGLEPROC GetUniformivRobustANGLE;
        /* 2797 */ PFNGLGETVERTEXATTRIBFVROBUSTANGLEPROC GetVertexAttribfvRobustANGLE;
        /* 2798 */ PFNGLGETVERTEXATTRIBIVROBUSTANGLEPROC GetVertexAttribivRobustANGLE;
        /* 2799 */ PFNGLGETVERTEXATTRIBPOINTERVROBUSTANGLEPROC GetVertexAttribPointervRobustANGLE;
        /* 2800 */ PFNGLREADPIXELSROBUSTANGLEPROC ReadPixelsRobustANGLE;
        /* 2801 */ PFNGLTEXIMAGE2DROBUSTANGLEPROC TexImage2DRobustANGLE;
        /* 2802 */ PFNGLTEXPARAMETERFVROBUSTANGLEPROC TexParameterfvRobustANGLE;
        /* 2803 */ PFNGLTEXPARAMETERIVROBUSTANGLEPROC TexParameterivRobustANGLE;
        /* 2804 */ PFNGLTEXSUBIMAGE2DROBUSTANGLEPROC TexSubImage2DRobustANGLE;
        /* 2805 */ PFNGLTEXIMAGE3DROBUSTANGLEPROC TexImage3DRobustANGLE;
        /* 2806 */ PFNGLTEXSUBIMAGE3DROBUSTANGLEPROC TexSubImage3DRobustANGLE;
        /* 2807 */ PFNGLCOMPRESSEDTEXIMAGE2DROBUSTANGLEPROC CompressedTexImage2DRobustANGLE;
        /* 2808 */ PFNGLCOMPRESSEDTEXSUBIMAGE2DROBUSTANGLEPROC CompressedTexSubImage2DRobustANGLE;
        /* 2809 */ PFNGLCOMPRESSEDTEXIMAGE3DROBUSTANGLEPROC CompressedTexImage3DRobustANGLE;
        /* 2810 */ PFNGLCOMPRESSEDTEXSUBIMAGE3DROBUSTANGLEPROC CompressedTexSubImage3DRobustANGLE;
        /* 2811 */ PFNGLGETQUERYIVROBUSTANGLEPROC GetQueryivRobustANGLE;
        /* 2812 */ PFNGLGETQUERYOBJECTUIVROBUSTANGLEPROC GetQueryObjectuivRobustANGLE;
        /* 2813 */ PFNGLGETBUFFERPOINTERVROBUSTANGLEPROC GetBufferPointervRobustANGLE;
        /* 2814 */ PFNGLGETINTEGERI_VROBUSTANGLEPROC GetIntegeri_vRobustANGLE;
        /* 2815 */ PFNGLGETINTERNALFORMATIVROBUSTANGLEPROC GetInternalformativRobustANGLE;
        /* 2816 */ PFNGLGETVERTEXATTRIBIIVROBUSTANGLEPROC GetVertexAttribIivRobustANGLE;
        /* 2817 */ PFNGLGETVERTEXATTRIBIUIVROBUSTANGLEPROC GetVertexAttribIuivRobustANGLE;
        /* 2818 */ PFNGLGETUNIFORMUIVROBUSTANGLEPROC GetUniformuivRobustANGLE;
        /* 2819 */ PFNGLGETACTIVEUNIFORMBLOCKIVROBUSTANGLEPROC GetActiveUniformBlockivRobustANGLE;
        /* 2820 */ PFNGLGETINTEGER64VROBUSTANGLEPROC GetInteger64vRobustANGLE;
        /* 2821 */ PFNGLGETINTEGER64I_VROBUSTANGLEPROC GetInteger64i_vRobustANGLE;
        /* 2822 */ PFNGLSAMPLERPARAMETERIVROBUSTANGLEPROC SamplerParameterivRobustANGLE;
        /* 2823 */ PFNGLSAMPLERPARAMETERFVROBUSTANGLEPROC SamplerParameterfvRobustANGLE;
        /* 2824 */ PFNGLGETSAMPLERPARAMETERIVROBUSTANGLEPROC GetSamplerParameterivRobustANGLE;
        /* 2825 */ PFNGLGETSAMPLERPARAMETERFVROBUSTANGLEPROC GetSamplerParameterfvRobustANGLE;
        /* 2826 */ PFNGLGETFRAMEBUFFERPARAMETERIVROBUSTANGLEPROC GetFramebufferParameterivRobustANGLE;
        /* 2827 */ PFNGLGETPROGRAMINTERFACEIVROBUSTANGLEPROC GetProgramInterfaceivRobustANGLE;
        /* 2828 */ PFNGLGETBOOLEANI_VROBUSTANGLEPROC GetBooleani_vRobustANGLE;
        /* 2829 */ PFNGLGETMULTISAMPLEFVROBUSTANGLEPROC GetMultisamplefvRobustANGLE;
        /* 2830 */ PFNGLGETTEXLEVELPARAMETERIVROBUSTANGLEPROC GetTexLevelParameterivRobustANGLE;
        /* 2831 */ PFNGLGETTEXLEVELPARAMETERFVROBUSTANGLEPROC GetTexLevelParameterfvRobustANGLE;
        /* 2832 */ PFNGLGETPOINTERVROBUSTANGLEROBUSTANGLEPROC GetPointervRobustANGLERobustANGLE;
        /* 2833 */ PFNGLREADNPIXELSROBUSTANGLEPROC ReadnPixelsRobustANGLE;
        /* 2834 */ PFNGLGETNUNIFORMFVROBUSTANGLEPROC GetnUniformfvRobustANGLE;
        /* 2835 */ PFNGLGETNUNIFORMIVROBUSTANGLEPROC GetnUniformivRobustANGLE;
        /* 2836 */ PFNGLGETNUNIFORMUIVROBUSTANGLEPROC GetnUniformuivRobustANGLE;
        /* 2837 */ PFNGLTEXPARAMETERIIVROBUSTANGLEPROC TexParameterIivRobustANGLE;
        /* 2838 */ PFNGLTEXPARAMETERIUIVROBUSTANGLEPROC TexParameterIuivRobustANGLE;
        /* 2839 */ PFNGLGETTEXPARAMETERIIVROBUSTANGLEPROC GetTexParameterIivRobustANGLE;
        /* 2840 */ PFNGLGETTEXPARAMETERIUIVROBUSTANGLEPROC GetTexParameterIuivRobustANGLE;
        /* 2841 */ PFNGLSAMPLERPARAMETERIIVROBUSTANGLEPROC SamplerParameterIivRobustANGLE;
        /* 2842 */ PFNGLSAMPLERPARAMETERIUIVROBUSTANGLEPROC SamplerParameterIuivRobustANGLE;
        /* 2843 */ PFNGLGETSAMPLERPARAMETERIIVROBUSTANGLEPROC GetSamplerParameterIivRobustANGLE;
        /* 2844 */ PFNGLGETSAMPLERPARAMETERIUIVROBUSTANGLEPROC GetSamplerParameterIuivRobustANGLE;
        /* 2845 */ PFNGLGETQUERYOBJECTIVROBUSTANGLEPROC GetQueryObjectivRobustANGLE;
        /* 2846 */ PFNGLGETQUERYOBJECTI64VROBUSTANGLEPROC GetQueryObjecti64vRobustANGLE;
        /* 2847 */ PFNGLGETQUERYOBJECTUI64VROBUSTANGLEPROC GetQueryObjectui64vRobustANGLE;
        /* 2848 */ PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGEPARAMETERFVROBUSTANGLEPROC GetFramebufferPixelLocalStorageParameterfvRobustANGLE;
        /* 2849 */ PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGEPARAMETERIVROBUSTANGLEPROC GetFramebufferPixelLocalStorageParameterivRobustANGLE;
        /* 2850 */ PFNGLCOPYTEXTURE3DANGLEPROC CopyTexture3DANGLE;
        /* 2851 */ PFNGLCOPYSUBTEXTURE3DANGLEPROC CopySubTexture3DANGLE;
        /* 2852 */ PFNGLTEXSTORAGE2DMULTISAMPLEANGLEPROC TexStorage2DMultisampleANGLE;
        /* 2853 */ PFNGLGETMULTISAMPLEFVANGLEPROC GetMultisamplefvANGLE;
        /* 2854 */ PFNGLSAMPLEMASKIANGLEPROC SampleMaskiANGLE;
        /* 2855 */ PFNGLMULTIDRAWARRAYSANGLEPROC MultiDrawArraysANGLE;
        /* 2856 */ PFNGLMULTIDRAWARRAYSINSTANCEDANGLEPROC MultiDrawArraysInstancedANGLE;
        /* 2857 */ PFNGLMULTIDRAWELEMENTSANGLEPROC MultiDrawElementsANGLE;
        /* 2858 */ PFNGLMULTIDRAWELEMENTSINSTANCEDANGLEPROC MultiDrawElementsInstancedANGLE;
        /* 2859 */ PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEANGLEPROC DrawArraysInstancedBaseInstanceANGLE;
        /* 2860 */ PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEANGLEPROC DrawElementsInstancedBaseVertexBaseInstanceANGLE;
        /* 2861 */ PFNGLMULTIDRAWARRAYSINSTANCEDBASEINSTANCEANGLEPROC MultiDrawArraysInstancedBaseInstanceANGLE;
        /* 2862 */ PFNGLMULTIDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEANGLEPROC MultiDrawElementsInstancedBaseVertexBaseInstanceANGLE;
        /* 2863 */ PFNGLPOLYGONMODEANGLEPROC PolygonModeANGLE;
        /* 2864 */ PFNGLPROVOKINGVERTEXANGLEPROC ProvokingVertexANGLE;
        /* 2865 */ PFNGLLOSECONTEXTCHROMIUMPROC LoseContextCHROMIUM;
        /* 2866 */ PFNGLGETTEXIMAGEANGLEPROC GetTexImageANGLE;
        /* 2867 */ PFNGLGETCOMPRESSEDTEXIMAGEANGLEPROC GetCompressedTexImageANGLE;
        /* 2868 */ PFNGLGETRENDERBUFFERIMAGEANGLEPROC GetRenderbufferImageANGLE;
        /* 2869 */ PFNGLGETTEXLEVELPARAMETERFVANGLEPROC GetTexLevelParameterfvANGLE;
        /* 2870 */ PFNGLGETTEXLEVELPARAMETERIVANGLEPROC GetTexLevelParameterivANGLE;
        /* 2871 */ PFNGLFRAMEBUFFERMEMORYLESSPIXELLOCALSTORAGEANGLEPROC FramebufferMemorylessPixelLocalStorageANGLE;
        /* 2872 */ PFNGLFRAMEBUFFERTEXTUREPIXELLOCALSTORAGEANGLEPROC FramebufferTexturePixelLocalStorageANGLE;
        /* 2873 */ PFNGLFRAMEBUFFERPIXELLOCALCLEARVALUEFVANGLEPROC FramebufferPixelLocalClearValuefvANGLE;
        /* 2874 */ PFNGLFRAMEBUFFERPIXELLOCALCLEARVALUEIVANGLEPROC FramebufferPixelLocalClearValueivANGLE;
        /* 2875 */ PFNGLFRAMEBUFFERPIXELLOCALCLEARVALUEUIVANGLEPROC FramebufferPixelLocalClearValueuivANGLE;
        /* 2876 */ PFNGLBEGINPIXELLOCALSTORAGEANGLEPROC BeginPixelLocalStorageANGLE;
        /* 2877 */ PFNGLENDPIXELLOCALSTORAGEANGLEPROC EndPixelLocalStorageANGLE;
        /* 2878 */ PFNGLPIXELLOCALSTORAGEBARRIERANGLEPROC PixelLocalStorageBarrierANGLE;
        /* 2879 */ PFNGLFRAMEBUFFERPIXELLOCALSTORAGEINTERRUPTANGLEPROC FramebufferPixelLocalStorageInterruptANGLE;
        /* 2880 */ PFNGLFRAMEBUFFERPIXELLOCALSTORAGERESTOREANGLEPROC FramebufferPixelLocalStorageRestoreANGLE;
        /* 2881 */ PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGEPARAMETERFVANGLEPROC GetFramebufferPixelLocalStorageParameterfvANGLE;
        /* 2882 */ PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGEPARAMETERIVANGLEPROC GetFramebufferPixelLocalStorageParameterivANGLE;
        /* 2883 */ PFNGLLOGICOPANGLEPROC LogicOpANGLE;
        /* 2884 */ PFNGLBLOBCACHECALLBACKSANGLEPROC BlobCacheCallbacksANGLE;
        /* 2885 */ PFNGLGETPOINTERVANGLEPROC GetPointervANGLE;
        };
    };

    void* glad_loader_handle;
} GladGLContext;

GLAD_API_CALL GladGLContext glad_gl_context;

#define GLAD_GL_VERSION_1_0 (glad_gl_context.VERSION_1_0)
#define GLAD_GL_VERSION_1_1 (glad_gl_context.VERSION_1_1)
#define GLAD_GL_VERSION_1_2 (glad_gl_context.VERSION_1_2)
#define GLAD_GL_VERSION_1_3 (glad_gl_context.VERSION_1_3)
#define GLAD_GL_VERSION_1_4 (glad_gl_context.VERSION_1_4)
#define GLAD_GL_VERSION_1_5 (glad_gl_context.VERSION_1_5)
#define GLAD_GL_VERSION_2_0 (glad_gl_context.VERSION_2_0)
#define GLAD_GL_VERSION_2_1 (glad_gl_context.VERSION_2_1)
#define GLAD_GL_VERSION_3_0 (glad_gl_context.VERSION_3_0)
#define GLAD_GL_VERSION_3_1 (glad_gl_context.VERSION_3_1)
#define GLAD_GL_VERSION_3_2 (glad_gl_context.VERSION_3_2)
#define GLAD_GL_VERSION_3_3 (glad_gl_context.VERSION_3_3)
#define GLAD_GL_VERSION_4_0 (glad_gl_context.VERSION_4_0)
#define GLAD_GL_VERSION_4_1 (glad_gl_context.VERSION_4_1)
#define GLAD_GL_VERSION_4_2 (glad_gl_context.VERSION_4_2)
#define GLAD_GL_VERSION_4_3 (glad_gl_context.VERSION_4_3)
#define GLAD_GL_VERSION_4_4 (glad_gl_context.VERSION_4_4)
#define GLAD_GL_VERSION_4_5 (glad_gl_context.VERSION_4_5)
#define GLAD_GL_VERSION_4_6 (glad_gl_context.VERSION_4_6)
#define GLAD_GL_ES_VERSION_2_0 (glad_gl_context.ES_VERSION_2_0)
#define GLAD_GL_ES_VERSION_3_0 (glad_gl_context.ES_VERSION_3_0)
#define GLAD_GL_ES_VERSION_3_1 (glad_gl_context.ES_VERSION_3_1)
#define GLAD_GL_ES_VERSION_3_2 (glad_gl_context.ES_VERSION_3_2)
#define GLAD_GL_3DFX_multisample (glad_gl_context._3DFX_multisample)
#define GLAD_GL_3DFX_tbuffer (glad_gl_context._3DFX_tbuffer)
#define GLAD_GL_3DFX_texture_compression_FXT1 (glad_gl_context._3DFX_texture_compression_FXT1)
#define GLAD_GL_AMD_blend_minmax_factor (glad_gl_context.AMD_blend_minmax_factor)
#define GLAD_GL_AMD_compressed_3DC_texture (glad_gl_context.AMD_compressed_3DC_texture)
#define GLAD_GL_AMD_compressed_ATC_texture (glad_gl_context.AMD_compressed_ATC_texture)
#define GLAD_GL_AMD_conservative_depth (glad_gl_context.AMD_conservative_depth)
#define GLAD_GL_AMD_debug_output (glad_gl_context.AMD_debug_output)
#define GLAD_GL_AMD_depth_clamp_separate (glad_gl_context.AMD_depth_clamp_separate)
#define GLAD_GL_AMD_draw_buffers_blend (glad_gl_context.AMD_draw_buffers_blend)
#define GLAD_GL_AMD_framebuffer_multisample_advanced (glad_gl_context.AMD_framebuffer_multisample_advanced)
#define GLAD_GL_AMD_framebuffer_sample_positions (glad_gl_context.AMD_framebuffer_sample_positions)
#define GLAD_GL_AMD_gcn_shader (glad_gl_context.AMD_gcn_shader)
#define GLAD_GL_AMD_gpu_shader_half_float (glad_gl_context.AMD_gpu_shader_half_float)
#define GLAD_GL_AMD_gpu_shader_int16 (glad_gl_context.AMD_gpu_shader_int16)
#define GLAD_GL_AMD_gpu_shader_int64 (glad_gl_context.AMD_gpu_shader_int64)
#define GLAD_GL_AMD_interleaved_elements (glad_gl_context.AMD_interleaved_elements)
#define GLAD_GL_AMD_multi_draw_indirect (glad_gl_context.AMD_multi_draw_indirect)
#define GLAD_GL_AMD_name_gen_delete (glad_gl_context.AMD_name_gen_delete)
#define GLAD_GL_AMD_occlusion_query_event (glad_gl_context.AMD_occlusion_query_event)
#define GLAD_GL_AMD_performance_monitor (glad_gl_context.AMD_performance_monitor)
#define GLAD_GL_AMD_pinned_memory (glad_gl_context.AMD_pinned_memory)
#define GLAD_GL_AMD_program_binary_Z400 (glad_gl_context.AMD_program_binary_Z400)
#define GLAD_GL_AMD_query_buffer_object (glad_gl_context.AMD_query_buffer_object)
#define GLAD_GL_AMD_sample_positions (glad_gl_context.AMD_sample_positions)
#define GLAD_GL_AMD_seamless_cubemap_per_texture (glad_gl_context.AMD_seamless_cubemap_per_texture)
#define GLAD_GL_AMD_shader_atomic_counter_ops (glad_gl_context.AMD_shader_atomic_counter_ops)
#define GLAD_GL_AMD_shader_ballot (glad_gl_context.AMD_shader_ballot)
#define GLAD_GL_AMD_shader_explicit_vertex_parameter (glad_gl_context.AMD_shader_explicit_vertex_parameter)
#define GLAD_GL_AMD_shader_fragment_mask (glad_gl_context.AMD_shader_fragment_mask)
#define GLAD_GL_AMD_shader_gpu_shader_half_float_fetch (glad_gl_context.AMD_shader_gpu_shader_half_float_fetch)
#define GLAD_GL_AMD_shader_image_load_store_lod (glad_gl_context.AMD_shader_image_load_store_lod)
#define GLAD_GL_AMD_shader_stencil_export (glad_gl_context.AMD_shader_stencil_export)
#define GLAD_GL_AMD_shader_trinary_minmax (glad_gl_context.AMD_shader_trinary_minmax)
#define GLAD_GL_AMD_sparse_texture (glad_gl_context.AMD_sparse_texture)
#define GLAD_GL_AMD_stencil_operation_extended (glad_gl_context.AMD_stencil_operation_extended)
#define GLAD_GL_AMD_texture_gather_bias_lod (glad_gl_context.AMD_texture_gather_bias_lod)
#define GLAD_GL_AMD_texture_texture4 (glad_gl_context.AMD_texture_texture4)
#define GLAD_GL_AMD_transform_feedback3_lines_triangles (glad_gl_context.AMD_transform_feedback3_lines_triangles)
#define GLAD_GL_AMD_transform_feedback4 (glad_gl_context.AMD_transform_feedback4)
#define GLAD_GL_AMD_vertex_shader_layer (glad_gl_context.AMD_vertex_shader_layer)
#define GLAD_GL_AMD_vertex_shader_tessellator (glad_gl_context.AMD_vertex_shader_tessellator)
#define GLAD_GL_AMD_vertex_shader_viewport_index (glad_gl_context.AMD_vertex_shader_viewport_index)
#define GLAD_GL_ANDROID_extension_pack_es31a (glad_gl_context.ANDROID_extension_pack_es31a)
#define GLAD_GL_ANGLE_base_vertex_base_instance (glad_gl_context.ANGLE_base_vertex_base_instance)
#define GLAD_GL_ANGLE_blob_cache (glad_gl_context.ANGLE_blob_cache)
#define GLAD_GL_ANGLE_client_arrays (glad_gl_context.ANGLE_client_arrays)
#define GLAD_GL_ANGLE_clip_cull_distance (glad_gl_context.ANGLE_clip_cull_distance)
#define GLAD_GL_ANGLE_copy_texture_3d (glad_gl_context.ANGLE_copy_texture_3d)
#define GLAD_GL_ANGLE_depth_texture (glad_gl_context.ANGLE_depth_texture)
#define GLAD_GL_ANGLE_framebuffer_blit (glad_gl_context.ANGLE_framebuffer_blit)
#define GLAD_GL_ANGLE_framebuffer_multisample (glad_gl_context.ANGLE_framebuffer_multisample)
#define GLAD_GL_ANGLE_get_image (glad_gl_context.ANGLE_get_image)
#define GLAD_GL_ANGLE_get_serialized_context_string (glad_gl_context.ANGLE_get_serialized_context_string)
#define GLAD_GL_ANGLE_get_tex_level_parameter (glad_gl_context.ANGLE_get_tex_level_parameter)
#define GLAD_GL_ANGLE_instanced_arrays (glad_gl_context.ANGLE_instanced_arrays)
#define GLAD_GL_ANGLE_logic_op (glad_gl_context.ANGLE_logic_op)
#define GLAD_GL_ANGLE_lossy_etc_decode (glad_gl_context.ANGLE_lossy_etc_decode)
#define GLAD_GL_ANGLE_memory_object_flags (glad_gl_context.ANGLE_memory_object_flags)
#define GLAD_GL_ANGLE_memory_object_fuchsia (glad_gl_context.ANGLE_memory_object_fuchsia)
#define GLAD_GL_ANGLE_memory_size (glad_gl_context.ANGLE_memory_size)
#define GLAD_GL_ANGLE_multi_draw (glad_gl_context.ANGLE_multi_draw)
#define GLAD_GL_ANGLE_pack_reverse_row_order (glad_gl_context.ANGLE_pack_reverse_row_order)
#define GLAD_GL_ANGLE_polygon_mode (glad_gl_context.ANGLE_polygon_mode)
#define GLAD_GL_ANGLE_program_binary (glad_gl_context.ANGLE_program_binary)
#define GLAD_GL_ANGLE_program_binary_readiness_query (glad_gl_context.ANGLE_program_binary_readiness_query)
#define GLAD_GL_ANGLE_program_cache_control (glad_gl_context.ANGLE_program_cache_control)
#define GLAD_GL_ANGLE_provoking_vertex (glad_gl_context.ANGLE_provoking_vertex)
#define GLAD_GL_ANGLE_renderability_validation (glad_gl_context.ANGLE_renderability_validation)
#define GLAD_GL_ANGLE_request_extension (glad_gl_context.ANGLE_request_extension)
#define GLAD_GL_ANGLE_rgbx_internal_format (glad_gl_context.ANGLE_rgbx_internal_format)
#define GLAD_GL_ANGLE_robust_client_memory (glad_gl_context.ANGLE_robust_client_memory)
#define GLAD_GL_ANGLE_robust_fragment_shader_output (glad_gl_context.ANGLE_robust_fragment_shader_output)
#define GLAD_GL_ANGLE_robust_resource_initialization (glad_gl_context.ANGLE_robust_resource_initialization)
#define GLAD_GL_ANGLE_semaphore_fuchsia (glad_gl_context.ANGLE_semaphore_fuchsia)
#define GLAD_GL_ANGLE_shader_binary (glad_gl_context.ANGLE_shader_binary)
#define GLAD_GL_ANGLE_shader_pixel_local_storage (glad_gl_context.ANGLE_shader_pixel_local_storage)
#define GLAD_GL_ANGLE_stencil_texturing (glad_gl_context.ANGLE_stencil_texturing)
#define GLAD_GL_ANGLE_texture_compression_dxt1 (glad_gl_context.ANGLE_texture_compression_dxt1)
#define GLAD_GL_ANGLE_texture_compression_dxt3 (glad_gl_context.ANGLE_texture_compression_dxt3)
#define GLAD_GL_ANGLE_texture_compression_dxt5 (glad_gl_context.ANGLE_texture_compression_dxt5)
#define GLAD_GL_ANGLE_texture_external_update (glad_gl_context.ANGLE_texture_external_update)
#define GLAD_GL_ANGLE_texture_multisample (glad_gl_context.ANGLE_texture_multisample)
#define GLAD_GL_ANGLE_texture_usage (glad_gl_context.ANGLE_texture_usage)
#define GLAD_GL_ANGLE_translated_shader_source (glad_gl_context.ANGLE_translated_shader_source)
#define GLAD_GL_ANGLE_vulkan_image (glad_gl_context.ANGLE_vulkan_image)
#define GLAD_GL_ANGLE_yuv_internal_format (glad_gl_context.ANGLE_yuv_internal_format)
#define GLAD_GL_APPLE_aux_depth_stencil (glad_gl_context.APPLE_aux_depth_stencil)
#define GLAD_GL_APPLE_client_storage (glad_gl_context.APPLE_client_storage)
#define GLAD_GL_APPLE_clip_distance (glad_gl_context.APPLE_clip_distance)
#define GLAD_GL_APPLE_color_buffer_packed_float (glad_gl_context.APPLE_color_buffer_packed_float)
#define GLAD_GL_APPLE_copy_texture_levels (glad_gl_context.APPLE_copy_texture_levels)
#define GLAD_GL_APPLE_element_array (glad_gl_context.APPLE_element_array)
#define GLAD_GL_APPLE_fence (glad_gl_context.APPLE_fence)
#define GLAD_GL_APPLE_float_pixels (glad_gl_context.APPLE_float_pixels)
#define GLAD_GL_APPLE_flush_buffer_range (glad_gl_context.APPLE_flush_buffer_range)
#define GLAD_GL_APPLE_framebuffer_multisample (glad_gl_context.APPLE_framebuffer_multisample)
#define GLAD_GL_APPLE_object_purgeable (glad_gl_context.APPLE_object_purgeable)
#define GLAD_GL_APPLE_rgb_422 (glad_gl_context.APPLE_rgb_422)
#define GLAD_GL_APPLE_row_bytes (glad_gl_context.APPLE_row_bytes)
#define GLAD_GL_APPLE_specular_vector (glad_gl_context.APPLE_specular_vector)
#define GLAD_GL_APPLE_sync (glad_gl_context.APPLE_sync)
#define GLAD_GL_APPLE_texture_format_BGRA8888 (glad_gl_context.APPLE_texture_format_BGRA8888)
#define GLAD_GL_APPLE_texture_max_level (glad_gl_context.APPLE_texture_max_level)
#define GLAD_GL_APPLE_texture_packed_float (glad_gl_context.APPLE_texture_packed_float)
#define GLAD_GL_APPLE_texture_range (glad_gl_context.APPLE_texture_range)
#define GLAD_GL_APPLE_transform_hint (glad_gl_context.APPLE_transform_hint)
#define GLAD_GL_APPLE_vertex_array_object (glad_gl_context.APPLE_vertex_array_object)
#define GLAD_GL_APPLE_vertex_array_range (glad_gl_context.APPLE_vertex_array_range)
#define GLAD_GL_APPLE_vertex_program_evaluators (glad_gl_context.APPLE_vertex_program_evaluators)
#define GLAD_GL_APPLE_ycbcr_422 (glad_gl_context.APPLE_ycbcr_422)
#define GLAD_GL_ARB_ES2_compatibility (glad_gl_context.ARB_ES2_compatibility)
#define GLAD_GL_ARB_ES3_1_compatibility (glad_gl_context.ARB_ES3_1_compatibility)
#define GLAD_GL_ARB_ES3_2_compatibility (glad_gl_context.ARB_ES3_2_compatibility)
#define GLAD_GL_ARB_ES3_compatibility (glad_gl_context.ARB_ES3_compatibility)
#define GLAD_GL_ARB_arrays_of_arrays (glad_gl_context.ARB_arrays_of_arrays)
#define GLAD_GL_ARB_base_instance (glad_gl_context.ARB_base_instance)
#define GLAD_GL_ARB_bindless_texture (glad_gl_context.ARB_bindless_texture)
#define GLAD_GL_ARB_blend_func_extended (glad_gl_context.ARB_blend_func_extended)
#define GLAD_GL_ARB_buffer_storage (glad_gl_context.ARB_buffer_storage)
#define GLAD_GL_ARB_cl_event (glad_gl_context.ARB_cl_event)
#define GLAD_GL_ARB_clear_buffer_object (glad_gl_context.ARB_clear_buffer_object)
#define GLAD_GL_ARB_clear_texture (glad_gl_context.ARB_clear_texture)
#define GLAD_GL_ARB_clip_control (glad_gl_context.ARB_clip_control)
#define GLAD_GL_ARB_color_buffer_float (glad_gl_context.ARB_color_buffer_float)
#define GLAD_GL_ARB_compatibility (glad_gl_context.ARB_compatibility)
#define GLAD_GL_ARB_compressed_texture_pixel_storage (glad_gl_context.ARB_compressed_texture_pixel_storage)
#define GLAD_GL_ARB_compute_shader (glad_gl_context.ARB_compute_shader)
#define GLAD_GL_ARB_compute_variable_group_size (glad_gl_context.ARB_compute_variable_group_size)
#define GLAD_GL_ARB_conditional_render_inverted (glad_gl_context.ARB_conditional_render_inverted)
#define GLAD_GL_ARB_conservative_depth (glad_gl_context.ARB_conservative_depth)
#define GLAD_GL_ARB_copy_buffer (glad_gl_context.ARB_copy_buffer)
#define GLAD_GL_ARB_copy_image (glad_gl_context.ARB_copy_image)
#define GLAD_GL_ARB_cull_distance (glad_gl_context.ARB_cull_distance)
#define GLAD_GL_ARB_debug_output (glad_gl_context.ARB_debug_output)
#define GLAD_GL_ARB_depth_buffer_float (glad_gl_context.ARB_depth_buffer_float)
#define GLAD_GL_ARB_depth_clamp (glad_gl_context.ARB_depth_clamp)
#define GLAD_GL_ARB_depth_texture (glad_gl_context.ARB_depth_texture)
#define GLAD_GL_ARB_derivative_control (glad_gl_context.ARB_derivative_control)
#define GLAD_GL_ARB_direct_state_access (glad_gl_context.ARB_direct_state_access)
#define GLAD_GL_ARB_draw_buffers (glad_gl_context.ARB_draw_buffers)
#define GLAD_GL_ARB_draw_buffers_blend (glad_gl_context.ARB_draw_buffers_blend)
#define GLAD_GL_ARB_draw_elements_base_vertex (glad_gl_context.ARB_draw_elements_base_vertex)
#define GLAD_GL_ARB_draw_indirect (glad_gl_context.ARB_draw_indirect)
#define GLAD_GL_ARB_draw_instanced (glad_gl_context.ARB_draw_instanced)
#define GLAD_GL_ARB_enhanced_layouts (glad_gl_context.ARB_enhanced_layouts)
#define GLAD_GL_ARB_explicit_attrib_location (glad_gl_context.ARB_explicit_attrib_location)
#define GLAD_GL_ARB_explicit_uniform_location (glad_gl_context.ARB_explicit_uniform_location)
#define GLAD_GL_ARB_fragment_coord_conventions (glad_gl_context.ARB_fragment_coord_conventions)
#define GLAD_GL_ARB_fragment_layer_viewport (glad_gl_context.ARB_fragment_layer_viewport)
#define GLAD_GL_ARB_fragment_program (glad_gl_context.ARB_fragment_program)
#define GLAD_GL_ARB_fragment_program_shadow (glad_gl_context.ARB_fragment_program_shadow)
#define GLAD_GL_ARB_fragment_shader (glad_gl_context.ARB_fragment_shader)
#define GLAD_GL_ARB_fragment_shader_interlock (glad_gl_context.ARB_fragment_shader_interlock)
#define GLAD_GL_ARB_framebuffer_no_attachments (glad_gl_context.ARB_framebuffer_no_attachments)
#define GLAD_GL_ARB_framebuffer_object (glad_gl_context.ARB_framebuffer_object)
#define GLAD_GL_ARB_framebuffer_sRGB (glad_gl_context.ARB_framebuffer_sRGB)
#define GLAD_GL_ARB_geometry_shader4 (glad_gl_context.ARB_geometry_shader4)
#define GLAD_GL_ARB_get_program_binary (glad_gl_context.ARB_get_program_binary)
#define GLAD_GL_ARB_get_texture_sub_image (glad_gl_context.ARB_get_texture_sub_image)
#define GLAD_GL_ARB_gl_spirv (glad_gl_context.ARB_gl_spirv)
#define GLAD_GL_ARB_gpu_shader5 (glad_gl_context.ARB_gpu_shader5)
#define GLAD_GL_ARB_gpu_shader_fp64 (glad_gl_context.ARB_gpu_shader_fp64)
#define GLAD_GL_ARB_gpu_shader_int64 (glad_gl_context.ARB_gpu_shader_int64)
#define GLAD_GL_ARB_half_float_pixel (glad_gl_context.ARB_half_float_pixel)
#define GLAD_GL_ARB_half_float_vertex (glad_gl_context.ARB_half_float_vertex)
#define GLAD_GL_ARB_imaging (glad_gl_context.ARB_imaging)
#define GLAD_GL_ARB_indirect_parameters (glad_gl_context.ARB_indirect_parameters)
#define GLAD_GL_ARB_instanced_arrays (glad_gl_context.ARB_instanced_arrays)
#define GLAD_GL_ARB_internalformat_query (glad_gl_context.ARB_internalformat_query)
#define GLAD_GL_ARB_internalformat_query2 (glad_gl_context.ARB_internalformat_query2)
#define GLAD_GL_ARB_invalidate_subdata (glad_gl_context.ARB_invalidate_subdata)
#define GLAD_GL_ARB_map_buffer_alignment (glad_gl_context.ARB_map_buffer_alignment)
#define GLAD_GL_ARB_map_buffer_range (glad_gl_context.ARB_map_buffer_range)
#define GLAD_GL_ARB_matrix_palette (glad_gl_context.ARB_matrix_palette)
#define GLAD_GL_ARB_multi_bind (glad_gl_context.ARB_multi_bind)
#define GLAD_GL_ARB_multi_draw_indirect (glad_gl_context.ARB_multi_draw_indirect)
#define GLAD_GL_ARB_multisample (glad_gl_context.ARB_multisample)
#define GLAD_GL_ARB_multitexture (glad_gl_context.ARB_multitexture)
#define GLAD_GL_ARB_occlusion_query (glad_gl_context.ARB_occlusion_query)
#define GLAD_GL_ARB_occlusion_query2 (glad_gl_context.ARB_occlusion_query2)
#define GLAD_GL_ARB_parallel_shader_compile (glad_gl_context.ARB_parallel_shader_compile)
#define GLAD_GL_ARB_pipeline_statistics_query (glad_gl_context.ARB_pipeline_statistics_query)
#define GLAD_GL_ARB_pixel_buffer_object (glad_gl_context.ARB_pixel_buffer_object)
#define GLAD_GL_ARB_point_parameters (glad_gl_context.ARB_point_parameters)
#define GLAD_GL_ARB_point_sprite (glad_gl_context.ARB_point_sprite)
#define GLAD_GL_ARB_polygon_offset_clamp (glad_gl_context.ARB_polygon_offset_clamp)
#define GLAD_GL_ARB_post_depth_coverage (glad_gl_context.ARB_post_depth_coverage)
#define GLAD_GL_ARB_program_interface_query (glad_gl_context.ARB_program_interface_query)
#define GLAD_GL_ARB_provoking_vertex (glad_gl_context.ARB_provoking_vertex)
#define GLAD_GL_ARB_query_buffer_object (glad_gl_context.ARB_query_buffer_object)
#define GLAD_GL_ARB_robust_buffer_access_behavior (glad_gl_context.ARB_robust_buffer_access_behavior)
#define GLAD_GL_ARB_robustness (glad_gl_context.ARB_robustness)
#define GLAD_GL_ARB_robustness_isolation (glad_gl_context.ARB_robustness_isolation)
#define GLAD_GL_ARB_sample_locations (glad_gl_context.ARB_sample_locations)
#define GLAD_GL_ARB_sample_shading (glad_gl_context.ARB_sample_shading)
#define GLAD_GL_ARB_sampler_objects (glad_gl_context.ARB_sampler_objects)
#define GLAD_GL_ARB_seamless_cube_map (glad_gl_context.ARB_seamless_cube_map)
#define GLAD_GL_ARB_seamless_cubemap_per_texture (glad_gl_context.ARB_seamless_cubemap_per_texture)
#define GLAD_GL_ARB_separate_shader_objects (glad_gl_context.ARB_separate_shader_objects)
#define GLAD_GL_ARB_shader_atomic_counter_ops (glad_gl_context.ARB_shader_atomic_counter_ops)
#define GLAD_GL_ARB_shader_atomic_counters (glad_gl_context.ARB_shader_atomic_counters)
#define GLAD_GL_ARB_shader_ballot (glad_gl_context.ARB_shader_ballot)
#define GLAD_GL_ARB_shader_bit_encoding (glad_gl_context.ARB_shader_bit_encoding)
#define GLAD_GL_ARB_shader_clock (glad_gl_context.ARB_shader_clock)
#define GLAD_GL_ARB_shader_draw_parameters (glad_gl_context.ARB_shader_draw_parameters)
#define GLAD_GL_ARB_shader_group_vote (glad_gl_context.ARB_shader_group_vote)
#define GLAD_GL_ARB_shader_image_load_store (glad_gl_context.ARB_shader_image_load_store)
#define GLAD_GL_ARB_shader_image_size (glad_gl_context.ARB_shader_image_size)
#define GLAD_GL_ARB_shader_objects (glad_gl_context.ARB_shader_objects)
#define GLAD_GL_ARB_shader_precision (glad_gl_context.ARB_shader_precision)
#define GLAD_GL_ARB_shader_stencil_export (glad_gl_context.ARB_shader_stencil_export)
#define GLAD_GL_ARB_shader_storage_buffer_object (glad_gl_context.ARB_shader_storage_buffer_object)
#define GLAD_GL_ARB_shader_subroutine (glad_gl_context.ARB_shader_subroutine)
#define GLAD_GL_ARB_shader_texture_image_samples (glad_gl_context.ARB_shader_texture_image_samples)
#define GLAD_GL_ARB_shader_texture_lod (glad_gl_context.ARB_shader_texture_lod)
#define GLAD_GL_ARB_shader_viewport_layer_array (glad_gl_context.ARB_shader_viewport_layer_array)
#define GLAD_GL_ARB_shading_language_100 (glad_gl_context.ARB_shading_language_100)
#define GLAD_GL_ARB_shading_language_420pack (glad_gl_context.ARB_shading_language_420pack)
#define GLAD_GL_ARB_shading_language_include (glad_gl_context.ARB_shading_language_include)
#define GLAD_GL_ARB_shading_language_packing (glad_gl_context.ARB_shading_language_packing)
#define GLAD_GL_ARB_shadow (glad_gl_context.ARB_shadow)
#define GLAD_GL_ARB_shadow_ambient (glad_gl_context.ARB_shadow_ambient)
#define GLAD_GL_ARB_sparse_buffer (glad_gl_context.ARB_sparse_buffer)
#define GLAD_GL_ARB_sparse_texture (glad_gl_context.ARB_sparse_texture)
#define GLAD_GL_ARB_sparse_texture2 (glad_gl_context.ARB_sparse_texture2)
#define GLAD_GL_ARB_sparse_texture_clamp (glad_gl_context.ARB_sparse_texture_clamp)
#define GLAD_GL_ARB_spirv_extensions (glad_gl_context.ARB_spirv_extensions)
#define GLAD_GL_ARB_stencil_texturing (glad_gl_context.ARB_stencil_texturing)
#define GLAD_GL_ARB_sync (glad_gl_context.ARB_sync)
#define GLAD_GL_ARB_tessellation_shader (glad_gl_context.ARB_tessellation_shader)
#define GLAD_GL_ARB_texture_barrier (glad_gl_context.ARB_texture_barrier)
#define GLAD_GL_ARB_texture_border_clamp (glad_gl_context.ARB_texture_border_clamp)
#define GLAD_GL_ARB_texture_buffer_object (glad_gl_context.ARB_texture_buffer_object)
#define GLAD_GL_ARB_texture_buffer_object_rgb32 (glad_gl_context.ARB_texture_buffer_object_rgb32)
#define GLAD_GL_ARB_texture_buffer_range (glad_gl_context.ARB_texture_buffer_range)
#define GLAD_GL_ARB_texture_compression (glad_gl_context.ARB_texture_compression)
#define GLAD_GL_ARB_texture_compression_bptc (glad_gl_context.ARB_texture_compression_bptc)
#define GLAD_GL_ARB_texture_compression_rgtc (glad_gl_context.ARB_texture_compression_rgtc)
#define GLAD_GL_ARB_texture_cube_map (glad_gl_context.ARB_texture_cube_map)
#define GLAD_GL_ARB_texture_cube_map_array (glad_gl_context.ARB_texture_cube_map_array)
#define GLAD_GL_ARB_texture_env_add (glad_gl_context.ARB_texture_env_add)
#define GLAD_GL_ARB_texture_env_combine (glad_gl_context.ARB_texture_env_combine)
#define GLAD_GL_ARB_texture_env_crossbar (glad_gl_context.ARB_texture_env_crossbar)
#define GLAD_GL_ARB_texture_env_dot3 (glad_gl_context.ARB_texture_env_dot3)
#define GLAD_GL_ARB_texture_filter_anisotropic (glad_gl_context.ARB_texture_filter_anisotropic)
#define GLAD_GL_ARB_texture_filter_minmax (glad_gl_context.ARB_texture_filter_minmax)
#define GLAD_GL_ARB_texture_float (glad_gl_context.ARB_texture_float)
#define GLAD_GL_ARB_texture_gather (glad_gl_context.ARB_texture_gather)
#define GLAD_GL_ARB_texture_mirror_clamp_to_edge (glad_gl_context.ARB_texture_mirror_clamp_to_edge)
#define GLAD_GL_ARB_texture_mirrored_repeat (glad_gl_context.ARB_texture_mirrored_repeat)
#define GLAD_GL_ARB_texture_multisample (glad_gl_context.ARB_texture_multisample)
#define GLAD_GL_ARB_texture_non_power_of_two (glad_gl_context.ARB_texture_non_power_of_two)
#define GLAD_GL_ARB_texture_query_levels (glad_gl_context.ARB_texture_query_levels)
#define GLAD_GL_ARB_texture_query_lod (glad_gl_context.ARB_texture_query_lod)
#define GLAD_GL_ARB_texture_rectangle (glad_gl_context.ARB_texture_rectangle)
#define GLAD_GL_ARB_texture_rg (glad_gl_context.ARB_texture_rg)
#define GLAD_GL_ARB_texture_rgb10_a2ui (glad_gl_context.ARB_texture_rgb10_a2ui)
#define GLAD_GL_ARB_texture_stencil8 (glad_gl_context.ARB_texture_stencil8)
#define GLAD_GL_ARB_texture_storage (glad_gl_context.ARB_texture_storage)
#define GLAD_GL_ARB_texture_storage_multisample (glad_gl_context.ARB_texture_storage_multisample)
#define GLAD_GL_ARB_texture_swizzle (glad_gl_context.ARB_texture_swizzle)
#define GLAD_GL_ARB_texture_view (glad_gl_context.ARB_texture_view)
#define GLAD_GL_ARB_timer_query (glad_gl_context.ARB_timer_query)
#define GLAD_GL_ARB_transform_feedback2 (glad_gl_context.ARB_transform_feedback2)
#define GLAD_GL_ARB_transform_feedback3 (glad_gl_context.ARB_transform_feedback3)
#define GLAD_GL_ARB_transform_feedback_instanced (glad_gl_context.ARB_transform_feedback_instanced)
#define GLAD_GL_ARB_transform_feedback_overflow_query (glad_gl_context.ARB_transform_feedback_overflow_query)
#define GLAD_GL_ARB_transpose_matrix (glad_gl_context.ARB_transpose_matrix)
#define GLAD_GL_ARB_uniform_buffer_object (glad_gl_context.ARB_uniform_buffer_object)
#define GLAD_GL_ARB_vertex_array_bgra (glad_gl_context.ARB_vertex_array_bgra)
#define GLAD_GL_ARB_vertex_array_object (glad_gl_context.ARB_vertex_array_object)
#define GLAD_GL_ARB_vertex_attrib_64bit (glad_gl_context.ARB_vertex_attrib_64bit)
#define GLAD_GL_ARB_vertex_attrib_binding (glad_gl_context.ARB_vertex_attrib_binding)
#define GLAD_GL_ARB_vertex_blend (glad_gl_context.ARB_vertex_blend)
#define GLAD_GL_ARB_vertex_buffer_object (glad_gl_context.ARB_vertex_buffer_object)
#define GLAD_GL_ARB_vertex_program (glad_gl_context.ARB_vertex_program)
#define GLAD_GL_ARB_vertex_shader (glad_gl_context.ARB_vertex_shader)
#define GLAD_GL_ARB_vertex_type_10f_11f_11f_rev (glad_gl_context.ARB_vertex_type_10f_11f_11f_rev)
#define GLAD_GL_ARB_vertex_type_2_10_10_10_rev (glad_gl_context.ARB_vertex_type_2_10_10_10_rev)
#define GLAD_GL_ARB_viewport_array (glad_gl_context.ARB_viewport_array)
#define GLAD_GL_ARB_window_pos (glad_gl_context.ARB_window_pos)
#define GLAD_GL_ARM_cooperative_matrix_layouts (glad_gl_context.ARM_cooperative_matrix_layouts)
#define GLAD_GL_ARM_mali_program_binary (glad_gl_context.ARM_mali_program_binary)
#define GLAD_GL_ARM_mali_shader_binary (glad_gl_context.ARM_mali_shader_binary)
#define GLAD_GL_ARM_rgba8 (glad_gl_context.ARM_rgba8)
#define GLAD_GL_ARM_shader_core_builtins (glad_gl_context.ARM_shader_core_builtins)
#define GLAD_GL_ARM_shader_core_properties (glad_gl_context.ARM_shader_core_properties)
#define GLAD_GL_ARM_shader_framebuffer_fetch (glad_gl_context.ARM_shader_framebuffer_fetch)
#define GLAD_GL_ARM_shader_framebuffer_fetch_depth_stencil (glad_gl_context.ARM_shader_framebuffer_fetch_depth_stencil)
#define GLAD_GL_ARM_texture_unnormalized_coordinates (glad_gl_context.ARM_texture_unnormalized_coordinates)
#define GLAD_GL_ATI_draw_buffers (glad_gl_context.ATI_draw_buffers)
#define GLAD_GL_ATI_element_array (glad_gl_context.ATI_element_array)
#define GLAD_GL_ATI_envmap_bumpmap (glad_gl_context.ATI_envmap_bumpmap)
#define GLAD_GL_ATI_fragment_shader (glad_gl_context.ATI_fragment_shader)
#define GLAD_GL_ATI_map_object_buffer (glad_gl_context.ATI_map_object_buffer)
#define GLAD_GL_ATI_meminfo (glad_gl_context.ATI_meminfo)
#define GLAD_GL_ATI_pixel_format_float (glad_gl_context.ATI_pixel_format_float)
#define GLAD_GL_ATI_pn_triangles (glad_gl_context.ATI_pn_triangles)
#define GLAD_GL_ATI_separate_stencil (glad_gl_context.ATI_separate_stencil)
#define GLAD_GL_ATI_text_fragment_shader (glad_gl_context.ATI_text_fragment_shader)
#define GLAD_GL_ATI_texture_env_combine3 (glad_gl_context.ATI_texture_env_combine3)
#define GLAD_GL_ATI_texture_float (glad_gl_context.ATI_texture_float)
#define GLAD_GL_ATI_texture_mirror_once (glad_gl_context.ATI_texture_mirror_once)
#define GLAD_GL_ATI_vertex_array_object (glad_gl_context.ATI_vertex_array_object)
#define GLAD_GL_ATI_vertex_attrib_array_object (glad_gl_context.ATI_vertex_attrib_array_object)
#define GLAD_GL_ATI_vertex_streams (glad_gl_context.ATI_vertex_streams)
#define GLAD_GL_CHROMIUM_bind_uniform_location (glad_gl_context.CHROMIUM_bind_uniform_location)
#define GLAD_GL_CHROMIUM_copy_compressed_texture (glad_gl_context.CHROMIUM_copy_compressed_texture)
#define GLAD_GL_CHROMIUM_copy_texture (glad_gl_context.CHROMIUM_copy_texture)
#define GLAD_GL_CHROMIUM_framebuffer_mixed_samples (glad_gl_context.CHROMIUM_framebuffer_mixed_samples)
#define GLAD_GL_CHROMIUM_lose_context (glad_gl_context.CHROMIUM_lose_context)
#define GLAD_GL_DMP_program_binary (glad_gl_context.DMP_program_binary)
#define GLAD_GL_DMP_shader_binary (glad_gl_context.DMP_shader_binary)
#define GLAD_GL_EXT_422_pixels (glad_gl_context.EXT_422_pixels)
#define GLAD_GL_EXT_EGL_image_array (glad_gl_context.EXT_EGL_image_array)
#define GLAD_GL_EXT_EGL_image_storage (glad_gl_context.EXT_EGL_image_storage)
#define GLAD_GL_EXT_EGL_image_storage_compression (glad_gl_context.EXT_EGL_image_storage_compression)
#define GLAD_GL_EXT_EGL_sync (glad_gl_context.EXT_EGL_sync)
#define GLAD_GL_EXT_YUV_target (glad_gl_context.EXT_YUV_target)
#define GLAD_GL_EXT_abgr (glad_gl_context.EXT_abgr)
#define GLAD_GL_EXT_base_instance (glad_gl_context.EXT_base_instance)
#define GLAD_GL_EXT_bfloat16 (glad_gl_context.EXT_bfloat16)
#define GLAD_GL_EXT_bgra (glad_gl_context.EXT_bgra)
#define GLAD_GL_EXT_bindable_uniform (glad_gl_context.EXT_bindable_uniform)
#define GLAD_GL_EXT_blend_color (glad_gl_context.EXT_blend_color)
#define GLAD_GL_EXT_blend_equation_separate (glad_gl_context.EXT_blend_equation_separate)
#define GLAD_GL_EXT_blend_func_extended (glad_gl_context.EXT_blend_func_extended)
#define GLAD_GL_EXT_blend_func_separate (glad_gl_context.EXT_blend_func_separate)
#define GLAD_GL_EXT_blend_logic_op (glad_gl_context.EXT_blend_logic_op)
#define GLAD_GL_EXT_blend_minmax (glad_gl_context.EXT_blend_minmax)
#define GLAD_GL_EXT_blend_subtract (glad_gl_context.EXT_blend_subtract)
#define GLAD_GL_EXT_buffer_reference (glad_gl_context.EXT_buffer_reference)
#define GLAD_GL_EXT_buffer_reference2 (glad_gl_context.EXT_buffer_reference2)
#define GLAD_GL_EXT_buffer_reference_uvec2 (glad_gl_context.EXT_buffer_reference_uvec2)
#define GLAD_GL_EXT_buffer_storage (glad_gl_context.EXT_buffer_storage)
#define GLAD_GL_EXT_clear_texture (glad_gl_context.EXT_clear_texture)
#define GLAD_GL_EXT_clip_control (glad_gl_context.EXT_clip_control)
#define GLAD_GL_EXT_clip_cull_distance (glad_gl_context.EXT_clip_cull_distance)
#define GLAD_GL_EXT_clip_volume_hint (glad_gl_context.EXT_clip_volume_hint)
#define GLAD_GL_EXT_cmyka (glad_gl_context.EXT_cmyka)
#define GLAD_GL_EXT_color_buffer_float (glad_gl_context.EXT_color_buffer_float)
#define GLAD_GL_EXT_color_buffer_half_float (glad_gl_context.EXT_color_buffer_half_float)
#define GLAD_GL_EXT_color_subtable (glad_gl_context.EXT_color_subtable)
#define GLAD_GL_EXT_compiled_vertex_array (glad_gl_context.EXT_compiled_vertex_array)
#define GLAD_GL_EXT_conservative_depth (glad_gl_context.EXT_conservative_depth)
#define GLAD_GL_EXT_control_flow_attributes (glad_gl_context.EXT_control_flow_attributes)
#define GLAD_GL_EXT_control_flow_attributes2 (glad_gl_context.EXT_control_flow_attributes2)
#define GLAD_GL_EXT_convolution (glad_gl_context.EXT_convolution)
#define GLAD_GL_EXT_coordinate_frame (glad_gl_context.EXT_coordinate_frame)
#define GLAD_GL_EXT_copy_image (glad_gl_context.EXT_copy_image)
#define GLAD_GL_EXT_copy_texture (glad_gl_context.EXT_copy_texture)
#define GLAD_GL_EXT_cull_vertex (glad_gl_context.EXT_cull_vertex)
#define GLAD_GL_EXT_debug_label (glad_gl_context.EXT_debug_label)
#define GLAD_GL_EXT_debug_marker (glad_gl_context.EXT_debug_marker)
#define GLAD_GL_EXT_debug_printf (glad_gl_context.EXT_debug_printf)
#define GLAD_GL_EXT_demote_to_helper_invocation (glad_gl_context.EXT_demote_to_helper_invocation)
#define GLAD_GL_EXT_depth_bounds_test (glad_gl_context.EXT_depth_bounds_test)
#define GLAD_GL_EXT_depth_clamp (glad_gl_context.EXT_depth_clamp)
#define GLAD_GL_EXT_device_group (glad_gl_context.EXT_device_group)
#define GLAD_GL_EXT_direct_state_access (glad_gl_context.EXT_direct_state_access)
#define GLAD_GL_EXT_discard_framebuffer (glad_gl_context.EXT_discard_framebuffer)
#define GLAD_GL_EXT_disjoint_timer_query (glad_gl_context.EXT_disjoint_timer_query)
#define GLAD_GL_EXT_draw_buffers (glad_gl_context.EXT_draw_buffers)
#define GLAD_GL_EXT_draw_buffers2 (glad_gl_context.EXT_draw_buffers2)
#define GLAD_GL_EXT_draw_buffers_indexed (glad_gl_context.EXT_draw_buffers_indexed)
#define GLAD_GL_EXT_draw_elements_base_vertex (glad_gl_context.EXT_draw_elements_base_vertex)
#define GLAD_GL_EXT_draw_instanced (glad_gl_context.EXT_draw_instanced)
#define GLAD_GL_EXT_draw_range_elements (glad_gl_context.EXT_draw_range_elements)
#define GLAD_GL_EXT_draw_transform_feedback (glad_gl_context.EXT_draw_transform_feedback)
#define GLAD_GL_EXT_expect_assume (glad_gl_context.EXT_expect_assume)
#define GLAD_GL_EXT_external_buffer (glad_gl_context.EXT_external_buffer)
#define GLAD_GL_EXT_float8_e5m2_e4m3 (glad_gl_context.EXT_float8_e5m2_e4m3)
#define GLAD_GL_EXT_float_blend (glad_gl_context.EXT_float_blend)
#define GLAD_GL_EXT_fog_coord (glad_gl_context.EXT_fog_coord)
#define GLAD_GL_EXT_fragment_invocation_density (glad_gl_context.EXT_fragment_invocation_density)
#define GLAD_GL_EXT_fragment_shader_barycentric (glad_gl_context.EXT_fragment_shader_barycentric)
#define GLAD_GL_EXT_fragment_shading_rate (glad_gl_context.EXT_fragment_shading_rate)
#define GLAD_GL_EXT_framebuffer_blit (glad_gl_context.EXT_framebuffer_blit)
#define GLAD_GL_EXT_framebuffer_blit_layers (glad_gl_context.EXT_framebuffer_blit_layers)
#define GLAD_GL_EXT_framebuffer_multisample (glad_gl_context.EXT_framebuffer_multisample)
#define GLAD_GL_EXT_framebuffer_multisample_blit_scaled (glad_gl_context.EXT_framebuffer_multisample_blit_scaled)
#define GLAD_GL_EXT_framebuffer_object (glad_gl_context.EXT_framebuffer_object)
#define GLAD_GL_EXT_framebuffer_sRGB (glad_gl_context.EXT_framebuffer_sRGB)
#define GLAD_GL_EXT_geometry_point_size (glad_gl_context.EXT_geometry_point_size)
#define GLAD_GL_EXT_geometry_shader (glad_gl_context.EXT_geometry_shader)
#define GLAD_GL_EXT_geometry_shader4 (glad_gl_context.EXT_geometry_shader4)
#define GLAD_GL_EXT_gpu_program_parameters (glad_gl_context.EXT_gpu_program_parameters)
#define GLAD_GL_EXT_gpu_shader4 (glad_gl_context.EXT_gpu_shader4)
#define GLAD_GL_EXT_gpu_shader5 (glad_gl_context.EXT_gpu_shader5)
#define GLAD_GL_EXT_histogram (glad_gl_context.EXT_histogram)
#define GLAD_GL_EXT_index_array_formats (glad_gl_context.EXT_index_array_formats)
#define GLAD_GL_EXT_index_func (glad_gl_context.EXT_index_func)
#define GLAD_GL_EXT_index_material (glad_gl_context.EXT_index_material)
#define GLAD_GL_EXT_index_texture (glad_gl_context.EXT_index_texture)
#define GLAD_GL_EXT_instanced_arrays (glad_gl_context.EXT_instanced_arrays)
#define GLAD_GL_EXT_integer_dot_product (glad_gl_context.EXT_integer_dot_product)
#define GLAD_GL_EXT_light_texture (glad_gl_context.EXT_light_texture)
#define GLAD_GL_EXT_map_buffer_range (glad_gl_context.EXT_map_buffer_range)
#define GLAD_GL_EXT_maximal_reconvergence (glad_gl_context.EXT_maximal_reconvergence)
#define GLAD_GL_EXT_memory_object (glad_gl_context.EXT_memory_object)
#define GLAD_GL_EXT_memory_object_fd (glad_gl_context.EXT_memory_object_fd)
#define GLAD_GL_EXT_memory_object_win32 (glad_gl_context.EXT_memory_object_win32)
#define GLAD_GL_EXT_mesh_shader (glad_gl_context.EXT_mesh_shader)
#define GLAD_GL_EXT_misc_attribute (glad_gl_context.EXT_misc_attribute)
#define GLAD_GL_EXT_multi_draw_arrays (glad_gl_context.EXT_multi_draw_arrays)
#define GLAD_GL_EXT_multi_draw_indirect (glad_gl_context.EXT_multi_draw_indirect)
#define GLAD_GL_EXT_multisample (glad_gl_context.EXT_multisample)
#define GLAD_GL_EXT_multisampled_compatibility (glad_gl_context.EXT_multisampled_compatibility)
#define GLAD_GL_EXT_multisampled_render_to_texture (glad_gl_context.EXT_multisampled_render_to_texture)
#define GLAD_GL_EXT_multisampled_render_to_texture2 (glad_gl_context.EXT_multisampled_render_to_texture2)
#define GLAD_GL_EXT_multiview_draw_buffers (glad_gl_context.EXT_multiview_draw_buffers)
#define GLAD_GL_EXT_multiview_tessellation_geometry_shader (glad_gl_context.EXT_multiview_tessellation_geometry_shader)
#define GLAD_GL_EXT_multiview_texture_multisample (glad_gl_context.EXT_multiview_texture_multisample)
#define GLAD_GL_EXT_multiview_timer_query (glad_gl_context.EXT_multiview_timer_query)
#define GLAD_GL_EXT_nontemporal_keyword (glad_gl_context.EXT_nontemporal_keyword)
#define GLAD_GL_EXT_nonuniform_qualifier (glad_gl_context.EXT_nonuniform_qualifier)
#define GLAD_GL_EXT_null_initializer (glad_gl_context.EXT_null_initializer)
#define GLAD_GL_EXT_occlusion_query_boolean (glad_gl_context.EXT_occlusion_query_boolean)
#define GLAD_GL_EXT_opacity_micromap (glad_gl_context.EXT_opacity_micromap)
#define GLAD_GL_EXT_packed_depth_stencil (glad_gl_context.EXT_packed_depth_stencil)
#define GLAD_GL_EXT_packed_float (glad_gl_context.EXT_packed_float)
#define GLAD_GL_EXT_packed_pixels (glad_gl_context.EXT_packed_pixels)
#define GLAD_GL_EXT_paletted_texture (glad_gl_context.EXT_paletted_texture)
#define GLAD_GL_EXT_pixel_buffer_object (glad_gl_context.EXT_pixel_buffer_object)
#define GLAD_GL_EXT_pixel_transform (glad_gl_context.EXT_pixel_transform)
#define GLAD_GL_EXT_pixel_transform_color_table (glad_gl_context.EXT_pixel_transform_color_table)
#define GLAD_GL_EXT_point_parameters (glad_gl_context.EXT_point_parameters)
#define GLAD_GL_EXT_polygon_offset (glad_gl_context.EXT_polygon_offset)
#define GLAD_GL_EXT_polygon_offset_clamp (glad_gl_context.EXT_polygon_offset_clamp)
#define GLAD_GL_EXT_post_depth_coverage (glad_gl_context.EXT_post_depth_coverage)
#define GLAD_GL_EXT_primitive_bounding_box (glad_gl_context.EXT_primitive_bounding_box)
#define GLAD_GL_EXT_protected_textures (glad_gl_context.EXT_protected_textures)
#define GLAD_GL_EXT_provoking_vertex (glad_gl_context.EXT_provoking_vertex)
#define GLAD_GL_EXT_pvrtc_sRGB (glad_gl_context.EXT_pvrtc_sRGB)
#define GLAD_GL_EXT_raster_multisample (glad_gl_context.EXT_raster_multisample)
#define GLAD_GL_EXT_ray_cull_mask (glad_gl_context.EXT_ray_cull_mask)
#define GLAD_GL_EXT_ray_flags_primitive_culling (glad_gl_context.EXT_ray_flags_primitive_culling)
#define GLAD_GL_EXT_ray_query (glad_gl_context.EXT_ray_query)
#define GLAD_GL_EXT_ray_tracing (glad_gl_context.EXT_ray_tracing)
#define GLAD_GL_EXT_ray_tracing_position_fetch (glad_gl_context.EXT_ray_tracing_position_fetch)
#define GLAD_GL_EXT_read_format_bgra (glad_gl_context.EXT_read_format_bgra)
#define GLAD_GL_EXT_render_snorm (glad_gl_context.EXT_render_snorm)
#define GLAD_GL_EXT_rescale_normal (glad_gl_context.EXT_rescale_normal)
#define GLAD_GL_EXT_robustness (glad_gl_context.EXT_robustness)
#define GLAD_GL_EXT_sRGB (glad_gl_context.EXT_sRGB)
#define GLAD_GL_EXT_sRGB_write_control (glad_gl_context.EXT_sRGB_write_control)
#define GLAD_GL_EXT_samplerless_texture_functions (glad_gl_context.EXT_samplerless_texture_functions)
#define GLAD_GL_EXT_scalar_block_layout (glad_gl_context.EXT_scalar_block_layout)
#define GLAD_GL_EXT_secondary_color (glad_gl_context.EXT_secondary_color)
#define GLAD_GL_EXT_semaphore (glad_gl_context.EXT_semaphore)
#define GLAD_GL_EXT_semaphore_fd (glad_gl_context.EXT_semaphore_fd)
#define GLAD_GL_EXT_semaphore_win32 (glad_gl_context.EXT_semaphore_win32)
#define GLAD_GL_EXT_separate_depth_stencil (glad_gl_context.EXT_separate_depth_stencil)
#define GLAD_GL_EXT_separate_shader_objects (glad_gl_context.EXT_separate_shader_objects)
#define GLAD_GL_EXT_separate_specular_color (glad_gl_context.EXT_separate_specular_color)
#define GLAD_GL_EXT_shader_16bit_storage (glad_gl_context.EXT_shader_16bit_storage)
#define GLAD_GL_EXT_shader_8bit_storage (glad_gl_context.EXT_shader_8bit_storage)
#define GLAD_GL_EXT_shader_atomic_float (glad_gl_context.EXT_shader_atomic_float)
#define GLAD_GL_EXT_shader_atomic_float2 (glad_gl_context.EXT_shader_atomic_float2)
#define GLAD_GL_EXT_shader_atomic_int64 (glad_gl_context.EXT_shader_atomic_int64)
#define GLAD_GL_EXT_shader_explicit_arithmetic_types (glad_gl_context.EXT_shader_explicit_arithmetic_types)
#define GLAD_GL_EXT_shader_explicit_arithmetic_types_float16 (glad_gl_context.EXT_shader_explicit_arithmetic_types_float16)
#define GLAD_GL_EXT_shader_explicit_arithmetic_types_float32 (glad_gl_context.EXT_shader_explicit_arithmetic_types_float32)
#define GLAD_GL_EXT_shader_explicit_arithmetic_types_float64 (glad_gl_context.EXT_shader_explicit_arithmetic_types_float64)
#define GLAD_GL_EXT_shader_explicit_arithmetic_types_int16 (glad_gl_context.EXT_shader_explicit_arithmetic_types_int16)
#define GLAD_GL_EXT_shader_explicit_arithmetic_types_int32 (glad_gl_context.EXT_shader_explicit_arithmetic_types_int32)
#define GLAD_GL_EXT_shader_explicit_arithmetic_types_int64 (glad_gl_context.EXT_shader_explicit_arithmetic_types_int64)
#define GLAD_GL_EXT_shader_explicit_arithmetic_types_int8 (glad_gl_context.EXT_shader_explicit_arithmetic_types_int8)
#define GLAD_GL_EXT_shader_framebuffer_fetch (glad_gl_context.EXT_shader_framebuffer_fetch)
#define GLAD_GL_EXT_shader_framebuffer_fetch_non_coherent (glad_gl_context.EXT_shader_framebuffer_fetch_non_coherent)
#define GLAD_GL_EXT_shader_group_vote (glad_gl_context.EXT_shader_group_vote)
#define GLAD_GL_EXT_shader_image_int64 (glad_gl_context.EXT_shader_image_int64)
#define GLAD_GL_EXT_shader_image_load_formatted (glad_gl_context.EXT_shader_image_load_formatted)
#define GLAD_GL_EXT_shader_image_load_store (glad_gl_context.EXT_shader_image_load_store)
#define GLAD_GL_EXT_shader_implicit_conversions (glad_gl_context.EXT_shader_implicit_conversions)
#define GLAD_GL_EXT_shader_integer_mix (glad_gl_context.EXT_shader_integer_mix)
#define GLAD_GL_EXT_shader_io_blocks (glad_gl_context.EXT_shader_io_blocks)
#define GLAD_GL_EXT_shader_non_constant_global_initializers (glad_gl_context.EXT_shader_non_constant_global_initializers)
#define GLAD_GL_EXT_shader_pixel_local_storage (glad_gl_context.EXT_shader_pixel_local_storage)
#define GLAD_GL_EXT_shader_pixel_local_storage2 (glad_gl_context.EXT_shader_pixel_local_storage2)
#define GLAD_GL_EXT_shader_quad_control (glad_gl_context.EXT_shader_quad_control)
#define GLAD_GL_EXT_shader_realtime_clock (glad_gl_context.EXT_shader_realtime_clock)
#define GLAD_GL_EXT_shader_samples_identical (glad_gl_context.EXT_shader_samples_identical)
#define GLAD_GL_EXT_shader_subgroup_extended_types (glad_gl_context.EXT_shader_subgroup_extended_types)
#define GLAD_GL_EXT_shader_subgroup_extended_types_float16 (glad_gl_context.EXT_shader_subgroup_extended_types_float16)
#define GLAD_GL_EXT_shader_subgroup_extended_types_int16 (glad_gl_context.EXT_shader_subgroup_extended_types_int16)
#define GLAD_GL_EXT_shader_subgroup_extended_types_int64 (glad_gl_context.EXT_shader_subgroup_extended_types_int64)
#define GLAD_GL_EXT_shader_subgroup_extended_types_int8 (glad_gl_context.EXT_shader_subgroup_extended_types_int8)
#define GLAD_GL_EXT_shader_texture_lod (glad_gl_context.EXT_shader_texture_lod)
#define GLAD_GL_EXT_shader_tile_image (glad_gl_context.EXT_shader_tile_image)
#define GLAD_GL_EXT_shadow_funcs (glad_gl_context.EXT_shadow_funcs)
#define GLAD_GL_EXT_shadow_samplers (glad_gl_context.EXT_shadow_samplers)
#define GLAD_GL_EXT_shared_memory_block (glad_gl_context.EXT_shared_memory_block)
#define GLAD_GL_EXT_shared_texture_palette (glad_gl_context.EXT_shared_texture_palette)
#define GLAD_GL_EXT_sparse_texture (glad_gl_context.EXT_sparse_texture)
#define GLAD_GL_EXT_sparse_texture2 (glad_gl_context.EXT_sparse_texture2)
#define GLAD_GL_EXT_spec_constant_composites (glad_gl_context.EXT_spec_constant_composites)
#define GLAD_GL_EXT_spirv_intrinsics (glad_gl_context.EXT_spirv_intrinsics)
#define GLAD_GL_EXT_stencil_clear_tag (glad_gl_context.EXT_stencil_clear_tag)
#define GLAD_GL_EXT_stencil_two_side (glad_gl_context.EXT_stencil_two_side)
#define GLAD_GL_EXT_stencil_wrap (glad_gl_context.EXT_stencil_wrap)
#define GLAD_GL_EXT_subgroup_uniform_control_flow (glad_gl_context.EXT_subgroup_uniform_control_flow)
#define GLAD_GL_EXT_subgroupuniform_qualifier (glad_gl_context.EXT_subgroupuniform_qualifier)
#define GLAD_GL_EXT_subtexture (glad_gl_context.EXT_subtexture)
#define GLAD_GL_EXT_terminate_invocation (glad_gl_context.EXT_terminate_invocation)
#define GLAD_GL_EXT_tessellation_point_size (glad_gl_context.EXT_tessellation_point_size)
#define GLAD_GL_EXT_tessellation_shader (glad_gl_context.EXT_tessellation_shader)
#define GLAD_GL_EXT_texture (glad_gl_context.EXT_texture)
#define GLAD_GL_EXT_texture3D (glad_gl_context.EXT_texture3D)
#define GLAD_GL_EXT_texture_array (glad_gl_context.EXT_texture_array)
#define GLAD_GL_EXT_texture_border_clamp (glad_gl_context.EXT_texture_border_clamp)
#define GLAD_GL_EXT_texture_buffer (glad_gl_context.EXT_texture_buffer)
#define GLAD_GL_EXT_texture_buffer_object (glad_gl_context.EXT_texture_buffer_object)
#define GLAD_GL_EXT_texture_compression_astc_decode_mode (glad_gl_context.EXT_texture_compression_astc_decode_mode)
#define GLAD_GL_EXT_texture_compression_bptc (glad_gl_context.EXT_texture_compression_bptc)
#define GLAD_GL_EXT_texture_compression_dxt1 (glad_gl_context.EXT_texture_compression_dxt1)
#define GLAD_GL_EXT_texture_compression_latc (glad_gl_context.EXT_texture_compression_latc)
#define GLAD_GL_EXT_texture_compression_rgtc (glad_gl_context.EXT_texture_compression_rgtc)
#define GLAD_GL_EXT_texture_compression_s3tc (glad_gl_context.EXT_texture_compression_s3tc)
#define GLAD_GL_EXT_texture_compression_s3tc_srgb (glad_gl_context.EXT_texture_compression_s3tc_srgb)
#define GLAD_GL_EXT_texture_cube_map (glad_gl_context.EXT_texture_cube_map)
#define GLAD_GL_EXT_texture_cube_map_array (glad_gl_context.EXT_texture_cube_map_array)
#define GLAD_GL_EXT_texture_env_add (glad_gl_context.EXT_texture_env_add)
#define GLAD_GL_EXT_texture_env_combine (glad_gl_context.EXT_texture_env_combine)
#define GLAD_GL_EXT_texture_env_dot3 (glad_gl_context.EXT_texture_env_dot3)
#define GLAD_GL_EXT_texture_filter_anisotropic (glad_gl_context.EXT_texture_filter_anisotropic)
#define GLAD_GL_EXT_texture_filter_minmax (glad_gl_context.EXT_texture_filter_minmax)
#define GLAD_GL_EXT_texture_format_BGRA8888 (glad_gl_context.EXT_texture_format_BGRA8888)
#define GLAD_GL_EXT_texture_format_sRGB_override (glad_gl_context.EXT_texture_format_sRGB_override)
#define GLAD_GL_EXT_texture_integer (glad_gl_context.EXT_texture_integer)
#define GLAD_GL_EXT_texture_lod_bias (glad_gl_context.EXT_texture_lod_bias)
#define GLAD_GL_EXT_texture_mirror_clamp (glad_gl_context.EXT_texture_mirror_clamp)
#define GLAD_GL_EXT_texture_mirror_clamp_to_edge (glad_gl_context.EXT_texture_mirror_clamp_to_edge)
#define GLAD_GL_EXT_texture_norm16 (glad_gl_context.EXT_texture_norm16)
#define GLAD_GL_EXT_texture_object (glad_gl_context.EXT_texture_object)
#define GLAD_GL_EXT_texture_offset_non_const (glad_gl_context.EXT_texture_offset_non_const)
#define GLAD_GL_EXT_texture_perturb_normal (glad_gl_context.EXT_texture_perturb_normal)
#define GLAD_GL_EXT_texture_query_lod (glad_gl_context.EXT_texture_query_lod)
#define GLAD_GL_EXT_texture_rg (glad_gl_context.EXT_texture_rg)
#define GLAD_GL_EXT_texture_sRGB (glad_gl_context.EXT_texture_sRGB)
#define GLAD_GL_EXT_texture_sRGB_R8 (glad_gl_context.EXT_texture_sRGB_R8)
#define GLAD_GL_EXT_texture_sRGB_RG8 (glad_gl_context.EXT_texture_sRGB_RG8)
#define GLAD_GL_EXT_texture_sRGB_decode (glad_gl_context.EXT_texture_sRGB_decode)
#define GLAD_GL_EXT_texture_shadow_lod (glad_gl_context.EXT_texture_shadow_lod)
#define GLAD_GL_EXT_texture_shared_exponent (glad_gl_context.EXT_texture_shared_exponent)
#define GLAD_GL_EXT_texture_snorm (glad_gl_context.EXT_texture_snorm)
#define GLAD_GL_EXT_texture_storage (glad_gl_context.EXT_texture_storage)
#define GLAD_GL_EXT_texture_storage_compression (glad_gl_context.EXT_texture_storage_compression)
#define GLAD_GL_EXT_texture_swizzle (glad_gl_context.EXT_texture_swizzle)
#define GLAD_GL_EXT_texture_type_2_10_10_10_REV (glad_gl_context.EXT_texture_type_2_10_10_10_REV)
#define GLAD_GL_EXT_texture_view (glad_gl_context.EXT_texture_view)
#define GLAD_GL_EXT_timer_query (glad_gl_context.EXT_timer_query)
#define GLAD_GL_EXT_transform_feedback (glad_gl_context.EXT_transform_feedback)
#define GLAD_GL_EXT_unpack_subimage (glad_gl_context.EXT_unpack_subimage)
#define GLAD_GL_EXT_vertex_array (glad_gl_context.EXT_vertex_array)
#define GLAD_GL_EXT_vertex_array_bgra (glad_gl_context.EXT_vertex_array_bgra)
#define GLAD_GL_EXT_vertex_attrib_64bit (glad_gl_context.EXT_vertex_attrib_64bit)
#define GLAD_GL_EXT_vertex_shader (glad_gl_context.EXT_vertex_shader)
#define GLAD_GL_EXT_vertex_weighting (glad_gl_context.EXT_vertex_weighting)
#define GLAD_GL_EXT_vulkan_glsl_relaxed (glad_gl_context.EXT_vulkan_glsl_relaxed)
#define GLAD_GL_EXT_win32_keyed_mutex (glad_gl_context.EXT_win32_keyed_mutex)
#define GLAD_GL_EXT_window_rectangles (glad_gl_context.EXT_window_rectangles)
#define GLAD_GL_EXT_x11_sync_object (glad_gl_context.EXT_x11_sync_object)
#define GLAD_GL_FJ_shader_binary_GCCSO (glad_gl_context.FJ_shader_binary_GCCSO)
#define GLAD_GL_GREMEDY_frame_terminator (glad_gl_context.GREMEDY_frame_terminator)
#define GLAD_GL_GREMEDY_string_marker (glad_gl_context.GREMEDY_string_marker)
#define GLAD_GL_HP_convolution_border_modes (glad_gl_context.HP_convolution_border_modes)
#define GLAD_GL_HP_image_transform (glad_gl_context.HP_image_transform)
#define GLAD_GL_HP_occlusion_test (glad_gl_context.HP_occlusion_test)
#define GLAD_GL_HP_texture_lighting (glad_gl_context.HP_texture_lighting)
#define GLAD_GL_HUAWEI_cluster_culling_shader (glad_gl_context.HUAWEI_cluster_culling_shader)
#define GLAD_GL_HUAWEI_program_binary (glad_gl_context.HUAWEI_program_binary)
#define GLAD_GL_HUAWEI_shader_binary (glad_gl_context.HUAWEI_shader_binary)
#define GLAD_GL_HUAWEI_subpass_shading (glad_gl_context.HUAWEI_subpass_shading)
#define GLAD_GL_IBM_cull_vertex (glad_gl_context.IBM_cull_vertex)
#define GLAD_GL_IBM_multimode_draw_arrays (glad_gl_context.IBM_multimode_draw_arrays)
#define GLAD_GL_IBM_rasterpos_clip (glad_gl_context.IBM_rasterpos_clip)
#define GLAD_GL_IBM_static_data (glad_gl_context.IBM_static_data)
#define GLAD_GL_IBM_texture_mirrored_repeat (glad_gl_context.IBM_texture_mirrored_repeat)
#define GLAD_GL_IBM_vertex_array_lists (glad_gl_context.IBM_vertex_array_lists)
#define GLAD_GL_IMG_bindless_texture (glad_gl_context.IMG_bindless_texture)
#define GLAD_GL_IMG_framebuffer_downsample (glad_gl_context.IMG_framebuffer_downsample)
#define GLAD_GL_IMG_multisampled_render_to_texture (glad_gl_context.IMG_multisampled_render_to_texture)
#define GLAD_GL_IMG_program_binary (glad_gl_context.IMG_program_binary)
#define GLAD_GL_IMG_read_format (glad_gl_context.IMG_read_format)
#define GLAD_GL_IMG_shader_binary (glad_gl_context.IMG_shader_binary)
#define GLAD_GL_IMG_texture_compression_pvrtc (glad_gl_context.IMG_texture_compression_pvrtc)
#define GLAD_GL_IMG_texture_compression_pvrtc2 (glad_gl_context.IMG_texture_compression_pvrtc2)
#define GLAD_GL_IMG_texture_filter_cubic (glad_gl_context.IMG_texture_filter_cubic)
#define GLAD_GL_INGR_blend_func_separate (glad_gl_context.INGR_blend_func_separate)
#define GLAD_GL_INGR_color_clamp (glad_gl_context.INGR_color_clamp)
#define GLAD_GL_INGR_interlace_read (glad_gl_context.INGR_interlace_read)
#define GLAD_GL_INTEL_blackhole_render (glad_gl_context.INTEL_blackhole_render)
#define GLAD_GL_INTEL_conservative_rasterization (glad_gl_context.INTEL_conservative_rasterization)
#define GLAD_GL_INTEL_fragment_shader_ordering (glad_gl_context.INTEL_fragment_shader_ordering)
#define GLAD_GL_INTEL_framebuffer_CMAA (glad_gl_context.INTEL_framebuffer_CMAA)
#define GLAD_GL_INTEL_map_texture (glad_gl_context.INTEL_map_texture)
#define GLAD_GL_INTEL_parallel_arrays (glad_gl_context.INTEL_parallel_arrays)
#define GLAD_GL_INTEL_performance_query (glad_gl_context.INTEL_performance_query)
#define GLAD_GL_KHR_blend_equation_advanced (glad_gl_context.KHR_blend_equation_advanced)
#define GLAD_GL_KHR_blend_equation_advanced_coherent (glad_gl_context.KHR_blend_equation_advanced_coherent)
#define GLAD_GL_KHR_context_flush_control (glad_gl_context.KHR_context_flush_control)
#define GLAD_GL_KHR_cooperative_matrix (glad_gl_context.KHR_cooperative_matrix)
#define GLAD_GL_KHR_debug (glad_gl_context.KHR_debug)
#define GLAD_GL_KHR_memory_scope_semantics (glad_gl_context.KHR_memory_scope_semantics)
#define GLAD_GL_KHR_no_error (glad_gl_context.KHR_no_error)
#define GLAD_GL_KHR_parallel_shader_compile (glad_gl_context.KHR_parallel_shader_compile)
#define GLAD_GL_KHR_robust_buffer_access_behavior (glad_gl_context.KHR_robust_buffer_access_behavior)
#define GLAD_GL_KHR_robustness (glad_gl_context.KHR_robustness)
#define GLAD_GL_KHR_shader_subgroup (glad_gl_context.KHR_shader_subgroup)
#define GLAD_GL_KHR_shader_subgroup_arithmetic (glad_gl_context.KHR_shader_subgroup_arithmetic)
#define GLAD_GL_KHR_shader_subgroup_ballot (glad_gl_context.KHR_shader_subgroup_ballot)
#define GLAD_GL_KHR_shader_subgroup_basic (glad_gl_context.KHR_shader_subgroup_basic)
#define GLAD_GL_KHR_shader_subgroup_clustered (glad_gl_context.KHR_shader_subgroup_clustered)
#define GLAD_GL_KHR_shader_subgroup_quad (glad_gl_context.KHR_shader_subgroup_quad)
#define GLAD_GL_KHR_shader_subgroup_rotate (glad_gl_context.KHR_shader_subgroup_rotate)
#define GLAD_GL_KHR_shader_subgroup_shuffle (glad_gl_context.KHR_shader_subgroup_shuffle)
#define GLAD_GL_KHR_shader_subgroup_shuffle_relative (glad_gl_context.KHR_shader_subgroup_shuffle_relative)
#define GLAD_GL_KHR_shader_subgroup_vote (glad_gl_context.KHR_shader_subgroup_vote)
#define GLAD_GL_KHR_texture_compression_astc_hdr (glad_gl_context.KHR_texture_compression_astc_hdr)
#define GLAD_GL_KHR_texture_compression_astc_ldr (glad_gl_context.KHR_texture_compression_astc_ldr)
#define GLAD_GL_KHR_texture_compression_astc_sliced_3d (glad_gl_context.KHR_texture_compression_astc_sliced_3d)
#define GLAD_GL_KHR_vulkan_glsl (glad_gl_context.KHR_vulkan_glsl)
#define GLAD_GL_MESAX_texture_stack (glad_gl_context.MESAX_texture_stack)
#define GLAD_GL_MESA_bgra (glad_gl_context.MESA_bgra)
#define GLAD_GL_MESA_framebuffer_flip_x (glad_gl_context.MESA_framebuffer_flip_x)
#define GLAD_GL_MESA_framebuffer_flip_y (glad_gl_context.MESA_framebuffer_flip_y)
#define GLAD_GL_MESA_framebuffer_swap_xy (glad_gl_context.MESA_framebuffer_swap_xy)
#define GLAD_GL_MESA_pack_invert (glad_gl_context.MESA_pack_invert)
#define GLAD_GL_MESA_program_binary_formats (glad_gl_context.MESA_program_binary_formats)
#define GLAD_GL_MESA_resize_buffers (glad_gl_context.MESA_resize_buffers)
#define GLAD_GL_MESA_sampler_objects (glad_gl_context.MESA_sampler_objects)
#define GLAD_GL_MESA_shader_integer_functions (glad_gl_context.MESA_shader_integer_functions)
#define GLAD_GL_MESA_texture_const_bandwidth (glad_gl_context.MESA_texture_const_bandwidth)
#define GLAD_GL_MESA_tile_raster_order (glad_gl_context.MESA_tile_raster_order)
#define GLAD_GL_MESA_window_pos (glad_gl_context.MESA_window_pos)
#define GLAD_GL_MESA_ycbcr_texture (glad_gl_context.MESA_ycbcr_texture)
#define GLAD_GL_NVX_blend_equation_advanced_multi_draw_buffers (glad_gl_context.NVX_blend_equation_advanced_multi_draw_buffers)
#define GLAD_GL_NVX_conditional_render (glad_gl_context.NVX_conditional_render)
#define GLAD_GL_NVX_gpu_memory_info (glad_gl_context.NVX_gpu_memory_info)
#define GLAD_GL_NVX_gpu_multicast2 (glad_gl_context.NVX_gpu_multicast2)
#define GLAD_GL_NVX_linked_gpu_multicast (glad_gl_context.NVX_linked_gpu_multicast)
#define GLAD_GL_NVX_multiview_per_view_attributes (glad_gl_context.NVX_multiview_per_view_attributes)
#define GLAD_GL_NVX_progress_fence (glad_gl_context.NVX_progress_fence)
#define GLAD_GL_NV_alpha_to_coverage_dither_control (glad_gl_context.NV_alpha_to_coverage_dither_control)
#define GLAD_GL_NV_bindless_multi_draw_indirect (glad_gl_context.NV_bindless_multi_draw_indirect)
#define GLAD_GL_NV_bindless_multi_draw_indirect_count (glad_gl_context.NV_bindless_multi_draw_indirect_count)
#define GLAD_GL_NV_bindless_texture (glad_gl_context.NV_bindless_texture)
#define GLAD_GL_NV_blend_equation_advanced (glad_gl_context.NV_blend_equation_advanced)
#define GLAD_GL_NV_blend_equation_advanced_coherent (glad_gl_context.NV_blend_equation_advanced_coherent)
#define GLAD_GL_NV_blend_minmax_factor (glad_gl_context.NV_blend_minmax_factor)
#define GLAD_GL_NV_blend_square (glad_gl_context.NV_blend_square)
#define GLAD_GL_NV_clip_space_w_scaling (glad_gl_context.NV_clip_space_w_scaling)
#define GLAD_GL_NV_cluster_acceleration_structure (glad_gl_context.NV_cluster_acceleration_structure)
#define GLAD_GL_NV_command_list (glad_gl_context.NV_command_list)
#define GLAD_GL_NV_compute_program5 (glad_gl_context.NV_compute_program5)
#define GLAD_GL_NV_compute_shader_derivatives (glad_gl_context.NV_compute_shader_derivatives)
#define GLAD_GL_NV_conditional_render (glad_gl_context.NV_conditional_render)
#define GLAD_GL_NV_conservative_raster (glad_gl_context.NV_conservative_raster)
#define GLAD_GL_NV_conservative_raster_dilate (glad_gl_context.NV_conservative_raster_dilate)
#define GLAD_GL_NV_conservative_raster_pre_snap (glad_gl_context.NV_conservative_raster_pre_snap)
#define GLAD_GL_NV_conservative_raster_pre_snap_triangles (glad_gl_context.NV_conservative_raster_pre_snap_triangles)
#define GLAD_GL_NV_conservative_raster_underestimation (glad_gl_context.NV_conservative_raster_underestimation)
#define GLAD_GL_NV_cooperative_matrix (glad_gl_context.NV_cooperative_matrix)
#define GLAD_GL_NV_cooperative_matrix2 (glad_gl_context.NV_cooperative_matrix2)
#define GLAD_GL_NV_cooperative_vector (glad_gl_context.NV_cooperative_vector)
#define GLAD_GL_NV_copy_buffer (glad_gl_context.NV_copy_buffer)
#define GLAD_GL_NV_copy_depth_to_color (glad_gl_context.NV_copy_depth_to_color)
#define GLAD_GL_NV_copy_image (glad_gl_context.NV_copy_image)
#define GLAD_GL_NV_coverage_sample (glad_gl_context.NV_coverage_sample)
#define GLAD_GL_NV_deep_texture3D (glad_gl_context.NV_deep_texture3D)
#define GLAD_GL_NV_depth_buffer_float (glad_gl_context.NV_depth_buffer_float)
#define GLAD_GL_NV_depth_clamp (glad_gl_context.NV_depth_clamp)
#define GLAD_GL_NV_depth_nonlinear (glad_gl_context.NV_depth_nonlinear)
#define GLAD_GL_NV_displacement_micromap (glad_gl_context.NV_displacement_micromap)
#define GLAD_GL_NV_draw_buffers (glad_gl_context.NV_draw_buffers)
#define GLAD_GL_NV_draw_instanced (glad_gl_context.NV_draw_instanced)
#define GLAD_GL_NV_draw_texture (glad_gl_context.NV_draw_texture)
#define GLAD_GL_NV_draw_vulkan_image (glad_gl_context.NV_draw_vulkan_image)
#define GLAD_GL_NV_evaluators (glad_gl_context.NV_evaluators)
#define GLAD_GL_NV_explicit_attrib_location (glad_gl_context.NV_explicit_attrib_location)
#define GLAD_GL_NV_explicit_multisample (glad_gl_context.NV_explicit_multisample)
#define GLAD_GL_NV_fbo_color_attachments (glad_gl_context.NV_fbo_color_attachments)
#define GLAD_GL_NV_fence (glad_gl_context.NV_fence)
#define GLAD_GL_NV_fill_rectangle (glad_gl_context.NV_fill_rectangle)
#define GLAD_GL_NV_float_buffer (glad_gl_context.NV_float_buffer)
#define GLAD_GL_NV_fog_distance (glad_gl_context.NV_fog_distance)
#define GLAD_GL_NV_fragment_coverage_to_color (glad_gl_context.NV_fragment_coverage_to_color)
#define GLAD_GL_NV_fragment_program (glad_gl_context.NV_fragment_program)
#define GLAD_GL_NV_fragment_program2 (glad_gl_context.NV_fragment_program2)
#define GLAD_GL_NV_fragment_program4 (glad_gl_context.NV_fragment_program4)
#define GLAD_GL_NV_fragment_program_option (glad_gl_context.NV_fragment_program_option)
#define GLAD_GL_NV_fragment_shader_barycentric (glad_gl_context.NV_fragment_shader_barycentric)
#define GLAD_GL_NV_fragment_shader_interlock (glad_gl_context.NV_fragment_shader_interlock)
#define GLAD_GL_NV_framebuffer_blit (glad_gl_context.NV_framebuffer_blit)
#define GLAD_GL_NV_framebuffer_mixed_samples (glad_gl_context.NV_framebuffer_mixed_samples)
#define GLAD_GL_NV_framebuffer_multisample (glad_gl_context.NV_framebuffer_multisample)
#define GLAD_GL_NV_framebuffer_multisample_coverage (glad_gl_context.NV_framebuffer_multisample_coverage)
#define GLAD_GL_NV_generate_mipmap_sRGB (glad_gl_context.NV_generate_mipmap_sRGB)
#define GLAD_GL_NV_geometry_program4 (glad_gl_context.NV_geometry_program4)
#define GLAD_GL_NV_geometry_shader4 (glad_gl_context.NV_geometry_shader4)
#define GLAD_GL_NV_geometry_shader_passthrough (glad_gl_context.NV_geometry_shader_passthrough)
#define GLAD_GL_NV_gpu_multicast (glad_gl_context.NV_gpu_multicast)
#define GLAD_GL_NV_gpu_program4 (glad_gl_context.NV_gpu_program4)
#define GLAD_GL_NV_gpu_program5 (glad_gl_context.NV_gpu_program5)
#define GLAD_GL_NV_gpu_program5_mem_extended (glad_gl_context.NV_gpu_program5_mem_extended)
#define GLAD_GL_NV_gpu_shader5 (glad_gl_context.NV_gpu_shader5)
#define GLAD_GL_NV_half_float (glad_gl_context.NV_half_float)
#define GLAD_GL_NV_image_formats (glad_gl_context.NV_image_formats)
#define GLAD_GL_NV_instanced_arrays (glad_gl_context.NV_instanced_arrays)
#define GLAD_GL_NV_integer_cooperative_matrix (glad_gl_context.NV_integer_cooperative_matrix)
#define GLAD_GL_NV_internalformat_sample_query (glad_gl_context.NV_internalformat_sample_query)
#define GLAD_GL_NV_light_max_exponent (glad_gl_context.NV_light_max_exponent)
#define GLAD_GL_NV_linear_swept_spheres (glad_gl_context.NV_linear_swept_spheres)
#define GLAD_GL_NV_memory_attachment (glad_gl_context.NV_memory_attachment)
#define GLAD_GL_NV_memory_object_sparse (glad_gl_context.NV_memory_object_sparse)
#define GLAD_GL_NV_mesh_shader (glad_gl_context.NV_mesh_shader)
#define GLAD_GL_NV_multisample_coverage (glad_gl_context.NV_multisample_coverage)
#define GLAD_GL_NV_multisample_filter_hint (glad_gl_context.NV_multisample_filter_hint)
#define GLAD_GL_NV_non_square_matrices (glad_gl_context.NV_non_square_matrices)
#define GLAD_GL_NV_occlusion_query (glad_gl_context.NV_occlusion_query)
#define GLAD_GL_NV_pack_subimage (glad_gl_context.NV_pack_subimage)
#define GLAD_GL_NV_packed_depth_stencil (glad_gl_context.NV_packed_depth_stencil)
#define GLAD_GL_NV_parameter_buffer_object (glad_gl_context.NV_parameter_buffer_object)
#define GLAD_GL_NV_parameter_buffer_object2 (glad_gl_context.NV_parameter_buffer_object2)
#define GLAD_GL_NV_path_rendering (glad_gl_context.NV_path_rendering)
#define GLAD_GL_NV_path_rendering_shared_edge (glad_gl_context.NV_path_rendering_shared_edge)
#define GLAD_GL_NV_pixel_buffer_object (glad_gl_context.NV_pixel_buffer_object)
#define GLAD_GL_NV_pixel_data_range (glad_gl_context.NV_pixel_data_range)
#define GLAD_GL_NV_point_sprite (glad_gl_context.NV_point_sprite)
#define GLAD_GL_NV_polygon_mode (glad_gl_context.NV_polygon_mode)
#define GLAD_GL_NV_present_video (glad_gl_context.NV_present_video)
#define GLAD_GL_NV_primitive_restart (glad_gl_context.NV_primitive_restart)
#define GLAD_GL_NV_primitive_shading_rate (glad_gl_context.NV_primitive_shading_rate)
#define GLAD_GL_NV_query_resource (glad_gl_context.NV_query_resource)
#define GLAD_GL_NV_query_resource_tag (glad_gl_context.NV_query_resource_tag)
#define GLAD_GL_NV_ray_tracing (glad_gl_context.NV_ray_tracing)
#define GLAD_GL_NV_ray_tracing_motion_blur (glad_gl_context.NV_ray_tracing_motion_blur)
#define GLAD_GL_NV_read_buffer (glad_gl_context.NV_read_buffer)
#define GLAD_GL_NV_read_buffer_front (glad_gl_context.NV_read_buffer_front)
#define GLAD_GL_NV_read_depth (glad_gl_context.NV_read_depth)
#define GLAD_GL_NV_read_depth_stencil (glad_gl_context.NV_read_depth_stencil)
#define GLAD_GL_NV_read_stencil (glad_gl_context.NV_read_stencil)
#define GLAD_GL_NV_register_combiners (glad_gl_context.NV_register_combiners)
#define GLAD_GL_NV_register_combiners2 (glad_gl_context.NV_register_combiners2)
#define GLAD_GL_NV_representative_fragment_test (glad_gl_context.NV_representative_fragment_test)
#define GLAD_GL_NV_robustness_video_memory_purge (glad_gl_context.NV_robustness_video_memory_purge)
#define GLAD_GL_NV_sRGB_formats (glad_gl_context.NV_sRGB_formats)
#define GLAD_GL_NV_sample_locations (glad_gl_context.NV_sample_locations)
#define GLAD_GL_NV_sample_mask_override_coverage (glad_gl_context.NV_sample_mask_override_coverage)
#define GLAD_GL_NV_scissor_exclusive (glad_gl_context.NV_scissor_exclusive)
#define GLAD_GL_NV_shader_atomic_counters (glad_gl_context.NV_shader_atomic_counters)
#define GLAD_GL_NV_shader_atomic_float (glad_gl_context.NV_shader_atomic_float)
#define GLAD_GL_NV_shader_atomic_float64 (glad_gl_context.NV_shader_atomic_float64)
#define GLAD_GL_NV_shader_atomic_fp16_vector (glad_gl_context.NV_shader_atomic_fp16_vector)
#define GLAD_GL_NV_shader_atomic_int64 (glad_gl_context.NV_shader_atomic_int64)
#define GLAD_GL_NV_shader_buffer_load (glad_gl_context.NV_shader_buffer_load)
#define GLAD_GL_NV_shader_buffer_store (glad_gl_context.NV_shader_buffer_store)
#define GLAD_GL_NV_shader_invocation_reorder (glad_gl_context.NV_shader_invocation_reorder)
#define GLAD_GL_NV_shader_noperspective_interpolation (glad_gl_context.NV_shader_noperspective_interpolation)
#define GLAD_GL_NV_shader_sm_builtins (glad_gl_context.NV_shader_sm_builtins)
#define GLAD_GL_NV_shader_storage_buffer_object (glad_gl_context.NV_shader_storage_buffer_object)
#define GLAD_GL_NV_shader_subgroup_partitioned (glad_gl_context.NV_shader_subgroup_partitioned)
#define GLAD_GL_NV_shader_texture_footprint (glad_gl_context.NV_shader_texture_footprint)
#define GLAD_GL_NV_shader_thread_group (glad_gl_context.NV_shader_thread_group)
#define GLAD_GL_NV_shader_thread_shuffle (glad_gl_context.NV_shader_thread_shuffle)
#define GLAD_GL_NV_shading_rate_image (glad_gl_context.NV_shading_rate_image)
#define GLAD_GL_NV_shadow_samplers_array (glad_gl_context.NV_shadow_samplers_array)
#define GLAD_GL_NV_shadow_samplers_cube (glad_gl_context.NV_shadow_samplers_cube)
#define GLAD_GL_NV_stereo_view_rendering (glad_gl_context.NV_stereo_view_rendering)
#define GLAD_GL_NV_tessellation_program5 (glad_gl_context.NV_tessellation_program5)
#define GLAD_GL_NV_texgen_emboss (glad_gl_context.NV_texgen_emboss)
#define GLAD_GL_NV_texgen_reflection (glad_gl_context.NV_texgen_reflection)
#define GLAD_GL_NV_texture_barrier (glad_gl_context.NV_texture_barrier)
#define GLAD_GL_NV_texture_border_clamp (glad_gl_context.NV_texture_border_clamp)
#define GLAD_GL_NV_texture_compression_s3tc_update (glad_gl_context.NV_texture_compression_s3tc_update)
#define GLAD_GL_NV_texture_compression_vtc (glad_gl_context.NV_texture_compression_vtc)
#define GLAD_GL_NV_texture_env_combine4 (glad_gl_context.NV_texture_env_combine4)
#define GLAD_GL_NV_texture_expand_normal (glad_gl_context.NV_texture_expand_normal)
#define GLAD_GL_NV_texture_multisample (glad_gl_context.NV_texture_multisample)
#define GLAD_GL_NV_texture_npot_2D_mipmap (glad_gl_context.NV_texture_npot_2D_mipmap)
#define GLAD_GL_NV_texture_rectangle (glad_gl_context.NV_texture_rectangle)
#define GLAD_GL_NV_texture_rectangle_compressed (glad_gl_context.NV_texture_rectangle_compressed)
#define GLAD_GL_NV_texture_shader (glad_gl_context.NV_texture_shader)
#define GLAD_GL_NV_texture_shader2 (glad_gl_context.NV_texture_shader2)
#define GLAD_GL_NV_texture_shader3 (glad_gl_context.NV_texture_shader3)
#define GLAD_GL_NV_timeline_semaphore (glad_gl_context.NV_timeline_semaphore)
#define GLAD_GL_NV_transform_feedback (glad_gl_context.NV_transform_feedback)
#define GLAD_GL_NV_transform_feedback2 (glad_gl_context.NV_transform_feedback2)
#define GLAD_GL_NV_uniform_buffer_std430_layout (glad_gl_context.NV_uniform_buffer_std430_layout)
#define GLAD_GL_NV_uniform_buffer_unified_memory (glad_gl_context.NV_uniform_buffer_unified_memory)
#define GLAD_GL_NV_vdpau_interop (glad_gl_context.NV_vdpau_interop)
#define GLAD_GL_NV_vdpau_interop2 (glad_gl_context.NV_vdpau_interop2)
#define GLAD_GL_NV_vertex_array_range (glad_gl_context.NV_vertex_array_range)
#define GLAD_GL_NV_vertex_array_range2 (glad_gl_context.NV_vertex_array_range2)
#define GLAD_GL_NV_vertex_attrib_integer_64bit (glad_gl_context.NV_vertex_attrib_integer_64bit)
#define GLAD_GL_NV_vertex_buffer_unified_memory (glad_gl_context.NV_vertex_buffer_unified_memory)
#define GLAD_GL_NV_vertex_program (glad_gl_context.NV_vertex_program)
#define GLAD_GL_NV_vertex_program1_1 (glad_gl_context.NV_vertex_program1_1)
#define GLAD_GL_NV_vertex_program2 (glad_gl_context.NV_vertex_program2)
#define GLAD_GL_NV_vertex_program2_option (glad_gl_context.NV_vertex_program2_option)
#define GLAD_GL_NV_vertex_program3 (glad_gl_context.NV_vertex_program3)
#define GLAD_GL_NV_vertex_program4 (glad_gl_context.NV_vertex_program4)
#define GLAD_GL_NV_video_capture (glad_gl_context.NV_video_capture)
#define GLAD_GL_NV_viewport_array (glad_gl_context.NV_viewport_array)
#define GLAD_GL_NV_viewport_array2 (glad_gl_context.NV_viewport_array2)
#define GLAD_GL_NV_viewport_swizzle (glad_gl_context.NV_viewport_swizzle)
#define GLAD_GL_OES_EGL_image (glad_gl_context.OES_EGL_image)
#define GLAD_GL_OES_EGL_image_external (glad_gl_context.OES_EGL_image_external)
#define GLAD_GL_OES_EGL_image_external_essl3 (glad_gl_context.OES_EGL_image_external_essl3)
#define GLAD_GL_OES_byte_coordinates (glad_gl_context.OES_byte_coordinates)
#define GLAD_GL_OES_compressed_ETC1_RGB8_sub_texture (glad_gl_context.OES_compressed_ETC1_RGB8_sub_texture)
#define GLAD_GL_OES_compressed_ETC1_RGB8_texture (glad_gl_context.OES_compressed_ETC1_RGB8_texture)
#define GLAD_GL_OES_compressed_paletted_texture (glad_gl_context.OES_compressed_paletted_texture)
#define GLAD_GL_OES_copy_image (glad_gl_context.OES_copy_image)
#define GLAD_GL_OES_depth24 (glad_gl_context.OES_depth24)
#define GLAD_GL_OES_depth32 (glad_gl_context.OES_depth32)
#define GLAD_GL_OES_depth_texture (glad_gl_context.OES_depth_texture)
#define GLAD_GL_OES_draw_buffers_indexed (glad_gl_context.OES_draw_buffers_indexed)
#define GLAD_GL_OES_draw_elements_base_vertex (glad_gl_context.OES_draw_elements_base_vertex)
#define GLAD_GL_OES_element_index_uint (glad_gl_context.OES_element_index_uint)
#define GLAD_GL_OES_fbo_render_mipmap (glad_gl_context.OES_fbo_render_mipmap)
#define GLAD_GL_OES_fixed_point (glad_gl_context.OES_fixed_point)
#define GLAD_GL_OES_fragment_precision_high (glad_gl_context.OES_fragment_precision_high)
#define GLAD_GL_OES_geometry_point_size (glad_gl_context.OES_geometry_point_size)
#define GLAD_GL_OES_geometry_shader (glad_gl_context.OES_geometry_shader)
#define GLAD_GL_OES_get_program_binary (glad_gl_context.OES_get_program_binary)
#define GLAD_GL_OES_gpu_shader5 (glad_gl_context.OES_gpu_shader5)
#define GLAD_GL_OES_mapbuffer (glad_gl_context.OES_mapbuffer)
#define GLAD_GL_OES_packed_depth_stencil (glad_gl_context.OES_packed_depth_stencil)
#define GLAD_GL_OES_primitive_bounding_box (glad_gl_context.OES_primitive_bounding_box)
#define GLAD_GL_OES_query_matrix (glad_gl_context.OES_query_matrix)
#define GLAD_GL_OES_read_format (glad_gl_context.OES_read_format)
#define GLAD_GL_OES_required_internalformat (glad_gl_context.OES_required_internalformat)
#define GLAD_GL_OES_rgb8_rgba8 (glad_gl_context.OES_rgb8_rgba8)
#define GLAD_GL_OES_sample_shading (glad_gl_context.OES_sample_shading)
#define GLAD_GL_OES_sample_variables (glad_gl_context.OES_sample_variables)
#define GLAD_GL_OES_shader_image_atomic (glad_gl_context.OES_shader_image_atomic)
#define GLAD_GL_OES_shader_io_blocks (glad_gl_context.OES_shader_io_blocks)
#define GLAD_GL_OES_shader_multisample_interpolation (glad_gl_context.OES_shader_multisample_interpolation)
#define GLAD_GL_OES_single_precision (glad_gl_context.OES_single_precision)
#define GLAD_GL_OES_standard_derivatives (glad_gl_context.OES_standard_derivatives)
#define GLAD_GL_OES_stencil1 (glad_gl_context.OES_stencil1)
#define GLAD_GL_OES_stencil4 (glad_gl_context.OES_stencil4)
#define GLAD_GL_OES_surfaceless_context (glad_gl_context.OES_surfaceless_context)
#define GLAD_GL_OES_tessellation_point_size (glad_gl_context.OES_tessellation_point_size)
#define GLAD_GL_OES_tessellation_shader (glad_gl_context.OES_tessellation_shader)
#define GLAD_GL_OES_texture_3D (glad_gl_context.OES_texture_3D)
#define GLAD_GL_OES_texture_border_clamp (glad_gl_context.OES_texture_border_clamp)
#define GLAD_GL_OES_texture_buffer (glad_gl_context.OES_texture_buffer)
#define GLAD_GL_OES_texture_compression_astc (glad_gl_context.OES_texture_compression_astc)
#define GLAD_GL_OES_texture_cube_map_array (glad_gl_context.OES_texture_cube_map_array)
#define GLAD_GL_OES_texture_float (glad_gl_context.OES_texture_float)
#define GLAD_GL_OES_texture_float_linear (glad_gl_context.OES_texture_float_linear)
#define GLAD_GL_OES_texture_half_float (glad_gl_context.OES_texture_half_float)
#define GLAD_GL_OES_texture_half_float_linear (glad_gl_context.OES_texture_half_float_linear)
#define GLAD_GL_OES_texture_npot (glad_gl_context.OES_texture_npot)
#define GLAD_GL_OES_texture_stencil8 (glad_gl_context.OES_texture_stencil8)
#define GLAD_GL_OES_texture_storage_multisample_2d_array (glad_gl_context.OES_texture_storage_multisample_2d_array)
#define GLAD_GL_OES_texture_view (glad_gl_context.OES_texture_view)
#define GLAD_GL_OES_vertex_array_object (glad_gl_context.OES_vertex_array_object)
#define GLAD_GL_OES_vertex_half_float (glad_gl_context.OES_vertex_half_float)
#define GLAD_GL_OES_vertex_type_10_10_10_2 (glad_gl_context.OES_vertex_type_10_10_10_2)
#define GLAD_GL_OES_viewport_array (glad_gl_context.OES_viewport_array)
#define GLAD_GL_OML_interlace (glad_gl_context.OML_interlace)
#define GLAD_GL_OML_resample (glad_gl_context.OML_resample)
#define GLAD_GL_OML_subsample (glad_gl_context.OML_subsample)
#define GLAD_GL_OVR_multiview (glad_gl_context.OVR_multiview)
#define GLAD_GL_OVR_multiview2 (glad_gl_context.OVR_multiview2)
#define GLAD_GL_OVR_multiview_multisampled_render_to_texture (glad_gl_context.OVR_multiview_multisampled_render_to_texture)
#define GLAD_GL_PGI_misc_hints (glad_gl_context.PGI_misc_hints)
#define GLAD_GL_PGI_vertex_hints (glad_gl_context.PGI_vertex_hints)
#define GLAD_GL_QCOM_YUV_texture_gather (glad_gl_context.QCOM_YUV_texture_gather)
#define GLAD_GL_QCOM_alpha_test (glad_gl_context.QCOM_alpha_test)
#define GLAD_GL_QCOM_binning_control (glad_gl_context.QCOM_binning_control)
#define GLAD_GL_QCOM_cooperative_matrix_conversion (glad_gl_context.QCOM_cooperative_matrix_conversion)
#define GLAD_GL_QCOM_driver_control (glad_gl_context.QCOM_driver_control)
#define GLAD_GL_QCOM_extended_get (glad_gl_context.QCOM_extended_get)
#define GLAD_GL_QCOM_extended_get2 (glad_gl_context.QCOM_extended_get2)
#define GLAD_GL_QCOM_frame_extrapolation (glad_gl_context.QCOM_frame_extrapolation)
#define GLAD_GL_QCOM_framebuffer_foveated (glad_gl_context.QCOM_framebuffer_foveated)
#define GLAD_GL_QCOM_image_processing (glad_gl_context.QCOM_image_processing)
#define GLAD_GL_QCOM_image_processing2 (glad_gl_context.QCOM_image_processing2)
#define GLAD_GL_QCOM_motion_estimation (glad_gl_context.QCOM_motion_estimation)
#define GLAD_GL_QCOM_perfmon_global_mode (glad_gl_context.QCOM_perfmon_global_mode)
#define GLAD_GL_QCOM_render_sRGB_R8_RG8 (glad_gl_context.QCOM_render_sRGB_R8_RG8)
#define GLAD_GL_QCOM_render_shared_exponent (glad_gl_context.QCOM_render_shared_exponent)
#define GLAD_GL_QCOM_shader_framebuffer_fetch_noncoherent (glad_gl_context.QCOM_shader_framebuffer_fetch_noncoherent)
#define GLAD_GL_QCOM_shader_framebuffer_fetch_rate (glad_gl_context.QCOM_shader_framebuffer_fetch_rate)
#define GLAD_GL_QCOM_shading_rate (glad_gl_context.QCOM_shading_rate)
#define GLAD_GL_QCOM_texture_foveated (glad_gl_context.QCOM_texture_foveated)
#define GLAD_GL_QCOM_texture_foveated2 (glad_gl_context.QCOM_texture_foveated2)
#define GLAD_GL_QCOM_texture_foveated_subsampled_layout (glad_gl_context.QCOM_texture_foveated_subsampled_layout)
#define GLAD_GL_QCOM_texture_lod_bias (glad_gl_context.QCOM_texture_lod_bias)
#define GLAD_GL_QCOM_tile_shading (glad_gl_context.QCOM_tile_shading)
#define GLAD_GL_QCOM_tiled_rendering (glad_gl_context.QCOM_tiled_rendering)
#define GLAD_GL_QCOM_writeonly_rendering (glad_gl_context.QCOM_writeonly_rendering)
#define GLAD_GL_QCOM_ycbcr_degamma (glad_gl_context.QCOM_ycbcr_degamma)
#define GLAD_GL_REND_screen_coordinates (glad_gl_context.REND_screen_coordinates)
#define GLAD_GL_S3_s3tc (glad_gl_context.S3_s3tc)
#define GLAD_GL_SGIS_detail_texture (glad_gl_context.SGIS_detail_texture)
#define GLAD_GL_SGIS_fog_function (glad_gl_context.SGIS_fog_function)
#define GLAD_GL_SGIS_generate_mipmap (glad_gl_context.SGIS_generate_mipmap)
#define GLAD_GL_SGIS_multisample (glad_gl_context.SGIS_multisample)
#define GLAD_GL_SGIS_pixel_texture (glad_gl_context.SGIS_pixel_texture)
#define GLAD_GL_SGIS_point_line_texgen (glad_gl_context.SGIS_point_line_texgen)
#define GLAD_GL_SGIS_point_parameters (glad_gl_context.SGIS_point_parameters)
#define GLAD_GL_SGIS_sharpen_texture (glad_gl_context.SGIS_sharpen_texture)
#define GLAD_GL_SGIS_texture4D (glad_gl_context.SGIS_texture4D)
#define GLAD_GL_SGIS_texture_border_clamp (glad_gl_context.SGIS_texture_border_clamp)
#define GLAD_GL_SGIS_texture_color_mask (glad_gl_context.SGIS_texture_color_mask)
#define GLAD_GL_SGIS_texture_edge_clamp (glad_gl_context.SGIS_texture_edge_clamp)
#define GLAD_GL_SGIS_texture_filter4 (glad_gl_context.SGIS_texture_filter4)
#define GLAD_GL_SGIS_texture_lod (glad_gl_context.SGIS_texture_lod)
#define GLAD_GL_SGIS_texture_select (glad_gl_context.SGIS_texture_select)
#define GLAD_GL_SGIX_async (glad_gl_context.SGIX_async)
#define GLAD_GL_SGIX_async_histogram (glad_gl_context.SGIX_async_histogram)
#define GLAD_GL_SGIX_async_pixel (glad_gl_context.SGIX_async_pixel)
#define GLAD_GL_SGIX_blend_alpha_minmax (glad_gl_context.SGIX_blend_alpha_minmax)
#define GLAD_GL_SGIX_calligraphic_fragment (glad_gl_context.SGIX_calligraphic_fragment)
#define GLAD_GL_SGIX_clipmap (glad_gl_context.SGIX_clipmap)
#define GLAD_GL_SGIX_convolution_accuracy (glad_gl_context.SGIX_convolution_accuracy)
#define GLAD_GL_SGIX_depth_pass_instrument (glad_gl_context.SGIX_depth_pass_instrument)
#define GLAD_GL_SGIX_depth_texture (glad_gl_context.SGIX_depth_texture)
#define GLAD_GL_SGIX_flush_raster (glad_gl_context.SGIX_flush_raster)
#define GLAD_GL_SGIX_fog_offset (glad_gl_context.SGIX_fog_offset)
#define GLAD_GL_SGIX_fragment_lighting (glad_gl_context.SGIX_fragment_lighting)
#define GLAD_GL_SGIX_framezoom (glad_gl_context.SGIX_framezoom)
#define GLAD_GL_SGIX_igloo_interface (glad_gl_context.SGIX_igloo_interface)
#define GLAD_GL_SGIX_instruments (glad_gl_context.SGIX_instruments)
#define GLAD_GL_SGIX_interlace (glad_gl_context.SGIX_interlace)
#define GLAD_GL_SGIX_ir_instrument1 (glad_gl_context.SGIX_ir_instrument1)
#define GLAD_GL_SGIX_list_priority (glad_gl_context.SGIX_list_priority)
#define GLAD_GL_SGIX_pixel_texture (glad_gl_context.SGIX_pixel_texture)
#define GLAD_GL_SGIX_pixel_tiles (glad_gl_context.SGIX_pixel_tiles)
#define GLAD_GL_SGIX_polynomial_ffd (glad_gl_context.SGIX_polynomial_ffd)
#define GLAD_GL_SGIX_reference_plane (glad_gl_context.SGIX_reference_plane)
#define GLAD_GL_SGIX_resample (glad_gl_context.SGIX_resample)
#define GLAD_GL_SGIX_scalebias_hint (glad_gl_context.SGIX_scalebias_hint)
#define GLAD_GL_SGIX_shadow (glad_gl_context.SGIX_shadow)
#define GLAD_GL_SGIX_shadow_ambient (glad_gl_context.SGIX_shadow_ambient)
#define GLAD_GL_SGIX_sprite (glad_gl_context.SGIX_sprite)
#define GLAD_GL_SGIX_subsample (glad_gl_context.SGIX_subsample)
#define GLAD_GL_SGIX_tag_sample_buffer (glad_gl_context.SGIX_tag_sample_buffer)
#define GLAD_GL_SGIX_texture_add_env (glad_gl_context.SGIX_texture_add_env)
#define GLAD_GL_SGIX_texture_coordinate_clamp (glad_gl_context.SGIX_texture_coordinate_clamp)
#define GLAD_GL_SGIX_texture_lod_bias (glad_gl_context.SGIX_texture_lod_bias)
#define GLAD_GL_SGIX_texture_multi_buffer (glad_gl_context.SGIX_texture_multi_buffer)
#define GLAD_GL_SGIX_texture_scale_bias (glad_gl_context.SGIX_texture_scale_bias)
#define GLAD_GL_SGIX_vertex_preclip (glad_gl_context.SGIX_vertex_preclip)
#define GLAD_GL_SGIX_ycrcb (glad_gl_context.SGIX_ycrcb)
#define GLAD_GL_SGIX_ycrcb_subsample (glad_gl_context.SGIX_ycrcb_subsample)
#define GLAD_GL_SGIX_ycrcba (glad_gl_context.SGIX_ycrcba)
#define GLAD_GL_SGI_color_matrix (glad_gl_context.SGI_color_matrix)
#define GLAD_GL_SGI_color_table (glad_gl_context.SGI_color_table)
#define GLAD_GL_SGI_texture_color_table (glad_gl_context.SGI_texture_color_table)
#define GLAD_GL_SUNX_constant_data (glad_gl_context.SUNX_constant_data)
#define GLAD_GL_SUN_convolution_border_modes (glad_gl_context.SUN_convolution_border_modes)
#define GLAD_GL_SUN_global_alpha (glad_gl_context.SUN_global_alpha)
#define GLAD_GL_SUN_mesh_array (glad_gl_context.SUN_mesh_array)
#define GLAD_GL_SUN_slice_accum (glad_gl_context.SUN_slice_accum)
#define GLAD_GL_SUN_triangle_list (glad_gl_context.SUN_triangle_list)
#define GLAD_GL_SUN_vertex (glad_gl_context.SUN_vertex)
#define GLAD_GL_VIV_shader_binary (glad_gl_context.VIV_shader_binary)
#define GLAD_GL_WIN_phong_shading (glad_gl_context.WIN_phong_shading)
#define GLAD_GL_WIN_specular_fog (glad_gl_context.WIN_specular_fog)

#ifdef __INTELLISENSE__
void glCullFace(GLenum mode);
void glFrontFace(GLenum mode);
void glHint(GLenum target, GLenum mode);
void glLineWidth(GLfloat width);
void glPointSize(GLfloat size);
void glPolygonMode(GLenum face, GLenum mode);
void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
void glTexParameterf(GLenum target, GLenum pname, GLfloat param);
void glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params);
void glTexParameteri(GLenum target, GLenum pname, GLint param);
void glTexParameteriv(GLenum target, GLenum pname, const GLint * params);
void glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
void glDrawBuffer(GLenum buf);
void glClear(GLbitfield mask);
void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glClearStencil(GLint s);
void glClearDepth(GLdouble depth);
void glStencilMask(GLuint mask);
void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void glDepthMask(GLboolean flag);
void glDisable(GLenum cap);
void glEnable(GLenum cap);
void glFinish(void);
void glFlush(void);
void glBlendFunc(GLenum sfactor, GLenum dfactor);
void glLogicOp(GLenum opcode);
void glStencilFunc(GLenum func, GLint ref, GLuint mask);
void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
void glDepthFunc(GLenum func);
void glPixelStoref(GLenum pname, GLfloat param);
void glPixelStorei(GLenum pname, GLint param);
void glReadBuffer(GLenum src);
void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
void glGetBooleanv(GLenum pname, GLboolean * data);
void glGetDoublev(GLenum pname, GLdouble * data);
GLenum glGetError(void);
void glGetFloatv(GLenum pname, GLfloat * data);
void glGetIntegerv(GLenum pname, GLint * data);
const GLubyte * glGetString(GLenum name);
void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params);
void glGetTexParameteriv(GLenum target, GLenum pname, GLint * params);
void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params);
void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params);
GLboolean glIsEnabled(GLenum cap);
void glDepthRange(GLdouble n, GLdouble f);
void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
void glDrawArrays(GLenum mode, GLint first, GLsizei count);
void glDrawElements(GLenum mode, GLsizei count, GLenum type, const void * indices);
void glGetPointerv(GLenum pname, void ** params);
void glPolygonOffset(GLfloat factor, GLfloat units);
void glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glBindTexture(GLenum target, GLuint texture);
void glDeleteTextures(GLsizei n, const GLuint * textures);
void glGenTextures(GLsizei n, GLuint * textures);
GLboolean glIsTexture(GLuint texture);
void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glActiveTexture(GLenum texture);
void glSampleCoverage(GLfloat value, GLboolean invert);
void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
void glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
void glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
void glGetCompressedTexImage(GLenum target, GLint level, void * img);
void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void glMultiDrawArrays(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
void glMultiDrawElements(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
void glPointParameterf(GLenum pname, GLfloat param);
void glPointParameterfv(GLenum pname, const GLfloat * params);
void glPointParameteri(GLenum pname, GLint param);
void glPointParameteriv(GLenum pname, const GLint * params);
void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glBlendEquation(GLenum mode);
void glGenQueries(GLsizei n, GLuint * ids);
void glDeleteQueries(GLsizei n, const GLuint * ids);
GLboolean glIsQuery(GLuint id);
void glBeginQuery(GLenum target, GLuint id);
void glEndQuery(GLenum target);
void glGetQueryiv(GLenum target, GLenum pname, GLint * params);
void glGetQueryObjectiv(GLuint id, GLenum pname, GLint * params);
void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params);
void glBindBuffer(GLenum target, GLuint buffer);
void glDeleteBuffers(GLsizei n, const GLuint * buffers);
void glGenBuffers(GLsizei n, GLuint * buffers);
GLboolean glIsBuffer(GLuint buffer);
void glBufferData(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
void glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
void * glMapBuffer(GLenum target, GLenum access);
GLboolean glUnmapBuffer(GLenum target);
void glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params);
void glGetBufferPointerv(GLenum target, GLenum pname, void ** params);
void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
void glDrawBuffers(GLsizei n, const GLenum * bufs);
void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
void glStencilMaskSeparate(GLenum face, GLuint mask);
void glAttachShader(GLuint program, GLuint shader);
void glBindAttribLocation(GLuint program, GLuint index, const GLchar * name);
void glCompileShader(GLuint shader);
GLuint glCreateProgram(void);
GLuint glCreateShader(GLenum type);
void glDeleteProgram(GLuint program);
void glDeleteShader(GLuint shader);
void glDetachShader(GLuint program, GLuint shader);
void glDisableVertexAttribArray(GLuint index);
void glEnableVertexAttribArray(GLuint index);
void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
GLint glGetAttribLocation(GLuint program, const GLchar * name);
void glGetProgramiv(GLuint program, GLenum pname, GLint * params);
void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void glGetShaderiv(GLuint shader, GLenum pname, GLint * params);
void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
GLint glGetUniformLocation(GLuint program, const GLchar * name);
void glGetUniformfv(GLuint program, GLint location, GLfloat * params);
void glGetUniformiv(GLuint program, GLint location, GLint * params);
void glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble * params);
void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params);
void glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params);
void glGetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer);
GLboolean glIsProgram(GLuint program);
GLboolean glIsShader(GLuint shader);
void glLinkProgram(GLuint program);
void glShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
void glUseProgram(GLuint program);
void glUniform1f(GLint location, GLfloat v0);
void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void glUniform1i(GLint location, GLint v0);
void glUniform2i(GLint location, GLint v0, GLint v1);
void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void glUniform1fv(GLint location, GLsizei count, const GLfloat * value);
void glUniform2fv(GLint location, GLsizei count, const GLfloat * value);
void glUniform3fv(GLint location, GLsizei count, const GLfloat * value);
void glUniform4fv(GLint location, GLsizei count, const GLfloat * value);
void glUniform1iv(GLint location, GLsizei count, const GLint * value);
void glUniform2iv(GLint location, GLsizei count, const GLint * value);
void glUniform3iv(GLint location, GLsizei count, const GLint * value);
void glUniform4iv(GLint location, GLsizei count, const GLint * value);
void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glValidateProgram(GLuint program);
void glVertexAttrib1d(GLuint index, GLdouble x);
void glVertexAttrib1dv(GLuint index, const GLdouble * v);
void glVertexAttrib1f(GLuint index, GLfloat x);
void glVertexAttrib1fv(GLuint index, const GLfloat * v);
void glVertexAttrib1s(GLuint index, GLshort x);
void glVertexAttrib1sv(GLuint index, const GLshort * v);
void glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
void glVertexAttrib2dv(GLuint index, const GLdouble * v);
void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
void glVertexAttrib2fv(GLuint index, const GLfloat * v);
void glVertexAttrib2s(GLuint index, GLshort x, GLshort y);
void glVertexAttrib2sv(GLuint index, const GLshort * v);
void glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void glVertexAttrib3dv(GLuint index, const GLdouble * v);
void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void glVertexAttrib3fv(GLuint index, const GLfloat * v);
void glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
void glVertexAttrib3sv(GLuint index, const GLshort * v);
void glVertexAttrib4Nbv(GLuint index, const GLbyte * v);
void glVertexAttrib4Niv(GLuint index, const GLint * v);
void glVertexAttrib4Nsv(GLuint index, const GLshort * v);
void glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void glVertexAttrib4Nubv(GLuint index, const GLubyte * v);
void glVertexAttrib4Nuiv(GLuint index, const GLuint * v);
void glVertexAttrib4Nusv(GLuint index, const GLushort * v);
void glVertexAttrib4bv(GLuint index, const GLbyte * v);
void glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glVertexAttrib4dv(GLuint index, const GLdouble * v);
void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glVertexAttrib4fv(GLuint index, const GLfloat * v);
void glVertexAttrib4iv(GLuint index, const GLint * v);
void glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void glVertexAttrib4sv(GLuint index, const GLshort * v);
void glVertexAttrib4ubv(GLuint index, const GLubyte * v);
void glVertexAttrib4uiv(GLuint index, const GLuint * v);
void glVertexAttrib4usv(GLuint index, const GLushort * v);
void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void glGetBooleani_v(GLenum target, GLuint index, GLboolean * data);
void glGetIntegeri_v(GLenum target, GLuint index, GLint * data);
void glEnablei(GLenum target, GLuint index);
void glDisablei(GLenum target, GLuint index);
GLboolean glIsEnabledi(GLenum target, GLuint index);
void glBeginTransformFeedback(GLenum primitiveMode);
void glEndTransformFeedback(void);
void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
void glClampColor(GLenum target, GLenum clamp);
void glBeginConditionalRender(GLuint id, GLenum mode);
void glEndConditionalRender(void);
void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint * params);
void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params);
void glVertexAttribI1i(GLuint index, GLint x);
void glVertexAttribI2i(GLuint index, GLint x, GLint y);
void glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z);
void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
void glVertexAttribI1ui(GLuint index, GLuint x);
void glVertexAttribI2ui(GLuint index, GLuint x, GLuint y);
void glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z);
void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void glVertexAttribI1iv(GLuint index, const GLint * v);
void glVertexAttribI2iv(GLuint index, const GLint * v);
void glVertexAttribI3iv(GLuint index, const GLint * v);
void glVertexAttribI4iv(GLuint index, const GLint * v);
void glVertexAttribI1uiv(GLuint index, const GLuint * v);
void glVertexAttribI2uiv(GLuint index, const GLuint * v);
void glVertexAttribI3uiv(GLuint index, const GLuint * v);
void glVertexAttribI4uiv(GLuint index, const GLuint * v);
void glVertexAttribI4bv(GLuint index, const GLbyte * v);
void glVertexAttribI4sv(GLuint index, const GLshort * v);
void glVertexAttribI4ubv(GLuint index, const GLubyte * v);
void glVertexAttribI4usv(GLuint index, const GLushort * v);
void glGetUniformuiv(GLuint program, GLint location, GLuint * params);
void glBindFragDataLocation(GLuint program, GLuint color, const GLchar * name);
GLint glGetFragDataLocation(GLuint program, const GLchar * name);
void glUniform1ui(GLint location, GLuint v0);
void glUniform2ui(GLint location, GLuint v0, GLuint v1);
void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void glUniform1uiv(GLint location, GLsizei count, const GLuint * value);
void glUniform2uiv(GLint location, GLsizei count, const GLuint * value);
void glUniform3uiv(GLint location, GLsizei count, const GLuint * value);
void glUniform4uiv(GLint location, GLsizei count, const GLuint * value);
void glTexParameterIiv(GLenum target, GLenum pname, const GLint * params);
void glTexParameterIuiv(GLenum target, GLenum pname, const GLuint * params);
void glGetTexParameterIiv(GLenum target, GLenum pname, GLint * params);
void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint * params);
void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value);
void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value);
void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value);
void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
const GLubyte * glGetStringi(GLenum name, GLuint index);
GLboolean glIsRenderbuffer(GLuint renderbuffer);
void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
void glDeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers);
void glGenRenderbuffers(GLsizei n, GLuint * renderbuffers);
void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLboolean glIsFramebuffer(GLuint framebuffer);
void glBindFramebuffer(GLenum target, GLuint framebuffer);
void glDeleteFramebuffers(GLsizei n, const GLuint * framebuffers);
void glGenFramebuffers(GLsizei n, GLuint * framebuffers);
GLenum glCheckFramebufferStatus(GLenum target);
void glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params);
void glGenerateMipmap(GLenum target);
void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
void glBindVertexArray(GLuint array);
void glDeleteVertexArrays(GLsizei n, const GLuint * arrays);
void glGenVertexArrays(GLsizei n, GLuint * arrays);
GLboolean glIsVertexArray(GLuint array);
void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
void glPrimitiveRestartIndex(GLuint index);
void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
void glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
GLuint glGetUniformBlockIndex(GLuint program, const GLchar * uniformBlockName);
void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
void glMultiDrawElementsBaseVertex(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
void glProvokingVertex(GLenum mode);
GLsync glFenceSync(GLenum condition, GLbitfield flags);
GLboolean glIsSync(GLsync sync);
void glDeleteSync(GLsync sync);
GLenum glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
void glGetInteger64v(GLenum pname, GLint64 * data);
void glGetSynciv(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
void glGetInteger64i_v(GLenum target, GLuint index, GLint64 * data);
void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params);
void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
void glTexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void glTexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat * val);
void glSampleMaski(GLuint maskNumber, GLbitfield mask);
void glBindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
GLint glGetFragDataIndex(GLuint program, const GLchar * name);
void glGenSamplers(GLsizei count, GLuint * samplers);
void glDeleteSamplers(GLsizei count, const GLuint * samplers);
GLboolean glIsSampler(GLuint sampler);
void glBindSampler(GLuint unit, GLuint sampler);
void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param);
void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param);
void glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint * param);
void glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint * param);
void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params);
void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint * params);
void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params);
void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint * params);
void glQueryCounter(GLuint id, GLenum target);
void glGetQueryObjecti64v(GLuint id, GLenum pname, GLint64 * params);
void glGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 * params);
void glVertexAttribDivisor(GLuint index, GLuint divisor);
void glVertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void glVertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
void glVertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void glVertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
void glVertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void glVertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
void glVertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void glVertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
void glMinSampleShading(GLfloat value);
void glBlendEquationi(GLuint buf, GLenum mode);
void glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void glBlendFunci(GLuint buf, GLenum src, GLenum dst);
void glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void glDrawArraysIndirect(GLenum mode, const void * indirect);
void glDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect);
void glUniform1d(GLint location, GLdouble x);
void glUniform2d(GLint location, GLdouble x, GLdouble y);
void glUniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z);
void glUniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glUniform1dv(GLint location, GLsizei count, const GLdouble * value);
void glUniform2dv(GLint location, GLsizei count, const GLdouble * value);
void glUniform3dv(GLint location, GLsizei count, const GLdouble * value);
void glUniform4dv(GLint location, GLsizei count, const GLdouble * value);
void glUniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glUniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glUniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glUniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glUniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glUniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glUniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glUniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glUniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glGetUniformdv(GLuint program, GLint location, GLdouble * params);
GLint glGetSubroutineUniformLocation(GLuint program, GLenum shadertype, const GLchar * name);
GLuint glGetSubroutineIndex(GLuint program, GLenum shadertype, const GLchar * name);
void glGetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
void glGetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
void glGetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
void glUniformSubroutinesuiv(GLenum shadertype, GLsizei count, const GLuint * indices);
void glGetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint * params);
void glGetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint * values);
void glPatchParameteri(GLenum pname, GLint value);
void glPatchParameterfv(GLenum pname, const GLfloat * values);
void glBindTransformFeedback(GLenum target, GLuint id);
void glDeleteTransformFeedbacks(GLsizei n, const GLuint * ids);
void glGenTransformFeedbacks(GLsizei n, GLuint * ids);
GLboolean glIsTransformFeedback(GLuint id);
void glPauseTransformFeedback(void);
void glResumeTransformFeedback(void);
void glDrawTransformFeedback(GLenum mode, GLuint id);
void glDrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream);
void glBeginQueryIndexed(GLenum target, GLuint index, GLuint id);
void glEndQueryIndexed(GLenum target, GLuint index);
void glGetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint * params);
void glReleaseShaderCompiler(void);
void glShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
void glDepthRangef(GLfloat n, GLfloat f);
void glClearDepthf(GLfloat d);
void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
void glProgramBinary(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
void glProgramParameteri(GLuint program, GLenum pname, GLint value);
void glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program);
void glActiveShaderProgram(GLuint pipeline, GLuint program);
GLuint glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings);
void glBindProgramPipeline(GLuint pipeline);
void glDeleteProgramPipelines(GLsizei n, const GLuint * pipelines);
void glGenProgramPipelines(GLsizei n, GLuint * pipelines);
GLboolean glIsProgramPipeline(GLuint pipeline);
void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint * params);
void glProgramUniform1i(GLuint program, GLint location, GLint v0);
void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform1d(GLuint program, GLint location, GLdouble v0);
void glProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1);
void glProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
void glProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
void glProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glValidateProgramPipeline(GLuint pipeline);
void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void glVertexAttribL1d(GLuint index, GLdouble x);
void glVertexAttribL2d(GLuint index, GLdouble x, GLdouble y);
void glVertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void glVertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glVertexAttribL1dv(GLuint index, const GLdouble * v);
void glVertexAttribL2dv(GLuint index, const GLdouble * v);
void glVertexAttribL3dv(GLuint index, const GLdouble * v);
void glVertexAttribL4dv(GLuint index, const GLdouble * v);
void glVertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
void glGetVertexAttribLdv(GLuint index, GLenum pname, GLdouble * params);
void glViewportArrayv(GLuint first, GLsizei count, const GLfloat * v);
void glViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void glViewportIndexedfv(GLuint index, const GLfloat * v);
void glScissorArrayv(GLuint first, GLsizei count, const GLint * v);
void glScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void glScissorIndexedv(GLuint index, const GLint * v);
void glDepthRangeArrayv(GLuint first, GLsizei count, const GLdouble * v);
void glDepthRangeIndexed(GLuint index, GLdouble n, GLdouble f);
void glGetFloati_v(GLenum target, GLuint index, GLfloat * data);
void glGetDoublei_v(GLenum target, GLuint index, GLdouble * data);
void glDrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
void glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
void glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
void glGetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
void glMemoryBarrier(GLbitfield barriers);
void glTexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void glDrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount);
void glDrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
void glClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
void glClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
void glDispatchComputeIndirect(GLintptr indirect);
void glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint * params);
void glGetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 * params);
void glInvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
void glInvalidateTexImage(GLuint texture, GLint level);
void glInvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length);
void glInvalidateBufferData(GLuint buffer);
void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments);
void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void glMultiDrawArraysIndirect(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
void glMultiDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
GLuint glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar * name);
void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
GLint glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar * name);
GLint glGetProgramResourceLocationIndex(GLuint program, GLenum programInterface, const GLchar * name);
void glShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
void glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void glTextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void glVertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
void glDebugMessageCallback(GLDEBUGPROC callback, const void * userParam);
GLuint glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar * message);
void glPopDebugGroup(void);
void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
void glObjectPtrLabel(const void * ptr, GLsizei length, const GLchar * label);
void glGetObjectPtrLabel(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
void glBufferStorage(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
void glClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
void glClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
void glBindBuffersBase(GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
void glBindBuffersRange(GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
void glBindTextures(GLuint first, GLsizei count, const GLuint * textures);
void glBindSamplers(GLuint first, GLsizei count, const GLuint * samplers);
void glBindImageTextures(GLuint first, GLsizei count, const GLuint * textures);
void glBindVertexBuffers(GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
void glClipControl(GLenum origin, GLenum depth);
void glCreateTransformFeedbacks(GLsizei n, GLuint * ids);
void glTransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer);
void glTransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glGetTransformFeedbackiv(GLuint xfb, GLenum pname, GLint * param);
void glGetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLint * param);
void glGetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
void glCreateBuffers(GLsizei n, GLuint * buffers);
void glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
void glNamedBufferData(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
void glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
void glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void glClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
void glClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
void * glMapNamedBuffer(GLuint buffer, GLenum access);
void * glMapNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLboolean glUnmapNamedBuffer(GLuint buffer);
void glFlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length);
void glGetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLint * params);
void glGetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64 * params);
void glGetNamedBufferPointerv(GLuint buffer, GLenum pname, void ** params);
void glGetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
void glCreateFramebuffers(GLsizei n, GLuint * framebuffers);
void glNamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void glNamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param);
void glNamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
void glNamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
void glNamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf);
void glNamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, const GLenum * bufs);
void glNamedFramebufferReadBuffer(GLuint framebuffer, GLenum src);
void glInvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
void glInvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void glClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
void glClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
void glClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
void glClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void glBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLenum glCheckNamedFramebufferStatus(GLuint framebuffer, GLenum target);
void glGetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLint * param);
void glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
void glCreateRenderbuffers(GLsizei n, GLuint * renderbuffers);
void glNamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
void glNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glGetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLint * params);
void glCreateTextures(GLenum target, GLsizei n, GLuint * textures);
void glTextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer);
void glTextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glTextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
void glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void glTextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void glTextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void glTextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void glTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
void glTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glCompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
void glCompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
void glCompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
void glCopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glTextureParameterf(GLuint texture, GLenum pname, GLfloat param);
void glTextureParameterfv(GLuint texture, GLenum pname, const GLfloat * param);
void glTextureParameteri(GLuint texture, GLenum pname, GLint param);
void glTextureParameterIiv(GLuint texture, GLenum pname, const GLint * params);
void glTextureParameterIuiv(GLuint texture, GLenum pname, const GLuint * params);
void glTextureParameteriv(GLuint texture, GLenum pname, const GLint * param);
void glGenerateTextureMipmap(GLuint texture);
void glBindTextureUnit(GLuint unit, GLuint texture);
void glGetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
void glGetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize, void * pixels);
void glGetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloat * params);
void glGetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLint * params);
void glGetTextureParameterfv(GLuint texture, GLenum pname, GLfloat * params);
void glGetTextureParameterIiv(GLuint texture, GLenum pname, GLint * params);
void glGetTextureParameterIuiv(GLuint texture, GLenum pname, GLuint * params);
void glGetTextureParameteriv(GLuint texture, GLenum pname, GLint * params);
void glCreateVertexArrays(GLsizei n, GLuint * arrays);
void glDisableVertexArrayAttrib(GLuint vaobj, GLuint index);
void glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);
void glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);
void glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void glVertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
void glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
void glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor);
void glGetVertexArrayiv(GLuint vaobj, GLenum pname, GLint * param);
void glGetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
void glGetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
void glCreateSamplers(GLsizei n, GLuint * samplers);
void glCreateProgramPipelines(GLsizei n, GLuint * pipelines);
void glCreateQueries(GLenum target, GLsizei n, GLuint * ids);
void glGetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void glGetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void glGetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void glGetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void glMemoryBarrierByRegion(GLbitfield barriers);
void glGetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
void glGetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
GLenum glGetGraphicsResetStatus(void);
void glGetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize, void * pixels);
void glGetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
void glGetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
void glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
void glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint * params);
void glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
void glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
void glTextureBarrier(void);
void glSpecializeShader(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
void glMultiDrawArraysIndirectCount(GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void glMultiDrawElementsIndirectCount(GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void glPolygonOffsetClamp(GLfloat factor, GLfloat units, GLfloat clamp);
void glTbufferMask3DFX(GLuint mask);
void glDebugMessageEnableAMD(GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
void glDebugMessageInsertAMD(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf);
void glDebugMessageCallbackAMD(GLDEBUGPROCAMD callback, void * userParam);
GLuint glGetDebugMessageLogAMD(GLuint count, GLsizei bufSize, GLenum * categories, GLenum * severities, GLuint * ids, GLsizei * lengths, GLchar * message);
void glBlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst);
void glBlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void glBlendEquationIndexedAMD(GLuint buf, GLenum mode);
void glBlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void glRenderbufferStorageMultisampleAdvancedAMD(GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
void glNamedRenderbufferStorageMultisampleAdvancedAMD(GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
void glFramebufferSamplePositionsfvAMD(GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat * values);
void glNamedFramebufferSamplePositionsfvAMD(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat * values);
void glGetFramebufferParameterfvAMD(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat * values);
void glGetNamedFramebufferParameterfvAMD(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat * values);
void glUniform1i64NV(GLint location, GLint64EXT x);
void glUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y);
void glUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void glUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void glUniform1i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
void glUniform2i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
void glUniform3i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
void glUniform4i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
void glUniform1ui64NV(GLint location, GLuint64EXT x);
void glUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y);
void glUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void glUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void glUniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
void glUniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
void glUniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
void glUniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
void glGetUniformi64vNV(GLuint program, GLint location, GLint64EXT * params);
void glGetUniformui64vNV(GLuint program, GLint location, GLuint64EXT * params);
void glProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x);
void glProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
void glProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void glProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void glProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
void glProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
void glProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
void glProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
void glProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x);
void glProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
void glProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void glProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void glProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
void glProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
void glProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
void glProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
void glVertexAttribParameteriAMD(GLuint index, GLenum pname, GLint param);
void glMultiDrawArraysIndirectAMD(GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride);
void glMultiDrawElementsIndirectAMD(GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride);
void glGenNamesAMD(GLenum identifier, GLuint num, GLuint * names);
void glDeleteNamesAMD(GLenum identifier, GLuint num, const GLuint * names);
GLboolean glIsNameAMD(GLenum identifier, GLuint name);
void glQueryObjectParameteruiAMD(GLenum target, GLuint id, GLenum pname, GLuint param);
void glGetPerfMonitorGroupsAMD(GLint * numGroups, GLsizei groupsSize, GLuint * groups);
void glGetPerfMonitorCountersAMD(GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
void glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
void glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
void glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void * data);
void glGenPerfMonitorsAMD(GLsizei n, GLuint * monitors);
void glDeletePerfMonitorsAMD(GLsizei n, GLuint * monitors);
void glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
void glBeginPerfMonitorAMD(GLuint monitor);
void glEndPerfMonitorAMD(GLuint monitor);
void glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
void glSetMultisamplefvAMD(GLenum pname, GLuint index, const GLfloat * val);
void glTexStorageSparseAMD(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
void glTextureStorageSparseAMD(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
void glStencilOpValueAMD(GLenum face, GLuint value);
void glTessellationFactorAMD(GLfloat factor);
void glTessellationModeAMD(GLenum mode);
void glElementPointerAPPLE(GLenum type, const void * pointer);
void glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count);
void glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
void glMultiDrawElementArrayAPPLE(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
void glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);
void glGenFencesAPPLE(GLsizei n, GLuint * fences);
void glDeleteFencesAPPLE(GLsizei n, const GLuint * fences);
void glSetFenceAPPLE(GLuint fence);
GLboolean glIsFenceAPPLE(GLuint fence);
GLboolean glTestFenceAPPLE(GLuint fence);
void glFinishFenceAPPLE(GLuint fence);
GLboolean glTestObjectAPPLE(GLenum object, GLuint name);
void glFinishObjectAPPLE(GLenum object, GLint name);
void glBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param);
void glFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size);
GLenum glObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
GLenum glObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
void glGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint * params);
void glTextureRangeAPPLE(GLenum target, GLsizei length, const void * pointer);
void glGetTexParameterPointervAPPLE(GLenum target, GLenum pname, void ** params);
void glBindVertexArrayAPPLE(GLuint array);
void glDeleteVertexArraysAPPLE(GLsizei n, const GLuint * arrays);
void glGenVertexArraysAPPLE(GLsizei n, GLuint * arrays);
GLboolean glIsVertexArrayAPPLE(GLuint array);
void glVertexArrayRangeAPPLE(GLsizei length, void * pointer);
void glFlushVertexArrayRangeAPPLE(GLsizei length, void * pointer);
void glVertexArrayParameteriAPPLE(GLenum pname, GLint param);
void glEnableVertexAttribAPPLE(GLuint index, GLenum pname);
void glDisableVertexAttribAPPLE(GLuint index, GLenum pname);
GLboolean glIsVertexAttribEnabledAPPLE(GLuint index, GLenum pname);
void glMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
void glMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
void glMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
void glMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
void glPrimitiveBoundingBoxARB(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLuint64 glGetTextureHandleARB(GLuint texture);
GLuint64 glGetTextureSamplerHandleARB(GLuint texture, GLuint sampler);
void glMakeTextureHandleResidentARB(GLuint64 handle);
void glMakeTextureHandleNonResidentARB(GLuint64 handle);
GLuint64 glGetImageHandleARB(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
void glMakeImageHandleResidentARB(GLuint64 handle, GLenum access);
void glMakeImageHandleNonResidentARB(GLuint64 handle);
void glUniformHandleui64ARB(GLint location, GLuint64 value);
void glUniformHandleui64vARB(GLint location, GLsizei count, const GLuint64 * value);
void glProgramUniformHandleui64ARB(GLuint program, GLint location, GLuint64 value);
void glProgramUniformHandleui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLboolean glIsTextureHandleResidentARB(GLuint64 handle);
GLboolean glIsImageHandleResidentARB(GLuint64 handle);
void glVertexAttribL1ui64ARB(GLuint index, GLuint64EXT x);
void glVertexAttribL1ui64vARB(GLuint index, const GLuint64EXT * v);
void glGetVertexAttribLui64vARB(GLuint index, GLenum pname, GLuint64EXT * params);
GLsync glCreateSyncFromCLeventARB(struct _cl_context * context, struct _cl_event * event, GLbitfield flags);
void glClampColorARB(GLenum target, GLenum clamp);
void glDispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
void glDebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
void glDebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
void glDebugMessageCallbackARB(GLDEBUGPROCARB callback, const void * userParam);
GLuint glGetDebugMessageLogARB(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
void glDrawBuffersARB(GLsizei n, const GLenum * bufs);
void glBlendEquationiARB(GLuint buf, GLenum mode);
void glBlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void glBlendFunciARB(GLuint buf, GLenum src, GLenum dst);
void glBlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void glDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void glDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
void glProgramStringARB(GLenum target, GLenum format, GLsizei len, const void * string);
void glBindProgramARB(GLenum target, GLuint program);
void glDeleteProgramsARB(GLsizei n, const GLuint * programs);
void glGenProgramsARB(GLsizei n, GLuint * programs);
void glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
void glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
void glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
void glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
void glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble * params);
void glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat * params);
void glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble * params);
void glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat * params);
void glGetProgramivARB(GLenum target, GLenum pname, GLint * params);
void glGetProgramStringARB(GLenum target, GLenum pname, void * string);
GLboolean glIsProgramARB(GLuint program);
void glProgramParameteriARB(GLuint program, GLenum pname, GLint value);
void glFramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level);
void glFramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void glFramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
void glSpecializeShaderARB(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
void glUniform1i64ARB(GLint location, GLint64 x);
void glUniform2i64ARB(GLint location, GLint64 x, GLint64 y);
void glUniform3i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z);
void glUniform4i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
void glUniform1i64vARB(GLint location, GLsizei count, const GLint64 * value);
void glUniform2i64vARB(GLint location, GLsizei count, const GLint64 * value);
void glUniform3i64vARB(GLint location, GLsizei count, const GLint64 * value);
void glUniform4i64vARB(GLint location, GLsizei count, const GLint64 * value);
void glUniform1ui64ARB(GLint location, GLuint64 x);
void glUniform2ui64ARB(GLint location, GLuint64 x, GLuint64 y);
void glUniform3ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
void glUniform4ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
void glUniform1ui64vARB(GLint location, GLsizei count, const GLuint64 * value);
void glUniform2ui64vARB(GLint location, GLsizei count, const GLuint64 * value);
void glUniform3ui64vARB(GLint location, GLsizei count, const GLuint64 * value);
void glUniform4ui64vARB(GLint location, GLsizei count, const GLuint64 * value);
void glGetUniformi64vARB(GLuint program, GLint location, GLint64 * params);
void glGetUniformui64vARB(GLuint program, GLint location, GLuint64 * params);
void glGetnUniformi64vARB(GLuint program, GLint location, GLsizei bufSize, GLint64 * params);
void glGetnUniformui64vARB(GLuint program, GLint location, GLsizei bufSize, GLuint64 * params);
void glProgramUniform1i64ARB(GLuint program, GLint location, GLint64 x);
void glProgramUniform2i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y);
void glProgramUniform3i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
void glProgramUniform4i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
void glProgramUniform1i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 * value);
void glProgramUniform2i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 * value);
void glProgramUniform3i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 * value);
void glProgramUniform4i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 * value);
void glProgramUniform1ui64ARB(GLuint program, GLint location, GLuint64 x);
void glProgramUniform2ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y);
void glProgramUniform3ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
void glProgramUniform4ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
void glProgramUniform1ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
void glProgramUniform2ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
void glProgramUniform3ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
void glProgramUniform4ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
void glMultiDrawArraysIndirectCountARB(GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void glMultiDrawElementsIndirectCountARB(GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void glVertexAttribDivisorARB(GLuint index, GLuint divisor);
void glCurrentPaletteMatrixARB(GLint index);
void glMatrixIndexubvARB(GLint size, const GLubyte * indices);
void glMatrixIndexusvARB(GLint size, const GLushort * indices);
void glMatrixIndexuivARB(GLint size, const GLuint * indices);
void glMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, const void * pointer);
void glSampleCoverageARB(GLfloat value, GLboolean invert);
void glActiveTextureARB(GLenum texture);
void glClientActiveTextureARB(GLenum texture);
void glMultiTexCoord1dARB(GLenum target, GLdouble s);
void glMultiTexCoord1dvARB(GLenum target, const GLdouble * v);
void glMultiTexCoord1fARB(GLenum target, GLfloat s);
void glMultiTexCoord1fvARB(GLenum target, const GLfloat * v);
void glMultiTexCoord1iARB(GLenum target, GLint s);
void glMultiTexCoord1ivARB(GLenum target, const GLint * v);
void glMultiTexCoord1sARB(GLenum target, GLshort s);
void glMultiTexCoord1svARB(GLenum target, const GLshort * v);
void glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t);
void glMultiTexCoord2dvARB(GLenum target, const GLdouble * v);
void glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t);
void glMultiTexCoord2fvARB(GLenum target, const GLfloat * v);
void glMultiTexCoord2iARB(GLenum target, GLint s, GLint t);
void glMultiTexCoord2ivARB(GLenum target, const GLint * v);
void glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t);
void glMultiTexCoord2svARB(GLenum target, const GLshort * v);
void glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r);
void glMultiTexCoord3dvARB(GLenum target, const GLdouble * v);
void glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r);
void glMultiTexCoord3fvARB(GLenum target, const GLfloat * v);
void glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r);
void glMultiTexCoord3ivARB(GLenum target, const GLint * v);
void glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r);
void glMultiTexCoord3svARB(GLenum target, const GLshort * v);
void glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void glMultiTexCoord4dvARB(GLenum target, const GLdouble * v);
void glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void glMultiTexCoord4fvARB(GLenum target, const GLfloat * v);
void glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q);
void glMultiTexCoord4ivARB(GLenum target, const GLint * v);
void glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void glMultiTexCoord4svARB(GLenum target, const GLshort * v);
void glGenQueriesARB(GLsizei n, GLuint * ids);
void glDeleteQueriesARB(GLsizei n, const GLuint * ids);
GLboolean glIsQueryARB(GLuint id);
void glBeginQueryARB(GLenum target, GLuint id);
void glEndQueryARB(GLenum target);
void glGetQueryivARB(GLenum target, GLenum pname, GLint * params);
void glGetQueryObjectivARB(GLuint id, GLenum pname, GLint * params);
void glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint * params);
void glMaxShaderCompilerThreadsARB(GLuint count);
void glPointParameterfARB(GLenum pname, GLfloat param);
void glPointParameterfvARB(GLenum pname, const GLfloat * params);
GLenum glGetGraphicsResetStatusARB(void);
void glGetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img);
void glReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
void glGetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize, void * img);
void glGetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
void glGetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint * params);
void glGetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
void glGetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
void glFramebufferSampleLocationsfvARB(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
void glNamedFramebufferSampleLocationsfvARB(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
void glEvaluateDepthValuesARB(void);
void glMinSampleShadingARB(GLfloat value);
void glDeleteObjectARB(GLhandleARB obj);
GLhandleARB glGetHandleARB(GLenum pname);
void glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj);
GLhandleARB glCreateShaderObjectARB(GLenum shaderType);
void glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
void glCompileShaderARB(GLhandleARB shaderObj);
GLhandleARB glCreateProgramObjectARB(void);
void glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj);
void glLinkProgramARB(GLhandleARB programObj);
void glUseProgramObjectARB(GLhandleARB programObj);
void glValidateProgramARB(GLhandleARB programObj);
void glUniform1fARB(GLint location, GLfloat v0);
void glUniform2fARB(GLint location, GLfloat v0, GLfloat v1);
void glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void glUniform1iARB(GLint location, GLint v0);
void glUniform2iARB(GLint location, GLint v0, GLint v1);
void glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2);
void glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void glUniform1fvARB(GLint location, GLsizei count, const GLfloat * value);
void glUniform2fvARB(GLint location, GLsizei count, const GLfloat * value);
void glUniform3fvARB(GLint location, GLsizei count, const GLfloat * value);
void glUniform4fvARB(GLint location, GLsizei count, const GLfloat * value);
void glUniform1ivARB(GLint location, GLsizei count, const GLint * value);
void glUniform2ivARB(GLint location, GLsizei count, const GLint * value);
void glUniform3ivARB(GLint location, GLsizei count, const GLint * value);
void glUniform4ivARB(GLint location, GLsizei count, const GLint * value);
void glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat * params);
void glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint * params);
void glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
void glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
GLint glGetUniformLocationARB(GLhandleARB programObj, const GLcharARB * name);
void glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
void glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat * params);
void glGetUniformivARB(GLhandleARB programObj, GLint location, GLint * params);
void glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
void glNamedStringARB(GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
void glDeleteNamedStringARB(GLint namelen, const GLchar * name);
void glCompileShaderIncludeARB(GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
GLboolean glIsNamedStringARB(GLint namelen, const GLchar * name);
void glGetNamedStringARB(GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
void glGetNamedStringivARB(GLint namelen, const GLchar * name, GLenum pname, GLint * params);
void glBufferPageCommitmentARB(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
void glNamedBufferPageCommitmentEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
void glNamedBufferPageCommitmentARB(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
void glTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
void glTexBufferARB(GLenum target, GLenum internalformat, GLuint buffer);
void glCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
void glCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
void glCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
void glCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
void glCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
void glCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
void glGetCompressedTexImageARB(GLenum target, GLint level, void * img);
void glLoadTransposeMatrixfARB(const GLfloat * m);
void glLoadTransposeMatrixdARB(const GLdouble * m);
void glMultTransposeMatrixfARB(const GLfloat * m);
void glMultTransposeMatrixdARB(const GLdouble * m);
void glWeightbvARB(GLint size, const GLbyte * weights);
void glWeightsvARB(GLint size, const GLshort * weights);
void glWeightivARB(GLint size, const GLint * weights);
void glWeightfvARB(GLint size, const GLfloat * weights);
void glWeightdvARB(GLint size, const GLdouble * weights);
void glWeightubvARB(GLint size, const GLubyte * weights);
void glWeightusvARB(GLint size, const GLushort * weights);
void glWeightuivARB(GLint size, const GLuint * weights);
void glWeightPointerARB(GLint size, GLenum type, GLsizei stride, const void * pointer);
void glVertexBlendARB(GLint count);
void glBindBufferARB(GLenum target, GLuint buffer);
void glDeleteBuffersARB(GLsizei n, const GLuint * buffers);
void glGenBuffersARB(GLsizei n, GLuint * buffers);
GLboolean glIsBufferARB(GLuint buffer);
void glBufferDataARB(GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
void glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
void glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
void * glMapBufferARB(GLenum target, GLenum access);
GLboolean glUnmapBufferARB(GLenum target);
void glGetBufferParameterivARB(GLenum target, GLenum pname, GLint * params);
void glGetBufferPointervARB(GLenum target, GLenum pname, void ** params);
void glVertexAttrib1dARB(GLuint index, GLdouble x);
void glVertexAttrib1dvARB(GLuint index, const GLdouble * v);
void glVertexAttrib1fARB(GLuint index, GLfloat x);
void glVertexAttrib1fvARB(GLuint index, const GLfloat * v);
void glVertexAttrib1sARB(GLuint index, GLshort x);
void glVertexAttrib1svARB(GLuint index, const GLshort * v);
void glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y);
void glVertexAttrib2dvARB(GLuint index, const GLdouble * v);
void glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y);
void glVertexAttrib2fvARB(GLuint index, const GLfloat * v);
void glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y);
void glVertexAttrib2svARB(GLuint index, const GLshort * v);
void glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void glVertexAttrib3dvARB(GLuint index, const GLdouble * v);
void glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void glVertexAttrib3fvARB(GLuint index, const GLfloat * v);
void glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z);
void glVertexAttrib3svARB(GLuint index, const GLshort * v);
void glVertexAttrib4NbvARB(GLuint index, const GLbyte * v);
void glVertexAttrib4NivARB(GLuint index, const GLint * v);
void glVertexAttrib4NsvARB(GLuint index, const GLshort * v);
void glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void glVertexAttrib4NubvARB(GLuint index, const GLubyte * v);
void glVertexAttrib4NuivARB(GLuint index, const GLuint * v);
void glVertexAttrib4NusvARB(GLuint index, const GLushort * v);
void glVertexAttrib4bvARB(GLuint index, const GLbyte * v);
void glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glVertexAttrib4dvARB(GLuint index, const GLdouble * v);
void glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glVertexAttrib4fvARB(GLuint index, const GLfloat * v);
void glVertexAttrib4ivARB(GLuint index, const GLint * v);
void glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void glVertexAttrib4svARB(GLuint index, const GLshort * v);
void glVertexAttrib4ubvARB(GLuint index, const GLubyte * v);
void glVertexAttrib4uivARB(GLuint index, const GLuint * v);
void glVertexAttrib4usvARB(GLuint index, const GLushort * v);
void glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
void glEnableVertexAttribArrayARB(GLuint index);
void glDisableVertexAttribArrayARB(GLuint index);
void glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble * params);
void glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat * params);
void glGetVertexAttribivARB(GLuint index, GLenum pname, GLint * params);
void glGetVertexAttribPointervARB(GLuint index, GLenum pname, void ** pointer);
void glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB * name);
void glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
GLint glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB * name);
void glDepthRangeArraydvNV(GLuint first, GLsizei count, const GLdouble * v);
void glDepthRangeIndexeddNV(GLuint index, GLdouble n, GLdouble f);
void glWindowPos2dARB(GLdouble x, GLdouble y);
void glWindowPos2dvARB(const GLdouble * v);
void glWindowPos2fARB(GLfloat x, GLfloat y);
void glWindowPos2fvARB(const GLfloat * v);
void glWindowPos2iARB(GLint x, GLint y);
void glWindowPos2ivARB(const GLint * v);
void glWindowPos2sARB(GLshort x, GLshort y);
void glWindowPos2svARB(const GLshort * v);
void glWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z);
void glWindowPos3dvARB(const GLdouble * v);
void glWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z);
void glWindowPos3fvARB(const GLfloat * v);
void glWindowPos3iARB(GLint x, GLint y, GLint z);
void glWindowPos3ivARB(const GLint * v);
void glWindowPos3sARB(GLshort x, GLshort y, GLshort z);
void glWindowPos3svARB(const GLshort * v);
void glDrawBuffersATI(GLsizei n, const GLenum * bufs);
void glElementPointerATI(GLenum type, const void * pointer);
void glDrawElementArrayATI(GLenum mode, GLsizei count);
void glDrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count);
void glTexBumpParameterivATI(GLenum pname, const GLint * param);
void glTexBumpParameterfvATI(GLenum pname, const GLfloat * param);
void glGetTexBumpParameterivATI(GLenum pname, GLint * param);
void glGetTexBumpParameterfvATI(GLenum pname, GLfloat * param);
GLuint glGenFragmentShadersATI(GLuint range);
void glBindFragmentShaderATI(GLuint id);
void glDeleteFragmentShaderATI(GLuint id);
void glBeginFragmentShaderATI(void);
void glEndFragmentShaderATI(void);
void glPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle);
void glSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle);
void glColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void glColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void glColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void glAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void glAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void glAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void glSetFragmentShaderConstantATI(GLuint dst, const GLfloat * value);
void * glMapObjectBufferATI(GLuint buffer);
void glUnmapObjectBufferATI(GLuint buffer);
void glPNTrianglesiATI(GLenum pname, GLint param);
void glPNTrianglesfATI(GLenum pname, GLfloat param);
void glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
GLuint glNewObjectBufferATI(GLsizei size, const void * pointer, GLenum usage);
GLboolean glIsObjectBufferATI(GLuint buffer);
void glUpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve);
void glGetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat * params);
void glGetObjectBufferivATI(GLuint buffer, GLenum pname, GLint * params);
void glFreeObjectBufferATI(GLuint buffer);
void glArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
void glGetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat * params);
void glGetArrayObjectivATI(GLenum array, GLenum pname, GLint * params);
void glVariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
void glGetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat * params);
void glGetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint * params);
void glVertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
void glGetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat * params);
void glGetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint * params);
void glVertexStream1sATI(GLenum stream, GLshort x);
void glVertexStream1svATI(GLenum stream, const GLshort * coords);
void glVertexStream1iATI(GLenum stream, GLint x);
void glVertexStream1ivATI(GLenum stream, const GLint * coords);
void glVertexStream1fATI(GLenum stream, GLfloat x);
void glVertexStream1fvATI(GLenum stream, const GLfloat * coords);
void glVertexStream1dATI(GLenum stream, GLdouble x);
void glVertexStream1dvATI(GLenum stream, const GLdouble * coords);
void glVertexStream2sATI(GLenum stream, GLshort x, GLshort y);
void glVertexStream2svATI(GLenum stream, const GLshort * coords);
void glVertexStream2iATI(GLenum stream, GLint x, GLint y);
void glVertexStream2ivATI(GLenum stream, const GLint * coords);
void glVertexStream2fATI(GLenum stream, GLfloat x, GLfloat y);
void glVertexStream2fvATI(GLenum stream, const GLfloat * coords);
void glVertexStream2dATI(GLenum stream, GLdouble x, GLdouble y);
void glVertexStream2dvATI(GLenum stream, const GLdouble * coords);
void glVertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z);
void glVertexStream3svATI(GLenum stream, const GLshort * coords);
void glVertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z);
void glVertexStream3ivATI(GLenum stream, const GLint * coords);
void glVertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
void glVertexStream3fvATI(GLenum stream, const GLfloat * coords);
void glVertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
void glVertexStream3dvATI(GLenum stream, const GLdouble * coords);
void glVertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
void glVertexStream4svATI(GLenum stream, const GLshort * coords);
void glVertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w);
void glVertexStream4ivATI(GLenum stream, const GLint * coords);
void glVertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glVertexStream4fvATI(GLenum stream, const GLfloat * coords);
void glVertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glVertexStream4dvATI(GLenum stream, const GLdouble * coords);
void glNormalStream3bATI(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
void glNormalStream3bvATI(GLenum stream, const GLbyte * coords);
void glNormalStream3sATI(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
void glNormalStream3svATI(GLenum stream, const GLshort * coords);
void glNormalStream3iATI(GLenum stream, GLint nx, GLint ny, GLint nz);
void glNormalStream3ivATI(GLenum stream, const GLint * coords);
void glNormalStream3fATI(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
void glNormalStream3fvATI(GLenum stream, const GLfloat * coords);
void glNormalStream3dATI(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
void glNormalStream3dvATI(GLenum stream, const GLdouble * coords);
void glClientActiveVertexStreamATI(GLenum stream);
void glVertexBlendEnviATI(GLenum pname, GLint param);
void glVertexBlendEnvfATI(GLenum pname, GLfloat param);
void glEGLImageTargetTexStorageEXT(GLenum target, GLeglImageOES image, const GLint * attrib_list);
void glEGLImageTargetTextureStorageEXT(GLuint texture, GLeglImageOES image, const GLint * attrib_list);
void glUniformBufferEXT(GLuint program, GLint location, GLuint buffer);
GLint glGetUniformBufferSizeEXT(GLuint program, GLint location);
GLintptr glGetUniformOffsetEXT(GLuint program, GLint location);
void glBlendColorEXT(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha);
void glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar * name);
void glBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void glBlendEquationEXT(GLenum mode);
void glColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
void glCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void glLockArraysEXT(GLint first, GLsizei count);
void glUnlockArraysEXT(void);
void glConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
void glConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
void glConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params);
void glConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat * params);
void glConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params);
void glConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint * params);
void glCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void glCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void glGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, void * image);
void glGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
void glGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint * params);
void glGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
void glSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
void glTangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz);
void glTangent3bvEXT(const GLbyte * v);
void glTangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz);
void glTangent3dvEXT(const GLdouble * v);
void glTangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz);
void glTangent3fvEXT(const GLfloat * v);
void glTangent3iEXT(GLint tx, GLint ty, GLint tz);
void glTangent3ivEXT(const GLint * v);
void glTangent3sEXT(GLshort tx, GLshort ty, GLshort tz);
void glTangent3svEXT(const GLshort * v);
void glBinormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz);
void glBinormal3bvEXT(const GLbyte * v);
void glBinormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz);
void glBinormal3dvEXT(const GLdouble * v);
void glBinormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz);
void glBinormal3fvEXT(const GLfloat * v);
void glBinormal3iEXT(GLint bx, GLint by, GLint bz);
void glBinormal3ivEXT(const GLint * v);
void glBinormal3sEXT(GLshort bx, GLshort by, GLshort bz);
void glBinormal3svEXT(const GLshort * v);
void glTangentPointerEXT(GLenum type, GLsizei stride, const void * pointer);
void glBinormalPointerEXT(GLenum type, GLsizei stride, const void * pointer);
void glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCullParameterdvEXT(GLenum pname, GLdouble * params);
void glCullParameterfvEXT(GLenum pname, GLfloat * params);
void glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar * label);
void glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
void glInsertEventMarkerEXT(GLsizei length, const GLchar * marker);
void glPushGroupMarkerEXT(GLsizei length, const GLchar * marker);
void glPopGroupMarkerEXT(void);
void glDepthBoundsEXT(GLclampd zmin, GLclampd zmax);
void glMatrixLoadfEXT(GLenum mode, const GLfloat * m);
void glMatrixLoaddEXT(GLenum mode, const GLdouble * m);
void glMatrixMultfEXT(GLenum mode, const GLfloat * m);
void glMatrixMultdEXT(GLenum mode, const GLdouble * m);
void glMatrixLoadIdentityEXT(GLenum mode);
void glMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void glMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void glMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
void glMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
void glMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
void glMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
void glMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void glMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void glMatrixPopEXT(GLenum mode);
void glMatrixPushEXT(GLenum mode);
void glClientAttribDefaultEXT(GLbitfield mask);
void glPushClientAttribDefaultEXT(GLbitfield mask);
void glTextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param);
void glTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
void glTextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param);
void glTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, const GLint * params);
void glTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
void glTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
void glTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
void glTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glCopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glGetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
void glGetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat * params);
void glGetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint * params);
void glGetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
void glGetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
void glTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
void glTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glCopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glBindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture);
void glMultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
void glMultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
void glMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
void glMultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
void glMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
void glMultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
void glMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
void glMultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
void glMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
void glMultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param);
void glMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
void glGetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
void glGetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
void glGetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
void glGetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
void glGetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint * params);
void glMultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
void glMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
void glMultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
void glMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
void glMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
void glMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
void glMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
void glMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glCopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glGetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
void glGetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
void glGetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
void glGetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
void glGetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
void glMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
void glMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glCopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glEnableClientStateIndexedEXT(GLenum array, GLuint index);
void glDisableClientStateIndexedEXT(GLenum array, GLuint index);
void glGetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat * data);
void glGetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble * data);
void glGetPointerIndexedvEXT(GLenum target, GLuint index, void ** data);
void glEnableIndexedEXT(GLenum target, GLuint index);
void glDisableIndexedEXT(GLenum target, GLuint index);
GLboolean glIsEnabledIndexedEXT(GLenum target, GLuint index);
void glGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint * data);
void glGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean * data);
void glCompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
void glCompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
void glCompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
void glCompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
void glCompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
void glCompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
void glGetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod, void * img);
void glCompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
void glCompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
void glCompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
void glCompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
void glCompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
void glCompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
void glGetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod, void * img);
void glMatrixLoadTransposefEXT(GLenum mode, const GLfloat * m);
void glMatrixLoadTransposedEXT(GLenum mode, const GLdouble * m);
void glMatrixMultTransposefEXT(GLenum mode, const GLfloat * m);
void glMatrixMultTransposedEXT(GLenum mode, const GLdouble * m);
void glNamedBufferDataEXT(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
void glNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
void * glMapNamedBufferEXT(GLuint buffer, GLenum access);
GLboolean glUnmapNamedBufferEXT(GLuint buffer);
void glGetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint * params);
void glGetNamedBufferPointervEXT(GLuint buffer, GLenum pname, void ** params);
void glGetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
void glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
void glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
void glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
void glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
void glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glTextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
void glMultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
void glTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, const GLint * params);
void glTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, const GLuint * params);
void glGetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint * params);
void glGetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint * params);
void glMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
void glMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
void glGetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
void glGetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint * params);
void glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
void glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
void glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glNamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
void glNamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void glNamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, const GLint * params);
void glNamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
void glNamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void glNamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, const GLuint * params);
void glNamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
void glGetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint * params);
void glGetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint * params);
void glEnableClientStateiEXT(GLenum array, GLuint index);
void glDisableClientStateiEXT(GLenum array, GLuint index);
void glGetFloati_vEXT(GLenum pname, GLuint index, GLfloat * params);
void glGetDoublei_vEXT(GLenum pname, GLuint index, GLdouble * params);
void glGetPointeri_vEXT(GLenum pname, GLuint index, void ** params);
void glNamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
void glNamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glNamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, const GLdouble * params);
void glNamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glNamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, const GLfloat * params);
void glGetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble * params);
void glGetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat * params);
void glGetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint * params);
void glGetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname, void * string);
void glNamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
void glGetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint * params);
void glNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLenum glCheckNamedFramebufferStatusEXT(GLuint framebuffer, GLenum target);
void glNamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glNamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glNamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void glNamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void glGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
void glGenerateTextureMipmapEXT(GLuint texture, GLenum target);
void glGenerateMultiTexMipmapEXT(GLenum texunit, GLenum target);
void glFramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode);
void glFramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, const GLenum * bufs);
void glFramebufferReadBufferEXT(GLuint framebuffer, GLenum mode);
void glGetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint * params);
void glNamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void glNamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
void glNamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
void glNamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
void glTextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer);
void glMultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer);
void glVertexArrayVertexOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayEdgeFlagOffsetEXT(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
void glVertexArrayIndexOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayNormalOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayFogCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArraySecondaryColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayVertexAttribOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
void glVertexArrayVertexAttribIOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glEnableVertexArrayEXT(GLuint vaobj, GLenum array);
void glDisableVertexArrayEXT(GLuint vaobj, GLenum array);
void glEnableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
void glDisableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
void glGetVertexArrayIntegervEXT(GLuint vaobj, GLenum pname, GLint * param);
void glGetVertexArrayPointervEXT(GLuint vaobj, GLenum pname, void ** param);
void glGetVertexArrayIntegeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
void glGetVertexArrayPointeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, void ** param);
void * glMapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
void glFlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length);
void glNamedBufferStorageEXT(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
void glClearNamedBufferDataEXT(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
void glClearNamedBufferSubDataEXT(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
void glNamedFramebufferParameteriEXT(GLuint framebuffer, GLenum pname, GLint param);
void glGetNamedFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint * params);
void glProgramUniform1dEXT(GLuint program, GLint location, GLdouble x);
void glProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y);
void glProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
void glProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glTextureBufferRangeEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void glTextureStorage2DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void glTextureStorage3DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void glVertexArrayBindVertexBufferEXT(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void glVertexArrayVertexAttribFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void glVertexArrayVertexAttribIFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void glVertexArrayVertexAttribLFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void glVertexArrayVertexAttribBindingEXT(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
void glVertexArrayVertexBindingDivisorEXT(GLuint vaobj, GLuint bindingindex, GLuint divisor);
void glVertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glTexturePageCommitmentEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
void glVertexArrayVertexAttribDivisorEXT(GLuint vaobj, GLuint index, GLuint divisor);
void glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 * params);
void glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 * params);
void glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
void glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
void glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
void glBufferStorageExternalEXT(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
void glNamedBufferStorageExternalEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
void glFogCoordfEXT(GLfloat coord);
void glFogCoordfvEXT(const GLfloat * coord);
void glFogCoorddEXT(GLdouble coord);
void glFogCoorddvEXT(const GLdouble * coord);
void glFogCoordPointerEXT(GLenum type, GLsizei stride, const void * pointer);
void glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void glBlitFramebufferLayersEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void glBlitFramebufferLayerEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint srcLayer, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLint dstLayer, GLbitfield mask, GLenum filter);
void glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLboolean glIsRenderbufferEXT(GLuint renderbuffer);
void glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);
void glDeleteRenderbuffersEXT(GLsizei n, const GLuint * renderbuffers);
void glGenRenderbuffersEXT(GLsizei n, GLuint * renderbuffers);
void glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLboolean glIsFramebufferEXT(GLuint framebuffer);
void glBindFramebufferEXT(GLenum target, GLuint framebuffer);
void glDeleteFramebuffersEXT(GLsizei n, const GLuint * framebuffers);
void glGenFramebuffersEXT(GLsizei n, GLuint * framebuffers);
GLenum glCheckFramebufferStatusEXT(GLenum target);
void glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint * params);
void glGenerateMipmapEXT(GLenum target);
void glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
void glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
void glProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
void glProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
void glGetUniformuivEXT(GLuint program, GLint location, GLuint * params);
GLint glGetFragDataLocationEXT(GLuint program, const GLchar * name);
void glUniform1uiEXT(GLint location, GLuint v0);
void glUniform2uiEXT(GLint location, GLuint v0, GLuint v1);
void glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2);
void glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void glUniform1uivEXT(GLint location, GLsizei count, const GLuint * value);
void glUniform2uivEXT(GLint location, GLsizei count, const GLuint * value);
void glUniform3uivEXT(GLint location, GLsizei count, const GLuint * value);
void glUniform4uivEXT(GLint location, GLsizei count, const GLuint * value);
void glVertexAttribI1iEXT(GLuint index, GLint x);
void glVertexAttribI2iEXT(GLuint index, GLint x, GLint y);
void glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z);
void glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w);
void glVertexAttribI1uiEXT(GLuint index, GLuint x);
void glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y);
void glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z);
void glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void glVertexAttribI1ivEXT(GLuint index, const GLint * v);
void glVertexAttribI2ivEXT(GLuint index, const GLint * v);
void glVertexAttribI3ivEXT(GLuint index, const GLint * v);
void glVertexAttribI4ivEXT(GLuint index, const GLint * v);
void glVertexAttribI1uivEXT(GLuint index, const GLuint * v);
void glVertexAttribI2uivEXT(GLuint index, const GLuint * v);
void glVertexAttribI3uivEXT(GLuint index, const GLuint * v);
void glVertexAttribI4uivEXT(GLuint index, const GLuint * v);
void glVertexAttribI4bvEXT(GLuint index, const GLbyte * v);
void glVertexAttribI4svEXT(GLuint index, const GLshort * v);
void glVertexAttribI4ubvEXT(GLuint index, const GLubyte * v);
void glVertexAttribI4usvEXT(GLuint index, const GLushort * v);
void glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
void glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint * params);
void glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint * params);
void glGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
void glGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
void glGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint * params);
void glGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
void glGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
void glGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint * params);
void glHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void glMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink);
void glResetHistogramEXT(GLenum target);
void glResetMinmaxEXT(GLenum target);
void glIndexFuncEXT(GLenum func, GLclampf ref);
void glIndexMaterialEXT(GLenum face, GLenum mode);
void glApplyTextureEXT(GLenum mode);
void glTextureLightEXT(GLenum pname);
void glTextureMaterialEXT(GLenum face, GLenum mode);
void glGetUnsignedBytevEXT(GLenum pname, GLubyte * data);
void glGetUnsignedBytei_vEXT(GLenum target, GLuint index, GLubyte * data);
void glDeleteMemoryObjectsEXT(GLsizei n, const GLuint * memoryObjects);
GLboolean glIsMemoryObjectEXT(GLuint memoryObject);
void glCreateMemoryObjectsEXT(GLsizei n, GLuint * memoryObjects);
void glMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, const GLint * params);
void glGetMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, GLint * params);
void glTexStorageMem2DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
void glTexStorageMem2DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
void glTexStorageMem3DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
void glTexStorageMem3DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
void glBufferStorageMemEXT(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
void glTextureStorageMem2DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
void glTextureStorageMem2DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
void glTextureStorageMem3DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
void glTextureStorageMem3DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
void glNamedBufferStorageMemEXT(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
void glTexStorageMem1DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
void glTextureStorageMem1DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
void glImportMemoryFdEXT(GLuint memory, GLuint64 size, GLenum handleType, GLint fd);
void glImportMemoryWin32HandleEXT(GLuint memory, GLuint64 size, GLenum handleType, void * handle);
void glImportMemoryWin32NameEXT(GLuint memory, GLuint64 size, GLenum handleType, const void * name);
void glMultiDrawArraysEXT(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
void glMultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
void glSampleMaskEXT(GLclampf value, GLboolean invert);
void glSamplePatternEXT(GLenum pattern);
void glColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table);
void glGetColorTableEXT(GLenum target, GLenum format, GLenum type, void * data);
void glGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint * params);
void glGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
void glPixelTransformParameteriEXT(GLenum target, GLenum pname, GLint param);
void glPixelTransformParameterfEXT(GLenum target, GLenum pname, GLfloat param);
void glPixelTransformParameterivEXT(GLenum target, GLenum pname, const GLint * params);
void glPixelTransformParameterfvEXT(GLenum target, GLenum pname, const GLfloat * params);
void glGetPixelTransformParameterivEXT(GLenum target, GLenum pname, GLint * params);
void glGetPixelTransformParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
void glPointParameterfEXT(GLenum pname, GLfloat param);
void glPointParameterfvEXT(GLenum pname, const GLfloat * params);
void glPolygonOffsetEXT(GLfloat factor, GLfloat bias);
void glPolygonOffsetClampEXT(GLfloat factor, GLfloat units, GLfloat clamp);
void glProvokingVertexEXT(GLenum mode);
void glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations);
void glGenSemaphoresEXT(GLsizei n, GLuint * semaphores);
void glDeleteSemaphoresEXT(GLsizei n, const GLuint * semaphores);
GLboolean glIsSemaphoreEXT(GLuint semaphore);
void glSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, const GLuint64 * params);
void glGetSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, GLuint64 * params);
void glWaitSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint * buffers, GLuint numTextureBarriers, const GLuint * textures, const GLenum * srcLayouts);
void glSignalSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint * buffers, GLuint numTextureBarriers, const GLuint * textures, const GLenum * dstLayouts);
void glImportSemaphoreFdEXT(GLuint semaphore, GLenum handleType, GLint fd);
void glImportSemaphoreWin32HandleEXT(GLuint semaphore, GLenum handleType, void * handle);
void glImportSemaphoreWin32NameEXT(GLuint semaphore, GLenum handleType, const void * name);
void glSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue);
void glSecondaryColor3bvEXT(const GLbyte * v);
void glSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue);
void glSecondaryColor3dvEXT(const GLdouble * v);
void glSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue);
void glSecondaryColor3fvEXT(const GLfloat * v);
void glSecondaryColor3iEXT(GLint red, GLint green, GLint blue);
void glSecondaryColor3ivEXT(const GLint * v);
void glSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue);
void glSecondaryColor3svEXT(const GLshort * v);
void glSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue);
void glSecondaryColor3ubvEXT(const GLubyte * v);
void glSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue);
void glSecondaryColor3uivEXT(const GLuint * v);
void glSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue);
void glSecondaryColor3usvEXT(const GLushort * v);
void glSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const void * pointer);
void glUseShaderProgramEXT(GLenum type, GLuint program);
void glActiveProgramEXT(GLuint program);
GLuint glCreateShaderProgramEXT(GLenum type, const GLchar * string);
void glFramebufferFetchBarrierEXT(void);
void glBindImageTextureEXT(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
void glMemoryBarrierEXT(GLbitfield barriers);
void glStencilClearTagEXT(GLsizei stencilTagBits, GLuint stencilClearTag);
void glActiveStencilFaceEXT(GLenum face);
void glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
void glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params);
void glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params);
void glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params);
void glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params);
void glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
void glClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha);
void glClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLboolean glAreTexturesResidentEXT(GLsizei n, const GLuint * textures, GLboolean * residences);
void glBindTextureEXT(GLenum target, GLuint texture);
void glDeleteTexturesEXT(GLsizei n, const GLuint * textures);
void glGenTexturesEXT(GLsizei n, GLuint * textures);
GLboolean glIsTextureEXT(GLuint texture);
void glPrioritizeTexturesEXT(GLsizei n, const GLuint * textures, const GLclampf * priorities);
void glTextureNormalEXT(GLenum mode);
void glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void glCreateSemaphoresNV(GLsizei n, GLuint * semaphores);
void glSemaphoreParameterivNV(GLuint semaphore, GLenum pname, const GLint * params);
void glGetSemaphoreParameterivNV(GLuint semaphore, GLenum pname, GLint * params);
void glBeginTransformFeedbackEXT(GLenum primitiveMode);
void glEndTransformFeedbackEXT(void);
void glBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void glBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer);
void glTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
void glGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
void glArrayElementEXT(GLint i);
void glColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glDrawArraysEXT(GLenum mode, GLint first, GLsizei count);
void glEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean * pointer);
void glGetPointervEXT(GLenum pname, void ** params);
void glIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glVertexAttribL1dEXT(GLuint index, GLdouble x);
void glVertexAttribL2dEXT(GLuint index, GLdouble x, GLdouble y);
void glVertexAttribL3dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void glVertexAttribL4dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glVertexAttribL1dvEXT(GLuint index, const GLdouble * v);
void glVertexAttribL2dvEXT(GLuint index, const GLdouble * v);
void glVertexAttribL3dvEXT(GLuint index, const GLdouble * v);
void glVertexAttribL4dvEXT(GLuint index, const GLdouble * v);
void glVertexAttribLPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
void glGetVertexAttribLdvEXT(GLuint index, GLenum pname, GLdouble * params);
void glBeginVertexShaderEXT(void);
void glEndVertexShaderEXT(void);
void glBindVertexShaderEXT(GLuint id);
GLuint glGenVertexShadersEXT(GLuint range);
void glDeleteVertexShaderEXT(GLuint id);
void glShaderOp1EXT(GLenum op, GLuint res, GLuint arg1);
void glShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
void glShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
void glSwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
void glWriteMaskEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
void glInsertComponentEXT(GLuint res, GLuint src, GLuint num);
void glExtractComponentEXT(GLuint res, GLuint src, GLuint num);
GLuint glGenSymbolsEXT(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
void glSetInvariantEXT(GLuint id, GLenum type, const void * addr);
void glSetLocalConstantEXT(GLuint id, GLenum type, const void * addr);
void glVariantbvEXT(GLuint id, const GLbyte * addr);
void glVariantsvEXT(GLuint id, const GLshort * addr);
void glVariantivEXT(GLuint id, const GLint * addr);
void glVariantfvEXT(GLuint id, const GLfloat * addr);
void glVariantdvEXT(GLuint id, const GLdouble * addr);
void glVariantubvEXT(GLuint id, const GLubyte * addr);
void glVariantusvEXT(GLuint id, const GLushort * addr);
void glVariantuivEXT(GLuint id, const GLuint * addr);
void glVariantPointerEXT(GLuint id, GLenum type, GLuint stride, const void * addr);
void glEnableVariantClientStateEXT(GLuint id);
void glDisableVariantClientStateEXT(GLuint id);
GLuint glBindLightParameterEXT(GLenum light, GLenum value);
GLuint glBindMaterialParameterEXT(GLenum face, GLenum value);
GLuint glBindTexGenParameterEXT(GLenum unit, GLenum coord, GLenum value);
GLuint glBindTextureUnitParameterEXT(GLenum unit, GLenum value);
GLuint glBindParameterEXT(GLenum value);
GLboolean glIsVariantEnabledEXT(GLuint id, GLenum cap);
void glGetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean * data);
void glGetVariantIntegervEXT(GLuint id, GLenum value, GLint * data);
void glGetVariantFloatvEXT(GLuint id, GLenum value, GLfloat * data);
void glGetVariantPointervEXT(GLuint id, GLenum value, void ** data);
void glGetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean * data);
void glGetInvariantIntegervEXT(GLuint id, GLenum value, GLint * data);
void glGetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat * data);
void glGetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean * data);
void glGetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint * data);
void glGetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat * data);
void glVertexWeightfEXT(GLfloat weight);
void glVertexWeightfvEXT(const GLfloat * weight);
void glVertexWeightPointerEXT(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLboolean glAcquireKeyedMutexWin32EXT(GLuint memory, GLuint64 key, GLuint timeout);
GLboolean glReleaseKeyedMutexWin32EXT(GLuint memory, GLuint64 key);
void glWindowRectanglesEXT(GLenum mode, GLsizei count, const GLint * box);
GLsync glImportSyncEXT(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
void glFrameTerminatorGREMEDY(void);
void glStringMarkerGREMEDY(GLsizei len, const void * string);
void glImageTransformParameteriHP(GLenum target, GLenum pname, GLint param);
void glImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param);
void glImageTransformParameterivHP(GLenum target, GLenum pname, const GLint * params);
void glImageTransformParameterfvHP(GLenum target, GLenum pname, const GLfloat * params);
void glGetImageTransformParameterivHP(GLenum target, GLenum pname, GLint * params);
void glGetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat * params);
void glMultiModeDrawArraysIBM(const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
void glMultiModeDrawElementsIBM(const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride);
void glFlushStaticDataIBM(GLenum target);
void glColorPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
void glSecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
void glEdgeFlagPointerListIBM(GLint stride, const GLboolean ** pointer, GLint ptrstride);
void glFogCoordPointerListIBM(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
void glIndexPointerListIBM(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
void glNormalPointerListIBM(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
void glTexCoordPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
void glVertexPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
void glBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void glApplyFramebufferAttachmentCMAAINTEL(void);
void glSyncTextureINTEL(GLuint texture);
void glUnmapTexture2DINTEL(GLuint texture, GLint level);
void * glMapTexture2DINTEL(GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout);
void glVertexPointervINTEL(GLint size, GLenum type, const void ** pointer);
void glNormalPointervINTEL(GLenum type, const void ** pointer);
void glColorPointervINTEL(GLint size, GLenum type, const void ** pointer);
void glTexCoordPointervINTEL(GLint size, GLenum type, const void ** pointer);
void glBeginPerfQueryINTEL(GLuint queryHandle);
void glCreatePerfQueryINTEL(GLuint queryId, GLuint * queryHandle);
void glDeletePerfQueryINTEL(GLuint queryHandle);
void glEndPerfQueryINTEL(GLuint queryHandle);
void glGetFirstPerfQueryIdINTEL(GLuint * queryId);
void glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint * nextQueryId);
void glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
void glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, void * data, GLuint * bytesWritten);
void glGetPerfQueryIdByNameINTEL(GLchar * queryName, GLuint * queryId);
void glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
void glBlendBarrierKHR(void);
void glMaxShaderCompilerThreadsKHR(GLuint count);
void glFramebufferParameteriMESA(GLenum target, GLenum pname, GLint param);
void glGetFramebufferParameterivMESA(GLenum target, GLenum pname, GLint * params);
void glResizeBuffersMESA(void);
void glWindowPos2dMESA(GLdouble x, GLdouble y);
void glWindowPos2dvMESA(const GLdouble * v);
void glWindowPos2fMESA(GLfloat x, GLfloat y);
void glWindowPos2fvMESA(const GLfloat * v);
void glWindowPos2iMESA(GLint x, GLint y);
void glWindowPos2ivMESA(const GLint * v);
void glWindowPos2sMESA(GLshort x, GLshort y);
void glWindowPos2svMESA(const GLshort * v);
void glWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z);
void glWindowPos3dvMESA(const GLdouble * v);
void glWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z);
void glWindowPos3fvMESA(const GLfloat * v);
void glWindowPos3iMESA(GLint x, GLint y, GLint z);
void glWindowPos3ivMESA(const GLint * v);
void glWindowPos3sMESA(GLshort x, GLshort y, GLshort z);
void glWindowPos3svMESA(const GLshort * v);
void glWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glWindowPos4dvMESA(const GLdouble * v);
void glWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glWindowPos4fvMESA(const GLfloat * v);
void glWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w);
void glWindowPos4ivMESA(const GLint * v);
void glWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w);
void glWindowPos4svMESA(const GLshort * v);
void glBeginConditionalRenderNVX(GLuint id);
void glEndConditionalRenderNVX(void);
void glLGPUNamedBufferSubDataNVX(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
void glLGPUCopyImageSubDataNVX(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
void glLGPUInterlockNVX(void);
void glAlphaToCoverageDitherControlNV(GLenum mode);
void glMultiDrawArraysIndirectBindlessNV(GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
void glMultiDrawElementsIndirectBindlessNV(GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
void glMultiDrawArraysIndirectBindlessCountNV(GLenum mode, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
void glMultiDrawElementsIndirectBindlessCountNV(GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
GLuint64 glGetTextureHandleNV(GLuint texture);
GLuint64 glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler);
void glMakeTextureHandleResidentNV(GLuint64 handle);
void glMakeTextureHandleNonResidentNV(GLuint64 handle);
GLuint64 glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
void glMakeImageHandleResidentNV(GLuint64 handle, GLenum access);
void glMakeImageHandleNonResidentNV(GLuint64 handle);
void glUniformHandleui64NV(GLint location, GLuint64 value);
void glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 * value);
void glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
void glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLboolean glIsTextureHandleResidentNV(GLuint64 handle);
GLboolean glIsImageHandleResidentNV(GLuint64 handle);
void glBlendParameteriNV(GLenum pname, GLint value);
void glBlendBarrierNV(void);
void glViewportPositionWScaleNV(GLuint index, GLfloat xcoeff, GLfloat ycoeff);
void glCreateStatesNV(GLsizei n, GLuint * states);
void glDeleteStatesNV(GLsizei n, const GLuint * states);
GLboolean glIsStateNV(GLuint state);
void glStateCaptureNV(GLuint state, GLenum mode);
GLuint glGetCommandHeaderNV(GLenum tokenID, GLuint size);
GLushort glGetStageIndexNV(GLenum shadertype);
void glDrawCommandsNV(GLenum primitiveMode, GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint count);
void glDrawCommandsAddressNV(GLenum primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint count);
void glDrawCommandsStatesNV(GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
void glDrawCommandsStatesAddressNV(const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
void glCreateCommandListsNV(GLsizei n, GLuint * lists);
void glDeleteCommandListsNV(GLsizei n, const GLuint * lists);
GLboolean glIsCommandListNV(GLuint list);
void glListDrawCommandsStatesClientNV(GLuint list, GLuint segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count);
void glCommandListSegmentsNV(GLuint list, GLuint segments);
void glCompileCommandListNV(GLuint list);
void glCallCommandListNV(GLuint list);
void glBeginConditionalRenderNV(GLuint id, GLenum mode);
void glEndConditionalRenderNV(void);
void glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits);
void glConservativeRasterParameterfNV(GLenum pname, GLfloat value);
void glConservativeRasterParameteriNV(GLenum pname, GLint param);
void glCopyImageSubDataNV(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
void glDepthRangedNV(GLdouble zNear, GLdouble zFar);
void glClearDepthdNV(GLdouble depth);
void glDepthBoundsdNV(GLdouble zmin, GLdouble zmax);
void glDrawTextureNV(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
void glDrawVkImageNV(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
GLVULKANPROCNV glGetVkProcAddrNV(const GLchar * name);
void glWaitVkSemaphoreNV(GLuint64 vkSemaphore);
void glSignalVkSemaphoreNV(GLuint64 vkSemaphore);
void glSignalVkFenceNV(GLuint64 vkFence);
void glMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points);
void glMapParameterivNV(GLenum target, GLenum pname, const GLint * params);
void glMapParameterfvNV(GLenum target, GLenum pname, const GLfloat * params);
void glGetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points);
void glGetMapParameterivNV(GLenum target, GLenum pname, GLint * params);
void glGetMapParameterfvNV(GLenum target, GLenum pname, GLfloat * params);
void glGetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint * params);
void glGetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params);
void glEvalMapsNV(GLenum target, GLenum mode);
void glGetMultisamplefvNV(GLenum pname, GLuint index, GLfloat * val);
void glSampleMaskIndexedNV(GLuint index, GLbitfield mask);
void glTexRenderbufferNV(GLenum target, GLuint renderbuffer);
void glDeleteFencesNV(GLsizei n, const GLuint * fences);
void glGenFencesNV(GLsizei n, GLuint * fences);
GLboolean glIsFenceNV(GLuint fence);
GLboolean glTestFenceNV(GLuint fence);
void glGetFenceivNV(GLuint fence, GLenum pname, GLint * params);
void glFinishFenceNV(GLuint fence);
void glSetFenceNV(GLuint fence, GLenum condition);
void glFragmentCoverageColorNV(GLuint color);
void glProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
void glProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
void glGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
void glGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
void glCoverageModulationTableNV(GLsizei n, const GLfloat * v);
void glGetCoverageModulationTableNV(GLsizei bufSize, GLfloat * v);
void glCoverageModulationNV(GLenum components);
void glRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
void glProgramVertexLimitNV(GLenum target, GLint limit);
void glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
void glProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void glProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint * params);
void glProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params);
void glProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void glProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint * params);
void glProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params);
void glProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void glProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint * params);
void glProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params);
void glProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void glProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint * params);
void glProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params);
void glGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint * params);
void glGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint * params);
void glGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint * params);
void glGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint * params);
void glProgramSubroutineParametersuivNV(GLenum target, GLsizei count, const GLuint * params);
void glGetProgramSubroutineParameteruivNV(GLenum target, GLuint index, GLuint * param);
void glVertex2hNV(GLhalfNV x, GLhalfNV y);
void glVertex2hvNV(const GLhalfNV * v);
void glVertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z);
void glVertex3hvNV(const GLhalfNV * v);
void glVertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
void glVertex4hvNV(const GLhalfNV * v);
void glNormal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
void glNormal3hvNV(const GLhalfNV * v);
void glColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
void glColor3hvNV(const GLhalfNV * v);
void glColor4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
void glColor4hvNV(const GLhalfNV * v);
void glTexCoord1hNV(GLhalfNV s);
void glTexCoord1hvNV(const GLhalfNV * v);
void glTexCoord2hNV(GLhalfNV s, GLhalfNV t);
void glTexCoord2hvNV(const GLhalfNV * v);
void glTexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r);
void glTexCoord3hvNV(const GLhalfNV * v);
void glTexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
void glTexCoord4hvNV(const GLhalfNV * v);
void glMultiTexCoord1hNV(GLenum target, GLhalfNV s);
void glMultiTexCoord1hvNV(GLenum target, const GLhalfNV * v);
void glMultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t);
void glMultiTexCoord2hvNV(GLenum target, const GLhalfNV * v);
void glMultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
void glMultiTexCoord3hvNV(GLenum target, const GLhalfNV * v);
void glMultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
void glMultiTexCoord4hvNV(GLenum target, const GLhalfNV * v);
void glVertexAttrib1hNV(GLuint index, GLhalfNV x);
void glVertexAttrib1hvNV(GLuint index, const GLhalfNV * v);
void glVertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y);
void glVertexAttrib2hvNV(GLuint index, const GLhalfNV * v);
void glVertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
void glVertexAttrib3hvNV(GLuint index, const GLhalfNV * v);
void glVertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
void glVertexAttrib4hvNV(GLuint index, const GLhalfNV * v);
void glVertexAttribs1hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
void glVertexAttribs2hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
void glVertexAttribs3hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
void glVertexAttribs4hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
void glFogCoordhNV(GLhalfNV fog);
void glFogCoordhvNV(const GLhalfNV * fog);
void glSecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
void glSecondaryColor3hvNV(const GLhalfNV * v);
void glVertexWeighthNV(GLhalfNV weight);
void glVertexWeighthvNV(const GLhalfNV * weight);
void glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint * params);
void glRenderGpuMaskNV(GLbitfield mask);
void glMulticastBufferSubDataNV(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
void glMulticastCopyBufferSubDataNV(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void glMulticastCopyImageSubDataNV(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void glMulticastBlitFramebufferNV(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void glMulticastFramebufferSampleLocationsfvNV(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
void glMulticastBarrierNV(void);
void glMulticastWaitSyncNV(GLuint signalGpu, GLbitfield waitGpuMask);
void glMulticastGetQueryObjectivNV(GLuint gpu, GLuint id, GLenum pname, GLint * params);
void glMulticastGetQueryObjectuivNV(GLuint gpu, GLuint id, GLenum pname, GLuint * params);
void glMulticastGetQueryObjecti64vNV(GLuint gpu, GLuint id, GLenum pname, GLint64 * params);
void glMulticastGetQueryObjectui64vNV(GLuint gpu, GLuint id, GLenum pname, GLuint64 * params);
void glUploadGpuMaskNVX(GLbitfield mask);
void glMulticastViewportArrayvNVX(GLuint gpu, GLuint first, GLsizei count, const GLfloat * v);
void glMulticastViewportPositionWScaleNVX(GLuint gpu, GLuint index, GLfloat xcoeff, GLfloat ycoeff);
void glMulticastScissorArrayvNVX(GLuint gpu, GLuint first, GLsizei count, const GLint * v);
GLuint glAsyncCopyBufferSubDataNVX(GLsizei waitSemaphoreCount, const GLuint * waitSemaphoreArray, const GLuint64 * fenceValueArray, GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsizei signalSemaphoreCount, const GLuint * signalSemaphoreArray, const GLuint64 * signalValueArray);
GLuint glAsyncCopyImageSubDataNVX(GLsizei waitSemaphoreCount, const GLuint * waitSemaphoreArray, const GLuint64 * waitValueArray, GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsizei signalSemaphoreCount, const GLuint * signalSemaphoreArray, const GLuint64 * signalValueArray);
GLuint glCreateProgressFenceNVX(void);
void glSignalSemaphoreui64NVX(GLuint signalGpu, GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
void glWaitSemaphoreui64NVX(GLuint waitGpu, GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
void glClientWaitSemaphoreui64NVX(GLsizei fenceObjectCount, const GLuint * semaphoreArray, const GLuint64 * fenceValueArray);
void glGetMemoryObjectDetachedResourcesuivNV(GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint * params);
void glResetMemoryObjectParameterNV(GLuint memory, GLenum pname);
void glTexAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset);
void glBufferAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset);
void glTextureAttachMemoryNV(GLuint texture, GLuint memory, GLuint64 offset);
void glNamedBufferAttachMemoryNV(GLuint buffer, GLuint memory, GLuint64 offset);
void glBufferPageCommitmentMemNV(GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
void glTexPageCommitmentMemNV(GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
void glNamedBufferPageCommitmentMemNV(GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit);
void glTexturePageCommitmentMemNV(GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit);
void glDrawMeshTasksNV(GLuint first, GLuint count);
void glDrawMeshTasksIndirectNV(GLintptr indirect);
void glMultiDrawMeshTasksIndirectNV(GLintptr indirect, GLsizei drawcount, GLsizei stride);
void glMultiDrawMeshTasksIndirectCountNV(GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void glGenOcclusionQueriesNV(GLsizei n, GLuint * ids);
void glDeleteOcclusionQueriesNV(GLsizei n, const GLuint * ids);
GLboolean glIsOcclusionQueryNV(GLuint id);
void glBeginOcclusionQueryNV(GLuint id);
void glEndOcclusionQueryNV(void);
void glGetOcclusionQueryivNV(GLuint id, GLenum pname, GLint * params);
void glGetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint * params);
void glProgramBufferParametersfvNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params);
void glProgramBufferParametersIivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params);
void glProgramBufferParametersIuivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params);
GLuint glGenPathsNV(GLsizei range);
void glDeletePathsNV(GLuint path, GLsizei range);
GLboolean glIsPathNV(GLuint path);
void glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
void glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
void glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
void glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
void glPathStringNV(GLuint path, GLenum format, GLsizei length, const void * pathString);
void glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);
void glCopyPathNV(GLuint resultPath, GLuint srcPath);
void glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
void glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
void glPathParameterivNV(GLuint path, GLenum pname, const GLint * value);
void glPathParameteriNV(GLuint path, GLenum pname, GLint value);
void glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat * value);
void glPathParameterfNV(GLuint path, GLenum pname, GLfloat value);
void glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat * dashArray);
void glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
void glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
void glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
void glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
void glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
void glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
void glPathCoverDepthFuncNV(GLenum func);
void glCoverFillPathNV(GLuint path, GLenum coverMode);
void glCoverStrokePathNV(GLuint path, GLenum coverMode);
void glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
void glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
void glGetPathParameterivNV(GLuint path, GLenum pname, GLint * value);
void glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat * value);
void glGetPathCommandsNV(GLuint path, GLubyte * commands);
void glGetPathCoordsNV(GLuint path, GLfloat * coords);
void glGetPathDashArrayNV(GLuint path, GLfloat * dashArray);
void glGetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
void glGetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
void glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
GLboolean glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLboolean glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y);
GLfloat glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments);
GLboolean glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
void glMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat * m);
void glMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat * m);
void glMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
void glMatrixMult3x2fNV(GLenum matrixMode, const GLfloat * m);
void glMatrixMult3x3fNV(GLenum matrixMode, const GLfloat * m);
void glMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat * m);
void glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
void glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
void glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
void glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLenum glPathGlyphIndexRangeNV(GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint * baseAndCount);
GLenum glPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLenum glPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs);
void glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLfloat * params);
void glPixelDataRangeNV(GLenum target, GLsizei length, const void * pointer);
void glFlushPixelDataRangeNV(GLenum target);
void glPointParameteriNV(GLenum pname, GLint param);
void glPointParameterivNV(GLenum pname, const GLint * params);
void glPresentFrameKeyedNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
void glPresentFrameDualFillNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
void glGetVideoivNV(GLuint video_slot, GLenum pname, GLint * params);
void glGetVideouivNV(GLuint video_slot, GLenum pname, GLuint * params);
void glGetVideoi64vNV(GLuint video_slot, GLenum pname, GLint64EXT * params);
void glGetVideoui64vNV(GLuint video_slot, GLenum pname, GLuint64EXT * params);
void glPrimitiveRestartNV(void);
void glPrimitiveRestartIndexNV(GLuint index);
GLint glQueryResourceNV(GLenum queryType, GLint tagId, GLuint count, GLint * buffer);
void glGenQueryResourceTagNV(GLsizei n, GLint * tagIds);
void glDeleteQueryResourceTagNV(GLsizei n, const GLint * tagIds);
void glQueryResourceTagNV(GLint tagId, const GLchar * tagString);
void glCombinerParameterfvNV(GLenum pname, const GLfloat * params);
void glCombinerParameterfNV(GLenum pname, GLfloat param);
void glCombinerParameterivNV(GLenum pname, const GLint * params);
void glCombinerParameteriNV(GLenum pname, GLint param);
void glCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void glCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
void glFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void glGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
void glGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
void glGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
void glGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint * params);
void glGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat * params);
void glGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint * params);
void glCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat * params);
void glGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat * params);
void glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
void glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
void glResolveDepthValuesNV(void);
void glScissorExclusiveNV(GLint x, GLint y, GLsizei width, GLsizei height);
void glScissorExclusiveArrayvNV(GLuint first, GLsizei count, const GLint * v);
void glMakeBufferResidentNV(GLenum target, GLenum access);
void glMakeBufferNonResidentNV(GLenum target);
GLboolean glIsBufferResidentNV(GLenum target);
void glMakeNamedBufferResidentNV(GLuint buffer, GLenum access);
void glMakeNamedBufferNonResidentNV(GLuint buffer);
GLboolean glIsNamedBufferResidentNV(GLuint buffer);
void glGetBufferParameterui64vNV(GLenum target, GLenum pname, GLuint64EXT * params);
void glGetNamedBufferParameterui64vNV(GLuint buffer, GLenum pname, GLuint64EXT * params);
void glGetIntegerui64vNV(GLenum value, GLuint64EXT * result);
void glUniformui64NV(GLint location, GLuint64EXT value);
void glUniformui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
void glProgramUniformui64NV(GLuint program, GLint location, GLuint64EXT value);
void glProgramUniformui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
void glBindShadingRateImageNV(GLuint texture);
void glGetShadingRateImagePaletteNV(GLuint viewport, GLuint entry, GLenum * rate);
void glGetShadingRateSampleLocationivNV(GLenum rate, GLuint samples, GLuint index, GLint * location);
void glShadingRateImageBarrierNV(GLboolean synchronize);
void glShadingRateImagePaletteNV(GLuint viewport, GLuint first, GLsizei count, const GLenum * rates);
void glShadingRateSampleOrderNV(GLenum order);
void glShadingRateSampleOrderCustomNV(GLenum rate, GLuint samples, const GLint * locations);
void glTextureBarrierNV(void);
void glTexImage2DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
void glTexImage3DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
void glTextureImage2DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
void glTextureImage3DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
void glTextureImage2DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
void glTextureImage3DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
void glBeginTransformFeedbackNV(GLenum primitiveMode);
void glEndTransformFeedbackNV(void);
void glTransformFeedbackAttribsNV(GLsizei count, const GLint * attribs, GLenum bufferMode);
void glBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void glBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer);
void glTransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
void glActiveVaryingNV(GLuint program, const GLchar * name);
GLint glGetVaryingLocationNV(GLuint program, const GLchar * name);
void glGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
void glGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint * location);
void glTransformFeedbackStreamAttribsNV(GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode);
void glBindTransformFeedbackNV(GLenum target, GLuint id);
void glDeleteTransformFeedbacksNV(GLsizei n, const GLuint * ids);
void glGenTransformFeedbacksNV(GLsizei n, GLuint * ids);
GLboolean glIsTransformFeedbackNV(GLuint id);
void glPauseTransformFeedbackNV(void);
void glResumeTransformFeedbackNV(void);
void glDrawTransformFeedbackNV(GLenum mode, GLuint id);
void glVDPAUInitNV(const void * vdpDevice, const void * getProcAddress);
void glVDPAUFiniNV(void);
GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceNV(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
GLvdpauSurfaceNV glVDPAURegisterOutputSurfaceNV(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
GLboolean glVDPAUIsSurfaceNV(GLvdpauSurfaceNV surface);
void glVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface);
void glVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
void glVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface, GLenum access);
void glVDPAUMapSurfacesNV(GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces);
void glVDPAUUnmapSurfacesNV(GLsizei numSurface, const GLvdpauSurfaceNV * surfaces);
GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceWithPictureStructureNV(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames, GLboolean isFrameStructure);
void glFlushVertexArrayRangeNV(void);
void glVertexArrayRangeNV(GLsizei length, const void * pointer);
void glVertexAttribL1i64NV(GLuint index, GLint64EXT x);
void glVertexAttribL2i64NV(GLuint index, GLint64EXT x, GLint64EXT y);
void glVertexAttribL3i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void glVertexAttribL4i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void glVertexAttribL1i64vNV(GLuint index, const GLint64EXT * v);
void glVertexAttribL2i64vNV(GLuint index, const GLint64EXT * v);
void glVertexAttribL3i64vNV(GLuint index, const GLint64EXT * v);
void glVertexAttribL4i64vNV(GLuint index, const GLint64EXT * v);
void glVertexAttribL1ui64NV(GLuint index, GLuint64EXT x);
void glVertexAttribL2ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y);
void glVertexAttribL3ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void glVertexAttribL4ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void glVertexAttribL1ui64vNV(GLuint index, const GLuint64EXT * v);
void glVertexAttribL2ui64vNV(GLuint index, const GLuint64EXT * v);
void glVertexAttribL3ui64vNV(GLuint index, const GLuint64EXT * v);
void glVertexAttribL4ui64vNV(GLuint index, const GLuint64EXT * v);
void glGetVertexAttribLi64vNV(GLuint index, GLenum pname, GLint64EXT * params);
void glGetVertexAttribLui64vNV(GLuint index, GLenum pname, GLuint64EXT * params);
void glVertexAttribLFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
void glBufferAddressRangeNV(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
void glVertexFormatNV(GLint size, GLenum type, GLsizei stride);
void glNormalFormatNV(GLenum type, GLsizei stride);
void glColorFormatNV(GLint size, GLenum type, GLsizei stride);
void glIndexFormatNV(GLenum type, GLsizei stride);
void glTexCoordFormatNV(GLint size, GLenum type, GLsizei stride);
void glEdgeFlagFormatNV(GLsizei stride);
void glSecondaryColorFormatNV(GLint size, GLenum type, GLsizei stride);
void glFogCoordFormatNV(GLenum type, GLsizei stride);
void glVertexAttribFormatNV(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
void glVertexAttribIFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
void glGetIntegerui64i_vNV(GLenum value, GLuint index, GLuint64EXT * result);
GLboolean glAreProgramsResidentNV(GLsizei n, const GLuint * programs, GLboolean * residences);
void glBindProgramNV(GLenum target, GLuint id);
void glDeleteProgramsNV(GLsizei n, const GLuint * programs);
void glExecuteProgramNV(GLenum target, GLuint id, const GLfloat * params);
void glGenProgramsNV(GLsizei n, GLuint * programs);
void glGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble * params);
void glGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params);
void glGetProgramivNV(GLuint id, GLenum pname, GLint * params);
void glGetProgramStringNV(GLuint id, GLenum pname, GLubyte * program);
void glGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint * params);
void glGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble * params);
void glGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat * params);
void glGetVertexAttribivNV(GLuint index, GLenum pname, GLint * params);
void glGetVertexAttribPointervNV(GLuint index, GLenum pname, void ** pointer);
GLboolean glIsProgramNV(GLuint id);
void glLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte * program);
void glProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble * v);
void glProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat * v);
void glProgramParameters4dvNV(GLenum target, GLuint index, GLsizei count, const GLdouble * v);
void glProgramParameters4fvNV(GLenum target, GLuint index, GLsizei count, const GLfloat * v);
void glRequestResidentProgramsNV(GLsizei n, const GLuint * programs);
void glTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform);
void glVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer);
void glVertexAttrib1dNV(GLuint index, GLdouble x);
void glVertexAttrib1dvNV(GLuint index, const GLdouble * v);
void glVertexAttrib1fNV(GLuint index, GLfloat x);
void glVertexAttrib1fvNV(GLuint index, const GLfloat * v);
void glVertexAttrib1sNV(GLuint index, GLshort x);
void glVertexAttrib1svNV(GLuint index, const GLshort * v);
void glVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y);
void glVertexAttrib2dvNV(GLuint index, const GLdouble * v);
void glVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y);
void glVertexAttrib2fvNV(GLuint index, const GLfloat * v);
void glVertexAttrib2sNV(GLuint index, GLshort x, GLshort y);
void glVertexAttrib2svNV(GLuint index, const GLshort * v);
void glVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void glVertexAttrib3dvNV(GLuint index, const GLdouble * v);
void glVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void glVertexAttrib3fvNV(GLuint index, const GLfloat * v);
void glVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z);
void glVertexAttrib3svNV(GLuint index, const GLshort * v);
void glVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glVertexAttrib4dvNV(GLuint index, const GLdouble * v);
void glVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glVertexAttrib4fvNV(GLuint index, const GLfloat * v);
void glVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void glVertexAttrib4svNV(GLuint index, const GLshort * v);
void glVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void glVertexAttrib4ubvNV(GLuint index, const GLubyte * v);
void glVertexAttribs1dvNV(GLuint index, GLsizei count, const GLdouble * v);
void glVertexAttribs1fvNV(GLuint index, GLsizei count, const GLfloat * v);
void glVertexAttribs1svNV(GLuint index, GLsizei count, const GLshort * v);
void glVertexAttribs2dvNV(GLuint index, GLsizei count, const GLdouble * v);
void glVertexAttribs2fvNV(GLuint index, GLsizei count, const GLfloat * v);
void glVertexAttribs2svNV(GLuint index, GLsizei count, const GLshort * v);
void glVertexAttribs3dvNV(GLuint index, GLsizei count, const GLdouble * v);
void glVertexAttribs3fvNV(GLuint index, GLsizei count, const GLfloat * v);
void glVertexAttribs3svNV(GLuint index, GLsizei count, const GLshort * v);
void glVertexAttribs4dvNV(GLuint index, GLsizei count, const GLdouble * v);
void glVertexAttribs4fvNV(GLuint index, GLsizei count, const GLfloat * v);
void glVertexAttribs4svNV(GLuint index, GLsizei count, const GLshort * v);
void glVertexAttribs4ubvNV(GLuint index, GLsizei count, const GLubyte * v);
void glBeginVideoCaptureNV(GLuint video_capture_slot);
void glBindVideoCaptureStreamBufferNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
void glBindVideoCaptureStreamTextureNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
void glEndVideoCaptureNV(GLuint video_capture_slot);
void glGetVideoCaptureivNV(GLuint video_capture_slot, GLenum pname, GLint * params);
void glGetVideoCaptureStreamivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params);
void glGetVideoCaptureStreamfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params);
void glGetVideoCaptureStreamdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params);
GLenum glVideoCaptureNV(GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
void glVideoCaptureStreamParameterivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params);
void glVideoCaptureStreamParameterfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params);
void glVideoCaptureStreamParameterdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params);
void glViewportSwizzleNV(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
void glMultiTexCoord1bOES(GLenum texture, GLbyte s);
void glMultiTexCoord1bvOES(GLenum texture, const GLbyte * coords);
void glMultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t);
void glMultiTexCoord2bvOES(GLenum texture, const GLbyte * coords);
void glMultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
void glMultiTexCoord3bvOES(GLenum texture, const GLbyte * coords);
void glMultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
void glMultiTexCoord4bvOES(GLenum texture, const GLbyte * coords);
void glTexCoord1bOES(GLbyte s);
void glTexCoord1bvOES(const GLbyte * coords);
void glTexCoord2bOES(GLbyte s, GLbyte t);
void glTexCoord2bvOES(const GLbyte * coords);
void glTexCoord3bOES(GLbyte s, GLbyte t, GLbyte r);
void glTexCoord3bvOES(const GLbyte * coords);
void glTexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
void glTexCoord4bvOES(const GLbyte * coords);
void glVertex2bOES(GLbyte x, GLbyte y);
void glVertex2bvOES(const GLbyte * coords);
void glVertex3bOES(GLbyte x, GLbyte y, GLbyte z);
void glVertex3bvOES(const GLbyte * coords);
void glVertex4bOES(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
void glVertex4bvOES(const GLbyte * coords);
void glAlphaFuncxOES(GLenum func, GLfixed ref);
void glClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void glClearDepthxOES(GLfixed depth);
void glClipPlanexOES(GLenum plane, const GLfixed * equation);
void glColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void glDepthRangexOES(GLfixed n, GLfixed f);
void glFogxOES(GLenum pname, GLfixed param);
void glFogxvOES(GLenum pname, const GLfixed * param);
void glFrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void glGetClipPlanexOES(GLenum plane, GLfixed * equation);
void glGetFixedvOES(GLenum pname, GLfixed * params);
void glGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed * params);
void glGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed * params);
void glLightModelxOES(GLenum pname, GLfixed param);
void glLightModelxvOES(GLenum pname, const GLfixed * param);
void glLightxOES(GLenum light, GLenum pname, GLfixed param);
void glLightxvOES(GLenum light, GLenum pname, const GLfixed * params);
void glLineWidthxOES(GLfixed width);
void glLoadMatrixxOES(const GLfixed * m);
void glMaterialxOES(GLenum face, GLenum pname, GLfixed param);
void glMaterialxvOES(GLenum face, GLenum pname, const GLfixed * param);
void glMultMatrixxOES(const GLfixed * m);
void glMultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void glNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz);
void glOrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void glPointParameterxvOES(GLenum pname, const GLfixed * params);
void glPointSizexOES(GLfixed size);
void glPolygonOffsetxOES(GLfixed factor, GLfixed units);
void glRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
void glScalexOES(GLfixed x, GLfixed y, GLfixed z);
void glTexEnvxOES(GLenum target, GLenum pname, GLfixed param);
void glTexEnvxvOES(GLenum target, GLenum pname, const GLfixed * params);
void glTexParameterxOES(GLenum target, GLenum pname, GLfixed param);
void glTexParameterxvOES(GLenum target, GLenum pname, const GLfixed * params);
void glTranslatexOES(GLfixed x, GLfixed y, GLfixed z);
void glAccumxOES(GLenum op, GLfixed value);
void glBitmapxOES(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
void glBlendColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void glClearAccumxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void glColor3xOES(GLfixed red, GLfixed green, GLfixed blue);
void glColor3xvOES(const GLfixed * components);
void glColor4xvOES(const GLfixed * components);
void glConvolutionParameterxOES(GLenum target, GLenum pname, GLfixed param);
void glConvolutionParameterxvOES(GLenum target, GLenum pname, const GLfixed * params);
void glEvalCoord1xOES(GLfixed u);
void glEvalCoord1xvOES(const GLfixed * coords);
void glEvalCoord2xOES(GLfixed u, GLfixed v);
void glEvalCoord2xvOES(const GLfixed * coords);
void glFeedbackBufferxOES(GLsizei n, GLenum type, const GLfixed * buffer);
void glGetConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed * params);
void glGetHistogramParameterxvOES(GLenum target, GLenum pname, GLfixed * params);
void glGetLightxOES(GLenum light, GLenum pname, GLfixed * params);
void glGetMapxvOES(GLenum target, GLenum query, GLfixed * v);
void glGetMaterialxOES(GLenum face, GLenum pname, GLfixed param);
void glGetPixelMapxv(GLenum map, GLint size, GLfixed * values);
void glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed * params);
void glGetTexLevelParameterxvOES(GLenum target, GLint level, GLenum pname, GLfixed * params);
void glIndexxOES(GLfixed component);
void glIndexxvOES(const GLfixed * component);
void glLoadTransposeMatrixxOES(const GLfixed * m);
void glMap1xOES(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
void glMap2xOES(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
void glMapGrid1xOES(GLint n, GLfixed u1, GLfixed u2);
void glMapGrid2xOES(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
void glMultTransposeMatrixxOES(const GLfixed * m);
void glMultiTexCoord1xOES(GLenum texture, GLfixed s);
void glMultiTexCoord1xvOES(GLenum texture, const GLfixed * coords);
void glMultiTexCoord2xOES(GLenum texture, GLfixed s, GLfixed t);
void glMultiTexCoord2xvOES(GLenum texture, const GLfixed * coords);
void glMultiTexCoord3xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
void glMultiTexCoord3xvOES(GLenum texture, const GLfixed * coords);
void glMultiTexCoord4xvOES(GLenum texture, const GLfixed * coords);
void glNormal3xvOES(const GLfixed * coords);
void glPassThroughxOES(GLfixed token);
void glPixelMapx(GLenum map, GLint size, const GLfixed * values);
void glPixelStorex(GLenum pname, GLfixed param);
void glPixelTransferxOES(GLenum pname, GLfixed param);
void glPixelZoomxOES(GLfixed xfactor, GLfixed yfactor);
void glPrioritizeTexturesxOES(GLsizei n, const GLuint * textures, const GLfixed * priorities);
void glRasterPos2xOES(GLfixed x, GLfixed y);
void glRasterPos2xvOES(const GLfixed * coords);
void glRasterPos3xOES(GLfixed x, GLfixed y, GLfixed z);
void glRasterPos3xvOES(const GLfixed * coords);
void glRasterPos4xOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
void glRasterPos4xvOES(const GLfixed * coords);
void glRectxOES(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
void glRectxvOES(const GLfixed * v1, const GLfixed * v2);
void glTexCoord1xOES(GLfixed s);
void glTexCoord1xvOES(const GLfixed * coords);
void glTexCoord2xOES(GLfixed s, GLfixed t);
void glTexCoord2xvOES(const GLfixed * coords);
void glTexCoord3xOES(GLfixed s, GLfixed t, GLfixed r);
void glTexCoord3xvOES(const GLfixed * coords);
void glTexCoord4xOES(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void glTexCoord4xvOES(const GLfixed * coords);
void glTexGenxOES(GLenum coord, GLenum pname, GLfixed param);
void glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed * params);
void glVertex2xOES(GLfixed x);
void glVertex2xvOES(const GLfixed * coords);
void glVertex3xOES(GLfixed x, GLfixed y);
void glVertex3xvOES(const GLfixed * coords);
void glVertex4xOES(GLfixed x, GLfixed y, GLfixed z);
void glVertex4xvOES(const GLfixed * coords);
GLbitfield glQueryMatrixxOES(GLfixed * mantissa, GLint * exponent);
void glClearDepthfOES(GLclampf depth);
void glClipPlanefOES(GLenum plane, const GLfloat * equation);
void glDepthRangefOES(GLclampf n, GLclampf f);
void glFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void glGetClipPlanefOES(GLenum plane, GLfloat * equation);
void glOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
void glNamedFramebufferTextureMultiviewOVR(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
void glHintPGI(GLenum target, GLint mode);
void glDetailTexFuncSGIS(GLenum target, GLsizei n, const GLfloat * points);
void glGetDetailTexFuncSGIS(GLenum target, GLfloat * points);
void glFogFuncSGIS(GLsizei n, const GLfloat * points);
void glGetFogFuncSGIS(GLfloat * points);
void glSampleMaskSGIS(GLclampf value, GLboolean invert);
void glSamplePatternSGIS(GLenum pattern);
void glPixelTexGenParameteriSGIS(GLenum pname, GLint param);
void glPixelTexGenParameterivSGIS(GLenum pname, const GLint * params);
void glPixelTexGenParameterfSGIS(GLenum pname, GLfloat param);
void glPixelTexGenParameterfvSGIS(GLenum pname, const GLfloat * params);
void glGetPixelTexGenParameterivSGIS(GLenum pname, GLint * params);
void glGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat * params);
void glPointParameterfSGIS(GLenum pname, GLfloat param);
void glPointParameterfvSGIS(GLenum pname, const GLfloat * params);
void glSharpenTexFuncSGIS(GLenum target, GLsizei n, const GLfloat * points);
void glGetSharpenTexFuncSGIS(GLenum target, GLfloat * points);
void glTexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels);
void glTextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void glGetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat * weights);
void glTexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);
void glAsyncMarkerSGIX(GLuint marker);
GLint glFinishAsyncSGIX(GLuint * markerp);
GLint glPollAsyncSGIX(GLuint * markerp);
GLuint glGenAsyncMarkersSGIX(GLsizei range);
void glDeleteAsyncMarkersSGIX(GLuint marker, GLsizei range);
GLboolean glIsAsyncMarkerSGIX(GLuint marker);
void glFlushRasterSGIX(void);
void glFragmentColorMaterialSGIX(GLenum face, GLenum mode);
void glFragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param);
void glFragmentLightfvSGIX(GLenum light, GLenum pname, const GLfloat * params);
void glFragmentLightiSGIX(GLenum light, GLenum pname, GLint param);
void glFragmentLightivSGIX(GLenum light, GLenum pname, const GLint * params);
void glFragmentLightModelfSGIX(GLenum pname, GLfloat param);
void glFragmentLightModelfvSGIX(GLenum pname, const GLfloat * params);
void glFragmentLightModeliSGIX(GLenum pname, GLint param);
void glFragmentLightModelivSGIX(GLenum pname, const GLint * params);
void glFragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param);
void glFragmentMaterialfvSGIX(GLenum face, GLenum pname, const GLfloat * params);
void glFragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param);
void glFragmentMaterialivSGIX(GLenum face, GLenum pname, const GLint * params);
void glGetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat * params);
void glGetFragmentLightivSGIX(GLenum light, GLenum pname, GLint * params);
void glGetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat * params);
void glGetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint * params);
void glLightEnviSGIX(GLenum pname, GLint param);
void glFrameZoomSGIX(GLint factor);
void glIglooInterfaceSGIX(GLenum pname, const void * params);
GLint glGetInstrumentsSGIX(void);
void glInstrumentsBufferSGIX(GLsizei size, GLint * buffer);
GLint glPollInstrumentsSGIX(GLint * marker_p);
void glReadInstrumentsSGIX(GLint marker);
void glStartInstrumentsSGIX(void);
void glStopInstrumentsSGIX(GLint marker);
void glGetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat * params);
void glGetListParameterivSGIX(GLuint list, GLenum pname, GLint * params);
void glListParameterfSGIX(GLuint list, GLenum pname, GLfloat param);
void glListParameterfvSGIX(GLuint list, GLenum pname, const GLfloat * params);
void glListParameteriSGIX(GLuint list, GLenum pname, GLint param);
void glListParameterivSGIX(GLuint list, GLenum pname, const GLint * params);
void glPixelTexGenSGIX(GLenum mode);
void glDeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);
void glDeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);
void glDeformSGIX(GLbitfield mask);
void glLoadIdentityDeformationMapSGIX(GLbitfield mask);
void glReferencePlaneSGIX(const GLdouble * equation);
void glSpriteParameterfSGIX(GLenum pname, GLfloat param);
void glSpriteParameterfvSGIX(GLenum pname, const GLfloat * params);
void glSpriteParameteriSGIX(GLenum pname, GLint param);
void glSpriteParameterivSGIX(GLenum pname, const GLint * params);
void glTagSampleBufferSGIX(void);
void glColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
void glColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat * params);
void glColorTableParameterivSGI(GLenum target, GLenum pname, const GLint * params);
void glCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void glGetColorTableSGI(GLenum target, GLenum format, GLenum type, void * table);
void glGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat * params);
void glGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint * params);
void glFinishTextureSUNX(void);
void glGlobalAlphaFactorbSUN(GLbyte factor);
void glGlobalAlphaFactorsSUN(GLshort factor);
void glGlobalAlphaFactoriSUN(GLint factor);
void glGlobalAlphaFactorfSUN(GLfloat factor);
void glGlobalAlphaFactordSUN(GLdouble factor);
void glGlobalAlphaFactorubSUN(GLubyte factor);
void glGlobalAlphaFactorusSUN(GLushort factor);
void glGlobalAlphaFactoruiSUN(GLuint factor);
void glDrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width);
void glReplacementCodeuiSUN(GLuint code);
void glReplacementCodeusSUN(GLushort code);
void glReplacementCodeubSUN(GLubyte code);
void glReplacementCodeuivSUN(const GLuint * code);
void glReplacementCodeusvSUN(const GLushort * code);
void glReplacementCodeubvSUN(const GLubyte * code);
void glReplacementCodePointerSUN(GLenum type, GLsizei stride, const void ** pointer);
void glColor4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
void glColor4ubVertex2fvSUN(const GLubyte * c, const GLfloat * v);
void glColor4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
void glColor4ubVertex3fvSUN(const GLubyte * c, const GLfloat * v);
void glColor3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
void glColor3fVertex3fvSUN(const GLfloat * c, const GLfloat * v);
void glNormal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void glNormal3fVertex3fvSUN(const GLfloat * n, const GLfloat * v);
void glColor4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void glColor4fNormal3fVertex3fvSUN(const GLfloat * c, const GLfloat * n, const GLfloat * v);
void glTexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
void glTexCoord2fVertex3fvSUN(const GLfloat * tc, const GLfloat * v);
void glTexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glTexCoord4fVertex4fvSUN(const GLfloat * tc, const GLfloat * v);
void glTexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
void glTexCoord2fColor4ubVertex3fvSUN(const GLfloat * tc, const GLubyte * c, const GLfloat * v);
void glTexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
void glTexCoord2fColor3fVertex3fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * v);
void glTexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void glTexCoord2fNormal3fVertex3fvSUN(const GLfloat * tc, const GLfloat * n, const GLfloat * v);
void glTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void glTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
void glTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
void glReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
void glReplacementCodeuiVertex3fvSUN(const GLuint * rc, const GLfloat * v);
void glReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
void glReplacementCodeuiColor4ubVertex3fvSUN(const GLuint * rc, const GLubyte * c, const GLfloat * v);
void glReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
void glReplacementCodeuiColor3fVertex3fvSUN(const GLuint * rc, const GLfloat * c, const GLfloat * v);
void glReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void glReplacementCodeuiNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * n, const GLfloat * v);
void glReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void glReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
void glReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
void glReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * v);
void glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
void glTexImage2DExternalANGLE(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type);
void glInvalidateTextureANGLE(GLenum target);
void glTexStorageMemFlags2DANGLE(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset, GLbitfield createFlags, GLbitfield usageFlags, const void * imageCreateInfoPNext);
void glTexStorageMemFlags2DMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset, GLbitfield createFlags, GLbitfield usageFlags, const void * imageCreateInfoPNext);
void glTexStorageMemFlags3DANGLE(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLbitfield createFlags, GLbitfield usageFlags, const void * imageCreateInfoPNext);
void glTexStorageMemFlags3DMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset, GLbitfield createFlags, GLbitfield usageFlags, const void * imageCreateInfoPNext);
void glImportMemoryZirconHandleANGLE(GLuint memory, GLuint64 size, GLenum handleType, GLuint handle);
void glImportSemaphoreZirconHandleANGLE(GLuint semaphore, GLenum handleType, GLuint handle);
void glBlendBarrier(void);
void glPrimitiveBoundingBox(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
void glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
void glVertexAttribDivisorANGLE(GLuint index, GLuint divisor);
void glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
void glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
void glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glResolveMultisampleFramebufferAPPLE(void);
GLsync glFenceSyncAPPLE(GLenum condition, GLbitfield flags);
GLboolean glIsSyncAPPLE(GLsync sync);
void glDeleteSyncAPPLE(GLsync sync);
GLenum glClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
void glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
void glGetInteger64vAPPLE(GLenum pname, GLint64 * params);
void glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
void glMaxActiveShaderCoresARM(GLuint count);
void glDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
void glDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
void glDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
void glBindFragDataLocationIndexedEXT(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
GLint glGetProgramResourceLocationIndexEXT(GLuint program, GLenum programInterface, const GLchar * name);
GLint glGetFragDataIndexEXT(GLuint program, const GLchar * name);
void glBufferStorageEXT(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
void glClearTexImageEXT(GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
void glClearTexSubImageEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
void glClipControlEXT(GLenum origin, GLenum depth);
void glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum * attachments);
void glGenQueriesEXT(GLsizei n, GLuint * ids);
void glDeleteQueriesEXT(GLsizei n, const GLuint * ids);
GLboolean glIsQueryEXT(GLuint id);
void glBeginQueryEXT(GLenum target, GLuint id);
void glEndQueryEXT(GLenum target);
void glQueryCounterEXT(GLuint id, GLenum target);
void glGetQueryivEXT(GLenum target, GLenum pname, GLint * params);
void glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint * params);
void glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint * params);
void glGetInteger64vEXT(GLenum pname, GLint64 * data);
void glDrawBuffersEXT(GLsizei n, const GLenum * bufs);
void glEnableiEXT(GLenum target, GLuint index);
void glDisableiEXT(GLenum target, GLuint index);
void glBlendEquationiEXT(GLuint buf, GLenum mode);
void glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst);
void glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLboolean glIsEnablediEXT(GLenum target, GLuint index);
void glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
void glMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
void glDrawTransformFeedbackEXT(GLenum mode, GLuint id);
void glDrawTransformFeedbackInstancedEXT(GLenum mode, GLuint id, GLsizei instancecount);
void glGetFragmentShadingRatesEXT(GLsizei samples, GLsizei maxCount, GLsizei * count, GLenum * shadingRates);
void glShadingRateEXT(GLenum rate);
void glShadingRateCombinerOpsEXT(GLenum combinerOp0, GLenum combinerOp1);
void glFramebufferShadingRateEXT(GLenum target, GLenum attachment, GLuint texture, GLint baseLayer, GLsizei numLayers, GLsizei texelWidth, GLsizei texelHeight);
void glVertexAttribDivisorEXT(GLuint index, GLuint divisor);
void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
void glMultiDrawArraysIndirectEXT(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
void glMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
void glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
void glReadBufferIndexedEXT(GLenum src, GLint index);
void glDrawBuffersIndexedEXT(GLint n, const GLenum * location, const GLint * indices);
void glGetIntegeri_vEXT(GLenum target, GLuint index, GLint * data);
void glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLenum glGetGraphicsResetStatusEXT(void);
void glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
void glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
void glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint * params);
void glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
void glBindProgramPipelineEXT(GLuint pipeline);
GLuint glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar *const* strings);
void glDeleteProgramPipelinesEXT(GLsizei n, const GLuint * pipelines);
void glGenProgramPipelinesEXT(GLsizei n, GLuint * pipelines);
void glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint * params);
GLboolean glIsProgramPipelineEXT(GLuint pipeline);
void glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program);
void glValidateProgramPipelineEXT(GLuint pipeline);
void glFramebufferPixelLocalStorageSizeEXT(GLuint target, GLsizei size);
GLsizei glGetFramebufferPixelLocalStorageSizeEXT(GLuint target);
void glClearPixelLocalStorageuiEXT(GLsizei offset, GLsizei n, const GLuint * values);
void glTexPageCommitmentEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
void glPatchParameteriEXT(GLenum pname, GLint value);
void glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint * param);
void glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint * param);
void glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint * params);
void glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint * params);
void glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glTexStorageAttribs2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, const GLint * attrib_list);
void glTexStorageAttribs3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, const GLint * attrib_list);
void glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLuint64 glGetTextureHandleIMG(GLuint texture);
GLuint64 glGetTextureSamplerHandleIMG(GLuint texture, GLuint sampler);
void glUniformHandleui64IMG(GLint location, GLuint64 value);
void glUniformHandleui64vIMG(GLint location, GLsizei count, const GLuint64 * value);
void glProgramUniformHandleui64IMG(GLuint program, GLint location, GLuint64 value);
void glProgramUniformHandleui64vIMG(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
void glFramebufferTexture2DDownsampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale);
void glFramebufferTextureLayerDownsampleIMG(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale);
void glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
void glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
void glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
void glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void * userParam);
GLuint glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
void glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar * message);
void glPopDebugGroupKHR(void);
void glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
void glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
void glObjectPtrLabelKHR(const void * ptr, GLsizei length, const GLchar * label);
void glGetObjectPtrLabelKHR(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
void glGetPointervKHR(GLenum pname, void ** params);
GLenum glGetGraphicsResetStatusKHR(void);
void glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
void glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
void glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint * params);
void glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
void glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void glCoverageMaskNV(GLboolean mask);
void glCoverageOperationNV(GLenum operation);
void glDrawBuffersNV(GLsizei n, const GLenum * bufs);
void glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
void glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glVertexAttribDivisorNV(GLuint index, GLuint divisor);
void glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glPolygonModeNV(GLenum face, GLenum mode);
void glReadBufferNV(GLenum mode);
void glViewportArrayvNV(GLuint first, GLsizei count, const GLfloat * v);
void glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void glViewportIndexedfvNV(GLuint index, const GLfloat * v);
void glScissorArrayvNV(GLuint first, GLsizei count, const GLint * v);
void glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void glScissorIndexedvNV(GLuint index, const GLint * v);
void glDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat * v);
void glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f);
void glGetFloati_vNV(GLenum target, GLuint index, GLfloat * data);
void glEnableiNV(GLenum target, GLuint index);
void glDisableiNV(GLenum target, GLuint index);
GLboolean glIsEnablediNV(GLenum target, GLuint index);
void glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
void glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
void glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void glEnableiOES(GLenum target, GLuint index);
void glDisableiOES(GLenum target, GLuint index);
void glBlendEquationiOES(GLuint buf, GLenum mode);
void glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void glBlendFunciOES(GLuint buf, GLenum src, GLenum dst);
void glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLboolean glIsEnablediOES(GLenum target, GLuint index);
void glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
void glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level);
void glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
void glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void * binary, GLint length);
void * glMapBufferOES(GLenum target, GLenum access);
GLboolean glUnmapBufferOES(GLenum target);
void glGetBufferPointervOES(GLenum target, GLenum pname, void ** params);
void glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
void glMinSampleShadingOES(GLfloat value);
void glPatchParameteriOES(GLenum pname, GLint value);
void glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
void glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
void glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void glTexParameterIivOES(GLenum target, GLenum pname, const GLint * params);
void glTexParameterIuivOES(GLenum target, GLenum pname, const GLuint * params);
void glGetTexParameterIivOES(GLenum target, GLenum pname, GLint * params);
void glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint * params);
void glSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint * param);
void glSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint * param);
void glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint * params);
void glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint * params);
void glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer);
void glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void glTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void glBindVertexArrayOES(GLuint array);
void glDeleteVertexArraysOES(GLsizei n, const GLuint * arrays);
void glGenVertexArraysOES(GLsizei n, GLuint * arrays);
GLboolean glIsVertexArrayOES(GLuint array);
void glViewportArrayvOES(GLuint first, GLsizei count, const GLfloat * v);
void glViewportIndexedfOES(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void glViewportIndexedfvOES(GLuint index, const GLfloat * v);
void glScissorArrayvOES(GLuint first, GLsizei count, const GLint * v);
void glScissorIndexedOES(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void glScissorIndexedvOES(GLuint index, const GLint * v);
void glDepthRangeArrayfvOES(GLuint first, GLsizei count, const GLfloat * v);
void glDepthRangeIndexedfOES(GLuint index, GLfloat n, GLfloat f);
void glGetFloati_vOES(GLenum target, GLuint index, GLfloat * data);
void glFramebufferTextureMultisampleMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews);
void glAlphaFuncQCOM(GLenum func, GLclampf ref);
void glGetDriverControlsQCOM(GLint * num, GLsizei size, GLuint * driverControls);
void glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString);
void glEnableDriverControlQCOM(GLuint driverControl);
void glDisableDriverControlQCOM(GLuint driverControl);
void glExtGetTexturesQCOM(GLuint * textures, GLint maxTextures, GLint * numTextures);
void glExtGetBuffersQCOM(GLuint * buffers, GLint maxBuffers, GLint * numBuffers);
void glExtGetRenderbuffersQCOM(GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers);
void glExtGetFramebuffersQCOM(GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers);
void glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params);
void glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
void glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels);
void glExtGetBufferPointervQCOM(GLenum target, void ** params);
void glExtGetShadersQCOM(GLuint * shaders, GLint maxShaders, GLint * numShaders);
void glExtGetProgramsQCOM(GLuint * programs, GLint maxPrograms, GLint * numPrograms);
GLboolean glExtIsProgramBinaryQCOM(GLuint program);
void glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar * source, GLint * length);
void glFramebufferFoveationConfigQCOM(GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint * providedFeatures);
void glFramebufferFoveationParametersQCOM(GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
void glTexEstimateMotionQCOM(GLuint ref, GLuint target, GLuint output);
void glTexEstimateMotionRegionsQCOM(GLuint ref, GLuint target, GLuint output, GLuint mask);
void glExtrapolateTex2DQCOM(GLuint src1, GLuint src2, GLuint output, GLfloat scaleFactor);
void glTextureFoveationParametersQCOM(GLuint texture, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
void glFramebufferFetchBarrierQCOM(void);
void glShadingRateQCOM(GLenum rate);
void glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
void glEndTilingQCOM(GLbitfield preserveMask);
void glBindUniformLocationCHROMIUM(GLuint program, GLint location, const GLchar * name);
void glCoverageModulationCHROMIUM(GLenum components);
void glCopyTextureCHROMIUM(GLuint sourceId, GLint sourceLevel, GLenum destTarget, GLuint destId, GLint destLevel, GLint internalFormat, GLenum destType, GLboolean unpackFlipY, GLboolean unpackPremultiplyAlpha, GLboolean unpackUnmultiplyAlpha);
void glCopySubTextureCHROMIUM(GLuint sourceId, GLint sourceLevel, GLenum destTarget, GLuint destId, GLint destLevel, GLint xoffset, GLint yoffset, GLint x, GLint y, GLint width, GLint height, GLboolean unpackFlipY, GLboolean unpackPremultiplyAlpha, GLboolean unpackUnmultiplyAlpha);
void glCompressedCopyTextureCHROMIUM(GLuint sourceId, GLuint destId);
void glRequestExtensionANGLE(const GLchar * name);
void glDisableExtensionANGLE(const GLchar * name);
void glAcquireTexturesANGLE(GLuint numTextures, const GLuint * textures, const GLenum * layouts);
void glReleaseTexturesANGLE(GLuint numTextures, const GLuint * textures, GLenum * layouts);
void glGetBooleanvRobustANGLE(GLenum pname, GLsizei bufSize, GLsizei * length, GLboolean * params);
void glGetBufferParameterivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetBufferParameteri64vRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint64 * params);
void glGetFloatvRobustANGLE(GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
void glGetFramebufferAttachmentParameterivRobustANGLE(GLenum target, GLenum attachment, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetIntegervRobustANGLE(GLenum pname, GLsizei bufSize, GLsizei * length, GLint * data);
void glGetProgramivRobustANGLE(GLuint program, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetRenderbufferParameterivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetShaderivRobustANGLE(GLuint shader, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetTexParameterfvRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
void glGetTexParameterivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetUniformfvRobustANGLE(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLfloat * params);
void glGetUniformivRobustANGLE(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetVertexAttribfvRobustANGLE(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
void glGetVertexAttribivRobustANGLE(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetVertexAttribPointervRobustANGLE(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, void ** pointer);
void glReadPixelsRobustANGLE(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLsizei * length, GLsizei * columns, GLsizei * rows, void * pixels);
void glTexImage2DRobustANGLE(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLsizei bufSize, const void * pixels);
void glTexParameterfvRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, const GLfloat * params);
void glTexParameterivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, const GLint * params);
void glTexSubImage2DRobustANGLE(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, const void * pixels);
void glTexImage3DRobustANGLE(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLsizei bufSize, const void * pixels);
void glTexSubImage3DRobustANGLE(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, const void * pixels);
void glCompressedTexImage2DRobustANGLE(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLsizei dataSize, const void * data);
void glCompressedTexSubImage2DRobustANGLE(GLenum target, GLint level, GLsizei xoffset, GLsizei yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLsizei dataSize, const void * data);
void glCompressedTexImage3DRobustANGLE(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLsizei dataSize, const void * data);
void glCompressedTexSubImage3DRobustANGLE(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLsizei dataSize, const void * data);
void glGetQueryivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetQueryObjectuivRobustANGLE(GLuint id, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint * params);
void glGetBufferPointervRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, void ** params);
void glGetIntegeri_vRobustANGLE(GLenum target, GLuint index, GLsizei bufSize, GLsizei * length, GLint * data);
void glGetInternalformativRobustANGLE(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetVertexAttribIivRobustANGLE(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetVertexAttribIuivRobustANGLE(GLuint index, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint * params);
void glGetUniformuivRobustANGLE(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLuint * params);
void glGetActiveUniformBlockivRobustANGLE(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetInteger64vRobustANGLE(GLenum pname, GLsizei bufSize, GLsizei * length, GLint64 * data);
void glGetInteger64i_vRobustANGLE(GLenum target, GLuint index, GLsizei bufSize, GLsizei * length, GLint64 * data);
void glSamplerParameterivRobustANGLE(GLuint sampler, GLuint pname, GLsizei bufSize, const GLint * param);
void glSamplerParameterfvRobustANGLE(GLuint sampler, GLenum pname, GLsizei bufSize, const GLfloat * param);
void glGetSamplerParameterivRobustANGLE(GLuint sampler, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetSamplerParameterfvRobustANGLE(GLuint sampler, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
void glGetFramebufferParameterivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetProgramInterfaceivRobustANGLE(GLuint program, GLenum programInterface, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetBooleani_vRobustANGLE(GLenum target, GLuint index, GLsizei bufSize, GLsizei * length, GLboolean * data);
void glGetMultisamplefvRobustANGLE(GLenum pname, GLuint index, GLsizei bufSize, GLsizei * length, GLfloat * val);
void glGetTexLevelParameterivRobustANGLE(GLenum target, GLint level, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetTexLevelParameterfvRobustANGLE(GLenum target, GLint level, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
void glGetPointervRobustANGLERobustANGLE(GLenum pname, GLsizei bufSize, GLsizei * length, void ** params);
void glReadnPixelsRobustANGLE(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLsizei * length, GLsizei * columns, GLsizei * rows, void * data);
void glGetnUniformfvRobustANGLE(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLfloat * params);
void glGetnUniformivRobustANGLE(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetnUniformuivRobustANGLE(GLuint program, GLint location, GLsizei bufSize, GLsizei * length, GLuint * params);
void glTexParameterIivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, const GLint * params);
void glTexParameterIuivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, const GLuint * params);
void glGetTexParameterIivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetTexParameterIuivRobustANGLE(GLenum target, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint * params);
void glSamplerParameterIivRobustANGLE(GLuint sampler, GLenum pname, GLsizei bufSize, const GLint * param);
void glSamplerParameterIuivRobustANGLE(GLuint sampler, GLenum pname, GLsizei bufSize, const GLuint * param);
void glGetSamplerParameterIivRobustANGLE(GLuint sampler, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetSamplerParameterIuivRobustANGLE(GLuint sampler, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint * params);
void glGetQueryObjectivRobustANGLE(GLuint id, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glGetQueryObjecti64vRobustANGLE(GLuint id, GLenum pname, GLsizei bufSize, GLsizei * length, GLint64 * params);
void glGetQueryObjectui64vRobustANGLE(GLuint id, GLenum pname, GLsizei bufSize, GLsizei * length, GLuint64 * params);
void glGetFramebufferPixelLocalStorageParameterfvRobustANGLE(GLint plane, GLenum pname, GLsizei bufSize, GLsizei * length, GLfloat * params);
void glGetFramebufferPixelLocalStorageParameterivRobustANGLE(GLint plane, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * params);
void glCopyTexture3DANGLE(GLuint sourceId, GLint sourceLevel, GLenum destTarget, GLuint destId, GLint destLevel, GLint internalFormat, GLenum destType, GLboolean unpackFlipY, GLboolean unpackPremultiplyAlpha, GLboolean unpackUnmultiplyAlpha);
void glCopySubTexture3DANGLE(GLuint sourceId, GLint sourceLevel, GLenum destTarget, GLuint destId, GLint destLevel, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLint z, GLint width, GLint height, GLint depth, GLboolean unpackFlipY, GLboolean unpackPremultiplyAlpha, GLboolean unpackUnmultiplyAlpha);
void glTexStorage2DMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void glGetMultisamplefvANGLE(GLenum pname, GLuint index, GLfloat * val);
void glSampleMaskiANGLE(GLuint maskNumber, GLbitfield mask);
void glMultiDrawArraysANGLE(GLenum mode, const GLint * firsts, const GLsizei * counts, GLsizei drawcount);
void glMultiDrawArraysInstancedANGLE(GLenum mode, const GLint * firsts, const GLsizei * counts, const GLsizei * instanceCounts, GLsizei drawcount);
void glMultiDrawElementsANGLE(GLenum mode, const GLsizei * counts, GLenum type, const void *const* indices, GLsizei drawcount);
void glMultiDrawElementsInstancedANGLE(GLenum mode, const GLsizei * counts, GLenum type, const void *const* indices, const GLsizei* instanceCounts, GLsizei drawcount);
void glDrawArraysInstancedBaseInstanceANGLE(GLenum mode, GLint first, GLsizei count, GLsizei instanceCount, GLuint baseInstance);
void glDrawElementsInstancedBaseVertexBaseInstanceANGLE(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instanceCount, GLint baseVertex, GLuint baseInstance);
void glMultiDrawArraysInstancedBaseInstanceANGLE(GLenum mode, const GLint * firsts, const GLsizei * counts, const GLsizei * instanceCounts, const GLuint * baseInstances, GLsizei drawcount);
void glMultiDrawElementsInstancedBaseVertexBaseInstanceANGLE(GLenum mode, const GLsizei * counts, GLenum type, const void *const* indices, const GLsizei * instanceCounts, const GLint * baseVertices, const GLuint * baseInstances, GLsizei drawcount);
void glPolygonModeANGLE(GLenum face, GLenum mode);
void glProvokingVertexANGLE(GLenum provokeMode);
void glLoseContextCHROMIUM(GLenum current, GLenum other);
void glGetTexImageANGLE(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
void glGetCompressedTexImageANGLE(GLenum target, GLint level, void * pixels);
void glGetRenderbufferImageANGLE(GLenum target, GLenum format, GLenum type, void * pixels);
void glGetTexLevelParameterfvANGLE(GLenum target, GLint level, GLenum pname, GLfloat * params);
void glGetTexLevelParameterivANGLE(GLenum target, GLint level, GLenum pname, GLint * params);
void glFramebufferMemorylessPixelLocalStorageANGLE(GLint plane, GLenum internalformat);
void glFramebufferTexturePixelLocalStorageANGLE(GLint plane, GLuint backingtexture, GLint level, GLint layer);
void glFramebufferPixelLocalClearValuefvANGLE(GLint plane, const GLfloat * value);
void glFramebufferPixelLocalClearValueivANGLE(GLint plane, const GLint * value);
void glFramebufferPixelLocalClearValueuivANGLE(GLint plane, const GLuint * value);
void glBeginPixelLocalStorageANGLE(GLsizei n, const GLenum * loadops);
void glEndPixelLocalStorageANGLE(GLsizei n, const GLenum * storeops);
void glPixelLocalStorageBarrierANGLE(void);
void glFramebufferPixelLocalStorageInterruptANGLE(void);
void glFramebufferPixelLocalStorageRestoreANGLE(void);
void glGetFramebufferPixelLocalStorageParameterfvANGLE(GLint plane, GLenum pname, GLfloat * params);
void glGetFramebufferPixelLocalStorageParameterivANGLE(GLint plane, GLenum pname, GLint * params);
void glLogicOpANGLE(GLenum opcode);
void glBlobCacheCallbacksANGLE(GLSETBLOBPROCANGLE set, GLGETBLOBPROCANGLE get, const void * userParam);
void glGetPointervANGLE(GLenum pname, void ** params);

#else
#define glCullFace (glad_gl_context.CullFace)
#define glFrontFace (glad_gl_context.FrontFace)
#define glHint (glad_gl_context.Hint)
#define glLineWidth (glad_gl_context.LineWidth)
#define glPointSize (glad_gl_context.PointSize)
#define glPolygonMode (glad_gl_context.PolygonMode)
#define glScissor (glad_gl_context.Scissor)
#define glTexParameterf (glad_gl_context.TexParameterf)
#define glTexParameterfv (glad_gl_context.TexParameterfv)
#define glTexParameteri (glad_gl_context.TexParameteri)
#define glTexParameteriv (glad_gl_context.TexParameteriv)
#define glTexImage1D (glad_gl_context.TexImage1D)
#define glTexImage2D (glad_gl_context.TexImage2D)
#define glDrawBuffer (glad_gl_context.DrawBuffer)
#define glClear (glad_gl_context.Clear)
#define glClearColor (glad_gl_context.ClearColor)
#define glClearStencil (glad_gl_context.ClearStencil)
#define glClearDepth (glad_gl_context.ClearDepth)
#define glStencilMask (glad_gl_context.StencilMask)
#define glColorMask (glad_gl_context.ColorMask)
#define glDepthMask (glad_gl_context.DepthMask)
#define glDisable (glad_gl_context.Disable)
#define glEnable (glad_gl_context.Enable)
#define glFinish (glad_gl_context.Finish)
#define glFlush (glad_gl_context.Flush)
#define glBlendFunc (glad_gl_context.BlendFunc)
#define glLogicOp (glad_gl_context.LogicOp)
#define glStencilFunc (glad_gl_context.StencilFunc)
#define glStencilOp (glad_gl_context.StencilOp)
#define glDepthFunc (glad_gl_context.DepthFunc)
#define glPixelStoref (glad_gl_context.PixelStoref)
#define glPixelStorei (glad_gl_context.PixelStorei)
#define glReadBuffer (glad_gl_context.ReadBuffer)
#define glReadPixels (glad_gl_context.ReadPixels)
#define glGetBooleanv (glad_gl_context.GetBooleanv)
#define glGetDoublev (glad_gl_context.GetDoublev)
#define glGetError (glad_gl_context.GetError)
#define glGetFloatv (glad_gl_context.GetFloatv)
#define glGetIntegerv (glad_gl_context.GetIntegerv)
#define glGetString (glad_gl_context.GetString)
#define glGetTexImage (glad_gl_context.GetTexImage)
#define glGetTexParameterfv (glad_gl_context.GetTexParameterfv)
#define glGetTexParameteriv (glad_gl_context.GetTexParameteriv)
#define glGetTexLevelParameterfv (glad_gl_context.GetTexLevelParameterfv)
#define glGetTexLevelParameteriv (glad_gl_context.GetTexLevelParameteriv)
#define glIsEnabled (glad_gl_context.IsEnabled)
#define glDepthRange (glad_gl_context.DepthRange)
#define glViewport (glad_gl_context.Viewport)
#define glDrawArrays (glad_gl_context.DrawArrays)
#define glDrawElements (glad_gl_context.DrawElements)
#define glGetPointerv (glad_gl_context.GetPointerv)
#define glPolygonOffset (glad_gl_context.PolygonOffset)
#define glCopyTexImage1D (glad_gl_context.CopyTexImage1D)
#define glCopyTexImage2D (glad_gl_context.CopyTexImage2D)
#define glCopyTexSubImage1D (glad_gl_context.CopyTexSubImage1D)
#define glCopyTexSubImage2D (glad_gl_context.CopyTexSubImage2D)
#define glTexSubImage1D (glad_gl_context.TexSubImage1D)
#define glTexSubImage2D (glad_gl_context.TexSubImage2D)
#define glBindTexture (glad_gl_context.BindTexture)
#define glDeleteTextures (glad_gl_context.DeleteTextures)
#define glGenTextures (glad_gl_context.GenTextures)
#define glIsTexture (glad_gl_context.IsTexture)
#define glDrawRangeElements (glad_gl_context.DrawRangeElements)
#define glTexImage3D (glad_gl_context.TexImage3D)
#define glTexSubImage3D (glad_gl_context.TexSubImage3D)
#define glCopyTexSubImage3D (glad_gl_context.CopyTexSubImage3D)
#define glActiveTexture (glad_gl_context.ActiveTexture)
#define glSampleCoverage (glad_gl_context.SampleCoverage)
#define glCompressedTexImage3D (glad_gl_context.CompressedTexImage3D)
#define glCompressedTexImage2D (glad_gl_context.CompressedTexImage2D)
#define glCompressedTexImage1D (glad_gl_context.CompressedTexImage1D)
#define glCompressedTexSubImage3D (glad_gl_context.CompressedTexSubImage3D)
#define glCompressedTexSubImage2D (glad_gl_context.CompressedTexSubImage2D)
#define glCompressedTexSubImage1D (glad_gl_context.CompressedTexSubImage1D)
#define glGetCompressedTexImage (glad_gl_context.GetCompressedTexImage)
#define glBlendFuncSeparate (glad_gl_context.BlendFuncSeparate)
#define glMultiDrawArrays (glad_gl_context.MultiDrawArrays)
#define glMultiDrawElements (glad_gl_context.MultiDrawElements)
#define glPointParameterf (glad_gl_context.PointParameterf)
#define glPointParameterfv (glad_gl_context.PointParameterfv)
#define glPointParameteri (glad_gl_context.PointParameteri)
#define glPointParameteriv (glad_gl_context.PointParameteriv)
#define glBlendColor (glad_gl_context.BlendColor)
#define glBlendEquation (glad_gl_context.BlendEquation)
#define glGenQueries (glad_gl_context.GenQueries)
#define glDeleteQueries (glad_gl_context.DeleteQueries)
#define glIsQuery (glad_gl_context.IsQuery)
#define glBeginQuery (glad_gl_context.BeginQuery)
#define glEndQuery (glad_gl_context.EndQuery)
#define glGetQueryiv (glad_gl_context.GetQueryiv)
#define glGetQueryObjectiv (glad_gl_context.GetQueryObjectiv)
#define glGetQueryObjectuiv (glad_gl_context.GetQueryObjectuiv)
#define glBindBuffer (glad_gl_context.BindBuffer)
#define glDeleteBuffers (glad_gl_context.DeleteBuffers)
#define glGenBuffers (glad_gl_context.GenBuffers)
#define glIsBuffer (glad_gl_context.IsBuffer)
#define glBufferData (glad_gl_context.BufferData)
#define glBufferSubData (glad_gl_context.BufferSubData)
#define glGetBufferSubData (glad_gl_context.GetBufferSubData)
#define glMapBuffer (glad_gl_context.MapBuffer)
#define glUnmapBuffer (glad_gl_context.UnmapBuffer)
#define glGetBufferParameteriv (glad_gl_context.GetBufferParameteriv)
#define glGetBufferPointerv (glad_gl_context.GetBufferPointerv)
#define glBlendEquationSeparate (glad_gl_context.BlendEquationSeparate)
#define glDrawBuffers (glad_gl_context.DrawBuffers)
#define glStencilOpSeparate (glad_gl_context.StencilOpSeparate)
#define glStencilFuncSeparate (glad_gl_context.StencilFuncSeparate)
#define glStencilMaskSeparate (glad_gl_context.StencilMaskSeparate)
#define glAttachShader (glad_gl_context.AttachShader)
#define glBindAttribLocation (glad_gl_context.BindAttribLocation)
#define glCompileShader (glad_gl_context.CompileShader)
#define glCreateProgram (glad_gl_context.CreateProgram)
#define glCreateShader (glad_gl_context.CreateShader)
#define glDeleteProgram (glad_gl_context.DeleteProgram)
#define glDeleteShader (glad_gl_context.DeleteShader)
#define glDetachShader (glad_gl_context.DetachShader)
#define glDisableVertexAttribArray (glad_gl_context.DisableVertexAttribArray)
#define glEnableVertexAttribArray (glad_gl_context.EnableVertexAttribArray)
#define glGetActiveAttrib (glad_gl_context.GetActiveAttrib)
#define glGetActiveUniform (glad_gl_context.GetActiveUniform)
#define glGetAttachedShaders (glad_gl_context.GetAttachedShaders)
#define glGetAttribLocation (glad_gl_context.GetAttribLocation)
#define glGetProgramiv (glad_gl_context.GetProgramiv)
#define glGetProgramInfoLog (glad_gl_context.GetProgramInfoLog)
#define glGetShaderiv (glad_gl_context.GetShaderiv)
#define glGetShaderInfoLog (glad_gl_context.GetShaderInfoLog)
#define glGetShaderSource (glad_gl_context.GetShaderSource)
#define glGetUniformLocation (glad_gl_context.GetUniformLocation)
#define glGetUniformfv (glad_gl_context.GetUniformfv)
#define glGetUniformiv (glad_gl_context.GetUniformiv)
#define glGetVertexAttribdv (glad_gl_context.GetVertexAttribdv)
#define glGetVertexAttribfv (glad_gl_context.GetVertexAttribfv)
#define glGetVertexAttribiv (glad_gl_context.GetVertexAttribiv)
#define glGetVertexAttribPointerv (glad_gl_context.GetVertexAttribPointerv)
#define glIsProgram (glad_gl_context.IsProgram)
#define glIsShader (glad_gl_context.IsShader)
#define glLinkProgram (glad_gl_context.LinkProgram)
#define glShaderSource (glad_gl_context.ShaderSource)
#define glUseProgram (glad_gl_context.UseProgram)
#define glUniform1f (glad_gl_context.Uniform1f)
#define glUniform2f (glad_gl_context.Uniform2f)
#define glUniform3f (glad_gl_context.Uniform3f)
#define glUniform4f (glad_gl_context.Uniform4f)
#define glUniform1i (glad_gl_context.Uniform1i)
#define glUniform2i (glad_gl_context.Uniform2i)
#define glUniform3i (glad_gl_context.Uniform3i)
#define glUniform4i (glad_gl_context.Uniform4i)
#define glUniform1fv (glad_gl_context.Uniform1fv)
#define glUniform2fv (glad_gl_context.Uniform2fv)
#define glUniform3fv (glad_gl_context.Uniform3fv)
#define glUniform4fv (glad_gl_context.Uniform4fv)
#define glUniform1iv (glad_gl_context.Uniform1iv)
#define glUniform2iv (glad_gl_context.Uniform2iv)
#define glUniform3iv (glad_gl_context.Uniform3iv)
#define glUniform4iv (glad_gl_context.Uniform4iv)
#define glUniformMatrix2fv (glad_gl_context.UniformMatrix2fv)
#define glUniformMatrix3fv (glad_gl_context.UniformMatrix3fv)
#define glUniformMatrix4fv (glad_gl_context.UniformMatrix4fv)
#define glValidateProgram (glad_gl_context.ValidateProgram)
#define glVertexAttrib1d (glad_gl_context.VertexAttrib1d)
#define glVertexAttrib1dv (glad_gl_context.VertexAttrib1dv)
#define glVertexAttrib1f (glad_gl_context.VertexAttrib1f)
#define glVertexAttrib1fv (glad_gl_context.VertexAttrib1fv)
#define glVertexAttrib1s (glad_gl_context.VertexAttrib1s)
#define glVertexAttrib1sv (glad_gl_context.VertexAttrib1sv)
#define glVertexAttrib2d (glad_gl_context.VertexAttrib2d)
#define glVertexAttrib2dv (glad_gl_context.VertexAttrib2dv)
#define glVertexAttrib2f (glad_gl_context.VertexAttrib2f)
#define glVertexAttrib2fv (glad_gl_context.VertexAttrib2fv)
#define glVertexAttrib2s (glad_gl_context.VertexAttrib2s)
#define glVertexAttrib2sv (glad_gl_context.VertexAttrib2sv)
#define glVertexAttrib3d (glad_gl_context.VertexAttrib3d)
#define glVertexAttrib3dv (glad_gl_context.VertexAttrib3dv)
#define glVertexAttrib3f (glad_gl_context.VertexAttrib3f)
#define glVertexAttrib3fv (glad_gl_context.VertexAttrib3fv)
#define glVertexAttrib3s (glad_gl_context.VertexAttrib3s)
#define glVertexAttrib3sv (glad_gl_context.VertexAttrib3sv)
#define glVertexAttrib4Nbv (glad_gl_context.VertexAttrib4Nbv)
#define glVertexAttrib4Niv (glad_gl_context.VertexAttrib4Niv)
#define glVertexAttrib4Nsv (glad_gl_context.VertexAttrib4Nsv)
#define glVertexAttrib4Nub (glad_gl_context.VertexAttrib4Nub)
#define glVertexAttrib4Nubv (glad_gl_context.VertexAttrib4Nubv)
#define glVertexAttrib4Nuiv (glad_gl_context.VertexAttrib4Nuiv)
#define glVertexAttrib4Nusv (glad_gl_context.VertexAttrib4Nusv)
#define glVertexAttrib4bv (glad_gl_context.VertexAttrib4bv)
#define glVertexAttrib4d (glad_gl_context.VertexAttrib4d)
#define glVertexAttrib4dv (glad_gl_context.VertexAttrib4dv)
#define glVertexAttrib4f (glad_gl_context.VertexAttrib4f)
#define glVertexAttrib4fv (glad_gl_context.VertexAttrib4fv)
#define glVertexAttrib4iv (glad_gl_context.VertexAttrib4iv)
#define glVertexAttrib4s (glad_gl_context.VertexAttrib4s)
#define glVertexAttrib4sv (glad_gl_context.VertexAttrib4sv)
#define glVertexAttrib4ubv (glad_gl_context.VertexAttrib4ubv)
#define glVertexAttrib4uiv (glad_gl_context.VertexAttrib4uiv)
#define glVertexAttrib4usv (glad_gl_context.VertexAttrib4usv)
#define glVertexAttribPointer (glad_gl_context.VertexAttribPointer)
#define glUniformMatrix2x3fv (glad_gl_context.UniformMatrix2x3fv)
#define glUniformMatrix3x2fv (glad_gl_context.UniformMatrix3x2fv)
#define glUniformMatrix2x4fv (glad_gl_context.UniformMatrix2x4fv)
#define glUniformMatrix4x2fv (glad_gl_context.UniformMatrix4x2fv)
#define glUniformMatrix3x4fv (glad_gl_context.UniformMatrix3x4fv)
#define glUniformMatrix4x3fv (glad_gl_context.UniformMatrix4x3fv)
#define glColorMaski (glad_gl_context.ColorMaski)
#define glGetBooleani_v (glad_gl_context.GetBooleani_v)
#define glGetIntegeri_v (glad_gl_context.GetIntegeri_v)
#define glEnablei (glad_gl_context.Enablei)
#define glDisablei (glad_gl_context.Disablei)
#define glIsEnabledi (glad_gl_context.IsEnabledi)
#define glBeginTransformFeedback (glad_gl_context.BeginTransformFeedback)
#define glEndTransformFeedback (glad_gl_context.EndTransformFeedback)
#define glBindBufferRange (glad_gl_context.BindBufferRange)
#define glBindBufferBase (glad_gl_context.BindBufferBase)
#define glTransformFeedbackVaryings (glad_gl_context.TransformFeedbackVaryings)
#define glGetTransformFeedbackVarying (glad_gl_context.GetTransformFeedbackVarying)
#define glClampColor (glad_gl_context.ClampColor)
#define glBeginConditionalRender (glad_gl_context.BeginConditionalRender)
#define glEndConditionalRender (glad_gl_context.EndConditionalRender)
#define glVertexAttribIPointer (glad_gl_context.VertexAttribIPointer)
#define glGetVertexAttribIiv (glad_gl_context.GetVertexAttribIiv)
#define glGetVertexAttribIuiv (glad_gl_context.GetVertexAttribIuiv)
#define glVertexAttribI1i (glad_gl_context.VertexAttribI1i)
#define glVertexAttribI2i (glad_gl_context.VertexAttribI2i)
#define glVertexAttribI3i (glad_gl_context.VertexAttribI3i)
#define glVertexAttribI4i (glad_gl_context.VertexAttribI4i)
#define glVertexAttribI1ui (glad_gl_context.VertexAttribI1ui)
#define glVertexAttribI2ui (glad_gl_context.VertexAttribI2ui)
#define glVertexAttribI3ui (glad_gl_context.VertexAttribI3ui)
#define glVertexAttribI4ui (glad_gl_context.VertexAttribI4ui)
#define glVertexAttribI1iv (glad_gl_context.VertexAttribI1iv)
#define glVertexAttribI2iv (glad_gl_context.VertexAttribI2iv)
#define glVertexAttribI3iv (glad_gl_context.VertexAttribI3iv)
#define glVertexAttribI4iv (glad_gl_context.VertexAttribI4iv)
#define glVertexAttribI1uiv (glad_gl_context.VertexAttribI1uiv)
#define glVertexAttribI2uiv (glad_gl_context.VertexAttribI2uiv)
#define glVertexAttribI3uiv (glad_gl_context.VertexAttribI3uiv)
#define glVertexAttribI4uiv (glad_gl_context.VertexAttribI4uiv)
#define glVertexAttribI4bv (glad_gl_context.VertexAttribI4bv)
#define glVertexAttribI4sv (glad_gl_context.VertexAttribI4sv)
#define glVertexAttribI4ubv (glad_gl_context.VertexAttribI4ubv)
#define glVertexAttribI4usv (glad_gl_context.VertexAttribI4usv)
#define glGetUniformuiv (glad_gl_context.GetUniformuiv)
#define glBindFragDataLocation (glad_gl_context.BindFragDataLocation)
#define glGetFragDataLocation (glad_gl_context.GetFragDataLocation)
#define glUniform1ui (glad_gl_context.Uniform1ui)
#define glUniform2ui (glad_gl_context.Uniform2ui)
#define glUniform3ui (glad_gl_context.Uniform3ui)
#define glUniform4ui (glad_gl_context.Uniform4ui)
#define glUniform1uiv (glad_gl_context.Uniform1uiv)
#define glUniform2uiv (glad_gl_context.Uniform2uiv)
#define glUniform3uiv (glad_gl_context.Uniform3uiv)
#define glUniform4uiv (glad_gl_context.Uniform4uiv)
#define glTexParameterIiv (glad_gl_context.TexParameterIiv)
#define glTexParameterIuiv (glad_gl_context.TexParameterIuiv)
#define glGetTexParameterIiv (glad_gl_context.GetTexParameterIiv)
#define glGetTexParameterIuiv (glad_gl_context.GetTexParameterIuiv)
#define glClearBufferiv (glad_gl_context.ClearBufferiv)
#define glClearBufferuiv (glad_gl_context.ClearBufferuiv)
#define glClearBufferfv (glad_gl_context.ClearBufferfv)
#define glClearBufferfi (glad_gl_context.ClearBufferfi)
#define glGetStringi (glad_gl_context.GetStringi)
#define glIsRenderbuffer (glad_gl_context.IsRenderbuffer)
#define glBindRenderbuffer (glad_gl_context.BindRenderbuffer)
#define glDeleteRenderbuffers (glad_gl_context.DeleteRenderbuffers)
#define glGenRenderbuffers (glad_gl_context.GenRenderbuffers)
#define glRenderbufferStorage (glad_gl_context.RenderbufferStorage)
#define glGetRenderbufferParameteriv (glad_gl_context.GetRenderbufferParameteriv)
#define glIsFramebuffer (glad_gl_context.IsFramebuffer)
#define glBindFramebuffer (glad_gl_context.BindFramebuffer)
#define glDeleteFramebuffers (glad_gl_context.DeleteFramebuffers)
#define glGenFramebuffers (glad_gl_context.GenFramebuffers)
#define glCheckFramebufferStatus (glad_gl_context.CheckFramebufferStatus)
#define glFramebufferTexture1D (glad_gl_context.FramebufferTexture1D)
#define glFramebufferTexture2D (glad_gl_context.FramebufferTexture2D)
#define glFramebufferTexture3D (glad_gl_context.FramebufferTexture3D)
#define glFramebufferRenderbuffer (glad_gl_context.FramebufferRenderbuffer)
#define glGetFramebufferAttachmentParameteriv (glad_gl_context.GetFramebufferAttachmentParameteriv)
#define glGenerateMipmap (glad_gl_context.GenerateMipmap)
#define glBlitFramebuffer (glad_gl_context.BlitFramebuffer)
#define glRenderbufferStorageMultisample (glad_gl_context.RenderbufferStorageMultisample)
#define glFramebufferTextureLayer (glad_gl_context.FramebufferTextureLayer)
#define glMapBufferRange (glad_gl_context.MapBufferRange)
#define glFlushMappedBufferRange (glad_gl_context.FlushMappedBufferRange)
#define glBindVertexArray (glad_gl_context.BindVertexArray)
#define glDeleteVertexArrays (glad_gl_context.DeleteVertexArrays)
#define glGenVertexArrays (glad_gl_context.GenVertexArrays)
#define glIsVertexArray (glad_gl_context.IsVertexArray)
#define glDrawArraysInstanced (glad_gl_context.DrawArraysInstanced)
#define glDrawElementsInstanced (glad_gl_context.DrawElementsInstanced)
#define glTexBuffer (glad_gl_context.TexBuffer)
#define glPrimitiveRestartIndex (glad_gl_context.PrimitiveRestartIndex)
#define glCopyBufferSubData (glad_gl_context.CopyBufferSubData)
#define glGetUniformIndices (glad_gl_context.GetUniformIndices)
#define glGetActiveUniformsiv (glad_gl_context.GetActiveUniformsiv)
#define glGetActiveUniformName (glad_gl_context.GetActiveUniformName)
#define glGetUniformBlockIndex (glad_gl_context.GetUniformBlockIndex)
#define glGetActiveUniformBlockiv (glad_gl_context.GetActiveUniformBlockiv)
#define glGetActiveUniformBlockName (glad_gl_context.GetActiveUniformBlockName)
#define glUniformBlockBinding (glad_gl_context.UniformBlockBinding)
#define glDrawElementsBaseVertex (glad_gl_context.DrawElementsBaseVertex)
#define glDrawRangeElementsBaseVertex (glad_gl_context.DrawRangeElementsBaseVertex)
#define glDrawElementsInstancedBaseVertex (glad_gl_context.DrawElementsInstancedBaseVertex)
#define glMultiDrawElementsBaseVertex (glad_gl_context.MultiDrawElementsBaseVertex)
#define glProvokingVertex (glad_gl_context.ProvokingVertex)
#define glFenceSync (glad_gl_context.FenceSync)
#define glIsSync (glad_gl_context.IsSync)
#define glDeleteSync (glad_gl_context.DeleteSync)
#define glClientWaitSync (glad_gl_context.ClientWaitSync)
#define glWaitSync (glad_gl_context.WaitSync)
#define glGetInteger64v (glad_gl_context.GetInteger64v)
#define glGetSynciv (glad_gl_context.GetSynciv)
#define glGetInteger64i_v (glad_gl_context.GetInteger64i_v)
#define glGetBufferParameteri64v (glad_gl_context.GetBufferParameteri64v)
#define glFramebufferTexture (glad_gl_context.FramebufferTexture)
#define glTexImage2DMultisample (glad_gl_context.TexImage2DMultisample)
#define glTexImage3DMultisample (glad_gl_context.TexImage3DMultisample)
#define glGetMultisamplefv (glad_gl_context.GetMultisamplefv)
#define glSampleMaski (glad_gl_context.SampleMaski)
#define glBindFragDataLocationIndexed (glad_gl_context.BindFragDataLocationIndexed)
#define glGetFragDataIndex (glad_gl_context.GetFragDataIndex)
#define glGenSamplers (glad_gl_context.GenSamplers)
#define glDeleteSamplers (glad_gl_context.DeleteSamplers)
#define glIsSampler (glad_gl_context.IsSampler)
#define glBindSampler (glad_gl_context.BindSampler)
#define glSamplerParameteri (glad_gl_context.SamplerParameteri)
#define glSamplerParameteriv (glad_gl_context.SamplerParameteriv)
#define glSamplerParameterf (glad_gl_context.SamplerParameterf)
#define glSamplerParameterfv (glad_gl_context.SamplerParameterfv)
#define glSamplerParameterIiv (glad_gl_context.SamplerParameterIiv)
#define glSamplerParameterIuiv (glad_gl_context.SamplerParameterIuiv)
#define glGetSamplerParameteriv (glad_gl_context.GetSamplerParameteriv)
#define glGetSamplerParameterIiv (glad_gl_context.GetSamplerParameterIiv)
#define glGetSamplerParameterfv (glad_gl_context.GetSamplerParameterfv)
#define glGetSamplerParameterIuiv (glad_gl_context.GetSamplerParameterIuiv)
#define glQueryCounter (glad_gl_context.QueryCounter)
#define glGetQueryObjecti64v (glad_gl_context.GetQueryObjecti64v)
#define glGetQueryObjectui64v (glad_gl_context.GetQueryObjectui64v)
#define glVertexAttribDivisor (glad_gl_context.VertexAttribDivisor)
#define glVertexAttribP1ui (glad_gl_context.VertexAttribP1ui)
#define glVertexAttribP1uiv (glad_gl_context.VertexAttribP1uiv)
#define glVertexAttribP2ui (glad_gl_context.VertexAttribP2ui)
#define glVertexAttribP2uiv (glad_gl_context.VertexAttribP2uiv)
#define glVertexAttribP3ui (glad_gl_context.VertexAttribP3ui)
#define glVertexAttribP3uiv (glad_gl_context.VertexAttribP3uiv)
#define glVertexAttribP4ui (glad_gl_context.VertexAttribP4ui)
#define glVertexAttribP4uiv (glad_gl_context.VertexAttribP4uiv)
#define glMinSampleShading (glad_gl_context.MinSampleShading)
#define glBlendEquationi (glad_gl_context.BlendEquationi)
#define glBlendEquationSeparatei (glad_gl_context.BlendEquationSeparatei)
#define glBlendFunci (glad_gl_context.BlendFunci)
#define glBlendFuncSeparatei (glad_gl_context.BlendFuncSeparatei)
#define glDrawArraysIndirect (glad_gl_context.DrawArraysIndirect)
#define glDrawElementsIndirect (glad_gl_context.DrawElementsIndirect)
#define glUniform1d (glad_gl_context.Uniform1d)
#define glUniform2d (glad_gl_context.Uniform2d)
#define glUniform3d (glad_gl_context.Uniform3d)
#define glUniform4d (glad_gl_context.Uniform4d)
#define glUniform1dv (glad_gl_context.Uniform1dv)
#define glUniform2dv (glad_gl_context.Uniform2dv)
#define glUniform3dv (glad_gl_context.Uniform3dv)
#define glUniform4dv (glad_gl_context.Uniform4dv)
#define glUniformMatrix2dv (glad_gl_context.UniformMatrix2dv)
#define glUniformMatrix3dv (glad_gl_context.UniformMatrix3dv)
#define glUniformMatrix4dv (glad_gl_context.UniformMatrix4dv)
#define glUniformMatrix2x3dv (glad_gl_context.UniformMatrix2x3dv)
#define glUniformMatrix2x4dv (glad_gl_context.UniformMatrix2x4dv)
#define glUniformMatrix3x2dv (glad_gl_context.UniformMatrix3x2dv)
#define glUniformMatrix3x4dv (glad_gl_context.UniformMatrix3x4dv)
#define glUniformMatrix4x2dv (glad_gl_context.UniformMatrix4x2dv)
#define glUniformMatrix4x3dv (glad_gl_context.UniformMatrix4x3dv)
#define glGetUniformdv (glad_gl_context.GetUniformdv)
#define glGetSubroutineUniformLocation (glad_gl_context.GetSubroutineUniformLocation)
#define glGetSubroutineIndex (glad_gl_context.GetSubroutineIndex)
#define glGetActiveSubroutineUniformiv (glad_gl_context.GetActiveSubroutineUniformiv)
#define glGetActiveSubroutineUniformName (glad_gl_context.GetActiveSubroutineUniformName)
#define glGetActiveSubroutineName (glad_gl_context.GetActiveSubroutineName)
#define glUniformSubroutinesuiv (glad_gl_context.UniformSubroutinesuiv)
#define glGetUniformSubroutineuiv (glad_gl_context.GetUniformSubroutineuiv)
#define glGetProgramStageiv (glad_gl_context.GetProgramStageiv)
#define glPatchParameteri (glad_gl_context.PatchParameteri)
#define glPatchParameterfv (glad_gl_context.PatchParameterfv)
#define glBindTransformFeedback (glad_gl_context.BindTransformFeedback)
#define glDeleteTransformFeedbacks (glad_gl_context.DeleteTransformFeedbacks)
#define glGenTransformFeedbacks (glad_gl_context.GenTransformFeedbacks)
#define glIsTransformFeedback (glad_gl_context.IsTransformFeedback)
#define glPauseTransformFeedback (glad_gl_context.PauseTransformFeedback)
#define glResumeTransformFeedback (glad_gl_context.ResumeTransformFeedback)
#define glDrawTransformFeedback (glad_gl_context.DrawTransformFeedback)
#define glDrawTransformFeedbackStream (glad_gl_context.DrawTransformFeedbackStream)
#define glBeginQueryIndexed (glad_gl_context.BeginQueryIndexed)
#define glEndQueryIndexed (glad_gl_context.EndQueryIndexed)
#define glGetQueryIndexediv (glad_gl_context.GetQueryIndexediv)
#define glReleaseShaderCompiler (glad_gl_context.ReleaseShaderCompiler)
#define glShaderBinary (glad_gl_context.ShaderBinary)
#define glGetShaderPrecisionFormat (glad_gl_context.GetShaderPrecisionFormat)
#define glDepthRangef (glad_gl_context.DepthRangef)
#define glClearDepthf (glad_gl_context.ClearDepthf)
#define glGetProgramBinary (glad_gl_context.GetProgramBinary)
#define glProgramBinary (glad_gl_context.ProgramBinary)
#define glProgramParameteri (glad_gl_context.ProgramParameteri)
#define glUseProgramStages (glad_gl_context.UseProgramStages)
#define glActiveShaderProgram (glad_gl_context.ActiveShaderProgram)
#define glCreateShaderProgramv (glad_gl_context.CreateShaderProgramv)
#define glBindProgramPipeline (glad_gl_context.BindProgramPipeline)
#define glDeleteProgramPipelines (glad_gl_context.DeleteProgramPipelines)
#define glGenProgramPipelines (glad_gl_context.GenProgramPipelines)
#define glIsProgramPipeline (glad_gl_context.IsProgramPipeline)
#define glGetProgramPipelineiv (glad_gl_context.GetProgramPipelineiv)
#define glProgramUniform1i (glad_gl_context.ProgramUniform1i)
#define glProgramUniform1iv (glad_gl_context.ProgramUniform1iv)
#define glProgramUniform1f (glad_gl_context.ProgramUniform1f)
#define glProgramUniform1fv (glad_gl_context.ProgramUniform1fv)
#define glProgramUniform1d (glad_gl_context.ProgramUniform1d)
#define glProgramUniform1dv (glad_gl_context.ProgramUniform1dv)
#define glProgramUniform1ui (glad_gl_context.ProgramUniform1ui)
#define glProgramUniform1uiv (glad_gl_context.ProgramUniform1uiv)
#define glProgramUniform2i (glad_gl_context.ProgramUniform2i)
#define glProgramUniform2iv (glad_gl_context.ProgramUniform2iv)
#define glProgramUniform2f (glad_gl_context.ProgramUniform2f)
#define glProgramUniform2fv (glad_gl_context.ProgramUniform2fv)
#define glProgramUniform2d (glad_gl_context.ProgramUniform2d)
#define glProgramUniform2dv (glad_gl_context.ProgramUniform2dv)
#define glProgramUniform2ui (glad_gl_context.ProgramUniform2ui)
#define glProgramUniform2uiv (glad_gl_context.ProgramUniform2uiv)
#define glProgramUniform3i (glad_gl_context.ProgramUniform3i)
#define glProgramUniform3iv (glad_gl_context.ProgramUniform3iv)
#define glProgramUniform3f (glad_gl_context.ProgramUniform3f)
#define glProgramUniform3fv (glad_gl_context.ProgramUniform3fv)
#define glProgramUniform3d (glad_gl_context.ProgramUniform3d)
#define glProgramUniform3dv (glad_gl_context.ProgramUniform3dv)
#define glProgramUniform3ui (glad_gl_context.ProgramUniform3ui)
#define glProgramUniform3uiv (glad_gl_context.ProgramUniform3uiv)
#define glProgramUniform4i (glad_gl_context.ProgramUniform4i)
#define glProgramUniform4iv (glad_gl_context.ProgramUniform4iv)
#define glProgramUniform4f (glad_gl_context.ProgramUniform4f)
#define glProgramUniform4fv (glad_gl_context.ProgramUniform4fv)
#define glProgramUniform4d (glad_gl_context.ProgramUniform4d)
#define glProgramUniform4dv (glad_gl_context.ProgramUniform4dv)
#define glProgramUniform4ui (glad_gl_context.ProgramUniform4ui)
#define glProgramUniform4uiv (glad_gl_context.ProgramUniform4uiv)
#define glProgramUniformMatrix2fv (glad_gl_context.ProgramUniformMatrix2fv)
#define glProgramUniformMatrix3fv (glad_gl_context.ProgramUniformMatrix3fv)
#define glProgramUniformMatrix4fv (glad_gl_context.ProgramUniformMatrix4fv)
#define glProgramUniformMatrix2dv (glad_gl_context.ProgramUniformMatrix2dv)
#define glProgramUniformMatrix3dv (glad_gl_context.ProgramUniformMatrix3dv)
#define glProgramUniformMatrix4dv (glad_gl_context.ProgramUniformMatrix4dv)
#define glProgramUniformMatrix2x3fv (glad_gl_context.ProgramUniformMatrix2x3fv)
#define glProgramUniformMatrix3x2fv (glad_gl_context.ProgramUniformMatrix3x2fv)
#define glProgramUniformMatrix2x4fv (glad_gl_context.ProgramUniformMatrix2x4fv)
#define glProgramUniformMatrix4x2fv (glad_gl_context.ProgramUniformMatrix4x2fv)
#define glProgramUniformMatrix3x4fv (glad_gl_context.ProgramUniformMatrix3x4fv)
#define glProgramUniformMatrix4x3fv (glad_gl_context.ProgramUniformMatrix4x3fv)
#define glProgramUniformMatrix2x3dv (glad_gl_context.ProgramUniformMatrix2x3dv)
#define glProgramUniformMatrix3x2dv (glad_gl_context.ProgramUniformMatrix3x2dv)
#define glProgramUniformMatrix2x4dv (glad_gl_context.ProgramUniformMatrix2x4dv)
#define glProgramUniformMatrix4x2dv (glad_gl_context.ProgramUniformMatrix4x2dv)
#define glProgramUniformMatrix3x4dv (glad_gl_context.ProgramUniformMatrix3x4dv)
#define glProgramUniformMatrix4x3dv (glad_gl_context.ProgramUniformMatrix4x3dv)
#define glValidateProgramPipeline (glad_gl_context.ValidateProgramPipeline)
#define glGetProgramPipelineInfoLog (glad_gl_context.GetProgramPipelineInfoLog)
#define glVertexAttribL1d (glad_gl_context.VertexAttribL1d)
#define glVertexAttribL2d (glad_gl_context.VertexAttribL2d)
#define glVertexAttribL3d (glad_gl_context.VertexAttribL3d)
#define glVertexAttribL4d (glad_gl_context.VertexAttribL4d)
#define glVertexAttribL1dv (glad_gl_context.VertexAttribL1dv)
#define glVertexAttribL2dv (glad_gl_context.VertexAttribL2dv)
#define glVertexAttribL3dv (glad_gl_context.VertexAttribL3dv)
#define glVertexAttribL4dv (glad_gl_context.VertexAttribL4dv)
#define glVertexAttribLPointer (glad_gl_context.VertexAttribLPointer)
#define glGetVertexAttribLdv (glad_gl_context.GetVertexAttribLdv)
#define glViewportArrayv (glad_gl_context.ViewportArrayv)
#define glViewportIndexedf (glad_gl_context.ViewportIndexedf)
#define glViewportIndexedfv (glad_gl_context.ViewportIndexedfv)
#define glScissorArrayv (glad_gl_context.ScissorArrayv)
#define glScissorIndexed (glad_gl_context.ScissorIndexed)
#define glScissorIndexedv (glad_gl_context.ScissorIndexedv)
#define glDepthRangeArrayv (glad_gl_context.DepthRangeArrayv)
#define glDepthRangeIndexed (glad_gl_context.DepthRangeIndexed)
#define glGetFloati_v (glad_gl_context.GetFloati_v)
#define glGetDoublei_v (glad_gl_context.GetDoublei_v)
#define glDrawArraysInstancedBaseInstance (glad_gl_context.DrawArraysInstancedBaseInstance)
#define glDrawElementsInstancedBaseInstance (glad_gl_context.DrawElementsInstancedBaseInstance)
#define glDrawElementsInstancedBaseVertexBaseInstance (glad_gl_context.DrawElementsInstancedBaseVertexBaseInstance)
#define glGetInternalformativ (glad_gl_context.GetInternalformativ)
#define glGetActiveAtomicCounterBufferiv (glad_gl_context.GetActiveAtomicCounterBufferiv)
#define glBindImageTexture (glad_gl_context.BindImageTexture)
#define glMemoryBarrier (glad_gl_context.MemoryBarrier)
#define glTexStorage1D (glad_gl_context.TexStorage1D)
#define glTexStorage2D (glad_gl_context.TexStorage2D)
#define glTexStorage3D (glad_gl_context.TexStorage3D)
#define glDrawTransformFeedbackInstanced (glad_gl_context.DrawTransformFeedbackInstanced)
#define glDrawTransformFeedbackStreamInstanced (glad_gl_context.DrawTransformFeedbackStreamInstanced)
#define glClearBufferData (glad_gl_context.ClearBufferData)
#define glClearBufferSubData (glad_gl_context.ClearBufferSubData)
#define glDispatchCompute (glad_gl_context.DispatchCompute)
#define glDispatchComputeIndirect (glad_gl_context.DispatchComputeIndirect)
#define glCopyImageSubData (glad_gl_context.CopyImageSubData)
#define glFramebufferParameteri (glad_gl_context.FramebufferParameteri)
#define glGetFramebufferParameteriv (glad_gl_context.GetFramebufferParameteriv)
#define glGetInternalformati64v (glad_gl_context.GetInternalformati64v)
#define glInvalidateTexSubImage (glad_gl_context.InvalidateTexSubImage)
#define glInvalidateTexImage (glad_gl_context.InvalidateTexImage)
#define glInvalidateBufferSubData (glad_gl_context.InvalidateBufferSubData)
#define glInvalidateBufferData (glad_gl_context.InvalidateBufferData)
#define glInvalidateFramebuffer (glad_gl_context.InvalidateFramebuffer)
#define glInvalidateSubFramebuffer (glad_gl_context.InvalidateSubFramebuffer)
#define glMultiDrawArraysIndirect (glad_gl_context.MultiDrawArraysIndirect)
#define glMultiDrawElementsIndirect (glad_gl_context.MultiDrawElementsIndirect)
#define glGetProgramInterfaceiv (glad_gl_context.GetProgramInterfaceiv)
#define glGetProgramResourceIndex (glad_gl_context.GetProgramResourceIndex)
#define glGetProgramResourceName (glad_gl_context.GetProgramResourceName)
#define glGetProgramResourceiv (glad_gl_context.GetProgramResourceiv)
#define glGetProgramResourceLocation (glad_gl_context.GetProgramResourceLocation)
#define glGetProgramResourceLocationIndex (glad_gl_context.GetProgramResourceLocationIndex)
#define glShaderStorageBlockBinding (glad_gl_context.ShaderStorageBlockBinding)
#define glTexBufferRange (glad_gl_context.TexBufferRange)
#define glTexStorage2DMultisample (glad_gl_context.TexStorage2DMultisample)
#define glTexStorage3DMultisample (glad_gl_context.TexStorage3DMultisample)
#define glTextureView (glad_gl_context.TextureView)
#define glBindVertexBuffer (glad_gl_context.BindVertexBuffer)
#define glVertexAttribFormat (glad_gl_context.VertexAttribFormat)
#define glVertexAttribIFormat (glad_gl_context.VertexAttribIFormat)
#define glVertexAttribLFormat (glad_gl_context.VertexAttribLFormat)
#define glVertexAttribBinding (glad_gl_context.VertexAttribBinding)
#define glVertexBindingDivisor (glad_gl_context.VertexBindingDivisor)
#define glDebugMessageControl (glad_gl_context.DebugMessageControl)
#define glDebugMessageInsert (glad_gl_context.DebugMessageInsert)
#define glDebugMessageCallback (glad_gl_context.DebugMessageCallback)
#define glGetDebugMessageLog (glad_gl_context.GetDebugMessageLog)
#define glPushDebugGroup (glad_gl_context.PushDebugGroup)
#define glPopDebugGroup (glad_gl_context.PopDebugGroup)
#define glObjectLabel (glad_gl_context.ObjectLabel)
#define glGetObjectLabel (glad_gl_context.GetObjectLabel)
#define glObjectPtrLabel (glad_gl_context.ObjectPtrLabel)
#define glGetObjectPtrLabel (glad_gl_context.GetObjectPtrLabel)
#define glBufferStorage (glad_gl_context.BufferStorage)
#define glClearTexImage (glad_gl_context.ClearTexImage)
#define glClearTexSubImage (glad_gl_context.ClearTexSubImage)
#define glBindBuffersBase (glad_gl_context.BindBuffersBase)
#define glBindBuffersRange (glad_gl_context.BindBuffersRange)
#define glBindTextures (glad_gl_context.BindTextures)
#define glBindSamplers (glad_gl_context.BindSamplers)
#define glBindImageTextures (glad_gl_context.BindImageTextures)
#define glBindVertexBuffers (glad_gl_context.BindVertexBuffers)
#define glClipControl (glad_gl_context.ClipControl)
#define glCreateTransformFeedbacks (glad_gl_context.CreateTransformFeedbacks)
#define glTransformFeedbackBufferBase (glad_gl_context.TransformFeedbackBufferBase)
#define glTransformFeedbackBufferRange (glad_gl_context.TransformFeedbackBufferRange)
#define glGetTransformFeedbackiv (glad_gl_context.GetTransformFeedbackiv)
#define glGetTransformFeedbacki_v (glad_gl_context.GetTransformFeedbacki_v)
#define glGetTransformFeedbacki64_v (glad_gl_context.GetTransformFeedbacki64_v)
#define glCreateBuffers (glad_gl_context.CreateBuffers)
#define glNamedBufferStorage (glad_gl_context.NamedBufferStorage)
#define glNamedBufferData (glad_gl_context.NamedBufferData)
#define glNamedBufferSubData (glad_gl_context.NamedBufferSubData)
#define glCopyNamedBufferSubData (glad_gl_context.CopyNamedBufferSubData)
#define glClearNamedBufferData (glad_gl_context.ClearNamedBufferData)
#define glClearNamedBufferSubData (glad_gl_context.ClearNamedBufferSubData)
#define glMapNamedBuffer (glad_gl_context.MapNamedBuffer)
#define glMapNamedBufferRange (glad_gl_context.MapNamedBufferRange)
#define glUnmapNamedBuffer (glad_gl_context.UnmapNamedBuffer)
#define glFlushMappedNamedBufferRange (glad_gl_context.FlushMappedNamedBufferRange)
#define glGetNamedBufferParameteriv (glad_gl_context.GetNamedBufferParameteriv)
#define glGetNamedBufferParameteri64v (glad_gl_context.GetNamedBufferParameteri64v)
#define glGetNamedBufferPointerv (glad_gl_context.GetNamedBufferPointerv)
#define glGetNamedBufferSubData (glad_gl_context.GetNamedBufferSubData)
#define glCreateFramebuffers (glad_gl_context.CreateFramebuffers)
#define glNamedFramebufferRenderbuffer (glad_gl_context.NamedFramebufferRenderbuffer)
#define glNamedFramebufferParameteri (glad_gl_context.NamedFramebufferParameteri)
#define glNamedFramebufferTexture (glad_gl_context.NamedFramebufferTexture)
#define glNamedFramebufferTextureLayer (glad_gl_context.NamedFramebufferTextureLayer)
#define glNamedFramebufferDrawBuffer (glad_gl_context.NamedFramebufferDrawBuffer)
#define glNamedFramebufferDrawBuffers (glad_gl_context.NamedFramebufferDrawBuffers)
#define glNamedFramebufferReadBuffer (glad_gl_context.NamedFramebufferReadBuffer)
#define glInvalidateNamedFramebufferData (glad_gl_context.InvalidateNamedFramebufferData)
#define glInvalidateNamedFramebufferSubData (glad_gl_context.InvalidateNamedFramebufferSubData)
#define glClearNamedFramebufferiv (glad_gl_context.ClearNamedFramebufferiv)
#define glClearNamedFramebufferuiv (glad_gl_context.ClearNamedFramebufferuiv)
#define glClearNamedFramebufferfv (glad_gl_context.ClearNamedFramebufferfv)
#define glClearNamedFramebufferfi (glad_gl_context.ClearNamedFramebufferfi)
#define glBlitNamedFramebuffer (glad_gl_context.BlitNamedFramebuffer)
#define glCheckNamedFramebufferStatus (glad_gl_context.CheckNamedFramebufferStatus)
#define glGetNamedFramebufferParameteriv (glad_gl_context.GetNamedFramebufferParameteriv)
#define glGetNamedFramebufferAttachmentParameteriv (glad_gl_context.GetNamedFramebufferAttachmentParameteriv)
#define glCreateRenderbuffers (glad_gl_context.CreateRenderbuffers)
#define glNamedRenderbufferStorage (glad_gl_context.NamedRenderbufferStorage)
#define glNamedRenderbufferStorageMultisample (glad_gl_context.NamedRenderbufferStorageMultisample)
#define glGetNamedRenderbufferParameteriv (glad_gl_context.GetNamedRenderbufferParameteriv)
#define glCreateTextures (glad_gl_context.CreateTextures)
#define glTextureBuffer (glad_gl_context.TextureBuffer)
#define glTextureBufferRange (glad_gl_context.TextureBufferRange)
#define glTextureStorage1D (glad_gl_context.TextureStorage1D)
#define glTextureStorage2D (glad_gl_context.TextureStorage2D)
#define glTextureStorage3D (glad_gl_context.TextureStorage3D)
#define glTextureStorage2DMultisample (glad_gl_context.TextureStorage2DMultisample)
#define glTextureStorage3DMultisample (glad_gl_context.TextureStorage3DMultisample)
#define glTextureSubImage1D (glad_gl_context.TextureSubImage1D)
#define glTextureSubImage2D (glad_gl_context.TextureSubImage2D)
#define glTextureSubImage3D (glad_gl_context.TextureSubImage3D)
#define glCompressedTextureSubImage1D (glad_gl_context.CompressedTextureSubImage1D)
#define glCompressedTextureSubImage2D (glad_gl_context.CompressedTextureSubImage2D)
#define glCompressedTextureSubImage3D (glad_gl_context.CompressedTextureSubImage3D)
#define glCopyTextureSubImage1D (glad_gl_context.CopyTextureSubImage1D)
#define glCopyTextureSubImage2D (glad_gl_context.CopyTextureSubImage2D)
#define glCopyTextureSubImage3D (glad_gl_context.CopyTextureSubImage3D)
#define glTextureParameterf (glad_gl_context.TextureParameterf)
#define glTextureParameterfv (glad_gl_context.TextureParameterfv)
#define glTextureParameteri (glad_gl_context.TextureParameteri)
#define glTextureParameterIiv (glad_gl_context.TextureParameterIiv)
#define glTextureParameterIuiv (glad_gl_context.TextureParameterIuiv)
#define glTextureParameteriv (glad_gl_context.TextureParameteriv)
#define glGenerateTextureMipmap (glad_gl_context.GenerateTextureMipmap)
#define glBindTextureUnit (glad_gl_context.BindTextureUnit)
#define glGetTextureImage (glad_gl_context.GetTextureImage)
#define glGetCompressedTextureImage (glad_gl_context.GetCompressedTextureImage)
#define glGetTextureLevelParameterfv (glad_gl_context.GetTextureLevelParameterfv)
#define glGetTextureLevelParameteriv (glad_gl_context.GetTextureLevelParameteriv)
#define glGetTextureParameterfv (glad_gl_context.GetTextureParameterfv)
#define glGetTextureParameterIiv (glad_gl_context.GetTextureParameterIiv)
#define glGetTextureParameterIuiv (glad_gl_context.GetTextureParameterIuiv)
#define glGetTextureParameteriv (glad_gl_context.GetTextureParameteriv)
#define glCreateVertexArrays (glad_gl_context.CreateVertexArrays)
#define glDisableVertexArrayAttrib (glad_gl_context.DisableVertexArrayAttrib)
#define glEnableVertexArrayAttrib (glad_gl_context.EnableVertexArrayAttrib)
#define glVertexArrayElementBuffer (glad_gl_context.VertexArrayElementBuffer)
#define glVertexArrayVertexBuffer (glad_gl_context.VertexArrayVertexBuffer)
#define glVertexArrayVertexBuffers (glad_gl_context.VertexArrayVertexBuffers)
#define glVertexArrayAttribBinding (glad_gl_context.VertexArrayAttribBinding)
#define glVertexArrayAttribFormat (glad_gl_context.VertexArrayAttribFormat)
#define glVertexArrayAttribIFormat (glad_gl_context.VertexArrayAttribIFormat)
#define glVertexArrayAttribLFormat (glad_gl_context.VertexArrayAttribLFormat)
#define glVertexArrayBindingDivisor (glad_gl_context.VertexArrayBindingDivisor)
#define glGetVertexArrayiv (glad_gl_context.GetVertexArrayiv)
#define glGetVertexArrayIndexediv (glad_gl_context.GetVertexArrayIndexediv)
#define glGetVertexArrayIndexed64iv (glad_gl_context.GetVertexArrayIndexed64iv)
#define glCreateSamplers (glad_gl_context.CreateSamplers)
#define glCreateProgramPipelines (glad_gl_context.CreateProgramPipelines)
#define glCreateQueries (glad_gl_context.CreateQueries)
#define glGetQueryBufferObjecti64v (glad_gl_context.GetQueryBufferObjecti64v)
#define glGetQueryBufferObjectiv (glad_gl_context.GetQueryBufferObjectiv)
#define glGetQueryBufferObjectui64v (glad_gl_context.GetQueryBufferObjectui64v)
#define glGetQueryBufferObjectuiv (glad_gl_context.GetQueryBufferObjectuiv)
#define glMemoryBarrierByRegion (glad_gl_context.MemoryBarrierByRegion)
#define glGetTextureSubImage (glad_gl_context.GetTextureSubImage)
#define glGetCompressedTextureSubImage (glad_gl_context.GetCompressedTextureSubImage)
#define glGetGraphicsResetStatus (glad_gl_context.GetGraphicsResetStatus)
#define glGetnCompressedTexImage (glad_gl_context.GetnCompressedTexImage)
#define glGetnTexImage (glad_gl_context.GetnTexImage)
#define glGetnUniformdv (glad_gl_context.GetnUniformdv)
#define glGetnUniformfv (glad_gl_context.GetnUniformfv)
#define glGetnUniformiv (glad_gl_context.GetnUniformiv)
#define glGetnUniformuiv (glad_gl_context.GetnUniformuiv)
#define glReadnPixels (glad_gl_context.ReadnPixels)
#define glTextureBarrier (glad_gl_context.TextureBarrier)
#define glSpecializeShader (glad_gl_context.SpecializeShader)
#define glMultiDrawArraysIndirectCount (glad_gl_context.MultiDrawArraysIndirectCount)
#define glMultiDrawElementsIndirectCount (glad_gl_context.MultiDrawElementsIndirectCount)
#define glPolygonOffsetClamp (glad_gl_context.PolygonOffsetClamp)
#define glTbufferMask3DFX (glad_gl_context.TbufferMask3DFX)
#define glDebugMessageEnableAMD (glad_gl_context.DebugMessageEnableAMD)
#define glDebugMessageInsertAMD (glad_gl_context.DebugMessageInsertAMD)
#define glDebugMessageCallbackAMD (glad_gl_context.DebugMessageCallbackAMD)
#define glGetDebugMessageLogAMD (glad_gl_context.GetDebugMessageLogAMD)
#define glBlendFuncIndexedAMD (glad_gl_context.BlendFuncIndexedAMD)
#define glBlendFuncSeparateIndexedAMD (glad_gl_context.BlendFuncSeparateIndexedAMD)
#define glBlendEquationIndexedAMD (glad_gl_context.BlendEquationIndexedAMD)
#define glBlendEquationSeparateIndexedAMD (glad_gl_context.BlendEquationSeparateIndexedAMD)
#define glRenderbufferStorageMultisampleAdvancedAMD (glad_gl_context.RenderbufferStorageMultisampleAdvancedAMD)
#define glNamedRenderbufferStorageMultisampleAdvancedAMD (glad_gl_context.NamedRenderbufferStorageMultisampleAdvancedAMD)
#define glFramebufferSamplePositionsfvAMD (glad_gl_context.FramebufferSamplePositionsfvAMD)
#define glNamedFramebufferSamplePositionsfvAMD (glad_gl_context.NamedFramebufferSamplePositionsfvAMD)
#define glGetFramebufferParameterfvAMD (glad_gl_context.GetFramebufferParameterfvAMD)
#define glGetNamedFramebufferParameterfvAMD (glad_gl_context.GetNamedFramebufferParameterfvAMD)
#define glUniform1i64NV (glad_gl_context.Uniform1i64NV)
#define glUniform2i64NV (glad_gl_context.Uniform2i64NV)
#define glUniform3i64NV (glad_gl_context.Uniform3i64NV)
#define glUniform4i64NV (glad_gl_context.Uniform4i64NV)
#define glUniform1i64vNV (glad_gl_context.Uniform1i64vNV)
#define glUniform2i64vNV (glad_gl_context.Uniform2i64vNV)
#define glUniform3i64vNV (glad_gl_context.Uniform3i64vNV)
#define glUniform4i64vNV (glad_gl_context.Uniform4i64vNV)
#define glUniform1ui64NV (glad_gl_context.Uniform1ui64NV)
#define glUniform2ui64NV (glad_gl_context.Uniform2ui64NV)
#define glUniform3ui64NV (glad_gl_context.Uniform3ui64NV)
#define glUniform4ui64NV (glad_gl_context.Uniform4ui64NV)
#define glUniform1ui64vNV (glad_gl_context.Uniform1ui64vNV)
#define glUniform2ui64vNV (glad_gl_context.Uniform2ui64vNV)
#define glUniform3ui64vNV (glad_gl_context.Uniform3ui64vNV)
#define glUniform4ui64vNV (glad_gl_context.Uniform4ui64vNV)
#define glGetUniformi64vNV (glad_gl_context.GetUniformi64vNV)
#define glGetUniformui64vNV (glad_gl_context.GetUniformui64vNV)
#define glProgramUniform1i64NV (glad_gl_context.ProgramUniform1i64NV)
#define glProgramUniform2i64NV (glad_gl_context.ProgramUniform2i64NV)
#define glProgramUniform3i64NV (glad_gl_context.ProgramUniform3i64NV)
#define glProgramUniform4i64NV (glad_gl_context.ProgramUniform4i64NV)
#define glProgramUniform1i64vNV (glad_gl_context.ProgramUniform1i64vNV)
#define glProgramUniform2i64vNV (glad_gl_context.ProgramUniform2i64vNV)
#define glProgramUniform3i64vNV (glad_gl_context.ProgramUniform3i64vNV)
#define glProgramUniform4i64vNV (glad_gl_context.ProgramUniform4i64vNV)
#define glProgramUniform1ui64NV (glad_gl_context.ProgramUniform1ui64NV)
#define glProgramUniform2ui64NV (glad_gl_context.ProgramUniform2ui64NV)
#define glProgramUniform3ui64NV (glad_gl_context.ProgramUniform3ui64NV)
#define glProgramUniform4ui64NV (glad_gl_context.ProgramUniform4ui64NV)
#define glProgramUniform1ui64vNV (glad_gl_context.ProgramUniform1ui64vNV)
#define glProgramUniform2ui64vNV (glad_gl_context.ProgramUniform2ui64vNV)
#define glProgramUniform3ui64vNV (glad_gl_context.ProgramUniform3ui64vNV)
#define glProgramUniform4ui64vNV (glad_gl_context.ProgramUniform4ui64vNV)
#define glVertexAttribParameteriAMD (glad_gl_context.VertexAttribParameteriAMD)
#define glMultiDrawArraysIndirectAMD (glad_gl_context.MultiDrawArraysIndirectAMD)
#define glMultiDrawElementsIndirectAMD (glad_gl_context.MultiDrawElementsIndirectAMD)
#define glGenNamesAMD (glad_gl_context.GenNamesAMD)
#define glDeleteNamesAMD (glad_gl_context.DeleteNamesAMD)
#define glIsNameAMD (glad_gl_context.IsNameAMD)
#define glQueryObjectParameteruiAMD (glad_gl_context.QueryObjectParameteruiAMD)
#define glGetPerfMonitorGroupsAMD (glad_gl_context.GetPerfMonitorGroupsAMD)
#define glGetPerfMonitorCountersAMD (glad_gl_context.GetPerfMonitorCountersAMD)
#define glGetPerfMonitorGroupStringAMD (glad_gl_context.GetPerfMonitorGroupStringAMD)
#define glGetPerfMonitorCounterStringAMD (glad_gl_context.GetPerfMonitorCounterStringAMD)
#define glGetPerfMonitorCounterInfoAMD (glad_gl_context.GetPerfMonitorCounterInfoAMD)
#define glGenPerfMonitorsAMD (glad_gl_context.GenPerfMonitorsAMD)
#define glDeletePerfMonitorsAMD (glad_gl_context.DeletePerfMonitorsAMD)
#define glSelectPerfMonitorCountersAMD (glad_gl_context.SelectPerfMonitorCountersAMD)
#define glBeginPerfMonitorAMD (glad_gl_context.BeginPerfMonitorAMD)
#define glEndPerfMonitorAMD (glad_gl_context.EndPerfMonitorAMD)
#define glGetPerfMonitorCounterDataAMD (glad_gl_context.GetPerfMonitorCounterDataAMD)
#define glSetMultisamplefvAMD (glad_gl_context.SetMultisamplefvAMD)
#define glTexStorageSparseAMD (glad_gl_context.TexStorageSparseAMD)
#define glTextureStorageSparseAMD (glad_gl_context.TextureStorageSparseAMD)
#define glStencilOpValueAMD (glad_gl_context.StencilOpValueAMD)
#define glTessellationFactorAMD (glad_gl_context.TessellationFactorAMD)
#define glTessellationModeAMD (glad_gl_context.TessellationModeAMD)
#define glElementPointerAPPLE (glad_gl_context.ElementPointerAPPLE)
#define glDrawElementArrayAPPLE (glad_gl_context.DrawElementArrayAPPLE)
#define glDrawRangeElementArrayAPPLE (glad_gl_context.DrawRangeElementArrayAPPLE)
#define glMultiDrawElementArrayAPPLE (glad_gl_context.MultiDrawElementArrayAPPLE)
#define glMultiDrawRangeElementArrayAPPLE (glad_gl_context.MultiDrawRangeElementArrayAPPLE)
#define glGenFencesAPPLE (glad_gl_context.GenFencesAPPLE)
#define glDeleteFencesAPPLE (glad_gl_context.DeleteFencesAPPLE)
#define glSetFenceAPPLE (glad_gl_context.SetFenceAPPLE)
#define glIsFenceAPPLE (glad_gl_context.IsFenceAPPLE)
#define glTestFenceAPPLE (glad_gl_context.TestFenceAPPLE)
#define glFinishFenceAPPLE (glad_gl_context.FinishFenceAPPLE)
#define glTestObjectAPPLE (glad_gl_context.TestObjectAPPLE)
#define glFinishObjectAPPLE (glad_gl_context.FinishObjectAPPLE)
#define glBufferParameteriAPPLE (glad_gl_context.BufferParameteriAPPLE)
#define glFlushMappedBufferRangeAPPLE (glad_gl_context.FlushMappedBufferRangeAPPLE)
#define glObjectPurgeableAPPLE (glad_gl_context.ObjectPurgeableAPPLE)
#define glObjectUnpurgeableAPPLE (glad_gl_context.ObjectUnpurgeableAPPLE)
#define glGetObjectParameterivAPPLE (glad_gl_context.GetObjectParameterivAPPLE)
#define glTextureRangeAPPLE (glad_gl_context.TextureRangeAPPLE)
#define glGetTexParameterPointervAPPLE (glad_gl_context.GetTexParameterPointervAPPLE)
#define glBindVertexArrayAPPLE (glad_gl_context.BindVertexArrayAPPLE)
#define glDeleteVertexArraysAPPLE (glad_gl_context.DeleteVertexArraysAPPLE)
#define glGenVertexArraysAPPLE (glad_gl_context.GenVertexArraysAPPLE)
#define glIsVertexArrayAPPLE (glad_gl_context.IsVertexArrayAPPLE)
#define glVertexArrayRangeAPPLE (glad_gl_context.VertexArrayRangeAPPLE)
#define glFlushVertexArrayRangeAPPLE (glad_gl_context.FlushVertexArrayRangeAPPLE)
#define glVertexArrayParameteriAPPLE (glad_gl_context.VertexArrayParameteriAPPLE)
#define glEnableVertexAttribAPPLE (glad_gl_context.EnableVertexAttribAPPLE)
#define glDisableVertexAttribAPPLE (glad_gl_context.DisableVertexAttribAPPLE)
#define glIsVertexAttribEnabledAPPLE (glad_gl_context.IsVertexAttribEnabledAPPLE)
#define glMapVertexAttrib1dAPPLE (glad_gl_context.MapVertexAttrib1dAPPLE)
#define glMapVertexAttrib1fAPPLE (glad_gl_context.MapVertexAttrib1fAPPLE)
#define glMapVertexAttrib2dAPPLE (glad_gl_context.MapVertexAttrib2dAPPLE)
#define glMapVertexAttrib2fAPPLE (glad_gl_context.MapVertexAttrib2fAPPLE)
#define glPrimitiveBoundingBoxARB (glad_gl_context.PrimitiveBoundingBoxARB)
#define glGetTextureHandleARB (glad_gl_context.GetTextureHandleARB)
#define glGetTextureSamplerHandleARB (glad_gl_context.GetTextureSamplerHandleARB)
#define glMakeTextureHandleResidentARB (glad_gl_context.MakeTextureHandleResidentARB)
#define glMakeTextureHandleNonResidentARB (glad_gl_context.MakeTextureHandleNonResidentARB)
#define glGetImageHandleARB (glad_gl_context.GetImageHandleARB)
#define glMakeImageHandleResidentARB (glad_gl_context.MakeImageHandleResidentARB)
#define glMakeImageHandleNonResidentARB (glad_gl_context.MakeImageHandleNonResidentARB)
#define glUniformHandleui64ARB (glad_gl_context.UniformHandleui64ARB)
#define glUniformHandleui64vARB (glad_gl_context.UniformHandleui64vARB)
#define glProgramUniformHandleui64ARB (glad_gl_context.ProgramUniformHandleui64ARB)
#define glProgramUniformHandleui64vARB (glad_gl_context.ProgramUniformHandleui64vARB)
#define glIsTextureHandleResidentARB (glad_gl_context.IsTextureHandleResidentARB)
#define glIsImageHandleResidentARB (glad_gl_context.IsImageHandleResidentARB)
#define glVertexAttribL1ui64ARB (glad_gl_context.VertexAttribL1ui64ARB)
#define glVertexAttribL1ui64vARB (glad_gl_context.VertexAttribL1ui64vARB)
#define glGetVertexAttribLui64vARB (glad_gl_context.GetVertexAttribLui64vARB)
#define glCreateSyncFromCLeventARB (glad_gl_context.CreateSyncFromCLeventARB)
#define glClampColorARB (glad_gl_context.ClampColorARB)
#define glDispatchComputeGroupSizeARB (glad_gl_context.DispatchComputeGroupSizeARB)
#define glDebugMessageControlARB (glad_gl_context.DebugMessageControlARB)
#define glDebugMessageInsertARB (glad_gl_context.DebugMessageInsertARB)
#define glDebugMessageCallbackARB (glad_gl_context.DebugMessageCallbackARB)
#define glGetDebugMessageLogARB (glad_gl_context.GetDebugMessageLogARB)
#define glDrawBuffersARB (glad_gl_context.DrawBuffersARB)
#define glBlendEquationiARB (glad_gl_context.BlendEquationiARB)
#define glBlendEquationSeparateiARB (glad_gl_context.BlendEquationSeparateiARB)
#define glBlendFunciARB (glad_gl_context.BlendFunciARB)
#define glBlendFuncSeparateiARB (glad_gl_context.BlendFuncSeparateiARB)
#define glDrawArraysInstancedARB (glad_gl_context.DrawArraysInstancedARB)
#define glDrawElementsInstancedARB (glad_gl_context.DrawElementsInstancedARB)
#define glProgramStringARB (glad_gl_context.ProgramStringARB)
#define glBindProgramARB (glad_gl_context.BindProgramARB)
#define glDeleteProgramsARB (glad_gl_context.DeleteProgramsARB)
#define glGenProgramsARB (glad_gl_context.GenProgramsARB)
#define glProgramEnvParameter4dARB (glad_gl_context.ProgramEnvParameter4dARB)
#define glProgramEnvParameter4dvARB (glad_gl_context.ProgramEnvParameter4dvARB)
#define glProgramEnvParameter4fARB (glad_gl_context.ProgramEnvParameter4fARB)
#define glProgramEnvParameter4fvARB (glad_gl_context.ProgramEnvParameter4fvARB)
#define glProgramLocalParameter4dARB (glad_gl_context.ProgramLocalParameter4dARB)
#define glProgramLocalParameter4dvARB (glad_gl_context.ProgramLocalParameter4dvARB)
#define glProgramLocalParameter4fARB (glad_gl_context.ProgramLocalParameter4fARB)
#define glProgramLocalParameter4fvARB (glad_gl_context.ProgramLocalParameter4fvARB)
#define glGetProgramEnvParameterdvARB (glad_gl_context.GetProgramEnvParameterdvARB)
#define glGetProgramEnvParameterfvARB (glad_gl_context.GetProgramEnvParameterfvARB)
#define glGetProgramLocalParameterdvARB (glad_gl_context.GetProgramLocalParameterdvARB)
#define glGetProgramLocalParameterfvARB (glad_gl_context.GetProgramLocalParameterfvARB)
#define glGetProgramivARB (glad_gl_context.GetProgramivARB)
#define glGetProgramStringARB (glad_gl_context.GetProgramStringARB)
#define glIsProgramARB (glad_gl_context.IsProgramARB)
#define glProgramParameteriARB (glad_gl_context.ProgramParameteriARB)
#define glFramebufferTextureARB (glad_gl_context.FramebufferTextureARB)
#define glFramebufferTextureLayerARB (glad_gl_context.FramebufferTextureLayerARB)
#define glFramebufferTextureFaceARB (glad_gl_context.FramebufferTextureFaceARB)
#define glSpecializeShaderARB (glad_gl_context.SpecializeShaderARB)
#define glUniform1i64ARB (glad_gl_context.Uniform1i64ARB)
#define glUniform2i64ARB (glad_gl_context.Uniform2i64ARB)
#define glUniform3i64ARB (glad_gl_context.Uniform3i64ARB)
#define glUniform4i64ARB (glad_gl_context.Uniform4i64ARB)
#define glUniform1i64vARB (glad_gl_context.Uniform1i64vARB)
#define glUniform2i64vARB (glad_gl_context.Uniform2i64vARB)
#define glUniform3i64vARB (glad_gl_context.Uniform3i64vARB)
#define glUniform4i64vARB (glad_gl_context.Uniform4i64vARB)
#define glUniform1ui64ARB (glad_gl_context.Uniform1ui64ARB)
#define glUniform2ui64ARB (glad_gl_context.Uniform2ui64ARB)
#define glUniform3ui64ARB (glad_gl_context.Uniform3ui64ARB)
#define glUniform4ui64ARB (glad_gl_context.Uniform4ui64ARB)
#define glUniform1ui64vARB (glad_gl_context.Uniform1ui64vARB)
#define glUniform2ui64vARB (glad_gl_context.Uniform2ui64vARB)
#define glUniform3ui64vARB (glad_gl_context.Uniform3ui64vARB)
#define glUniform4ui64vARB (glad_gl_context.Uniform4ui64vARB)
#define glGetUniformi64vARB (glad_gl_context.GetUniformi64vARB)
#define glGetUniformui64vARB (glad_gl_context.GetUniformui64vARB)
#define glGetnUniformi64vARB (glad_gl_context.GetnUniformi64vARB)
#define glGetnUniformui64vARB (glad_gl_context.GetnUniformui64vARB)
#define glProgramUniform1i64ARB (glad_gl_context.ProgramUniform1i64ARB)
#define glProgramUniform2i64ARB (glad_gl_context.ProgramUniform2i64ARB)
#define glProgramUniform3i64ARB (glad_gl_context.ProgramUniform3i64ARB)
#define glProgramUniform4i64ARB (glad_gl_context.ProgramUniform4i64ARB)
#define glProgramUniform1i64vARB (glad_gl_context.ProgramUniform1i64vARB)
#define glProgramUniform2i64vARB (glad_gl_context.ProgramUniform2i64vARB)
#define glProgramUniform3i64vARB (glad_gl_context.ProgramUniform3i64vARB)
#define glProgramUniform4i64vARB (glad_gl_context.ProgramUniform4i64vARB)
#define glProgramUniform1ui64ARB (glad_gl_context.ProgramUniform1ui64ARB)
#define glProgramUniform2ui64ARB (glad_gl_context.ProgramUniform2ui64ARB)
#define glProgramUniform3ui64ARB (glad_gl_context.ProgramUniform3ui64ARB)
#define glProgramUniform4ui64ARB (glad_gl_context.ProgramUniform4ui64ARB)
#define glProgramUniform1ui64vARB (glad_gl_context.ProgramUniform1ui64vARB)
#define glProgramUniform2ui64vARB (glad_gl_context.ProgramUniform2ui64vARB)
#define glProgramUniform3ui64vARB (glad_gl_context.ProgramUniform3ui64vARB)
#define glProgramUniform4ui64vARB (glad_gl_context.ProgramUniform4ui64vARB)
#define glMultiDrawArraysIndirectCountARB (glad_gl_context.MultiDrawArraysIndirectCountARB)
#define glMultiDrawElementsIndirectCountARB (glad_gl_context.MultiDrawElementsIndirectCountARB)
#define glVertexAttribDivisorARB (glad_gl_context.VertexAttribDivisorARB)
#define glCurrentPaletteMatrixARB (glad_gl_context.CurrentPaletteMatrixARB)
#define glMatrixIndexubvARB (glad_gl_context.MatrixIndexubvARB)
#define glMatrixIndexusvARB (glad_gl_context.MatrixIndexusvARB)
#define glMatrixIndexuivARB (glad_gl_context.MatrixIndexuivARB)
#define glMatrixIndexPointerARB (glad_gl_context.MatrixIndexPointerARB)
#define glSampleCoverageARB (glad_gl_context.SampleCoverageARB)
#define glActiveTextureARB (glad_gl_context.ActiveTextureARB)
#define glClientActiveTextureARB (glad_gl_context.ClientActiveTextureARB)
#define glMultiTexCoord1dARB (glad_gl_context.MultiTexCoord1dARB)
#define glMultiTexCoord1dvARB (glad_gl_context.MultiTexCoord1dvARB)
#define glMultiTexCoord1fARB (glad_gl_context.MultiTexCoord1fARB)
#define glMultiTexCoord1fvARB (glad_gl_context.MultiTexCoord1fvARB)
#define glMultiTexCoord1iARB (glad_gl_context.MultiTexCoord1iARB)
#define glMultiTexCoord1ivARB (glad_gl_context.MultiTexCoord1ivARB)
#define glMultiTexCoord1sARB (glad_gl_context.MultiTexCoord1sARB)
#define glMultiTexCoord1svARB (glad_gl_context.MultiTexCoord1svARB)
#define glMultiTexCoord2dARB (glad_gl_context.MultiTexCoord2dARB)
#define glMultiTexCoord2dvARB (glad_gl_context.MultiTexCoord2dvARB)
#define glMultiTexCoord2fARB (glad_gl_context.MultiTexCoord2fARB)
#define glMultiTexCoord2fvARB (glad_gl_context.MultiTexCoord2fvARB)
#define glMultiTexCoord2iARB (glad_gl_context.MultiTexCoord2iARB)
#define glMultiTexCoord2ivARB (glad_gl_context.MultiTexCoord2ivARB)
#define glMultiTexCoord2sARB (glad_gl_context.MultiTexCoord2sARB)
#define glMultiTexCoord2svARB (glad_gl_context.MultiTexCoord2svARB)
#define glMultiTexCoord3dARB (glad_gl_context.MultiTexCoord3dARB)
#define glMultiTexCoord3dvARB (glad_gl_context.MultiTexCoord3dvARB)
#define glMultiTexCoord3fARB (glad_gl_context.MultiTexCoord3fARB)
#define glMultiTexCoord3fvARB (glad_gl_context.MultiTexCoord3fvARB)
#define glMultiTexCoord3iARB (glad_gl_context.MultiTexCoord3iARB)
#define glMultiTexCoord3ivARB (glad_gl_context.MultiTexCoord3ivARB)
#define glMultiTexCoord3sARB (glad_gl_context.MultiTexCoord3sARB)
#define glMultiTexCoord3svARB (glad_gl_context.MultiTexCoord3svARB)
#define glMultiTexCoord4dARB (glad_gl_context.MultiTexCoord4dARB)
#define glMultiTexCoord4dvARB (glad_gl_context.MultiTexCoord4dvARB)
#define glMultiTexCoord4fARB (glad_gl_context.MultiTexCoord4fARB)
#define glMultiTexCoord4fvARB (glad_gl_context.MultiTexCoord4fvARB)
#define glMultiTexCoord4iARB (glad_gl_context.MultiTexCoord4iARB)
#define glMultiTexCoord4ivARB (glad_gl_context.MultiTexCoord4ivARB)
#define glMultiTexCoord4sARB (glad_gl_context.MultiTexCoord4sARB)
#define glMultiTexCoord4svARB (glad_gl_context.MultiTexCoord4svARB)
#define glGenQueriesARB (glad_gl_context.GenQueriesARB)
#define glDeleteQueriesARB (glad_gl_context.DeleteQueriesARB)
#define glIsQueryARB (glad_gl_context.IsQueryARB)
#define glBeginQueryARB (glad_gl_context.BeginQueryARB)
#define glEndQueryARB (glad_gl_context.EndQueryARB)
#define glGetQueryivARB (glad_gl_context.GetQueryivARB)
#define glGetQueryObjectivARB (glad_gl_context.GetQueryObjectivARB)
#define glGetQueryObjectuivARB (glad_gl_context.GetQueryObjectuivARB)
#define glMaxShaderCompilerThreadsARB (glad_gl_context.MaxShaderCompilerThreadsARB)
#define glPointParameterfARB (glad_gl_context.PointParameterfARB)
#define glPointParameterfvARB (glad_gl_context.PointParameterfvARB)
#define glGetGraphicsResetStatusARB (glad_gl_context.GetGraphicsResetStatusARB)
#define glGetnTexImageARB (glad_gl_context.GetnTexImageARB)
#define glReadnPixelsARB (glad_gl_context.ReadnPixelsARB)
#define glGetnCompressedTexImageARB (glad_gl_context.GetnCompressedTexImageARB)
#define glGetnUniformfvARB (glad_gl_context.GetnUniformfvARB)
#define glGetnUniformivARB (glad_gl_context.GetnUniformivARB)
#define glGetnUniformuivARB (glad_gl_context.GetnUniformuivARB)
#define glGetnUniformdvARB (glad_gl_context.GetnUniformdvARB)
#define glFramebufferSampleLocationsfvARB (glad_gl_context.FramebufferSampleLocationsfvARB)
#define glNamedFramebufferSampleLocationsfvARB (glad_gl_context.NamedFramebufferSampleLocationsfvARB)
#define glEvaluateDepthValuesARB (glad_gl_context.EvaluateDepthValuesARB)
#define glMinSampleShadingARB (glad_gl_context.MinSampleShadingARB)
#define glDeleteObjectARB (glad_gl_context.DeleteObjectARB)
#define glGetHandleARB (glad_gl_context.GetHandleARB)
#define glDetachObjectARB (glad_gl_context.DetachObjectARB)
#define glCreateShaderObjectARB (glad_gl_context.CreateShaderObjectARB)
#define glShaderSourceARB (glad_gl_context.ShaderSourceARB)
#define glCompileShaderARB (glad_gl_context.CompileShaderARB)
#define glCreateProgramObjectARB (glad_gl_context.CreateProgramObjectARB)
#define glAttachObjectARB (glad_gl_context.AttachObjectARB)
#define glLinkProgramARB (glad_gl_context.LinkProgramARB)
#define glUseProgramObjectARB (glad_gl_context.UseProgramObjectARB)
#define glValidateProgramARB (glad_gl_context.ValidateProgramARB)
#define glUniform1fARB (glad_gl_context.Uniform1fARB)
#define glUniform2fARB (glad_gl_context.Uniform2fARB)
#define glUniform3fARB (glad_gl_context.Uniform3fARB)
#define glUniform4fARB (glad_gl_context.Uniform4fARB)
#define glUniform1iARB (glad_gl_context.Uniform1iARB)
#define glUniform2iARB (glad_gl_context.Uniform2iARB)
#define glUniform3iARB (glad_gl_context.Uniform3iARB)
#define glUniform4iARB (glad_gl_context.Uniform4iARB)
#define glUniform1fvARB (glad_gl_context.Uniform1fvARB)
#define glUniform2fvARB (glad_gl_context.Uniform2fvARB)
#define glUniform3fvARB (glad_gl_context.Uniform3fvARB)
#define glUniform4fvARB (glad_gl_context.Uniform4fvARB)
#define glUniform1ivARB (glad_gl_context.Uniform1ivARB)
#define glUniform2ivARB (glad_gl_context.Uniform2ivARB)
#define glUniform3ivARB (glad_gl_context.Uniform3ivARB)
#define glUniform4ivARB (glad_gl_context.Uniform4ivARB)
#define glUniformMatrix2fvARB (glad_gl_context.UniformMatrix2fvARB)
#define glUniformMatrix3fvARB (glad_gl_context.UniformMatrix3fvARB)
#define glUniformMatrix4fvARB (glad_gl_context.UniformMatrix4fvARB)
#define glGetObjectParameterfvARB (glad_gl_context.GetObjectParameterfvARB)
#define glGetObjectParameterivARB (glad_gl_context.GetObjectParameterivARB)
#define glGetInfoLogARB (glad_gl_context.GetInfoLogARB)
#define glGetAttachedObjectsARB (glad_gl_context.GetAttachedObjectsARB)
#define glGetUniformLocationARB (glad_gl_context.GetUniformLocationARB)
#define glGetActiveUniformARB (glad_gl_context.GetActiveUniformARB)
#define glGetUniformfvARB (glad_gl_context.GetUniformfvARB)
#define glGetUniformivARB (glad_gl_context.GetUniformivARB)
#define glGetShaderSourceARB (glad_gl_context.GetShaderSourceARB)
#define glNamedStringARB (glad_gl_context.NamedStringARB)
#define glDeleteNamedStringARB (glad_gl_context.DeleteNamedStringARB)
#define glCompileShaderIncludeARB (glad_gl_context.CompileShaderIncludeARB)
#define glIsNamedStringARB (glad_gl_context.IsNamedStringARB)
#define glGetNamedStringARB (glad_gl_context.GetNamedStringARB)
#define glGetNamedStringivARB (glad_gl_context.GetNamedStringivARB)
#define glBufferPageCommitmentARB (glad_gl_context.BufferPageCommitmentARB)
#define glNamedBufferPageCommitmentEXT (glad_gl_context.NamedBufferPageCommitmentEXT)
#define glNamedBufferPageCommitmentARB (glad_gl_context.NamedBufferPageCommitmentARB)
#define glTexPageCommitmentARB (glad_gl_context.TexPageCommitmentARB)
#define glTexBufferARB (glad_gl_context.TexBufferARB)
#define glCompressedTexImage3DARB (glad_gl_context.CompressedTexImage3DARB)
#define glCompressedTexImage2DARB (glad_gl_context.CompressedTexImage2DARB)
#define glCompressedTexImage1DARB (glad_gl_context.CompressedTexImage1DARB)
#define glCompressedTexSubImage3DARB (glad_gl_context.CompressedTexSubImage3DARB)
#define glCompressedTexSubImage2DARB (glad_gl_context.CompressedTexSubImage2DARB)
#define glCompressedTexSubImage1DARB (glad_gl_context.CompressedTexSubImage1DARB)
#define glGetCompressedTexImageARB (glad_gl_context.GetCompressedTexImageARB)
#define glLoadTransposeMatrixfARB (glad_gl_context.LoadTransposeMatrixfARB)
#define glLoadTransposeMatrixdARB (glad_gl_context.LoadTransposeMatrixdARB)
#define glMultTransposeMatrixfARB (glad_gl_context.MultTransposeMatrixfARB)
#define glMultTransposeMatrixdARB (glad_gl_context.MultTransposeMatrixdARB)
#define glWeightbvARB (glad_gl_context.WeightbvARB)
#define glWeightsvARB (glad_gl_context.WeightsvARB)
#define glWeightivARB (glad_gl_context.WeightivARB)
#define glWeightfvARB (glad_gl_context.WeightfvARB)
#define glWeightdvARB (glad_gl_context.WeightdvARB)
#define glWeightubvARB (glad_gl_context.WeightubvARB)
#define glWeightusvARB (glad_gl_context.WeightusvARB)
#define glWeightuivARB (glad_gl_context.WeightuivARB)
#define glWeightPointerARB (glad_gl_context.WeightPointerARB)
#define glVertexBlendARB (glad_gl_context.VertexBlendARB)
#define glBindBufferARB (glad_gl_context.BindBufferARB)
#define glDeleteBuffersARB (glad_gl_context.DeleteBuffersARB)
#define glGenBuffersARB (glad_gl_context.GenBuffersARB)
#define glIsBufferARB (glad_gl_context.IsBufferARB)
#define glBufferDataARB (glad_gl_context.BufferDataARB)
#define glBufferSubDataARB (glad_gl_context.BufferSubDataARB)
#define glGetBufferSubDataARB (glad_gl_context.GetBufferSubDataARB)
#define glMapBufferARB (glad_gl_context.MapBufferARB)
#define glUnmapBufferARB (glad_gl_context.UnmapBufferARB)
#define glGetBufferParameterivARB (glad_gl_context.GetBufferParameterivARB)
#define glGetBufferPointervARB (glad_gl_context.GetBufferPointervARB)
#define glVertexAttrib1dARB (glad_gl_context.VertexAttrib1dARB)
#define glVertexAttrib1dvARB (glad_gl_context.VertexAttrib1dvARB)
#define glVertexAttrib1fARB (glad_gl_context.VertexAttrib1fARB)
#define glVertexAttrib1fvARB (glad_gl_context.VertexAttrib1fvARB)
#define glVertexAttrib1sARB (glad_gl_context.VertexAttrib1sARB)
#define glVertexAttrib1svARB (glad_gl_context.VertexAttrib1svARB)
#define glVertexAttrib2dARB (glad_gl_context.VertexAttrib2dARB)
#define glVertexAttrib2dvARB (glad_gl_context.VertexAttrib2dvARB)
#define glVertexAttrib2fARB (glad_gl_context.VertexAttrib2fARB)
#define glVertexAttrib2fvARB (glad_gl_context.VertexAttrib2fvARB)
#define glVertexAttrib2sARB (glad_gl_context.VertexAttrib2sARB)
#define glVertexAttrib2svARB (glad_gl_context.VertexAttrib2svARB)
#define glVertexAttrib3dARB (glad_gl_context.VertexAttrib3dARB)
#define glVertexAttrib3dvARB (glad_gl_context.VertexAttrib3dvARB)
#define glVertexAttrib3fARB (glad_gl_context.VertexAttrib3fARB)
#define glVertexAttrib3fvARB (glad_gl_context.VertexAttrib3fvARB)
#define glVertexAttrib3sARB (glad_gl_context.VertexAttrib3sARB)
#define glVertexAttrib3svARB (glad_gl_context.VertexAttrib3svARB)
#define glVertexAttrib4NbvARB (glad_gl_context.VertexAttrib4NbvARB)
#define glVertexAttrib4NivARB (glad_gl_context.VertexAttrib4NivARB)
#define glVertexAttrib4NsvARB (glad_gl_context.VertexAttrib4NsvARB)
#define glVertexAttrib4NubARB (glad_gl_context.VertexAttrib4NubARB)
#define glVertexAttrib4NubvARB (glad_gl_context.VertexAttrib4NubvARB)
#define glVertexAttrib4NuivARB (glad_gl_context.VertexAttrib4NuivARB)
#define glVertexAttrib4NusvARB (glad_gl_context.VertexAttrib4NusvARB)
#define glVertexAttrib4bvARB (glad_gl_context.VertexAttrib4bvARB)
#define glVertexAttrib4dARB (glad_gl_context.VertexAttrib4dARB)
#define glVertexAttrib4dvARB (glad_gl_context.VertexAttrib4dvARB)
#define glVertexAttrib4fARB (glad_gl_context.VertexAttrib4fARB)
#define glVertexAttrib4fvARB (glad_gl_context.VertexAttrib4fvARB)
#define glVertexAttrib4ivARB (glad_gl_context.VertexAttrib4ivARB)
#define glVertexAttrib4sARB (glad_gl_context.VertexAttrib4sARB)
#define glVertexAttrib4svARB (glad_gl_context.VertexAttrib4svARB)
#define glVertexAttrib4ubvARB (glad_gl_context.VertexAttrib4ubvARB)
#define glVertexAttrib4uivARB (glad_gl_context.VertexAttrib4uivARB)
#define glVertexAttrib4usvARB (glad_gl_context.VertexAttrib4usvARB)
#define glVertexAttribPointerARB (glad_gl_context.VertexAttribPointerARB)
#define glEnableVertexAttribArrayARB (glad_gl_context.EnableVertexAttribArrayARB)
#define glDisableVertexAttribArrayARB (glad_gl_context.DisableVertexAttribArrayARB)
#define glGetVertexAttribdvARB (glad_gl_context.GetVertexAttribdvARB)
#define glGetVertexAttribfvARB (glad_gl_context.GetVertexAttribfvARB)
#define glGetVertexAttribivARB (glad_gl_context.GetVertexAttribivARB)
#define glGetVertexAttribPointervARB (glad_gl_context.GetVertexAttribPointervARB)
#define glBindAttribLocationARB (glad_gl_context.BindAttribLocationARB)
#define glGetActiveAttribARB (glad_gl_context.GetActiveAttribARB)
#define glGetAttribLocationARB (glad_gl_context.GetAttribLocationARB)
#define glDepthRangeArraydvNV (glad_gl_context.DepthRangeArraydvNV)
#define glDepthRangeIndexeddNV (glad_gl_context.DepthRangeIndexeddNV)
#define glWindowPos2dARB (glad_gl_context.WindowPos2dARB)
#define glWindowPos2dvARB (glad_gl_context.WindowPos2dvARB)
#define glWindowPos2fARB (glad_gl_context.WindowPos2fARB)
#define glWindowPos2fvARB (glad_gl_context.WindowPos2fvARB)
#define glWindowPos2iARB (glad_gl_context.WindowPos2iARB)
#define glWindowPos2ivARB (glad_gl_context.WindowPos2ivARB)
#define glWindowPos2sARB (glad_gl_context.WindowPos2sARB)
#define glWindowPos2svARB (glad_gl_context.WindowPos2svARB)
#define glWindowPos3dARB (glad_gl_context.WindowPos3dARB)
#define glWindowPos3dvARB (glad_gl_context.WindowPos3dvARB)
#define glWindowPos3fARB (glad_gl_context.WindowPos3fARB)
#define glWindowPos3fvARB (glad_gl_context.WindowPos3fvARB)
#define glWindowPos3iARB (glad_gl_context.WindowPos3iARB)
#define glWindowPos3ivARB (glad_gl_context.WindowPos3ivARB)
#define glWindowPos3sARB (glad_gl_context.WindowPos3sARB)
#define glWindowPos3svARB (glad_gl_context.WindowPos3svARB)
#define glDrawBuffersATI (glad_gl_context.DrawBuffersATI)
#define glElementPointerATI (glad_gl_context.ElementPointerATI)
#define glDrawElementArrayATI (glad_gl_context.DrawElementArrayATI)
#define glDrawRangeElementArrayATI (glad_gl_context.DrawRangeElementArrayATI)
#define glTexBumpParameterivATI (glad_gl_context.TexBumpParameterivATI)
#define glTexBumpParameterfvATI (glad_gl_context.TexBumpParameterfvATI)
#define glGetTexBumpParameterivATI (glad_gl_context.GetTexBumpParameterivATI)
#define glGetTexBumpParameterfvATI (glad_gl_context.GetTexBumpParameterfvATI)
#define glGenFragmentShadersATI (glad_gl_context.GenFragmentShadersATI)
#define glBindFragmentShaderATI (glad_gl_context.BindFragmentShaderATI)
#define glDeleteFragmentShaderATI (glad_gl_context.DeleteFragmentShaderATI)
#define glBeginFragmentShaderATI (glad_gl_context.BeginFragmentShaderATI)
#define glEndFragmentShaderATI (glad_gl_context.EndFragmentShaderATI)
#define glPassTexCoordATI (glad_gl_context.PassTexCoordATI)
#define glSampleMapATI (glad_gl_context.SampleMapATI)
#define glColorFragmentOp1ATI (glad_gl_context.ColorFragmentOp1ATI)
#define glColorFragmentOp2ATI (glad_gl_context.ColorFragmentOp2ATI)
#define glColorFragmentOp3ATI (glad_gl_context.ColorFragmentOp3ATI)
#define glAlphaFragmentOp1ATI (glad_gl_context.AlphaFragmentOp1ATI)
#define glAlphaFragmentOp2ATI (glad_gl_context.AlphaFragmentOp2ATI)
#define glAlphaFragmentOp3ATI (glad_gl_context.AlphaFragmentOp3ATI)
#define glSetFragmentShaderConstantATI (glad_gl_context.SetFragmentShaderConstantATI)
#define glMapObjectBufferATI (glad_gl_context.MapObjectBufferATI)
#define glUnmapObjectBufferATI (glad_gl_context.UnmapObjectBufferATI)
#define glPNTrianglesiATI (glad_gl_context.PNTrianglesiATI)
#define glPNTrianglesfATI (glad_gl_context.PNTrianglesfATI)
#define glStencilOpSeparateATI (glad_gl_context.StencilOpSeparateATI)
#define glStencilFuncSeparateATI (glad_gl_context.StencilFuncSeparateATI)
#define glNewObjectBufferATI (glad_gl_context.NewObjectBufferATI)
#define glIsObjectBufferATI (glad_gl_context.IsObjectBufferATI)
#define glUpdateObjectBufferATI (glad_gl_context.UpdateObjectBufferATI)
#define glGetObjectBufferfvATI (glad_gl_context.GetObjectBufferfvATI)
#define glGetObjectBufferivATI (glad_gl_context.GetObjectBufferivATI)
#define glFreeObjectBufferATI (glad_gl_context.FreeObjectBufferATI)
#define glArrayObjectATI (glad_gl_context.ArrayObjectATI)
#define glGetArrayObjectfvATI (glad_gl_context.GetArrayObjectfvATI)
#define glGetArrayObjectivATI (glad_gl_context.GetArrayObjectivATI)
#define glVariantArrayObjectATI (glad_gl_context.VariantArrayObjectATI)
#define glGetVariantArrayObjectfvATI (glad_gl_context.GetVariantArrayObjectfvATI)
#define glGetVariantArrayObjectivATI (glad_gl_context.GetVariantArrayObjectivATI)
#define glVertexAttribArrayObjectATI (glad_gl_context.VertexAttribArrayObjectATI)
#define glGetVertexAttribArrayObjectfvATI (glad_gl_context.GetVertexAttribArrayObjectfvATI)
#define glGetVertexAttribArrayObjectivATI (glad_gl_context.GetVertexAttribArrayObjectivATI)
#define glVertexStream1sATI (glad_gl_context.VertexStream1sATI)
#define glVertexStream1svATI (glad_gl_context.VertexStream1svATI)
#define glVertexStream1iATI (glad_gl_context.VertexStream1iATI)
#define glVertexStream1ivATI (glad_gl_context.VertexStream1ivATI)
#define glVertexStream1fATI (glad_gl_context.VertexStream1fATI)
#define glVertexStream1fvATI (glad_gl_context.VertexStream1fvATI)
#define glVertexStream1dATI (glad_gl_context.VertexStream1dATI)
#define glVertexStream1dvATI (glad_gl_context.VertexStream1dvATI)
#define glVertexStream2sATI (glad_gl_context.VertexStream2sATI)
#define glVertexStream2svATI (glad_gl_context.VertexStream2svATI)
#define glVertexStream2iATI (glad_gl_context.VertexStream2iATI)
#define glVertexStream2ivATI (glad_gl_context.VertexStream2ivATI)
#define glVertexStream2fATI (glad_gl_context.VertexStream2fATI)
#define glVertexStream2fvATI (glad_gl_context.VertexStream2fvATI)
#define glVertexStream2dATI (glad_gl_context.VertexStream2dATI)
#define glVertexStream2dvATI (glad_gl_context.VertexStream2dvATI)
#define glVertexStream3sATI (glad_gl_context.VertexStream3sATI)
#define glVertexStream3svATI (glad_gl_context.VertexStream3svATI)
#define glVertexStream3iATI (glad_gl_context.VertexStream3iATI)
#define glVertexStream3ivATI (glad_gl_context.VertexStream3ivATI)
#define glVertexStream3fATI (glad_gl_context.VertexStream3fATI)
#define glVertexStream3fvATI (glad_gl_context.VertexStream3fvATI)
#define glVertexStream3dATI (glad_gl_context.VertexStream3dATI)
#define glVertexStream3dvATI (glad_gl_context.VertexStream3dvATI)
#define glVertexStream4sATI (glad_gl_context.VertexStream4sATI)
#define glVertexStream4svATI (glad_gl_context.VertexStream4svATI)
#define glVertexStream4iATI (glad_gl_context.VertexStream4iATI)
#define glVertexStream4ivATI (glad_gl_context.VertexStream4ivATI)
#define glVertexStream4fATI (glad_gl_context.VertexStream4fATI)
#define glVertexStream4fvATI (glad_gl_context.VertexStream4fvATI)
#define glVertexStream4dATI (glad_gl_context.VertexStream4dATI)
#define glVertexStream4dvATI (glad_gl_context.VertexStream4dvATI)
#define glNormalStream3bATI (glad_gl_context.NormalStream3bATI)
#define glNormalStream3bvATI (glad_gl_context.NormalStream3bvATI)
#define glNormalStream3sATI (glad_gl_context.NormalStream3sATI)
#define glNormalStream3svATI (glad_gl_context.NormalStream3svATI)
#define glNormalStream3iATI (glad_gl_context.NormalStream3iATI)
#define glNormalStream3ivATI (glad_gl_context.NormalStream3ivATI)
#define glNormalStream3fATI (glad_gl_context.NormalStream3fATI)
#define glNormalStream3fvATI (glad_gl_context.NormalStream3fvATI)
#define glNormalStream3dATI (glad_gl_context.NormalStream3dATI)
#define glNormalStream3dvATI (glad_gl_context.NormalStream3dvATI)
#define glClientActiveVertexStreamATI (glad_gl_context.ClientActiveVertexStreamATI)
#define glVertexBlendEnviATI (glad_gl_context.VertexBlendEnviATI)
#define glVertexBlendEnvfATI (glad_gl_context.VertexBlendEnvfATI)
#define glEGLImageTargetTexStorageEXT (glad_gl_context.EGLImageTargetTexStorageEXT)
#define glEGLImageTargetTextureStorageEXT (glad_gl_context.EGLImageTargetTextureStorageEXT)
#define glUniformBufferEXT (glad_gl_context.UniformBufferEXT)
#define glGetUniformBufferSizeEXT (glad_gl_context.GetUniformBufferSizeEXT)
#define glGetUniformOffsetEXT (glad_gl_context.GetUniformOffsetEXT)
#define glBlendColorEXT (glad_gl_context.BlendColorEXT)
#define glBlendEquationSeparateEXT (glad_gl_context.BlendEquationSeparateEXT)
#define glBindFragDataLocationEXT (glad_gl_context.BindFragDataLocationEXT)
#define glBlendFuncSeparateEXT (glad_gl_context.BlendFuncSeparateEXT)
#define glBlendEquationEXT (glad_gl_context.BlendEquationEXT)
#define glColorSubTableEXT (glad_gl_context.ColorSubTableEXT)
#define glCopyColorSubTableEXT (glad_gl_context.CopyColorSubTableEXT)
#define glLockArraysEXT (glad_gl_context.LockArraysEXT)
#define glUnlockArraysEXT (glad_gl_context.UnlockArraysEXT)
#define glConvolutionFilter1DEXT (glad_gl_context.ConvolutionFilter1DEXT)
#define glConvolutionFilter2DEXT (glad_gl_context.ConvolutionFilter2DEXT)
#define glConvolutionParameterfEXT (glad_gl_context.ConvolutionParameterfEXT)
#define glConvolutionParameterfvEXT (glad_gl_context.ConvolutionParameterfvEXT)
#define glConvolutionParameteriEXT (glad_gl_context.ConvolutionParameteriEXT)
#define glConvolutionParameterivEXT (glad_gl_context.ConvolutionParameterivEXT)
#define glCopyConvolutionFilter1DEXT (glad_gl_context.CopyConvolutionFilter1DEXT)
#define glCopyConvolutionFilter2DEXT (glad_gl_context.CopyConvolutionFilter2DEXT)
#define glGetConvolutionFilterEXT (glad_gl_context.GetConvolutionFilterEXT)
#define glGetConvolutionParameterfvEXT (glad_gl_context.GetConvolutionParameterfvEXT)
#define glGetConvolutionParameterivEXT (glad_gl_context.GetConvolutionParameterivEXT)
#define glGetSeparableFilterEXT (glad_gl_context.GetSeparableFilterEXT)
#define glSeparableFilter2DEXT (glad_gl_context.SeparableFilter2DEXT)
#define glTangent3bEXT (glad_gl_context.Tangent3bEXT)
#define glTangent3bvEXT (glad_gl_context.Tangent3bvEXT)
#define glTangent3dEXT (glad_gl_context.Tangent3dEXT)
#define glTangent3dvEXT (glad_gl_context.Tangent3dvEXT)
#define glTangent3fEXT (glad_gl_context.Tangent3fEXT)
#define glTangent3fvEXT (glad_gl_context.Tangent3fvEXT)
#define glTangent3iEXT (glad_gl_context.Tangent3iEXT)
#define glTangent3ivEXT (glad_gl_context.Tangent3ivEXT)
#define glTangent3sEXT (glad_gl_context.Tangent3sEXT)
#define glTangent3svEXT (glad_gl_context.Tangent3svEXT)
#define glBinormal3bEXT (glad_gl_context.Binormal3bEXT)
#define glBinormal3bvEXT (glad_gl_context.Binormal3bvEXT)
#define glBinormal3dEXT (glad_gl_context.Binormal3dEXT)
#define glBinormal3dvEXT (glad_gl_context.Binormal3dvEXT)
#define glBinormal3fEXT (glad_gl_context.Binormal3fEXT)
#define glBinormal3fvEXT (glad_gl_context.Binormal3fvEXT)
#define glBinormal3iEXT (glad_gl_context.Binormal3iEXT)
#define glBinormal3ivEXT (glad_gl_context.Binormal3ivEXT)
#define glBinormal3sEXT (glad_gl_context.Binormal3sEXT)
#define glBinormal3svEXT (glad_gl_context.Binormal3svEXT)
#define glTangentPointerEXT (glad_gl_context.TangentPointerEXT)
#define glBinormalPointerEXT (glad_gl_context.BinormalPointerEXT)
#define glCopyTexImage1DEXT (glad_gl_context.CopyTexImage1DEXT)
#define glCopyTexImage2DEXT (glad_gl_context.CopyTexImage2DEXT)
#define glCopyTexSubImage1DEXT (glad_gl_context.CopyTexSubImage1DEXT)
#define glCopyTexSubImage2DEXT (glad_gl_context.CopyTexSubImage2DEXT)
#define glCopyTexSubImage3DEXT (glad_gl_context.CopyTexSubImage3DEXT)
#define glCullParameterdvEXT (glad_gl_context.CullParameterdvEXT)
#define glCullParameterfvEXT (glad_gl_context.CullParameterfvEXT)
#define glLabelObjectEXT (glad_gl_context.LabelObjectEXT)
#define glGetObjectLabelEXT (glad_gl_context.GetObjectLabelEXT)
#define glInsertEventMarkerEXT (glad_gl_context.InsertEventMarkerEXT)
#define glPushGroupMarkerEXT (glad_gl_context.PushGroupMarkerEXT)
#define glPopGroupMarkerEXT (glad_gl_context.PopGroupMarkerEXT)
#define glDepthBoundsEXT (glad_gl_context.DepthBoundsEXT)
#define glMatrixLoadfEXT (glad_gl_context.MatrixLoadfEXT)
#define glMatrixLoaddEXT (glad_gl_context.MatrixLoaddEXT)
#define glMatrixMultfEXT (glad_gl_context.MatrixMultfEXT)
#define glMatrixMultdEXT (glad_gl_context.MatrixMultdEXT)
#define glMatrixLoadIdentityEXT (glad_gl_context.MatrixLoadIdentityEXT)
#define glMatrixRotatefEXT (glad_gl_context.MatrixRotatefEXT)
#define glMatrixRotatedEXT (glad_gl_context.MatrixRotatedEXT)
#define glMatrixScalefEXT (glad_gl_context.MatrixScalefEXT)
#define glMatrixScaledEXT (glad_gl_context.MatrixScaledEXT)
#define glMatrixTranslatefEXT (glad_gl_context.MatrixTranslatefEXT)
#define glMatrixTranslatedEXT (glad_gl_context.MatrixTranslatedEXT)
#define glMatrixFrustumEXT (glad_gl_context.MatrixFrustumEXT)
#define glMatrixOrthoEXT (glad_gl_context.MatrixOrthoEXT)
#define glMatrixPopEXT (glad_gl_context.MatrixPopEXT)
#define glMatrixPushEXT (glad_gl_context.MatrixPushEXT)
#define glClientAttribDefaultEXT (glad_gl_context.ClientAttribDefaultEXT)
#define glPushClientAttribDefaultEXT (glad_gl_context.PushClientAttribDefaultEXT)
#define glTextureParameterfEXT (glad_gl_context.TextureParameterfEXT)
#define glTextureParameterfvEXT (glad_gl_context.TextureParameterfvEXT)
#define glTextureParameteriEXT (glad_gl_context.TextureParameteriEXT)
#define glTextureParameterivEXT (glad_gl_context.TextureParameterivEXT)
#define glTextureImage1DEXT (glad_gl_context.TextureImage1DEXT)
#define glTextureImage2DEXT (glad_gl_context.TextureImage2DEXT)
#define glTextureSubImage1DEXT (glad_gl_context.TextureSubImage1DEXT)
#define glTextureSubImage2DEXT (glad_gl_context.TextureSubImage2DEXT)
#define glCopyTextureImage1DEXT (glad_gl_context.CopyTextureImage1DEXT)
#define glCopyTextureImage2DEXT (glad_gl_context.CopyTextureImage2DEXT)
#define glCopyTextureSubImage1DEXT (glad_gl_context.CopyTextureSubImage1DEXT)
#define glCopyTextureSubImage2DEXT (glad_gl_context.CopyTextureSubImage2DEXT)
#define glGetTextureImageEXT (glad_gl_context.GetTextureImageEXT)
#define glGetTextureParameterfvEXT (glad_gl_context.GetTextureParameterfvEXT)
#define glGetTextureParameterivEXT (glad_gl_context.GetTextureParameterivEXT)
#define glGetTextureLevelParameterfvEXT (glad_gl_context.GetTextureLevelParameterfvEXT)
#define glGetTextureLevelParameterivEXT (glad_gl_context.GetTextureLevelParameterivEXT)
#define glTextureImage3DEXT (glad_gl_context.TextureImage3DEXT)
#define glTextureSubImage3DEXT (glad_gl_context.TextureSubImage3DEXT)
#define glCopyTextureSubImage3DEXT (glad_gl_context.CopyTextureSubImage3DEXT)
#define glBindMultiTextureEXT (glad_gl_context.BindMultiTextureEXT)
#define glMultiTexCoordPointerEXT (glad_gl_context.MultiTexCoordPointerEXT)
#define glMultiTexEnvfEXT (glad_gl_context.MultiTexEnvfEXT)
#define glMultiTexEnvfvEXT (glad_gl_context.MultiTexEnvfvEXT)
#define glMultiTexEnviEXT (glad_gl_context.MultiTexEnviEXT)
#define glMultiTexEnvivEXT (glad_gl_context.MultiTexEnvivEXT)
#define glMultiTexGendEXT (glad_gl_context.MultiTexGendEXT)
#define glMultiTexGendvEXT (glad_gl_context.MultiTexGendvEXT)
#define glMultiTexGenfEXT (glad_gl_context.MultiTexGenfEXT)
#define glMultiTexGenfvEXT (glad_gl_context.MultiTexGenfvEXT)
#define glMultiTexGeniEXT (glad_gl_context.MultiTexGeniEXT)
#define glMultiTexGenivEXT (glad_gl_context.MultiTexGenivEXT)
#define glGetMultiTexEnvfvEXT (glad_gl_context.GetMultiTexEnvfvEXT)
#define glGetMultiTexEnvivEXT (glad_gl_context.GetMultiTexEnvivEXT)
#define glGetMultiTexGendvEXT (glad_gl_context.GetMultiTexGendvEXT)
#define glGetMultiTexGenfvEXT (glad_gl_context.GetMultiTexGenfvEXT)
#define glGetMultiTexGenivEXT (glad_gl_context.GetMultiTexGenivEXT)
#define glMultiTexParameteriEXT (glad_gl_context.MultiTexParameteriEXT)
#define glMultiTexParameterivEXT (glad_gl_context.MultiTexParameterivEXT)
#define glMultiTexParameterfEXT (glad_gl_context.MultiTexParameterfEXT)
#define glMultiTexParameterfvEXT (glad_gl_context.MultiTexParameterfvEXT)
#define glMultiTexImage1DEXT (glad_gl_context.MultiTexImage1DEXT)
#define glMultiTexImage2DEXT (glad_gl_context.MultiTexImage2DEXT)
#define glMultiTexSubImage1DEXT (glad_gl_context.MultiTexSubImage1DEXT)
#define glMultiTexSubImage2DEXT (glad_gl_context.MultiTexSubImage2DEXT)
#define glCopyMultiTexImage1DEXT (glad_gl_context.CopyMultiTexImage1DEXT)
#define glCopyMultiTexImage2DEXT (glad_gl_context.CopyMultiTexImage2DEXT)
#define glCopyMultiTexSubImage1DEXT (glad_gl_context.CopyMultiTexSubImage1DEXT)
#define glCopyMultiTexSubImage2DEXT (glad_gl_context.CopyMultiTexSubImage2DEXT)
#define glGetMultiTexImageEXT (glad_gl_context.GetMultiTexImageEXT)
#define glGetMultiTexParameterfvEXT (glad_gl_context.GetMultiTexParameterfvEXT)
#define glGetMultiTexParameterivEXT (glad_gl_context.GetMultiTexParameterivEXT)
#define glGetMultiTexLevelParameterfvEXT (glad_gl_context.GetMultiTexLevelParameterfvEXT)
#define glGetMultiTexLevelParameterivEXT (glad_gl_context.GetMultiTexLevelParameterivEXT)
#define glMultiTexImage3DEXT (glad_gl_context.MultiTexImage3DEXT)
#define glMultiTexSubImage3DEXT (glad_gl_context.MultiTexSubImage3DEXT)
#define glCopyMultiTexSubImage3DEXT (glad_gl_context.CopyMultiTexSubImage3DEXT)
#define glEnableClientStateIndexedEXT (glad_gl_context.EnableClientStateIndexedEXT)
#define glDisableClientStateIndexedEXT (glad_gl_context.DisableClientStateIndexedEXT)
#define glGetFloatIndexedvEXT (glad_gl_context.GetFloatIndexedvEXT)
#define glGetDoubleIndexedvEXT (glad_gl_context.GetDoubleIndexedvEXT)
#define glGetPointerIndexedvEXT (glad_gl_context.GetPointerIndexedvEXT)
#define glEnableIndexedEXT (glad_gl_context.EnableIndexedEXT)
#define glDisableIndexedEXT (glad_gl_context.DisableIndexedEXT)
#define glIsEnabledIndexedEXT (glad_gl_context.IsEnabledIndexedEXT)
#define glGetIntegerIndexedvEXT (glad_gl_context.GetIntegerIndexedvEXT)
#define glGetBooleanIndexedvEXT (glad_gl_context.GetBooleanIndexedvEXT)
#define glCompressedTextureImage3DEXT (glad_gl_context.CompressedTextureImage3DEXT)
#define glCompressedTextureImage2DEXT (glad_gl_context.CompressedTextureImage2DEXT)
#define glCompressedTextureImage1DEXT (glad_gl_context.CompressedTextureImage1DEXT)
#define glCompressedTextureSubImage3DEXT (glad_gl_context.CompressedTextureSubImage3DEXT)
#define glCompressedTextureSubImage2DEXT (glad_gl_context.CompressedTextureSubImage2DEXT)
#define glCompressedTextureSubImage1DEXT (glad_gl_context.CompressedTextureSubImage1DEXT)
#define glGetCompressedTextureImageEXT (glad_gl_context.GetCompressedTextureImageEXT)
#define glCompressedMultiTexImage3DEXT (glad_gl_context.CompressedMultiTexImage3DEXT)
#define glCompressedMultiTexImage2DEXT (glad_gl_context.CompressedMultiTexImage2DEXT)
#define glCompressedMultiTexImage1DEXT (glad_gl_context.CompressedMultiTexImage1DEXT)
#define glCompressedMultiTexSubImage3DEXT (glad_gl_context.CompressedMultiTexSubImage3DEXT)
#define glCompressedMultiTexSubImage2DEXT (glad_gl_context.CompressedMultiTexSubImage2DEXT)
#define glCompressedMultiTexSubImage1DEXT (glad_gl_context.CompressedMultiTexSubImage1DEXT)
#define glGetCompressedMultiTexImageEXT (glad_gl_context.GetCompressedMultiTexImageEXT)
#define glMatrixLoadTransposefEXT (glad_gl_context.MatrixLoadTransposefEXT)
#define glMatrixLoadTransposedEXT (glad_gl_context.MatrixLoadTransposedEXT)
#define glMatrixMultTransposefEXT (glad_gl_context.MatrixMultTransposefEXT)
#define glMatrixMultTransposedEXT (glad_gl_context.MatrixMultTransposedEXT)
#define glNamedBufferDataEXT (glad_gl_context.NamedBufferDataEXT)
#define glNamedBufferSubDataEXT (glad_gl_context.NamedBufferSubDataEXT)
#define glMapNamedBufferEXT (glad_gl_context.MapNamedBufferEXT)
#define glUnmapNamedBufferEXT (glad_gl_context.UnmapNamedBufferEXT)
#define glGetNamedBufferParameterivEXT (glad_gl_context.GetNamedBufferParameterivEXT)
#define glGetNamedBufferPointervEXT (glad_gl_context.GetNamedBufferPointervEXT)
#define glGetNamedBufferSubDataEXT (glad_gl_context.GetNamedBufferSubDataEXT)
#define glProgramUniform1fEXT (glad_gl_context.ProgramUniform1fEXT)
#define glProgramUniform2fEXT (glad_gl_context.ProgramUniform2fEXT)
#define glProgramUniform3fEXT (glad_gl_context.ProgramUniform3fEXT)
#define glProgramUniform4fEXT (glad_gl_context.ProgramUniform4fEXT)
#define glProgramUniform1iEXT (glad_gl_context.ProgramUniform1iEXT)
#define glProgramUniform2iEXT (glad_gl_context.ProgramUniform2iEXT)
#define glProgramUniform3iEXT (glad_gl_context.ProgramUniform3iEXT)
#define glProgramUniform4iEXT (glad_gl_context.ProgramUniform4iEXT)
#define glProgramUniform1fvEXT (glad_gl_context.ProgramUniform1fvEXT)
#define glProgramUniform2fvEXT (glad_gl_context.ProgramUniform2fvEXT)
#define glProgramUniform3fvEXT (glad_gl_context.ProgramUniform3fvEXT)
#define glProgramUniform4fvEXT (glad_gl_context.ProgramUniform4fvEXT)
#define glProgramUniform1ivEXT (glad_gl_context.ProgramUniform1ivEXT)
#define glProgramUniform2ivEXT (glad_gl_context.ProgramUniform2ivEXT)
#define glProgramUniform3ivEXT (glad_gl_context.ProgramUniform3ivEXT)
#define glProgramUniform4ivEXT (glad_gl_context.ProgramUniform4ivEXT)
#define glProgramUniformMatrix2fvEXT (glad_gl_context.ProgramUniformMatrix2fvEXT)
#define glProgramUniformMatrix3fvEXT (glad_gl_context.ProgramUniformMatrix3fvEXT)
#define glProgramUniformMatrix4fvEXT (glad_gl_context.ProgramUniformMatrix4fvEXT)
#define glProgramUniformMatrix2x3fvEXT (glad_gl_context.ProgramUniformMatrix2x3fvEXT)
#define glProgramUniformMatrix3x2fvEXT (glad_gl_context.ProgramUniformMatrix3x2fvEXT)
#define glProgramUniformMatrix2x4fvEXT (glad_gl_context.ProgramUniformMatrix2x4fvEXT)
#define glProgramUniformMatrix4x2fvEXT (glad_gl_context.ProgramUniformMatrix4x2fvEXT)
#define glProgramUniformMatrix3x4fvEXT (glad_gl_context.ProgramUniformMatrix3x4fvEXT)
#define glProgramUniformMatrix4x3fvEXT (glad_gl_context.ProgramUniformMatrix4x3fvEXT)
#define glTextureBufferEXT (glad_gl_context.TextureBufferEXT)
#define glMultiTexBufferEXT (glad_gl_context.MultiTexBufferEXT)
#define glTextureParameterIivEXT (glad_gl_context.TextureParameterIivEXT)
#define glTextureParameterIuivEXT (glad_gl_context.TextureParameterIuivEXT)
#define glGetTextureParameterIivEXT (glad_gl_context.GetTextureParameterIivEXT)
#define glGetTextureParameterIuivEXT (glad_gl_context.GetTextureParameterIuivEXT)
#define glMultiTexParameterIivEXT (glad_gl_context.MultiTexParameterIivEXT)
#define glMultiTexParameterIuivEXT (glad_gl_context.MultiTexParameterIuivEXT)
#define glGetMultiTexParameterIivEXT (glad_gl_context.GetMultiTexParameterIivEXT)
#define glGetMultiTexParameterIuivEXT (glad_gl_context.GetMultiTexParameterIuivEXT)
#define glProgramUniform1uiEXT (glad_gl_context.ProgramUniform1uiEXT)
#define glProgramUniform2uiEXT (glad_gl_context.ProgramUniform2uiEXT)
#define glProgramUniform3uiEXT (glad_gl_context.ProgramUniform3uiEXT)
#define glProgramUniform4uiEXT (glad_gl_context.ProgramUniform4uiEXT)
#define glProgramUniform1uivEXT (glad_gl_context.ProgramUniform1uivEXT)
#define glProgramUniform2uivEXT (glad_gl_context.ProgramUniform2uivEXT)
#define glProgramUniform3uivEXT (glad_gl_context.ProgramUniform3uivEXT)
#define glProgramUniform4uivEXT (glad_gl_context.ProgramUniform4uivEXT)
#define glNamedProgramLocalParameters4fvEXT (glad_gl_context.NamedProgramLocalParameters4fvEXT)
#define glNamedProgramLocalParameterI4iEXT (glad_gl_context.NamedProgramLocalParameterI4iEXT)
#define glNamedProgramLocalParameterI4ivEXT (glad_gl_context.NamedProgramLocalParameterI4ivEXT)
#define glNamedProgramLocalParametersI4ivEXT (glad_gl_context.NamedProgramLocalParametersI4ivEXT)
#define glNamedProgramLocalParameterI4uiEXT (glad_gl_context.NamedProgramLocalParameterI4uiEXT)
#define glNamedProgramLocalParameterI4uivEXT (glad_gl_context.NamedProgramLocalParameterI4uivEXT)
#define glNamedProgramLocalParametersI4uivEXT (glad_gl_context.NamedProgramLocalParametersI4uivEXT)
#define glGetNamedProgramLocalParameterIivEXT (glad_gl_context.GetNamedProgramLocalParameterIivEXT)
#define glGetNamedProgramLocalParameterIuivEXT (glad_gl_context.GetNamedProgramLocalParameterIuivEXT)
#define glEnableClientStateiEXT (glad_gl_context.EnableClientStateiEXT)
#define glDisableClientStateiEXT (glad_gl_context.DisableClientStateiEXT)
#define glGetFloati_vEXT (glad_gl_context.GetFloati_vEXT)
#define glGetDoublei_vEXT (glad_gl_context.GetDoublei_vEXT)
#define glGetPointeri_vEXT (glad_gl_context.GetPointeri_vEXT)
#define glNamedProgramStringEXT (glad_gl_context.NamedProgramStringEXT)
#define glNamedProgramLocalParameter4dEXT (glad_gl_context.NamedProgramLocalParameter4dEXT)
#define glNamedProgramLocalParameter4dvEXT (glad_gl_context.NamedProgramLocalParameter4dvEXT)
#define glNamedProgramLocalParameter4fEXT (glad_gl_context.NamedProgramLocalParameter4fEXT)
#define glNamedProgramLocalParameter4fvEXT (glad_gl_context.NamedProgramLocalParameter4fvEXT)
#define glGetNamedProgramLocalParameterdvEXT (glad_gl_context.GetNamedProgramLocalParameterdvEXT)
#define glGetNamedProgramLocalParameterfvEXT (glad_gl_context.GetNamedProgramLocalParameterfvEXT)
#define glGetNamedProgramivEXT (glad_gl_context.GetNamedProgramivEXT)
#define glGetNamedProgramStringEXT (glad_gl_context.GetNamedProgramStringEXT)
#define glNamedRenderbufferStorageEXT (glad_gl_context.NamedRenderbufferStorageEXT)
#define glGetNamedRenderbufferParameterivEXT (glad_gl_context.GetNamedRenderbufferParameterivEXT)
#define glNamedRenderbufferStorageMultisampleEXT (glad_gl_context.NamedRenderbufferStorageMultisampleEXT)
#define glNamedRenderbufferStorageMultisampleCoverageEXT (glad_gl_context.NamedRenderbufferStorageMultisampleCoverageEXT)
#define glCheckNamedFramebufferStatusEXT (glad_gl_context.CheckNamedFramebufferStatusEXT)
#define glNamedFramebufferTexture1DEXT (glad_gl_context.NamedFramebufferTexture1DEXT)
#define glNamedFramebufferTexture2DEXT (glad_gl_context.NamedFramebufferTexture2DEXT)
#define glNamedFramebufferTexture3DEXT (glad_gl_context.NamedFramebufferTexture3DEXT)
#define glNamedFramebufferRenderbufferEXT (glad_gl_context.NamedFramebufferRenderbufferEXT)
#define glGetNamedFramebufferAttachmentParameterivEXT (glad_gl_context.GetNamedFramebufferAttachmentParameterivEXT)
#define glGenerateTextureMipmapEXT (glad_gl_context.GenerateTextureMipmapEXT)
#define glGenerateMultiTexMipmapEXT (glad_gl_context.GenerateMultiTexMipmapEXT)
#define glFramebufferDrawBufferEXT (glad_gl_context.FramebufferDrawBufferEXT)
#define glFramebufferDrawBuffersEXT (glad_gl_context.FramebufferDrawBuffersEXT)
#define glFramebufferReadBufferEXT (glad_gl_context.FramebufferReadBufferEXT)
#define glGetFramebufferParameterivEXT (glad_gl_context.GetFramebufferParameterivEXT)
#define glNamedCopyBufferSubDataEXT (glad_gl_context.NamedCopyBufferSubDataEXT)
#define glNamedFramebufferTextureEXT (glad_gl_context.NamedFramebufferTextureEXT)
#define glNamedFramebufferTextureLayerEXT (glad_gl_context.NamedFramebufferTextureLayerEXT)
#define glNamedFramebufferTextureFaceEXT (glad_gl_context.NamedFramebufferTextureFaceEXT)
#define glTextureRenderbufferEXT (glad_gl_context.TextureRenderbufferEXT)
#define glMultiTexRenderbufferEXT (glad_gl_context.MultiTexRenderbufferEXT)
#define glVertexArrayVertexOffsetEXT (glad_gl_context.VertexArrayVertexOffsetEXT)
#define glVertexArrayColorOffsetEXT (glad_gl_context.VertexArrayColorOffsetEXT)
#define glVertexArrayEdgeFlagOffsetEXT (glad_gl_context.VertexArrayEdgeFlagOffsetEXT)
#define glVertexArrayIndexOffsetEXT (glad_gl_context.VertexArrayIndexOffsetEXT)
#define glVertexArrayNormalOffsetEXT (glad_gl_context.VertexArrayNormalOffsetEXT)
#define glVertexArrayTexCoordOffsetEXT (glad_gl_context.VertexArrayTexCoordOffsetEXT)
#define glVertexArrayMultiTexCoordOffsetEXT (glad_gl_context.VertexArrayMultiTexCoordOffsetEXT)
#define glVertexArrayFogCoordOffsetEXT (glad_gl_context.VertexArrayFogCoordOffsetEXT)
#define glVertexArraySecondaryColorOffsetEXT (glad_gl_context.VertexArraySecondaryColorOffsetEXT)
#define glVertexArrayVertexAttribOffsetEXT (glad_gl_context.VertexArrayVertexAttribOffsetEXT)
#define glVertexArrayVertexAttribIOffsetEXT (glad_gl_context.VertexArrayVertexAttribIOffsetEXT)
#define glEnableVertexArrayEXT (glad_gl_context.EnableVertexArrayEXT)
#define glDisableVertexArrayEXT (glad_gl_context.DisableVertexArrayEXT)
#define glEnableVertexArrayAttribEXT (glad_gl_context.EnableVertexArrayAttribEXT)
#define glDisableVertexArrayAttribEXT (glad_gl_context.DisableVertexArrayAttribEXT)
#define glGetVertexArrayIntegervEXT (glad_gl_context.GetVertexArrayIntegervEXT)
#define glGetVertexArrayPointervEXT (glad_gl_context.GetVertexArrayPointervEXT)
#define glGetVertexArrayIntegeri_vEXT (glad_gl_context.GetVertexArrayIntegeri_vEXT)
#define glGetVertexArrayPointeri_vEXT (glad_gl_context.GetVertexArrayPointeri_vEXT)
#define glMapNamedBufferRangeEXT (glad_gl_context.MapNamedBufferRangeEXT)
#define glFlushMappedNamedBufferRangeEXT (glad_gl_context.FlushMappedNamedBufferRangeEXT)
#define glNamedBufferStorageEXT (glad_gl_context.NamedBufferStorageEXT)
#define glClearNamedBufferDataEXT (glad_gl_context.ClearNamedBufferDataEXT)
#define glClearNamedBufferSubDataEXT (glad_gl_context.ClearNamedBufferSubDataEXT)
#define glNamedFramebufferParameteriEXT (glad_gl_context.NamedFramebufferParameteriEXT)
#define glGetNamedFramebufferParameterivEXT (glad_gl_context.GetNamedFramebufferParameterivEXT)
#define glProgramUniform1dEXT (glad_gl_context.ProgramUniform1dEXT)
#define glProgramUniform2dEXT (glad_gl_context.ProgramUniform2dEXT)
#define glProgramUniform3dEXT (glad_gl_context.ProgramUniform3dEXT)
#define glProgramUniform4dEXT (glad_gl_context.ProgramUniform4dEXT)
#define glProgramUniform1dvEXT (glad_gl_context.ProgramUniform1dvEXT)
#define glProgramUniform2dvEXT (glad_gl_context.ProgramUniform2dvEXT)
#define glProgramUniform3dvEXT (glad_gl_context.ProgramUniform3dvEXT)
#define glProgramUniform4dvEXT (glad_gl_context.ProgramUniform4dvEXT)
#define glProgramUniformMatrix2dvEXT (glad_gl_context.ProgramUniformMatrix2dvEXT)
#define glProgramUniformMatrix3dvEXT (glad_gl_context.ProgramUniformMatrix3dvEXT)
#define glProgramUniformMatrix4dvEXT (glad_gl_context.ProgramUniformMatrix4dvEXT)
#define glProgramUniformMatrix2x3dvEXT (glad_gl_context.ProgramUniformMatrix2x3dvEXT)
#define glProgramUniformMatrix2x4dvEXT (glad_gl_context.ProgramUniformMatrix2x4dvEXT)
#define glProgramUniformMatrix3x2dvEXT (glad_gl_context.ProgramUniformMatrix3x2dvEXT)
#define glProgramUniformMatrix3x4dvEXT (glad_gl_context.ProgramUniformMatrix3x4dvEXT)
#define glProgramUniformMatrix4x2dvEXT (glad_gl_context.ProgramUniformMatrix4x2dvEXT)
#define glProgramUniformMatrix4x3dvEXT (glad_gl_context.ProgramUniformMatrix4x3dvEXT)
#define glTextureBufferRangeEXT (glad_gl_context.TextureBufferRangeEXT)
#define glTextureStorage1DEXT (glad_gl_context.TextureStorage1DEXT)
#define glTextureStorage2DEXT (glad_gl_context.TextureStorage2DEXT)
#define glTextureStorage3DEXT (glad_gl_context.TextureStorage3DEXT)
#define glTextureStorage2DMultisampleEXT (glad_gl_context.TextureStorage2DMultisampleEXT)
#define glTextureStorage3DMultisampleEXT (glad_gl_context.TextureStorage3DMultisampleEXT)
#define glVertexArrayBindVertexBufferEXT (glad_gl_context.VertexArrayBindVertexBufferEXT)
#define glVertexArrayVertexAttribFormatEXT (glad_gl_context.VertexArrayVertexAttribFormatEXT)
#define glVertexArrayVertexAttribIFormatEXT (glad_gl_context.VertexArrayVertexAttribIFormatEXT)
#define glVertexArrayVertexAttribLFormatEXT (glad_gl_context.VertexArrayVertexAttribLFormatEXT)
#define glVertexArrayVertexAttribBindingEXT (glad_gl_context.VertexArrayVertexAttribBindingEXT)
#define glVertexArrayVertexBindingDivisorEXT (glad_gl_context.VertexArrayVertexBindingDivisorEXT)
#define glVertexArrayVertexAttribLOffsetEXT (glad_gl_context.VertexArrayVertexAttribLOffsetEXT)
#define glTexturePageCommitmentEXT (glad_gl_context.TexturePageCommitmentEXT)
#define glVertexArrayVertexAttribDivisorEXT (glad_gl_context.VertexArrayVertexAttribDivisorEXT)
#define glGetQueryObjecti64vEXT (glad_gl_context.GetQueryObjecti64vEXT)
#define glGetQueryObjectui64vEXT (glad_gl_context.GetQueryObjectui64vEXT)
#define glColorMaskIndexedEXT (glad_gl_context.ColorMaskIndexedEXT)
#define glDrawArraysInstancedEXT (glad_gl_context.DrawArraysInstancedEXT)
#define glDrawElementsInstancedEXT (glad_gl_context.DrawElementsInstancedEXT)
#define glDrawRangeElementsEXT (glad_gl_context.DrawRangeElementsEXT)
#define glBufferStorageExternalEXT (glad_gl_context.BufferStorageExternalEXT)
#define glNamedBufferStorageExternalEXT (glad_gl_context.NamedBufferStorageExternalEXT)
#define glFogCoordfEXT (glad_gl_context.FogCoordfEXT)
#define glFogCoordfvEXT (glad_gl_context.FogCoordfvEXT)
#define glFogCoorddEXT (glad_gl_context.FogCoorddEXT)
#define glFogCoorddvEXT (glad_gl_context.FogCoorddvEXT)
#define glFogCoordPointerEXT (glad_gl_context.FogCoordPointerEXT)
#define glBlitFramebufferEXT (glad_gl_context.BlitFramebufferEXT)
#define glBlitFramebufferLayersEXT (glad_gl_context.BlitFramebufferLayersEXT)
#define glBlitFramebufferLayerEXT (glad_gl_context.BlitFramebufferLayerEXT)
#define glRenderbufferStorageMultisampleEXT (glad_gl_context.RenderbufferStorageMultisampleEXT)
#define glIsRenderbufferEXT (glad_gl_context.IsRenderbufferEXT)
#define glBindRenderbufferEXT (glad_gl_context.BindRenderbufferEXT)
#define glDeleteRenderbuffersEXT (glad_gl_context.DeleteRenderbuffersEXT)
#define glGenRenderbuffersEXT (glad_gl_context.GenRenderbuffersEXT)
#define glRenderbufferStorageEXT (glad_gl_context.RenderbufferStorageEXT)
#define glGetRenderbufferParameterivEXT (glad_gl_context.GetRenderbufferParameterivEXT)
#define glIsFramebufferEXT (glad_gl_context.IsFramebufferEXT)
#define glBindFramebufferEXT (glad_gl_context.BindFramebufferEXT)
#define glDeleteFramebuffersEXT (glad_gl_context.DeleteFramebuffersEXT)
#define glGenFramebuffersEXT (glad_gl_context.GenFramebuffersEXT)
#define glCheckFramebufferStatusEXT (glad_gl_context.CheckFramebufferStatusEXT)
#define glFramebufferTexture1DEXT (glad_gl_context.FramebufferTexture1DEXT)
#define glFramebufferTexture2DEXT (glad_gl_context.FramebufferTexture2DEXT)
#define glFramebufferTexture3DEXT (glad_gl_context.FramebufferTexture3DEXT)
#define glFramebufferRenderbufferEXT (glad_gl_context.FramebufferRenderbufferEXT)
#define glGetFramebufferAttachmentParameterivEXT (glad_gl_context.GetFramebufferAttachmentParameterivEXT)
#define glGenerateMipmapEXT (glad_gl_context.GenerateMipmapEXT)
#define glFramebufferTextureEXT (glad_gl_context.FramebufferTextureEXT)
#define glProgramParameteriEXT (glad_gl_context.ProgramParameteriEXT)
#define glProgramEnvParameters4fvEXT (glad_gl_context.ProgramEnvParameters4fvEXT)
#define glProgramLocalParameters4fvEXT (glad_gl_context.ProgramLocalParameters4fvEXT)
#define glGetUniformuivEXT (glad_gl_context.GetUniformuivEXT)
#define glGetFragDataLocationEXT (glad_gl_context.GetFragDataLocationEXT)
#define glUniform1uiEXT (glad_gl_context.Uniform1uiEXT)
#define glUniform2uiEXT (glad_gl_context.Uniform2uiEXT)
#define glUniform3uiEXT (glad_gl_context.Uniform3uiEXT)
#define glUniform4uiEXT (glad_gl_context.Uniform4uiEXT)
#define glUniform1uivEXT (glad_gl_context.Uniform1uivEXT)
#define glUniform2uivEXT (glad_gl_context.Uniform2uivEXT)
#define glUniform3uivEXT (glad_gl_context.Uniform3uivEXT)
#define glUniform4uivEXT (glad_gl_context.Uniform4uivEXT)
#define glVertexAttribI1iEXT (glad_gl_context.VertexAttribI1iEXT)
#define glVertexAttribI2iEXT (glad_gl_context.VertexAttribI2iEXT)
#define glVertexAttribI3iEXT (glad_gl_context.VertexAttribI3iEXT)
#define glVertexAttribI4iEXT (glad_gl_context.VertexAttribI4iEXT)
#define glVertexAttribI1uiEXT (glad_gl_context.VertexAttribI1uiEXT)
#define glVertexAttribI2uiEXT (glad_gl_context.VertexAttribI2uiEXT)
#define glVertexAttribI3uiEXT (glad_gl_context.VertexAttribI3uiEXT)
#define glVertexAttribI4uiEXT (glad_gl_context.VertexAttribI4uiEXT)
#define glVertexAttribI1ivEXT (glad_gl_context.VertexAttribI1ivEXT)
#define glVertexAttribI2ivEXT (glad_gl_context.VertexAttribI2ivEXT)
#define glVertexAttribI3ivEXT (glad_gl_context.VertexAttribI3ivEXT)
#define glVertexAttribI4ivEXT (glad_gl_context.VertexAttribI4ivEXT)
#define glVertexAttribI1uivEXT (glad_gl_context.VertexAttribI1uivEXT)
#define glVertexAttribI2uivEXT (glad_gl_context.VertexAttribI2uivEXT)
#define glVertexAttribI3uivEXT (glad_gl_context.VertexAttribI3uivEXT)
#define glVertexAttribI4uivEXT (glad_gl_context.VertexAttribI4uivEXT)
#define glVertexAttribI4bvEXT (glad_gl_context.VertexAttribI4bvEXT)
#define glVertexAttribI4svEXT (glad_gl_context.VertexAttribI4svEXT)
#define glVertexAttribI4ubvEXT (glad_gl_context.VertexAttribI4ubvEXT)
#define glVertexAttribI4usvEXT (glad_gl_context.VertexAttribI4usvEXT)
#define glVertexAttribIPointerEXT (glad_gl_context.VertexAttribIPointerEXT)
#define glGetVertexAttribIivEXT (glad_gl_context.GetVertexAttribIivEXT)
#define glGetVertexAttribIuivEXT (glad_gl_context.GetVertexAttribIuivEXT)
#define glGetHistogramEXT (glad_gl_context.GetHistogramEXT)
#define glGetHistogramParameterfvEXT (glad_gl_context.GetHistogramParameterfvEXT)
#define glGetHistogramParameterivEXT (glad_gl_context.GetHistogramParameterivEXT)
#define glGetMinmaxEXT (glad_gl_context.GetMinmaxEXT)
#define glGetMinmaxParameterfvEXT (glad_gl_context.GetMinmaxParameterfvEXT)
#define glGetMinmaxParameterivEXT (glad_gl_context.GetMinmaxParameterivEXT)
#define glHistogramEXT (glad_gl_context.HistogramEXT)
#define glMinmaxEXT (glad_gl_context.MinmaxEXT)
#define glResetHistogramEXT (glad_gl_context.ResetHistogramEXT)
#define glResetMinmaxEXT (glad_gl_context.ResetMinmaxEXT)
#define glIndexFuncEXT (glad_gl_context.IndexFuncEXT)
#define glIndexMaterialEXT (glad_gl_context.IndexMaterialEXT)
#define glApplyTextureEXT (glad_gl_context.ApplyTextureEXT)
#define glTextureLightEXT (glad_gl_context.TextureLightEXT)
#define glTextureMaterialEXT (glad_gl_context.TextureMaterialEXT)
#define glGetUnsignedBytevEXT (glad_gl_context.GetUnsignedBytevEXT)
#define glGetUnsignedBytei_vEXT (glad_gl_context.GetUnsignedBytei_vEXT)
#define glDeleteMemoryObjectsEXT (glad_gl_context.DeleteMemoryObjectsEXT)
#define glIsMemoryObjectEXT (glad_gl_context.IsMemoryObjectEXT)
#define glCreateMemoryObjectsEXT (glad_gl_context.CreateMemoryObjectsEXT)
#define glMemoryObjectParameterivEXT (glad_gl_context.MemoryObjectParameterivEXT)
#define glGetMemoryObjectParameterivEXT (glad_gl_context.GetMemoryObjectParameterivEXT)
#define glTexStorageMem2DEXT (glad_gl_context.TexStorageMem2DEXT)
#define glTexStorageMem2DMultisampleEXT (glad_gl_context.TexStorageMem2DMultisampleEXT)
#define glTexStorageMem3DEXT (glad_gl_context.TexStorageMem3DEXT)
#define glTexStorageMem3DMultisampleEXT (glad_gl_context.TexStorageMem3DMultisampleEXT)
#define glBufferStorageMemEXT (glad_gl_context.BufferStorageMemEXT)
#define glTextureStorageMem2DEXT (glad_gl_context.TextureStorageMem2DEXT)
#define glTextureStorageMem2DMultisampleEXT (glad_gl_context.TextureStorageMem2DMultisampleEXT)
#define glTextureStorageMem3DEXT (glad_gl_context.TextureStorageMem3DEXT)
#define glTextureStorageMem3DMultisampleEXT (glad_gl_context.TextureStorageMem3DMultisampleEXT)
#define glNamedBufferStorageMemEXT (glad_gl_context.NamedBufferStorageMemEXT)
#define glTexStorageMem1DEXT (glad_gl_context.TexStorageMem1DEXT)
#define glTextureStorageMem1DEXT (glad_gl_context.TextureStorageMem1DEXT)
#define glImportMemoryFdEXT (glad_gl_context.ImportMemoryFdEXT)
#define glImportMemoryWin32HandleEXT (glad_gl_context.ImportMemoryWin32HandleEXT)
#define glImportMemoryWin32NameEXT (glad_gl_context.ImportMemoryWin32NameEXT)
#define glMultiDrawArraysEXT (glad_gl_context.MultiDrawArraysEXT)
#define glMultiDrawElementsEXT (glad_gl_context.MultiDrawElementsEXT)
#define glSampleMaskEXT (glad_gl_context.SampleMaskEXT)
#define glSamplePatternEXT (glad_gl_context.SamplePatternEXT)
#define glColorTableEXT (glad_gl_context.ColorTableEXT)
#define glGetColorTableEXT (glad_gl_context.GetColorTableEXT)
#define glGetColorTableParameterivEXT (glad_gl_context.GetColorTableParameterivEXT)
#define glGetColorTableParameterfvEXT (glad_gl_context.GetColorTableParameterfvEXT)
#define glPixelTransformParameteriEXT (glad_gl_context.PixelTransformParameteriEXT)
#define glPixelTransformParameterfEXT (glad_gl_context.PixelTransformParameterfEXT)
#define glPixelTransformParameterivEXT (glad_gl_context.PixelTransformParameterivEXT)
#define glPixelTransformParameterfvEXT (glad_gl_context.PixelTransformParameterfvEXT)
#define glGetPixelTransformParameterivEXT (glad_gl_context.GetPixelTransformParameterivEXT)
#define glGetPixelTransformParameterfvEXT (glad_gl_context.GetPixelTransformParameterfvEXT)
#define glPointParameterfEXT (glad_gl_context.PointParameterfEXT)
#define glPointParameterfvEXT (glad_gl_context.PointParameterfvEXT)
#define glPolygonOffsetEXT (glad_gl_context.PolygonOffsetEXT)
#define glPolygonOffsetClampEXT (glad_gl_context.PolygonOffsetClampEXT)
#define glProvokingVertexEXT (glad_gl_context.ProvokingVertexEXT)
#define glRasterSamplesEXT (glad_gl_context.RasterSamplesEXT)
#define glGenSemaphoresEXT (glad_gl_context.GenSemaphoresEXT)
#define glDeleteSemaphoresEXT (glad_gl_context.DeleteSemaphoresEXT)
#define glIsSemaphoreEXT (glad_gl_context.IsSemaphoreEXT)
#define glSemaphoreParameterui64vEXT (glad_gl_context.SemaphoreParameterui64vEXT)
#define glGetSemaphoreParameterui64vEXT (glad_gl_context.GetSemaphoreParameterui64vEXT)
#define glWaitSemaphoreEXT (glad_gl_context.WaitSemaphoreEXT)
#define glSignalSemaphoreEXT (glad_gl_context.SignalSemaphoreEXT)
#define glImportSemaphoreFdEXT (glad_gl_context.ImportSemaphoreFdEXT)
#define glImportSemaphoreWin32HandleEXT (glad_gl_context.ImportSemaphoreWin32HandleEXT)
#define glImportSemaphoreWin32NameEXT (glad_gl_context.ImportSemaphoreWin32NameEXT)
#define glSecondaryColor3bEXT (glad_gl_context.SecondaryColor3bEXT)
#define glSecondaryColor3bvEXT (glad_gl_context.SecondaryColor3bvEXT)
#define glSecondaryColor3dEXT (glad_gl_context.SecondaryColor3dEXT)
#define glSecondaryColor3dvEXT (glad_gl_context.SecondaryColor3dvEXT)
#define glSecondaryColor3fEXT (glad_gl_context.SecondaryColor3fEXT)
#define glSecondaryColor3fvEXT (glad_gl_context.SecondaryColor3fvEXT)
#define glSecondaryColor3iEXT (glad_gl_context.SecondaryColor3iEXT)
#define glSecondaryColor3ivEXT (glad_gl_context.SecondaryColor3ivEXT)
#define glSecondaryColor3sEXT (glad_gl_context.SecondaryColor3sEXT)
#define glSecondaryColor3svEXT (glad_gl_context.SecondaryColor3svEXT)
#define glSecondaryColor3ubEXT (glad_gl_context.SecondaryColor3ubEXT)
#define glSecondaryColor3ubvEXT (glad_gl_context.SecondaryColor3ubvEXT)
#define glSecondaryColor3uiEXT (glad_gl_context.SecondaryColor3uiEXT)
#define glSecondaryColor3uivEXT (glad_gl_context.SecondaryColor3uivEXT)
#define glSecondaryColor3usEXT (glad_gl_context.SecondaryColor3usEXT)
#define glSecondaryColor3usvEXT (glad_gl_context.SecondaryColor3usvEXT)
#define glSecondaryColorPointerEXT (glad_gl_context.SecondaryColorPointerEXT)
#define glUseShaderProgramEXT (glad_gl_context.UseShaderProgramEXT)
#define glActiveProgramEXT (glad_gl_context.ActiveProgramEXT)
#define glCreateShaderProgramEXT (glad_gl_context.CreateShaderProgramEXT)
#define glFramebufferFetchBarrierEXT (glad_gl_context.FramebufferFetchBarrierEXT)
#define glBindImageTextureEXT (glad_gl_context.BindImageTextureEXT)
#define glMemoryBarrierEXT (glad_gl_context.MemoryBarrierEXT)
#define glStencilClearTagEXT (glad_gl_context.StencilClearTagEXT)
#define glActiveStencilFaceEXT (glad_gl_context.ActiveStencilFaceEXT)
#define glTexSubImage1DEXT (glad_gl_context.TexSubImage1DEXT)
#define glTexSubImage2DEXT (glad_gl_context.TexSubImage2DEXT)
#define glTexImage3DEXT (glad_gl_context.TexImage3DEXT)
#define glTexSubImage3DEXT (glad_gl_context.TexSubImage3DEXT)
#define glFramebufferTextureLayerEXT (glad_gl_context.FramebufferTextureLayerEXT)
#define glTexParameterIivEXT (glad_gl_context.TexParameterIivEXT)
#define glTexParameterIuivEXT (glad_gl_context.TexParameterIuivEXT)
#define glGetTexParameterIivEXT (glad_gl_context.GetTexParameterIivEXT)
#define glGetTexParameterIuivEXT (glad_gl_context.GetTexParameterIuivEXT)
#define glTexBufferEXT (glad_gl_context.TexBufferEXT)
#define glClearColorIiEXT (glad_gl_context.ClearColorIiEXT)
#define glClearColorIuiEXT (glad_gl_context.ClearColorIuiEXT)
#define glAreTexturesResidentEXT (glad_gl_context.AreTexturesResidentEXT)
#define glBindTextureEXT (glad_gl_context.BindTextureEXT)
#define glDeleteTexturesEXT (glad_gl_context.DeleteTexturesEXT)
#define glGenTexturesEXT (glad_gl_context.GenTexturesEXT)
#define glIsTextureEXT (glad_gl_context.IsTextureEXT)
#define glPrioritizeTexturesEXT (glad_gl_context.PrioritizeTexturesEXT)
#define glTextureNormalEXT (glad_gl_context.TextureNormalEXT)
#define glTexStorage1DEXT (glad_gl_context.TexStorage1DEXT)
#define glTexStorage2DEXT (glad_gl_context.TexStorage2DEXT)
#define glTexStorage3DEXT (glad_gl_context.TexStorage3DEXT)
#define glCreateSemaphoresNV (glad_gl_context.CreateSemaphoresNV)
#define glSemaphoreParameterivNV (glad_gl_context.SemaphoreParameterivNV)
#define glGetSemaphoreParameterivNV (glad_gl_context.GetSemaphoreParameterivNV)
#define glBeginTransformFeedbackEXT (glad_gl_context.BeginTransformFeedbackEXT)
#define glEndTransformFeedbackEXT (glad_gl_context.EndTransformFeedbackEXT)
#define glBindBufferRangeEXT (glad_gl_context.BindBufferRangeEXT)
#define glBindBufferOffsetEXT (glad_gl_context.BindBufferOffsetEXT)
#define glBindBufferBaseEXT (glad_gl_context.BindBufferBaseEXT)
#define glTransformFeedbackVaryingsEXT (glad_gl_context.TransformFeedbackVaryingsEXT)
#define glGetTransformFeedbackVaryingEXT (glad_gl_context.GetTransformFeedbackVaryingEXT)
#define glArrayElementEXT (glad_gl_context.ArrayElementEXT)
#define glColorPointerEXT (glad_gl_context.ColorPointerEXT)
#define glDrawArraysEXT (glad_gl_context.DrawArraysEXT)
#define glEdgeFlagPointerEXT (glad_gl_context.EdgeFlagPointerEXT)
#define glGetPointervEXT (glad_gl_context.GetPointervEXT)
#define glIndexPointerEXT (glad_gl_context.IndexPointerEXT)
#define glNormalPointerEXT (glad_gl_context.NormalPointerEXT)
#define glTexCoordPointerEXT (glad_gl_context.TexCoordPointerEXT)
#define glVertexPointerEXT (glad_gl_context.VertexPointerEXT)
#define glVertexAttribL1dEXT (glad_gl_context.VertexAttribL1dEXT)
#define glVertexAttribL2dEXT (glad_gl_context.VertexAttribL2dEXT)
#define glVertexAttribL3dEXT (glad_gl_context.VertexAttribL3dEXT)
#define glVertexAttribL4dEXT (glad_gl_context.VertexAttribL4dEXT)
#define glVertexAttribL1dvEXT (glad_gl_context.VertexAttribL1dvEXT)
#define glVertexAttribL2dvEXT (glad_gl_context.VertexAttribL2dvEXT)
#define glVertexAttribL3dvEXT (glad_gl_context.VertexAttribL3dvEXT)
#define glVertexAttribL4dvEXT (glad_gl_context.VertexAttribL4dvEXT)
#define glVertexAttribLPointerEXT (glad_gl_context.VertexAttribLPointerEXT)
#define glGetVertexAttribLdvEXT (glad_gl_context.GetVertexAttribLdvEXT)
#define glBeginVertexShaderEXT (glad_gl_context.BeginVertexShaderEXT)
#define glEndVertexShaderEXT (glad_gl_context.EndVertexShaderEXT)
#define glBindVertexShaderEXT (glad_gl_context.BindVertexShaderEXT)
#define glGenVertexShadersEXT (glad_gl_context.GenVertexShadersEXT)
#define glDeleteVertexShaderEXT (glad_gl_context.DeleteVertexShaderEXT)
#define glShaderOp1EXT (glad_gl_context.ShaderOp1EXT)
#define glShaderOp2EXT (glad_gl_context.ShaderOp2EXT)
#define glShaderOp3EXT (glad_gl_context.ShaderOp3EXT)
#define glSwizzleEXT (glad_gl_context.SwizzleEXT)
#define glWriteMaskEXT (glad_gl_context.WriteMaskEXT)
#define glInsertComponentEXT (glad_gl_context.InsertComponentEXT)
#define glExtractComponentEXT (glad_gl_context.ExtractComponentEXT)
#define glGenSymbolsEXT (glad_gl_context.GenSymbolsEXT)
#define glSetInvariantEXT (glad_gl_context.SetInvariantEXT)
#define glSetLocalConstantEXT (glad_gl_context.SetLocalConstantEXT)
#define glVariantbvEXT (glad_gl_context.VariantbvEXT)
#define glVariantsvEXT (glad_gl_context.VariantsvEXT)
#define glVariantivEXT (glad_gl_context.VariantivEXT)
#define glVariantfvEXT (glad_gl_context.VariantfvEXT)
#define glVariantdvEXT (glad_gl_context.VariantdvEXT)
#define glVariantubvEXT (glad_gl_context.VariantubvEXT)
#define glVariantusvEXT (glad_gl_context.VariantusvEXT)
#define glVariantuivEXT (glad_gl_context.VariantuivEXT)
#define glVariantPointerEXT (glad_gl_context.VariantPointerEXT)
#define glEnableVariantClientStateEXT (glad_gl_context.EnableVariantClientStateEXT)
#define glDisableVariantClientStateEXT (glad_gl_context.DisableVariantClientStateEXT)
#define glBindLightParameterEXT (glad_gl_context.BindLightParameterEXT)
#define glBindMaterialParameterEXT (glad_gl_context.BindMaterialParameterEXT)
#define glBindTexGenParameterEXT (glad_gl_context.BindTexGenParameterEXT)
#define glBindTextureUnitParameterEXT (glad_gl_context.BindTextureUnitParameterEXT)
#define glBindParameterEXT (glad_gl_context.BindParameterEXT)
#define glIsVariantEnabledEXT (glad_gl_context.IsVariantEnabledEXT)
#define glGetVariantBooleanvEXT (glad_gl_context.GetVariantBooleanvEXT)
#define glGetVariantIntegervEXT (glad_gl_context.GetVariantIntegervEXT)
#define glGetVariantFloatvEXT (glad_gl_context.GetVariantFloatvEXT)
#define glGetVariantPointervEXT (glad_gl_context.GetVariantPointervEXT)
#define glGetInvariantBooleanvEXT (glad_gl_context.GetInvariantBooleanvEXT)
#define glGetInvariantIntegervEXT (glad_gl_context.GetInvariantIntegervEXT)
#define glGetInvariantFloatvEXT (glad_gl_context.GetInvariantFloatvEXT)
#define glGetLocalConstantBooleanvEXT (glad_gl_context.GetLocalConstantBooleanvEXT)
#define glGetLocalConstantIntegervEXT (glad_gl_context.GetLocalConstantIntegervEXT)
#define glGetLocalConstantFloatvEXT (glad_gl_context.GetLocalConstantFloatvEXT)
#define glVertexWeightfEXT (glad_gl_context.VertexWeightfEXT)
#define glVertexWeightfvEXT (glad_gl_context.VertexWeightfvEXT)
#define glVertexWeightPointerEXT (glad_gl_context.VertexWeightPointerEXT)
#define glAcquireKeyedMutexWin32EXT (glad_gl_context.AcquireKeyedMutexWin32EXT)
#define glReleaseKeyedMutexWin32EXT (glad_gl_context.ReleaseKeyedMutexWin32EXT)
#define glWindowRectanglesEXT (glad_gl_context.WindowRectanglesEXT)
#define glImportSyncEXT (glad_gl_context.ImportSyncEXT)
#define glFrameTerminatorGREMEDY (glad_gl_context.FrameTerminatorGREMEDY)
#define glStringMarkerGREMEDY (glad_gl_context.StringMarkerGREMEDY)
#define glImageTransformParameteriHP (glad_gl_context.ImageTransformParameteriHP)
#define glImageTransformParameterfHP (glad_gl_context.ImageTransformParameterfHP)
#define glImageTransformParameterivHP (glad_gl_context.ImageTransformParameterivHP)
#define glImageTransformParameterfvHP (glad_gl_context.ImageTransformParameterfvHP)
#define glGetImageTransformParameterivHP (glad_gl_context.GetImageTransformParameterivHP)
#define glGetImageTransformParameterfvHP (glad_gl_context.GetImageTransformParameterfvHP)
#define glMultiModeDrawArraysIBM (glad_gl_context.MultiModeDrawArraysIBM)
#define glMultiModeDrawElementsIBM (glad_gl_context.MultiModeDrawElementsIBM)
#define glFlushStaticDataIBM (glad_gl_context.FlushStaticDataIBM)
#define glColorPointerListIBM (glad_gl_context.ColorPointerListIBM)
#define glSecondaryColorPointerListIBM (glad_gl_context.SecondaryColorPointerListIBM)
#define glEdgeFlagPointerListIBM (glad_gl_context.EdgeFlagPointerListIBM)
#define glFogCoordPointerListIBM (glad_gl_context.FogCoordPointerListIBM)
#define glIndexPointerListIBM (glad_gl_context.IndexPointerListIBM)
#define glNormalPointerListIBM (glad_gl_context.NormalPointerListIBM)
#define glTexCoordPointerListIBM (glad_gl_context.TexCoordPointerListIBM)
#define glVertexPointerListIBM (glad_gl_context.VertexPointerListIBM)
#define glBlendFuncSeparateINGR (glad_gl_context.BlendFuncSeparateINGR)
#define glApplyFramebufferAttachmentCMAAINTEL (glad_gl_context.ApplyFramebufferAttachmentCMAAINTEL)
#define glSyncTextureINTEL (glad_gl_context.SyncTextureINTEL)
#define glUnmapTexture2DINTEL (glad_gl_context.UnmapTexture2DINTEL)
#define glMapTexture2DINTEL (glad_gl_context.MapTexture2DINTEL)
#define glVertexPointervINTEL (glad_gl_context.VertexPointervINTEL)
#define glNormalPointervINTEL (glad_gl_context.NormalPointervINTEL)
#define glColorPointervINTEL (glad_gl_context.ColorPointervINTEL)
#define glTexCoordPointervINTEL (glad_gl_context.TexCoordPointervINTEL)
#define glBeginPerfQueryINTEL (glad_gl_context.BeginPerfQueryINTEL)
#define glCreatePerfQueryINTEL (glad_gl_context.CreatePerfQueryINTEL)
#define glDeletePerfQueryINTEL (glad_gl_context.DeletePerfQueryINTEL)
#define glEndPerfQueryINTEL (glad_gl_context.EndPerfQueryINTEL)
#define glGetFirstPerfQueryIdINTEL (glad_gl_context.GetFirstPerfQueryIdINTEL)
#define glGetNextPerfQueryIdINTEL (glad_gl_context.GetNextPerfQueryIdINTEL)
#define glGetPerfCounterInfoINTEL (glad_gl_context.GetPerfCounterInfoINTEL)
#define glGetPerfQueryDataINTEL (glad_gl_context.GetPerfQueryDataINTEL)
#define glGetPerfQueryIdByNameINTEL (glad_gl_context.GetPerfQueryIdByNameINTEL)
#define glGetPerfQueryInfoINTEL (glad_gl_context.GetPerfQueryInfoINTEL)
#define glBlendBarrierKHR (glad_gl_context.BlendBarrierKHR)
#define glMaxShaderCompilerThreadsKHR (glad_gl_context.MaxShaderCompilerThreadsKHR)
#define glFramebufferParameteriMESA (glad_gl_context.FramebufferParameteriMESA)
#define glGetFramebufferParameterivMESA (glad_gl_context.GetFramebufferParameterivMESA)
#define glResizeBuffersMESA (glad_gl_context.ResizeBuffersMESA)
#define glWindowPos2dMESA (glad_gl_context.WindowPos2dMESA)
#define glWindowPos2dvMESA (glad_gl_context.WindowPos2dvMESA)
#define glWindowPos2fMESA (glad_gl_context.WindowPos2fMESA)
#define glWindowPos2fvMESA (glad_gl_context.WindowPos2fvMESA)
#define glWindowPos2iMESA (glad_gl_context.WindowPos2iMESA)
#define glWindowPos2ivMESA (glad_gl_context.WindowPos2ivMESA)
#define glWindowPos2sMESA (glad_gl_context.WindowPos2sMESA)
#define glWindowPos2svMESA (glad_gl_context.WindowPos2svMESA)
#define glWindowPos3dMESA (glad_gl_context.WindowPos3dMESA)
#define glWindowPos3dvMESA (glad_gl_context.WindowPos3dvMESA)
#define glWindowPos3fMESA (glad_gl_context.WindowPos3fMESA)
#define glWindowPos3fvMESA (glad_gl_context.WindowPos3fvMESA)
#define glWindowPos3iMESA (glad_gl_context.WindowPos3iMESA)
#define glWindowPos3ivMESA (glad_gl_context.WindowPos3ivMESA)
#define glWindowPos3sMESA (glad_gl_context.WindowPos3sMESA)
#define glWindowPos3svMESA (glad_gl_context.WindowPos3svMESA)
#define glWindowPos4dMESA (glad_gl_context.WindowPos4dMESA)
#define glWindowPos4dvMESA (glad_gl_context.WindowPos4dvMESA)
#define glWindowPos4fMESA (glad_gl_context.WindowPos4fMESA)
#define glWindowPos4fvMESA (glad_gl_context.WindowPos4fvMESA)
#define glWindowPos4iMESA (glad_gl_context.WindowPos4iMESA)
#define glWindowPos4ivMESA (glad_gl_context.WindowPos4ivMESA)
#define glWindowPos4sMESA (glad_gl_context.WindowPos4sMESA)
#define glWindowPos4svMESA (glad_gl_context.WindowPos4svMESA)
#define glBeginConditionalRenderNVX (glad_gl_context.BeginConditionalRenderNVX)
#define glEndConditionalRenderNVX (glad_gl_context.EndConditionalRenderNVX)
#define glLGPUNamedBufferSubDataNVX (glad_gl_context.LGPUNamedBufferSubDataNVX)
#define glLGPUCopyImageSubDataNVX (glad_gl_context.LGPUCopyImageSubDataNVX)
#define glLGPUInterlockNVX (glad_gl_context.LGPUInterlockNVX)
#define glAlphaToCoverageDitherControlNV (glad_gl_context.AlphaToCoverageDitherControlNV)
#define glMultiDrawArraysIndirectBindlessNV (glad_gl_context.MultiDrawArraysIndirectBindlessNV)
#define glMultiDrawElementsIndirectBindlessNV (glad_gl_context.MultiDrawElementsIndirectBindlessNV)
#define glMultiDrawArraysIndirectBindlessCountNV (glad_gl_context.MultiDrawArraysIndirectBindlessCountNV)
#define glMultiDrawElementsIndirectBindlessCountNV (glad_gl_context.MultiDrawElementsIndirectBindlessCountNV)
#define glGetTextureHandleNV (glad_gl_context.GetTextureHandleNV)
#define glGetTextureSamplerHandleNV (glad_gl_context.GetTextureSamplerHandleNV)
#define glMakeTextureHandleResidentNV (glad_gl_context.MakeTextureHandleResidentNV)
#define glMakeTextureHandleNonResidentNV (glad_gl_context.MakeTextureHandleNonResidentNV)
#define glGetImageHandleNV (glad_gl_context.GetImageHandleNV)
#define glMakeImageHandleResidentNV (glad_gl_context.MakeImageHandleResidentNV)
#define glMakeImageHandleNonResidentNV (glad_gl_context.MakeImageHandleNonResidentNV)
#define glUniformHandleui64NV (glad_gl_context.UniformHandleui64NV)
#define glUniformHandleui64vNV (glad_gl_context.UniformHandleui64vNV)
#define glProgramUniformHandleui64NV (glad_gl_context.ProgramUniformHandleui64NV)
#define glProgramUniformHandleui64vNV (glad_gl_context.ProgramUniformHandleui64vNV)
#define glIsTextureHandleResidentNV (glad_gl_context.IsTextureHandleResidentNV)
#define glIsImageHandleResidentNV (glad_gl_context.IsImageHandleResidentNV)
#define glBlendParameteriNV (glad_gl_context.BlendParameteriNV)
#define glBlendBarrierNV (glad_gl_context.BlendBarrierNV)
#define glViewportPositionWScaleNV (glad_gl_context.ViewportPositionWScaleNV)
#define glCreateStatesNV (glad_gl_context.CreateStatesNV)
#define glDeleteStatesNV (glad_gl_context.DeleteStatesNV)
#define glIsStateNV (glad_gl_context.IsStateNV)
#define glStateCaptureNV (glad_gl_context.StateCaptureNV)
#define glGetCommandHeaderNV (glad_gl_context.GetCommandHeaderNV)
#define glGetStageIndexNV (glad_gl_context.GetStageIndexNV)
#define glDrawCommandsNV (glad_gl_context.DrawCommandsNV)
#define glDrawCommandsAddressNV (glad_gl_context.DrawCommandsAddressNV)
#define glDrawCommandsStatesNV (glad_gl_context.DrawCommandsStatesNV)
#define glDrawCommandsStatesAddressNV (glad_gl_context.DrawCommandsStatesAddressNV)
#define glCreateCommandListsNV (glad_gl_context.CreateCommandListsNV)
#define glDeleteCommandListsNV (glad_gl_context.DeleteCommandListsNV)
#define glIsCommandListNV (glad_gl_context.IsCommandListNV)
#define glListDrawCommandsStatesClientNV (glad_gl_context.ListDrawCommandsStatesClientNV)
#define glCommandListSegmentsNV (glad_gl_context.CommandListSegmentsNV)
#define glCompileCommandListNV (glad_gl_context.CompileCommandListNV)
#define glCallCommandListNV (glad_gl_context.CallCommandListNV)
#define glBeginConditionalRenderNV (glad_gl_context.BeginConditionalRenderNV)
#define glEndConditionalRenderNV (glad_gl_context.EndConditionalRenderNV)
#define glSubpixelPrecisionBiasNV (glad_gl_context.SubpixelPrecisionBiasNV)
#define glConservativeRasterParameterfNV (glad_gl_context.ConservativeRasterParameterfNV)
#define glConservativeRasterParameteriNV (glad_gl_context.ConservativeRasterParameteriNV)
#define glCopyImageSubDataNV (glad_gl_context.CopyImageSubDataNV)
#define glDepthRangedNV (glad_gl_context.DepthRangedNV)
#define glClearDepthdNV (glad_gl_context.ClearDepthdNV)
#define glDepthBoundsdNV (glad_gl_context.DepthBoundsdNV)
#define glDrawTextureNV (glad_gl_context.DrawTextureNV)
#define glDrawVkImageNV (glad_gl_context.DrawVkImageNV)
#define glGetVkProcAddrNV (glad_gl_context.GetVkProcAddrNV)
#define glWaitVkSemaphoreNV (glad_gl_context.WaitVkSemaphoreNV)
#define glSignalVkSemaphoreNV (glad_gl_context.SignalVkSemaphoreNV)
#define glSignalVkFenceNV (glad_gl_context.SignalVkFenceNV)
#define glMapControlPointsNV (glad_gl_context.MapControlPointsNV)
#define glMapParameterivNV (glad_gl_context.MapParameterivNV)
#define glMapParameterfvNV (glad_gl_context.MapParameterfvNV)
#define glGetMapControlPointsNV (glad_gl_context.GetMapControlPointsNV)
#define glGetMapParameterivNV (glad_gl_context.GetMapParameterivNV)
#define glGetMapParameterfvNV (glad_gl_context.GetMapParameterfvNV)
#define glGetMapAttribParameterivNV (glad_gl_context.GetMapAttribParameterivNV)
#define glGetMapAttribParameterfvNV (glad_gl_context.GetMapAttribParameterfvNV)
#define glEvalMapsNV (glad_gl_context.EvalMapsNV)
#define glGetMultisamplefvNV (glad_gl_context.GetMultisamplefvNV)
#define glSampleMaskIndexedNV (glad_gl_context.SampleMaskIndexedNV)
#define glTexRenderbufferNV (glad_gl_context.TexRenderbufferNV)
#define glDeleteFencesNV (glad_gl_context.DeleteFencesNV)
#define glGenFencesNV (glad_gl_context.GenFencesNV)
#define glIsFenceNV (glad_gl_context.IsFenceNV)
#define glTestFenceNV (glad_gl_context.TestFenceNV)
#define glGetFenceivNV (glad_gl_context.GetFenceivNV)
#define glFinishFenceNV (glad_gl_context.FinishFenceNV)
#define glSetFenceNV (glad_gl_context.SetFenceNV)
#define glFragmentCoverageColorNV (glad_gl_context.FragmentCoverageColorNV)
#define glProgramNamedParameter4fNV (glad_gl_context.ProgramNamedParameter4fNV)
#define glProgramNamedParameter4fvNV (glad_gl_context.ProgramNamedParameter4fvNV)
#define glProgramNamedParameter4dNV (glad_gl_context.ProgramNamedParameter4dNV)
#define glProgramNamedParameter4dvNV (glad_gl_context.ProgramNamedParameter4dvNV)
#define glGetProgramNamedParameterfvNV (glad_gl_context.GetProgramNamedParameterfvNV)
#define glGetProgramNamedParameterdvNV (glad_gl_context.GetProgramNamedParameterdvNV)
#define glCoverageModulationTableNV (glad_gl_context.CoverageModulationTableNV)
#define glGetCoverageModulationTableNV (glad_gl_context.GetCoverageModulationTableNV)
#define glCoverageModulationNV (glad_gl_context.CoverageModulationNV)
#define glRenderbufferStorageMultisampleCoverageNV (glad_gl_context.RenderbufferStorageMultisampleCoverageNV)
#define glProgramVertexLimitNV (glad_gl_context.ProgramVertexLimitNV)
#define glFramebufferTextureFaceEXT (glad_gl_context.FramebufferTextureFaceEXT)
#define glProgramLocalParameterI4iNV (glad_gl_context.ProgramLocalParameterI4iNV)
#define glProgramLocalParameterI4ivNV (glad_gl_context.ProgramLocalParameterI4ivNV)
#define glProgramLocalParametersI4ivNV (glad_gl_context.ProgramLocalParametersI4ivNV)
#define glProgramLocalParameterI4uiNV (glad_gl_context.ProgramLocalParameterI4uiNV)
#define glProgramLocalParameterI4uivNV (glad_gl_context.ProgramLocalParameterI4uivNV)
#define glProgramLocalParametersI4uivNV (glad_gl_context.ProgramLocalParametersI4uivNV)
#define glProgramEnvParameterI4iNV (glad_gl_context.ProgramEnvParameterI4iNV)
#define glProgramEnvParameterI4ivNV (glad_gl_context.ProgramEnvParameterI4ivNV)
#define glProgramEnvParametersI4ivNV (glad_gl_context.ProgramEnvParametersI4ivNV)
#define glProgramEnvParameterI4uiNV (glad_gl_context.ProgramEnvParameterI4uiNV)
#define glProgramEnvParameterI4uivNV (glad_gl_context.ProgramEnvParameterI4uivNV)
#define glProgramEnvParametersI4uivNV (glad_gl_context.ProgramEnvParametersI4uivNV)
#define glGetProgramLocalParameterIivNV (glad_gl_context.GetProgramLocalParameterIivNV)
#define glGetProgramLocalParameterIuivNV (glad_gl_context.GetProgramLocalParameterIuivNV)
#define glGetProgramEnvParameterIivNV (glad_gl_context.GetProgramEnvParameterIivNV)
#define glGetProgramEnvParameterIuivNV (glad_gl_context.GetProgramEnvParameterIuivNV)
#define glProgramSubroutineParametersuivNV (glad_gl_context.ProgramSubroutineParametersuivNV)
#define glGetProgramSubroutineParameteruivNV (glad_gl_context.GetProgramSubroutineParameteruivNV)
#define glVertex2hNV (glad_gl_context.Vertex2hNV)
#define glVertex2hvNV (glad_gl_context.Vertex2hvNV)
#define glVertex3hNV (glad_gl_context.Vertex3hNV)
#define glVertex3hvNV (glad_gl_context.Vertex3hvNV)
#define glVertex4hNV (glad_gl_context.Vertex4hNV)
#define glVertex4hvNV (glad_gl_context.Vertex4hvNV)
#define glNormal3hNV (glad_gl_context.Normal3hNV)
#define glNormal3hvNV (glad_gl_context.Normal3hvNV)
#define glColor3hNV (glad_gl_context.Color3hNV)
#define glColor3hvNV (glad_gl_context.Color3hvNV)
#define glColor4hNV (glad_gl_context.Color4hNV)
#define glColor4hvNV (glad_gl_context.Color4hvNV)
#define glTexCoord1hNV (glad_gl_context.TexCoord1hNV)
#define glTexCoord1hvNV (glad_gl_context.TexCoord1hvNV)
#define glTexCoord2hNV (glad_gl_context.TexCoord2hNV)
#define glTexCoord2hvNV (glad_gl_context.TexCoord2hvNV)
#define glTexCoord3hNV (glad_gl_context.TexCoord3hNV)
#define glTexCoord3hvNV (glad_gl_context.TexCoord3hvNV)
#define glTexCoord4hNV (glad_gl_context.TexCoord4hNV)
#define glTexCoord4hvNV (glad_gl_context.TexCoord4hvNV)
#define glMultiTexCoord1hNV (glad_gl_context.MultiTexCoord1hNV)
#define glMultiTexCoord1hvNV (glad_gl_context.MultiTexCoord1hvNV)
#define glMultiTexCoord2hNV (glad_gl_context.MultiTexCoord2hNV)
#define glMultiTexCoord2hvNV (glad_gl_context.MultiTexCoord2hvNV)
#define glMultiTexCoord3hNV (glad_gl_context.MultiTexCoord3hNV)
#define glMultiTexCoord3hvNV (glad_gl_context.MultiTexCoord3hvNV)
#define glMultiTexCoord4hNV (glad_gl_context.MultiTexCoord4hNV)
#define glMultiTexCoord4hvNV (glad_gl_context.MultiTexCoord4hvNV)
#define glVertexAttrib1hNV (glad_gl_context.VertexAttrib1hNV)
#define glVertexAttrib1hvNV (glad_gl_context.VertexAttrib1hvNV)
#define glVertexAttrib2hNV (glad_gl_context.VertexAttrib2hNV)
#define glVertexAttrib2hvNV (glad_gl_context.VertexAttrib2hvNV)
#define glVertexAttrib3hNV (glad_gl_context.VertexAttrib3hNV)
#define glVertexAttrib3hvNV (glad_gl_context.VertexAttrib3hvNV)
#define glVertexAttrib4hNV (glad_gl_context.VertexAttrib4hNV)
#define glVertexAttrib4hvNV (glad_gl_context.VertexAttrib4hvNV)
#define glVertexAttribs1hvNV (glad_gl_context.VertexAttribs1hvNV)
#define glVertexAttribs2hvNV (glad_gl_context.VertexAttribs2hvNV)
#define glVertexAttribs3hvNV (glad_gl_context.VertexAttribs3hvNV)
#define glVertexAttribs4hvNV (glad_gl_context.VertexAttribs4hvNV)
#define glFogCoordhNV (glad_gl_context.FogCoordhNV)
#define glFogCoordhvNV (glad_gl_context.FogCoordhvNV)
#define glSecondaryColor3hNV (glad_gl_context.SecondaryColor3hNV)
#define glSecondaryColor3hvNV (glad_gl_context.SecondaryColor3hvNV)
#define glVertexWeighthNV (glad_gl_context.VertexWeighthNV)
#define glVertexWeighthvNV (glad_gl_context.VertexWeighthvNV)
#define glGetInternalformatSampleivNV (glad_gl_context.GetInternalformatSampleivNV)
#define glRenderGpuMaskNV (glad_gl_context.RenderGpuMaskNV)
#define glMulticastBufferSubDataNV (glad_gl_context.MulticastBufferSubDataNV)
#define glMulticastCopyBufferSubDataNV (glad_gl_context.MulticastCopyBufferSubDataNV)
#define glMulticastCopyImageSubDataNV (glad_gl_context.MulticastCopyImageSubDataNV)
#define glMulticastBlitFramebufferNV (glad_gl_context.MulticastBlitFramebufferNV)
#define glMulticastFramebufferSampleLocationsfvNV (glad_gl_context.MulticastFramebufferSampleLocationsfvNV)
#define glMulticastBarrierNV (glad_gl_context.MulticastBarrierNV)
#define glMulticastWaitSyncNV (glad_gl_context.MulticastWaitSyncNV)
#define glMulticastGetQueryObjectivNV (glad_gl_context.MulticastGetQueryObjectivNV)
#define glMulticastGetQueryObjectuivNV (glad_gl_context.MulticastGetQueryObjectuivNV)
#define glMulticastGetQueryObjecti64vNV (glad_gl_context.MulticastGetQueryObjecti64vNV)
#define glMulticastGetQueryObjectui64vNV (glad_gl_context.MulticastGetQueryObjectui64vNV)
#define glUploadGpuMaskNVX (glad_gl_context.UploadGpuMaskNVX)
#define glMulticastViewportArrayvNVX (glad_gl_context.MulticastViewportArrayvNVX)
#define glMulticastViewportPositionWScaleNVX (glad_gl_context.MulticastViewportPositionWScaleNVX)
#define glMulticastScissorArrayvNVX (glad_gl_context.MulticastScissorArrayvNVX)
#define glAsyncCopyBufferSubDataNVX (glad_gl_context.AsyncCopyBufferSubDataNVX)
#define glAsyncCopyImageSubDataNVX (glad_gl_context.AsyncCopyImageSubDataNVX)
#define glCreateProgressFenceNVX (glad_gl_context.CreateProgressFenceNVX)
#define glSignalSemaphoreui64NVX (glad_gl_context.SignalSemaphoreui64NVX)
#define glWaitSemaphoreui64NVX (glad_gl_context.WaitSemaphoreui64NVX)
#define glClientWaitSemaphoreui64NVX (glad_gl_context.ClientWaitSemaphoreui64NVX)
#define glGetMemoryObjectDetachedResourcesuivNV (glad_gl_context.GetMemoryObjectDetachedResourcesuivNV)
#define glResetMemoryObjectParameterNV (glad_gl_context.ResetMemoryObjectParameterNV)
#define glTexAttachMemoryNV (glad_gl_context.TexAttachMemoryNV)
#define glBufferAttachMemoryNV (glad_gl_context.BufferAttachMemoryNV)
#define glTextureAttachMemoryNV (glad_gl_context.TextureAttachMemoryNV)
#define glNamedBufferAttachMemoryNV (glad_gl_context.NamedBufferAttachMemoryNV)
#define glBufferPageCommitmentMemNV (glad_gl_context.BufferPageCommitmentMemNV)
#define glTexPageCommitmentMemNV (glad_gl_context.TexPageCommitmentMemNV)
#define glNamedBufferPageCommitmentMemNV (glad_gl_context.NamedBufferPageCommitmentMemNV)
#define glTexturePageCommitmentMemNV (glad_gl_context.TexturePageCommitmentMemNV)
#define glDrawMeshTasksNV (glad_gl_context.DrawMeshTasksNV)
#define glDrawMeshTasksIndirectNV (glad_gl_context.DrawMeshTasksIndirectNV)
#define glMultiDrawMeshTasksIndirectNV (glad_gl_context.MultiDrawMeshTasksIndirectNV)
#define glMultiDrawMeshTasksIndirectCountNV (glad_gl_context.MultiDrawMeshTasksIndirectCountNV)
#define glGenOcclusionQueriesNV (glad_gl_context.GenOcclusionQueriesNV)
#define glDeleteOcclusionQueriesNV (glad_gl_context.DeleteOcclusionQueriesNV)
#define glIsOcclusionQueryNV (glad_gl_context.IsOcclusionQueryNV)
#define glBeginOcclusionQueryNV (glad_gl_context.BeginOcclusionQueryNV)
#define glEndOcclusionQueryNV (glad_gl_context.EndOcclusionQueryNV)
#define glGetOcclusionQueryivNV (glad_gl_context.GetOcclusionQueryivNV)
#define glGetOcclusionQueryuivNV (glad_gl_context.GetOcclusionQueryuivNV)
#define glProgramBufferParametersfvNV (glad_gl_context.ProgramBufferParametersfvNV)
#define glProgramBufferParametersIivNV (glad_gl_context.ProgramBufferParametersIivNV)
#define glProgramBufferParametersIuivNV (glad_gl_context.ProgramBufferParametersIuivNV)
#define glGenPathsNV (glad_gl_context.GenPathsNV)
#define glDeletePathsNV (glad_gl_context.DeletePathsNV)
#define glIsPathNV (glad_gl_context.IsPathNV)
#define glPathCommandsNV (glad_gl_context.PathCommandsNV)
#define glPathCoordsNV (glad_gl_context.PathCoordsNV)
#define glPathSubCommandsNV (glad_gl_context.PathSubCommandsNV)
#define glPathSubCoordsNV (glad_gl_context.PathSubCoordsNV)
#define glPathStringNV (glad_gl_context.PathStringNV)
#define glPathGlyphsNV (glad_gl_context.PathGlyphsNV)
#define glPathGlyphRangeNV (glad_gl_context.PathGlyphRangeNV)
#define glWeightPathsNV (glad_gl_context.WeightPathsNV)
#define glCopyPathNV (glad_gl_context.CopyPathNV)
#define glInterpolatePathsNV (glad_gl_context.InterpolatePathsNV)
#define glTransformPathNV (glad_gl_context.TransformPathNV)
#define glPathParameterivNV (glad_gl_context.PathParameterivNV)
#define glPathParameteriNV (glad_gl_context.PathParameteriNV)
#define glPathParameterfvNV (glad_gl_context.PathParameterfvNV)
#define glPathParameterfNV (glad_gl_context.PathParameterfNV)
#define glPathDashArrayNV (glad_gl_context.PathDashArrayNV)
#define glPathStencilFuncNV (glad_gl_context.PathStencilFuncNV)
#define glPathStencilDepthOffsetNV (glad_gl_context.PathStencilDepthOffsetNV)
#define glStencilFillPathNV (glad_gl_context.StencilFillPathNV)
#define glStencilStrokePathNV (glad_gl_context.StencilStrokePathNV)
#define glStencilFillPathInstancedNV (glad_gl_context.StencilFillPathInstancedNV)
#define glStencilStrokePathInstancedNV (glad_gl_context.StencilStrokePathInstancedNV)
#define glPathCoverDepthFuncNV (glad_gl_context.PathCoverDepthFuncNV)
#define glCoverFillPathNV (glad_gl_context.CoverFillPathNV)
#define glCoverStrokePathNV (glad_gl_context.CoverStrokePathNV)
#define glCoverFillPathInstancedNV (glad_gl_context.CoverFillPathInstancedNV)
#define glCoverStrokePathInstancedNV (glad_gl_context.CoverStrokePathInstancedNV)
#define glGetPathParameterivNV (glad_gl_context.GetPathParameterivNV)
#define glGetPathParameterfvNV (glad_gl_context.GetPathParameterfvNV)
#define glGetPathCommandsNV (glad_gl_context.GetPathCommandsNV)
#define glGetPathCoordsNV (glad_gl_context.GetPathCoordsNV)
#define glGetPathDashArrayNV (glad_gl_context.GetPathDashArrayNV)
#define glGetPathMetricsNV (glad_gl_context.GetPathMetricsNV)
#define glGetPathMetricRangeNV (glad_gl_context.GetPathMetricRangeNV)
#define glGetPathSpacingNV (glad_gl_context.GetPathSpacingNV)
#define glIsPointInFillPathNV (glad_gl_context.IsPointInFillPathNV)
#define glIsPointInStrokePathNV (glad_gl_context.IsPointInStrokePathNV)
#define glGetPathLengthNV (glad_gl_context.GetPathLengthNV)
#define glPointAlongPathNV (glad_gl_context.PointAlongPathNV)
#define glMatrixLoad3x2fNV (glad_gl_context.MatrixLoad3x2fNV)
#define glMatrixLoad3x3fNV (glad_gl_context.MatrixLoad3x3fNV)
#define glMatrixLoadTranspose3x3fNV (glad_gl_context.MatrixLoadTranspose3x3fNV)
#define glMatrixMult3x2fNV (glad_gl_context.MatrixMult3x2fNV)
#define glMatrixMult3x3fNV (glad_gl_context.MatrixMult3x3fNV)
#define glMatrixMultTranspose3x3fNV (glad_gl_context.MatrixMultTranspose3x3fNV)
#define glStencilThenCoverFillPathNV (glad_gl_context.StencilThenCoverFillPathNV)
#define glStencilThenCoverStrokePathNV (glad_gl_context.StencilThenCoverStrokePathNV)
#define glStencilThenCoverFillPathInstancedNV (glad_gl_context.StencilThenCoverFillPathInstancedNV)
#define glStencilThenCoverStrokePathInstancedNV (glad_gl_context.StencilThenCoverStrokePathInstancedNV)
#define glPathGlyphIndexRangeNV (glad_gl_context.PathGlyphIndexRangeNV)
#define glPathGlyphIndexArrayNV (glad_gl_context.PathGlyphIndexArrayNV)
#define glPathMemoryGlyphIndexArrayNV (glad_gl_context.PathMemoryGlyphIndexArrayNV)
#define glProgramPathFragmentInputGenNV (glad_gl_context.ProgramPathFragmentInputGenNV)
#define glGetProgramResourcefvNV (glad_gl_context.GetProgramResourcefvNV)
#define glPixelDataRangeNV (glad_gl_context.PixelDataRangeNV)
#define glFlushPixelDataRangeNV (glad_gl_context.FlushPixelDataRangeNV)
#define glPointParameteriNV (glad_gl_context.PointParameteriNV)
#define glPointParameterivNV (glad_gl_context.PointParameterivNV)
#define glPresentFrameKeyedNV (glad_gl_context.PresentFrameKeyedNV)
#define glPresentFrameDualFillNV (glad_gl_context.PresentFrameDualFillNV)
#define glGetVideoivNV (glad_gl_context.GetVideoivNV)
#define glGetVideouivNV (glad_gl_context.GetVideouivNV)
#define glGetVideoi64vNV (glad_gl_context.GetVideoi64vNV)
#define glGetVideoui64vNV (glad_gl_context.GetVideoui64vNV)
#define glPrimitiveRestartNV (glad_gl_context.PrimitiveRestartNV)
#define glPrimitiveRestartIndexNV (glad_gl_context.PrimitiveRestartIndexNV)
#define glQueryResourceNV (glad_gl_context.QueryResourceNV)
#define glGenQueryResourceTagNV (glad_gl_context.GenQueryResourceTagNV)
#define glDeleteQueryResourceTagNV (glad_gl_context.DeleteQueryResourceTagNV)
#define glQueryResourceTagNV (glad_gl_context.QueryResourceTagNV)
#define glCombinerParameterfvNV (glad_gl_context.CombinerParameterfvNV)
#define glCombinerParameterfNV (glad_gl_context.CombinerParameterfNV)
#define glCombinerParameterivNV (glad_gl_context.CombinerParameterivNV)
#define glCombinerParameteriNV (glad_gl_context.CombinerParameteriNV)
#define glCombinerInputNV (glad_gl_context.CombinerInputNV)
#define glCombinerOutputNV (glad_gl_context.CombinerOutputNV)
#define glFinalCombinerInputNV (glad_gl_context.FinalCombinerInputNV)
#define glGetCombinerInputParameterfvNV (glad_gl_context.GetCombinerInputParameterfvNV)
#define glGetCombinerInputParameterivNV (glad_gl_context.GetCombinerInputParameterivNV)
#define glGetCombinerOutputParameterfvNV (glad_gl_context.GetCombinerOutputParameterfvNV)
#define glGetCombinerOutputParameterivNV (glad_gl_context.GetCombinerOutputParameterivNV)
#define glGetFinalCombinerInputParameterfvNV (glad_gl_context.GetFinalCombinerInputParameterfvNV)
#define glGetFinalCombinerInputParameterivNV (glad_gl_context.GetFinalCombinerInputParameterivNV)
#define glCombinerStageParameterfvNV (glad_gl_context.CombinerStageParameterfvNV)
#define glGetCombinerStageParameterfvNV (glad_gl_context.GetCombinerStageParameterfvNV)
#define glFramebufferSampleLocationsfvNV (glad_gl_context.FramebufferSampleLocationsfvNV)
#define glNamedFramebufferSampleLocationsfvNV (glad_gl_context.NamedFramebufferSampleLocationsfvNV)
#define glResolveDepthValuesNV (glad_gl_context.ResolveDepthValuesNV)
#define glScissorExclusiveNV (glad_gl_context.ScissorExclusiveNV)
#define glScissorExclusiveArrayvNV (glad_gl_context.ScissorExclusiveArrayvNV)
#define glMakeBufferResidentNV (glad_gl_context.MakeBufferResidentNV)
#define glMakeBufferNonResidentNV (glad_gl_context.MakeBufferNonResidentNV)
#define glIsBufferResidentNV (glad_gl_context.IsBufferResidentNV)
#define glMakeNamedBufferResidentNV (glad_gl_context.MakeNamedBufferResidentNV)
#define glMakeNamedBufferNonResidentNV (glad_gl_context.MakeNamedBufferNonResidentNV)
#define glIsNamedBufferResidentNV (glad_gl_context.IsNamedBufferResidentNV)
#define glGetBufferParameterui64vNV (glad_gl_context.GetBufferParameterui64vNV)
#define glGetNamedBufferParameterui64vNV (glad_gl_context.GetNamedBufferParameterui64vNV)
#define glGetIntegerui64vNV (glad_gl_context.GetIntegerui64vNV)
#define glUniformui64NV (glad_gl_context.Uniformui64NV)
#define glUniformui64vNV (glad_gl_context.Uniformui64vNV)
#define glProgramUniformui64NV (glad_gl_context.ProgramUniformui64NV)
#define glProgramUniformui64vNV (glad_gl_context.ProgramUniformui64vNV)
#define glBindShadingRateImageNV (glad_gl_context.BindShadingRateImageNV)
#define glGetShadingRateImagePaletteNV (glad_gl_context.GetShadingRateImagePaletteNV)
#define glGetShadingRateSampleLocationivNV (glad_gl_context.GetShadingRateSampleLocationivNV)
#define glShadingRateImageBarrierNV (glad_gl_context.ShadingRateImageBarrierNV)
#define glShadingRateImagePaletteNV (glad_gl_context.ShadingRateImagePaletteNV)
#define glShadingRateSampleOrderNV (glad_gl_context.ShadingRateSampleOrderNV)
#define glShadingRateSampleOrderCustomNV (glad_gl_context.ShadingRateSampleOrderCustomNV)
#define glTextureBarrierNV (glad_gl_context.TextureBarrierNV)
#define glTexImage2DMultisampleCoverageNV (glad_gl_context.TexImage2DMultisampleCoverageNV)
#define glTexImage3DMultisampleCoverageNV (glad_gl_context.TexImage3DMultisampleCoverageNV)
#define glTextureImage2DMultisampleNV (glad_gl_context.TextureImage2DMultisampleNV)
#define glTextureImage3DMultisampleNV (glad_gl_context.TextureImage3DMultisampleNV)
#define glTextureImage2DMultisampleCoverageNV (glad_gl_context.TextureImage2DMultisampleCoverageNV)
#define glTextureImage3DMultisampleCoverageNV (glad_gl_context.TextureImage3DMultisampleCoverageNV)
#define glBeginTransformFeedbackNV (glad_gl_context.BeginTransformFeedbackNV)
#define glEndTransformFeedbackNV (glad_gl_context.EndTransformFeedbackNV)
#define glTransformFeedbackAttribsNV (glad_gl_context.TransformFeedbackAttribsNV)
#define glBindBufferRangeNV (glad_gl_context.BindBufferRangeNV)
#define glBindBufferOffsetNV (glad_gl_context.BindBufferOffsetNV)
#define glBindBufferBaseNV (glad_gl_context.BindBufferBaseNV)
#define glTransformFeedbackVaryingsNV (glad_gl_context.TransformFeedbackVaryingsNV)
#define glActiveVaryingNV (glad_gl_context.ActiveVaryingNV)
#define glGetVaryingLocationNV (glad_gl_context.GetVaryingLocationNV)
#define glGetActiveVaryingNV (glad_gl_context.GetActiveVaryingNV)
#define glGetTransformFeedbackVaryingNV (glad_gl_context.GetTransformFeedbackVaryingNV)
#define glTransformFeedbackStreamAttribsNV (glad_gl_context.TransformFeedbackStreamAttribsNV)
#define glBindTransformFeedbackNV (glad_gl_context.BindTransformFeedbackNV)
#define glDeleteTransformFeedbacksNV (glad_gl_context.DeleteTransformFeedbacksNV)
#define glGenTransformFeedbacksNV (glad_gl_context.GenTransformFeedbacksNV)
#define glIsTransformFeedbackNV (glad_gl_context.IsTransformFeedbackNV)
#define glPauseTransformFeedbackNV (glad_gl_context.PauseTransformFeedbackNV)
#define glResumeTransformFeedbackNV (glad_gl_context.ResumeTransformFeedbackNV)
#define glDrawTransformFeedbackNV (glad_gl_context.DrawTransformFeedbackNV)
#define glVDPAUInitNV (glad_gl_context.VDPAUInitNV)
#define glVDPAUFiniNV (glad_gl_context.VDPAUFiniNV)
#define glVDPAURegisterVideoSurfaceNV (glad_gl_context.VDPAURegisterVideoSurfaceNV)
#define glVDPAURegisterOutputSurfaceNV (glad_gl_context.VDPAURegisterOutputSurfaceNV)
#define glVDPAUIsSurfaceNV (glad_gl_context.VDPAUIsSurfaceNV)
#define glVDPAUUnregisterSurfaceNV (glad_gl_context.VDPAUUnregisterSurfaceNV)
#define glVDPAUGetSurfaceivNV (glad_gl_context.VDPAUGetSurfaceivNV)
#define glVDPAUSurfaceAccessNV (glad_gl_context.VDPAUSurfaceAccessNV)
#define glVDPAUMapSurfacesNV (glad_gl_context.VDPAUMapSurfacesNV)
#define glVDPAUUnmapSurfacesNV (glad_gl_context.VDPAUUnmapSurfacesNV)
#define glVDPAURegisterVideoSurfaceWithPictureStructureNV (glad_gl_context.VDPAURegisterVideoSurfaceWithPictureStructureNV)
#define glFlushVertexArrayRangeNV (glad_gl_context.FlushVertexArrayRangeNV)
#define glVertexArrayRangeNV (glad_gl_context.VertexArrayRangeNV)
#define glVertexAttribL1i64NV (glad_gl_context.VertexAttribL1i64NV)
#define glVertexAttribL2i64NV (glad_gl_context.VertexAttribL2i64NV)
#define glVertexAttribL3i64NV (glad_gl_context.VertexAttribL3i64NV)
#define glVertexAttribL4i64NV (glad_gl_context.VertexAttribL4i64NV)
#define glVertexAttribL1i64vNV (glad_gl_context.VertexAttribL1i64vNV)
#define glVertexAttribL2i64vNV (glad_gl_context.VertexAttribL2i64vNV)
#define glVertexAttribL3i64vNV (glad_gl_context.VertexAttribL3i64vNV)
#define glVertexAttribL4i64vNV (glad_gl_context.VertexAttribL4i64vNV)
#define glVertexAttribL1ui64NV (glad_gl_context.VertexAttribL1ui64NV)
#define glVertexAttribL2ui64NV (glad_gl_context.VertexAttribL2ui64NV)
#define glVertexAttribL3ui64NV (glad_gl_context.VertexAttribL3ui64NV)
#define glVertexAttribL4ui64NV (glad_gl_context.VertexAttribL4ui64NV)
#define glVertexAttribL1ui64vNV (glad_gl_context.VertexAttribL1ui64vNV)
#define glVertexAttribL2ui64vNV (glad_gl_context.VertexAttribL2ui64vNV)
#define glVertexAttribL3ui64vNV (glad_gl_context.VertexAttribL3ui64vNV)
#define glVertexAttribL4ui64vNV (glad_gl_context.VertexAttribL4ui64vNV)
#define glGetVertexAttribLi64vNV (glad_gl_context.GetVertexAttribLi64vNV)
#define glGetVertexAttribLui64vNV (glad_gl_context.GetVertexAttribLui64vNV)
#define glVertexAttribLFormatNV (glad_gl_context.VertexAttribLFormatNV)
#define glBufferAddressRangeNV (glad_gl_context.BufferAddressRangeNV)
#define glVertexFormatNV (glad_gl_context.VertexFormatNV)
#define glNormalFormatNV (glad_gl_context.NormalFormatNV)
#define glColorFormatNV (glad_gl_context.ColorFormatNV)
#define glIndexFormatNV (glad_gl_context.IndexFormatNV)
#define glTexCoordFormatNV (glad_gl_context.TexCoordFormatNV)
#define glEdgeFlagFormatNV (glad_gl_context.EdgeFlagFormatNV)
#define glSecondaryColorFormatNV (glad_gl_context.SecondaryColorFormatNV)
#define glFogCoordFormatNV (glad_gl_context.FogCoordFormatNV)
#define glVertexAttribFormatNV (glad_gl_context.VertexAttribFormatNV)
#define glVertexAttribIFormatNV (glad_gl_context.VertexAttribIFormatNV)
#define glGetIntegerui64i_vNV (glad_gl_context.GetIntegerui64i_vNV)
#define glAreProgramsResidentNV (glad_gl_context.AreProgramsResidentNV)
#define glBindProgramNV (glad_gl_context.BindProgramNV)
#define glDeleteProgramsNV (glad_gl_context.DeleteProgramsNV)
#define glExecuteProgramNV (glad_gl_context.ExecuteProgramNV)
#define glGenProgramsNV (glad_gl_context.GenProgramsNV)
#define glGetProgramParameterdvNV (glad_gl_context.GetProgramParameterdvNV)
#define glGetProgramParameterfvNV (glad_gl_context.GetProgramParameterfvNV)
#define glGetProgramivNV (glad_gl_context.GetProgramivNV)
#define glGetProgramStringNV (glad_gl_context.GetProgramStringNV)
#define glGetTrackMatrixivNV (glad_gl_context.GetTrackMatrixivNV)
#define glGetVertexAttribdvNV (glad_gl_context.GetVertexAttribdvNV)
#define glGetVertexAttribfvNV (glad_gl_context.GetVertexAttribfvNV)
#define glGetVertexAttribivNV (glad_gl_context.GetVertexAttribivNV)
#define glGetVertexAttribPointervNV (glad_gl_context.GetVertexAttribPointervNV)
#define glIsProgramNV (glad_gl_context.IsProgramNV)
#define glLoadProgramNV (glad_gl_context.LoadProgramNV)
#define glProgramParameter4dNV (glad_gl_context.ProgramParameter4dNV)
#define glProgramParameter4dvNV (glad_gl_context.ProgramParameter4dvNV)
#define glProgramParameter4fNV (glad_gl_context.ProgramParameter4fNV)
#define glProgramParameter4fvNV (glad_gl_context.ProgramParameter4fvNV)
#define glProgramParameters4dvNV (glad_gl_context.ProgramParameters4dvNV)
#define glProgramParameters4fvNV (glad_gl_context.ProgramParameters4fvNV)
#define glRequestResidentProgramsNV (glad_gl_context.RequestResidentProgramsNV)
#define glTrackMatrixNV (glad_gl_context.TrackMatrixNV)
#define glVertexAttribPointerNV (glad_gl_context.VertexAttribPointerNV)
#define glVertexAttrib1dNV (glad_gl_context.VertexAttrib1dNV)
#define glVertexAttrib1dvNV (glad_gl_context.VertexAttrib1dvNV)
#define glVertexAttrib1fNV (glad_gl_context.VertexAttrib1fNV)
#define glVertexAttrib1fvNV (glad_gl_context.VertexAttrib1fvNV)
#define glVertexAttrib1sNV (glad_gl_context.VertexAttrib1sNV)
#define glVertexAttrib1svNV (glad_gl_context.VertexAttrib1svNV)
#define glVertexAttrib2dNV (glad_gl_context.VertexAttrib2dNV)
#define glVertexAttrib2dvNV (glad_gl_context.VertexAttrib2dvNV)
#define glVertexAttrib2fNV (glad_gl_context.VertexAttrib2fNV)
#define glVertexAttrib2fvNV (glad_gl_context.VertexAttrib2fvNV)
#define glVertexAttrib2sNV (glad_gl_context.VertexAttrib2sNV)
#define glVertexAttrib2svNV (glad_gl_context.VertexAttrib2svNV)
#define glVertexAttrib3dNV (glad_gl_context.VertexAttrib3dNV)
#define glVertexAttrib3dvNV (glad_gl_context.VertexAttrib3dvNV)
#define glVertexAttrib3fNV (glad_gl_context.VertexAttrib3fNV)
#define glVertexAttrib3fvNV (glad_gl_context.VertexAttrib3fvNV)
#define glVertexAttrib3sNV (glad_gl_context.VertexAttrib3sNV)
#define glVertexAttrib3svNV (glad_gl_context.VertexAttrib3svNV)
#define glVertexAttrib4dNV (glad_gl_context.VertexAttrib4dNV)
#define glVertexAttrib4dvNV (glad_gl_context.VertexAttrib4dvNV)
#define glVertexAttrib4fNV (glad_gl_context.VertexAttrib4fNV)
#define glVertexAttrib4fvNV (glad_gl_context.VertexAttrib4fvNV)
#define glVertexAttrib4sNV (glad_gl_context.VertexAttrib4sNV)
#define glVertexAttrib4svNV (glad_gl_context.VertexAttrib4svNV)
#define glVertexAttrib4ubNV (glad_gl_context.VertexAttrib4ubNV)
#define glVertexAttrib4ubvNV (glad_gl_context.VertexAttrib4ubvNV)
#define glVertexAttribs1dvNV (glad_gl_context.VertexAttribs1dvNV)
#define glVertexAttribs1fvNV (glad_gl_context.VertexAttribs1fvNV)
#define glVertexAttribs1svNV (glad_gl_context.VertexAttribs1svNV)
#define glVertexAttribs2dvNV (glad_gl_context.VertexAttribs2dvNV)
#define glVertexAttribs2fvNV (glad_gl_context.VertexAttribs2fvNV)
#define glVertexAttribs2svNV (glad_gl_context.VertexAttribs2svNV)
#define glVertexAttribs3dvNV (glad_gl_context.VertexAttribs3dvNV)
#define glVertexAttribs3fvNV (glad_gl_context.VertexAttribs3fvNV)
#define glVertexAttribs3svNV (glad_gl_context.VertexAttribs3svNV)
#define glVertexAttribs4dvNV (glad_gl_context.VertexAttribs4dvNV)
#define glVertexAttribs4fvNV (glad_gl_context.VertexAttribs4fvNV)
#define glVertexAttribs4svNV (glad_gl_context.VertexAttribs4svNV)
#define glVertexAttribs4ubvNV (glad_gl_context.VertexAttribs4ubvNV)
#define glBeginVideoCaptureNV (glad_gl_context.BeginVideoCaptureNV)
#define glBindVideoCaptureStreamBufferNV (glad_gl_context.BindVideoCaptureStreamBufferNV)
#define glBindVideoCaptureStreamTextureNV (glad_gl_context.BindVideoCaptureStreamTextureNV)
#define glEndVideoCaptureNV (glad_gl_context.EndVideoCaptureNV)
#define glGetVideoCaptureivNV (glad_gl_context.GetVideoCaptureivNV)
#define glGetVideoCaptureStreamivNV (glad_gl_context.GetVideoCaptureStreamivNV)
#define glGetVideoCaptureStreamfvNV (glad_gl_context.GetVideoCaptureStreamfvNV)
#define glGetVideoCaptureStreamdvNV (glad_gl_context.GetVideoCaptureStreamdvNV)
#define glVideoCaptureNV (glad_gl_context.VideoCaptureNV)
#define glVideoCaptureStreamParameterivNV (glad_gl_context.VideoCaptureStreamParameterivNV)
#define glVideoCaptureStreamParameterfvNV (glad_gl_context.VideoCaptureStreamParameterfvNV)
#define glVideoCaptureStreamParameterdvNV (glad_gl_context.VideoCaptureStreamParameterdvNV)
#define glViewportSwizzleNV (glad_gl_context.ViewportSwizzleNV)
#define glMultiTexCoord1bOES (glad_gl_context.MultiTexCoord1bOES)
#define glMultiTexCoord1bvOES (glad_gl_context.MultiTexCoord1bvOES)
#define glMultiTexCoord2bOES (glad_gl_context.MultiTexCoord2bOES)
#define glMultiTexCoord2bvOES (glad_gl_context.MultiTexCoord2bvOES)
#define glMultiTexCoord3bOES (glad_gl_context.MultiTexCoord3bOES)
#define glMultiTexCoord3bvOES (glad_gl_context.MultiTexCoord3bvOES)
#define glMultiTexCoord4bOES (glad_gl_context.MultiTexCoord4bOES)
#define glMultiTexCoord4bvOES (glad_gl_context.MultiTexCoord4bvOES)
#define glTexCoord1bOES (glad_gl_context.TexCoord1bOES)
#define glTexCoord1bvOES (glad_gl_context.TexCoord1bvOES)
#define glTexCoord2bOES (glad_gl_context.TexCoord2bOES)
#define glTexCoord2bvOES (glad_gl_context.TexCoord2bvOES)
#define glTexCoord3bOES (glad_gl_context.TexCoord3bOES)
#define glTexCoord3bvOES (glad_gl_context.TexCoord3bvOES)
#define glTexCoord4bOES (glad_gl_context.TexCoord4bOES)
#define glTexCoord4bvOES (glad_gl_context.TexCoord4bvOES)
#define glVertex2bOES (glad_gl_context.Vertex2bOES)
#define glVertex2bvOES (glad_gl_context.Vertex2bvOES)
#define glVertex3bOES (glad_gl_context.Vertex3bOES)
#define glVertex3bvOES (glad_gl_context.Vertex3bvOES)
#define glVertex4bOES (glad_gl_context.Vertex4bOES)
#define glVertex4bvOES (glad_gl_context.Vertex4bvOES)
#define glAlphaFuncxOES (glad_gl_context.AlphaFuncxOES)
#define glClearColorxOES (glad_gl_context.ClearColorxOES)
#define glClearDepthxOES (glad_gl_context.ClearDepthxOES)
#define glClipPlanexOES (glad_gl_context.ClipPlanexOES)
#define glColor4xOES (glad_gl_context.Color4xOES)
#define glDepthRangexOES (glad_gl_context.DepthRangexOES)
#define glFogxOES (glad_gl_context.FogxOES)
#define glFogxvOES (glad_gl_context.FogxvOES)
#define glFrustumxOES (glad_gl_context.FrustumxOES)
#define glGetClipPlanexOES (glad_gl_context.GetClipPlanexOES)
#define glGetFixedvOES (glad_gl_context.GetFixedvOES)
#define glGetTexEnvxvOES (glad_gl_context.GetTexEnvxvOES)
#define glGetTexParameterxvOES (glad_gl_context.GetTexParameterxvOES)
#define glLightModelxOES (glad_gl_context.LightModelxOES)
#define glLightModelxvOES (glad_gl_context.LightModelxvOES)
#define glLightxOES (glad_gl_context.LightxOES)
#define glLightxvOES (glad_gl_context.LightxvOES)
#define glLineWidthxOES (glad_gl_context.LineWidthxOES)
#define glLoadMatrixxOES (glad_gl_context.LoadMatrixxOES)
#define glMaterialxOES (glad_gl_context.MaterialxOES)
#define glMaterialxvOES (glad_gl_context.MaterialxvOES)
#define glMultMatrixxOES (glad_gl_context.MultMatrixxOES)
#define glMultiTexCoord4xOES (glad_gl_context.MultiTexCoord4xOES)
#define glNormal3xOES (glad_gl_context.Normal3xOES)
#define glOrthoxOES (glad_gl_context.OrthoxOES)
#define glPointParameterxvOES (glad_gl_context.PointParameterxvOES)
#define glPointSizexOES (glad_gl_context.PointSizexOES)
#define glPolygonOffsetxOES (glad_gl_context.PolygonOffsetxOES)
#define glRotatexOES (glad_gl_context.RotatexOES)
#define glScalexOES (glad_gl_context.ScalexOES)
#define glTexEnvxOES (glad_gl_context.TexEnvxOES)
#define glTexEnvxvOES (glad_gl_context.TexEnvxvOES)
#define glTexParameterxOES (glad_gl_context.TexParameterxOES)
#define glTexParameterxvOES (glad_gl_context.TexParameterxvOES)
#define glTranslatexOES (glad_gl_context.TranslatexOES)
#define glAccumxOES (glad_gl_context.AccumxOES)
#define glBitmapxOES (glad_gl_context.BitmapxOES)
#define glBlendColorxOES (glad_gl_context.BlendColorxOES)
#define glClearAccumxOES (glad_gl_context.ClearAccumxOES)
#define glColor3xOES (glad_gl_context.Color3xOES)
#define glColor3xvOES (glad_gl_context.Color3xvOES)
#define glColor4xvOES (glad_gl_context.Color4xvOES)
#define glConvolutionParameterxOES (glad_gl_context.ConvolutionParameterxOES)
#define glConvolutionParameterxvOES (glad_gl_context.ConvolutionParameterxvOES)
#define glEvalCoord1xOES (glad_gl_context.EvalCoord1xOES)
#define glEvalCoord1xvOES (glad_gl_context.EvalCoord1xvOES)
#define glEvalCoord2xOES (glad_gl_context.EvalCoord2xOES)
#define glEvalCoord2xvOES (glad_gl_context.EvalCoord2xvOES)
#define glFeedbackBufferxOES (glad_gl_context.FeedbackBufferxOES)
#define glGetConvolutionParameterxvOES (glad_gl_context.GetConvolutionParameterxvOES)
#define glGetHistogramParameterxvOES (glad_gl_context.GetHistogramParameterxvOES)
#define glGetLightxOES (glad_gl_context.GetLightxOES)
#define glGetMapxvOES (glad_gl_context.GetMapxvOES)
#define glGetMaterialxOES (glad_gl_context.GetMaterialxOES)
#define glGetPixelMapxv (glad_gl_context.GetPixelMapxv)
#define glGetTexGenxvOES (glad_gl_context.GetTexGenxvOES)
#define glGetTexLevelParameterxvOES (glad_gl_context.GetTexLevelParameterxvOES)
#define glIndexxOES (glad_gl_context.IndexxOES)
#define glIndexxvOES (glad_gl_context.IndexxvOES)
#define glLoadTransposeMatrixxOES (glad_gl_context.LoadTransposeMatrixxOES)
#define glMap1xOES (glad_gl_context.Map1xOES)
#define glMap2xOES (glad_gl_context.Map2xOES)
#define glMapGrid1xOES (glad_gl_context.MapGrid1xOES)
#define glMapGrid2xOES (glad_gl_context.MapGrid2xOES)
#define glMultTransposeMatrixxOES (glad_gl_context.MultTransposeMatrixxOES)
#define glMultiTexCoord1xOES (glad_gl_context.MultiTexCoord1xOES)
#define glMultiTexCoord1xvOES (glad_gl_context.MultiTexCoord1xvOES)
#define glMultiTexCoord2xOES (glad_gl_context.MultiTexCoord2xOES)
#define glMultiTexCoord2xvOES (glad_gl_context.MultiTexCoord2xvOES)
#define glMultiTexCoord3xOES (glad_gl_context.MultiTexCoord3xOES)
#define glMultiTexCoord3xvOES (glad_gl_context.MultiTexCoord3xvOES)
#define glMultiTexCoord4xvOES (glad_gl_context.MultiTexCoord4xvOES)
#define glNormal3xvOES (glad_gl_context.Normal3xvOES)
#define glPassThroughxOES (glad_gl_context.PassThroughxOES)
#define glPixelMapx (glad_gl_context.PixelMapx)
#define glPixelStorex (glad_gl_context.PixelStorex)
#define glPixelTransferxOES (glad_gl_context.PixelTransferxOES)
#define glPixelZoomxOES (glad_gl_context.PixelZoomxOES)
#define glPrioritizeTexturesxOES (glad_gl_context.PrioritizeTexturesxOES)
#define glRasterPos2xOES (glad_gl_context.RasterPos2xOES)
#define glRasterPos2xvOES (glad_gl_context.RasterPos2xvOES)
#define glRasterPos3xOES (glad_gl_context.RasterPos3xOES)
#define glRasterPos3xvOES (glad_gl_context.RasterPos3xvOES)
#define glRasterPos4xOES (glad_gl_context.RasterPos4xOES)
#define glRasterPos4xvOES (glad_gl_context.RasterPos4xvOES)
#define glRectxOES (glad_gl_context.RectxOES)
#define glRectxvOES (glad_gl_context.RectxvOES)
#define glTexCoord1xOES (glad_gl_context.TexCoord1xOES)
#define glTexCoord1xvOES (glad_gl_context.TexCoord1xvOES)
#define glTexCoord2xOES (glad_gl_context.TexCoord2xOES)
#define glTexCoord2xvOES (glad_gl_context.TexCoord2xvOES)
#define glTexCoord3xOES (glad_gl_context.TexCoord3xOES)
#define glTexCoord3xvOES (glad_gl_context.TexCoord3xvOES)
#define glTexCoord4xOES (glad_gl_context.TexCoord4xOES)
#define glTexCoord4xvOES (glad_gl_context.TexCoord4xvOES)
#define glTexGenxOES (glad_gl_context.TexGenxOES)
#define glTexGenxvOES (glad_gl_context.TexGenxvOES)
#define glVertex2xOES (glad_gl_context.Vertex2xOES)
#define glVertex2xvOES (glad_gl_context.Vertex2xvOES)
#define glVertex3xOES (glad_gl_context.Vertex3xOES)
#define glVertex3xvOES (glad_gl_context.Vertex3xvOES)
#define glVertex4xOES (glad_gl_context.Vertex4xOES)
#define glVertex4xvOES (glad_gl_context.Vertex4xvOES)
#define glQueryMatrixxOES (glad_gl_context.QueryMatrixxOES)
#define glClearDepthfOES (glad_gl_context.ClearDepthfOES)
#define glClipPlanefOES (glad_gl_context.ClipPlanefOES)
#define glDepthRangefOES (glad_gl_context.DepthRangefOES)
#define glFrustumfOES (glad_gl_context.FrustumfOES)
#define glGetClipPlanefOES (glad_gl_context.GetClipPlanefOES)
#define glOrthofOES (glad_gl_context.OrthofOES)
#define glFramebufferTextureMultiviewOVR (glad_gl_context.FramebufferTextureMultiviewOVR)
#define glNamedFramebufferTextureMultiviewOVR (glad_gl_context.NamedFramebufferTextureMultiviewOVR)
#define glHintPGI (glad_gl_context.HintPGI)
#define glDetailTexFuncSGIS (glad_gl_context.DetailTexFuncSGIS)
#define glGetDetailTexFuncSGIS (glad_gl_context.GetDetailTexFuncSGIS)
#define glFogFuncSGIS (glad_gl_context.FogFuncSGIS)
#define glGetFogFuncSGIS (glad_gl_context.GetFogFuncSGIS)
#define glSampleMaskSGIS (glad_gl_context.SampleMaskSGIS)
#define glSamplePatternSGIS (glad_gl_context.SamplePatternSGIS)
#define glPixelTexGenParameteriSGIS (glad_gl_context.PixelTexGenParameteriSGIS)
#define glPixelTexGenParameterivSGIS (glad_gl_context.PixelTexGenParameterivSGIS)
#define glPixelTexGenParameterfSGIS (glad_gl_context.PixelTexGenParameterfSGIS)
#define glPixelTexGenParameterfvSGIS (glad_gl_context.PixelTexGenParameterfvSGIS)
#define glGetPixelTexGenParameterivSGIS (glad_gl_context.GetPixelTexGenParameterivSGIS)
#define glGetPixelTexGenParameterfvSGIS (glad_gl_context.GetPixelTexGenParameterfvSGIS)
#define glPointParameterfSGIS (glad_gl_context.PointParameterfSGIS)
#define glPointParameterfvSGIS (glad_gl_context.PointParameterfvSGIS)
#define glSharpenTexFuncSGIS (glad_gl_context.SharpenTexFuncSGIS)
#define glGetSharpenTexFuncSGIS (glad_gl_context.GetSharpenTexFuncSGIS)
#define glTexImage4DSGIS (glad_gl_context.TexImage4DSGIS)
#define glTexSubImage4DSGIS (glad_gl_context.TexSubImage4DSGIS)
#define glTextureColorMaskSGIS (glad_gl_context.TextureColorMaskSGIS)
#define glGetTexFilterFuncSGIS (glad_gl_context.GetTexFilterFuncSGIS)
#define glTexFilterFuncSGIS (glad_gl_context.TexFilterFuncSGIS)
#define glAsyncMarkerSGIX (glad_gl_context.AsyncMarkerSGIX)
#define glFinishAsyncSGIX (glad_gl_context.FinishAsyncSGIX)
#define glPollAsyncSGIX (glad_gl_context.PollAsyncSGIX)
#define glGenAsyncMarkersSGIX (glad_gl_context.GenAsyncMarkersSGIX)
#define glDeleteAsyncMarkersSGIX (glad_gl_context.DeleteAsyncMarkersSGIX)
#define glIsAsyncMarkerSGIX (glad_gl_context.IsAsyncMarkerSGIX)
#define glFlushRasterSGIX (glad_gl_context.FlushRasterSGIX)
#define glFragmentColorMaterialSGIX (glad_gl_context.FragmentColorMaterialSGIX)
#define glFragmentLightfSGIX (glad_gl_context.FragmentLightfSGIX)
#define glFragmentLightfvSGIX (glad_gl_context.FragmentLightfvSGIX)
#define glFragmentLightiSGIX (glad_gl_context.FragmentLightiSGIX)
#define glFragmentLightivSGIX (glad_gl_context.FragmentLightivSGIX)
#define glFragmentLightModelfSGIX (glad_gl_context.FragmentLightModelfSGIX)
#define glFragmentLightModelfvSGIX (glad_gl_context.FragmentLightModelfvSGIX)
#define glFragmentLightModeliSGIX (glad_gl_context.FragmentLightModeliSGIX)
#define glFragmentLightModelivSGIX (glad_gl_context.FragmentLightModelivSGIX)
#define glFragmentMaterialfSGIX (glad_gl_context.FragmentMaterialfSGIX)
#define glFragmentMaterialfvSGIX (glad_gl_context.FragmentMaterialfvSGIX)
#define glFragmentMaterialiSGIX (glad_gl_context.FragmentMaterialiSGIX)
#define glFragmentMaterialivSGIX (glad_gl_context.FragmentMaterialivSGIX)
#define glGetFragmentLightfvSGIX (glad_gl_context.GetFragmentLightfvSGIX)
#define glGetFragmentLightivSGIX (glad_gl_context.GetFragmentLightivSGIX)
#define glGetFragmentMaterialfvSGIX (glad_gl_context.GetFragmentMaterialfvSGIX)
#define glGetFragmentMaterialivSGIX (glad_gl_context.GetFragmentMaterialivSGIX)
#define glLightEnviSGIX (glad_gl_context.LightEnviSGIX)
#define glFrameZoomSGIX (glad_gl_context.FrameZoomSGIX)
#define glIglooInterfaceSGIX (glad_gl_context.IglooInterfaceSGIX)
#define glGetInstrumentsSGIX (glad_gl_context.GetInstrumentsSGIX)
#define glInstrumentsBufferSGIX (glad_gl_context.InstrumentsBufferSGIX)
#define glPollInstrumentsSGIX (glad_gl_context.PollInstrumentsSGIX)
#define glReadInstrumentsSGIX (glad_gl_context.ReadInstrumentsSGIX)
#define glStartInstrumentsSGIX (glad_gl_context.StartInstrumentsSGIX)
#define glStopInstrumentsSGIX (glad_gl_context.StopInstrumentsSGIX)
#define glGetListParameterfvSGIX (glad_gl_context.GetListParameterfvSGIX)
#define glGetListParameterivSGIX (glad_gl_context.GetListParameterivSGIX)
#define glListParameterfSGIX (glad_gl_context.ListParameterfSGIX)
#define glListParameterfvSGIX (glad_gl_context.ListParameterfvSGIX)
#define glListParameteriSGIX (glad_gl_context.ListParameteriSGIX)
#define glListParameterivSGIX (glad_gl_context.ListParameterivSGIX)
#define glPixelTexGenSGIX (glad_gl_context.PixelTexGenSGIX)
#define glDeformationMap3dSGIX (glad_gl_context.DeformationMap3dSGIX)
#define glDeformationMap3fSGIX (glad_gl_context.DeformationMap3fSGIX)
#define glDeformSGIX (glad_gl_context.DeformSGIX)
#define glLoadIdentityDeformationMapSGIX (glad_gl_context.LoadIdentityDeformationMapSGIX)
#define glReferencePlaneSGIX (glad_gl_context.ReferencePlaneSGIX)
#define glSpriteParameterfSGIX (glad_gl_context.SpriteParameterfSGIX)
#define glSpriteParameterfvSGIX (glad_gl_context.SpriteParameterfvSGIX)
#define glSpriteParameteriSGIX (glad_gl_context.SpriteParameteriSGIX)
#define glSpriteParameterivSGIX (glad_gl_context.SpriteParameterivSGIX)
#define glTagSampleBufferSGIX (glad_gl_context.TagSampleBufferSGIX)
#define glColorTableSGI (glad_gl_context.ColorTableSGI)
#define glColorTableParameterfvSGI (glad_gl_context.ColorTableParameterfvSGI)
#define glColorTableParameterivSGI (glad_gl_context.ColorTableParameterivSGI)
#define glCopyColorTableSGI (glad_gl_context.CopyColorTableSGI)
#define glGetColorTableSGI (glad_gl_context.GetColorTableSGI)
#define glGetColorTableParameterfvSGI (glad_gl_context.GetColorTableParameterfvSGI)
#define glGetColorTableParameterivSGI (glad_gl_context.GetColorTableParameterivSGI)
#define glFinishTextureSUNX (glad_gl_context.FinishTextureSUNX)
#define glGlobalAlphaFactorbSUN (glad_gl_context.GlobalAlphaFactorbSUN)
#define glGlobalAlphaFactorsSUN (glad_gl_context.GlobalAlphaFactorsSUN)
#define glGlobalAlphaFactoriSUN (glad_gl_context.GlobalAlphaFactoriSUN)
#define glGlobalAlphaFactorfSUN (glad_gl_context.GlobalAlphaFactorfSUN)
#define glGlobalAlphaFactordSUN (glad_gl_context.GlobalAlphaFactordSUN)
#define glGlobalAlphaFactorubSUN (glad_gl_context.GlobalAlphaFactorubSUN)
#define glGlobalAlphaFactorusSUN (glad_gl_context.GlobalAlphaFactorusSUN)
#define glGlobalAlphaFactoruiSUN (glad_gl_context.GlobalAlphaFactoruiSUN)
#define glDrawMeshArraysSUN (glad_gl_context.DrawMeshArraysSUN)
#define glReplacementCodeuiSUN (glad_gl_context.ReplacementCodeuiSUN)
#define glReplacementCodeusSUN (glad_gl_context.ReplacementCodeusSUN)
#define glReplacementCodeubSUN (glad_gl_context.ReplacementCodeubSUN)
#define glReplacementCodeuivSUN (glad_gl_context.ReplacementCodeuivSUN)
#define glReplacementCodeusvSUN (glad_gl_context.ReplacementCodeusvSUN)
#define glReplacementCodeubvSUN (glad_gl_context.ReplacementCodeubvSUN)
#define glReplacementCodePointerSUN (glad_gl_context.ReplacementCodePointerSUN)
#define glColor4ubVertex2fSUN (glad_gl_context.Color4ubVertex2fSUN)
#define glColor4ubVertex2fvSUN (glad_gl_context.Color4ubVertex2fvSUN)
#define glColor4ubVertex3fSUN (glad_gl_context.Color4ubVertex3fSUN)
#define glColor4ubVertex3fvSUN (glad_gl_context.Color4ubVertex3fvSUN)
#define glColor3fVertex3fSUN (glad_gl_context.Color3fVertex3fSUN)
#define glColor3fVertex3fvSUN (glad_gl_context.Color3fVertex3fvSUN)
#define glNormal3fVertex3fSUN (glad_gl_context.Normal3fVertex3fSUN)
#define glNormal3fVertex3fvSUN (glad_gl_context.Normal3fVertex3fvSUN)
#define glColor4fNormal3fVertex3fSUN (glad_gl_context.Color4fNormal3fVertex3fSUN)
#define glColor4fNormal3fVertex3fvSUN (glad_gl_context.Color4fNormal3fVertex3fvSUN)
#define glTexCoord2fVertex3fSUN (glad_gl_context.TexCoord2fVertex3fSUN)
#define glTexCoord2fVertex3fvSUN (glad_gl_context.TexCoord2fVertex3fvSUN)
#define glTexCoord4fVertex4fSUN (glad_gl_context.TexCoord4fVertex4fSUN)
#define glTexCoord4fVertex4fvSUN (glad_gl_context.TexCoord4fVertex4fvSUN)
#define glTexCoord2fColor4ubVertex3fSUN (glad_gl_context.TexCoord2fColor4ubVertex3fSUN)
#define glTexCoord2fColor4ubVertex3fvSUN (glad_gl_context.TexCoord2fColor4ubVertex3fvSUN)
#define glTexCoord2fColor3fVertex3fSUN (glad_gl_context.TexCoord2fColor3fVertex3fSUN)
#define glTexCoord2fColor3fVertex3fvSUN (glad_gl_context.TexCoord2fColor3fVertex3fvSUN)
#define glTexCoord2fNormal3fVertex3fSUN (glad_gl_context.TexCoord2fNormal3fVertex3fSUN)
#define glTexCoord2fNormal3fVertex3fvSUN (glad_gl_context.TexCoord2fNormal3fVertex3fvSUN)
#define glTexCoord2fColor4fNormal3fVertex3fSUN (glad_gl_context.TexCoord2fColor4fNormal3fVertex3fSUN)
#define glTexCoord2fColor4fNormal3fVertex3fvSUN (glad_gl_context.TexCoord2fColor4fNormal3fVertex3fvSUN)
#define glTexCoord4fColor4fNormal3fVertex4fSUN (glad_gl_context.TexCoord4fColor4fNormal3fVertex4fSUN)
#define glTexCoord4fColor4fNormal3fVertex4fvSUN (glad_gl_context.TexCoord4fColor4fNormal3fVertex4fvSUN)
#define glReplacementCodeuiVertex3fSUN (glad_gl_context.ReplacementCodeuiVertex3fSUN)
#define glReplacementCodeuiVertex3fvSUN (glad_gl_context.ReplacementCodeuiVertex3fvSUN)
#define glReplacementCodeuiColor4ubVertex3fSUN (glad_gl_context.ReplacementCodeuiColor4ubVertex3fSUN)
#define glReplacementCodeuiColor4ubVertex3fvSUN (glad_gl_context.ReplacementCodeuiColor4ubVertex3fvSUN)
#define glReplacementCodeuiColor3fVertex3fSUN (glad_gl_context.ReplacementCodeuiColor3fVertex3fSUN)
#define glReplacementCodeuiColor3fVertex3fvSUN (glad_gl_context.ReplacementCodeuiColor3fVertex3fvSUN)
#define glReplacementCodeuiNormal3fVertex3fSUN (glad_gl_context.ReplacementCodeuiNormal3fVertex3fSUN)
#define glReplacementCodeuiNormal3fVertex3fvSUN (glad_gl_context.ReplacementCodeuiNormal3fVertex3fvSUN)
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN (glad_gl_context.ReplacementCodeuiColor4fNormal3fVertex3fSUN)
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN (glad_gl_context.ReplacementCodeuiColor4fNormal3fVertex3fvSUN)
#define glReplacementCodeuiTexCoord2fVertex3fSUN (glad_gl_context.ReplacementCodeuiTexCoord2fVertex3fSUN)
#define glReplacementCodeuiTexCoord2fVertex3fvSUN (glad_gl_context.ReplacementCodeuiTexCoord2fVertex3fvSUN)
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (glad_gl_context.ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN)
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (glad_gl_context.ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN)
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (glad_gl_context.ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN)
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (glad_gl_context.ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN)
#define glTexImage2DExternalANGLE (glad_gl_context.TexImage2DExternalANGLE)
#define glInvalidateTextureANGLE (glad_gl_context.InvalidateTextureANGLE)
#define glTexStorageMemFlags2DANGLE (glad_gl_context.TexStorageMemFlags2DANGLE)
#define glTexStorageMemFlags2DMultisampleANGLE (glad_gl_context.TexStorageMemFlags2DMultisampleANGLE)
#define glTexStorageMemFlags3DANGLE (glad_gl_context.TexStorageMemFlags3DANGLE)
#define glTexStorageMemFlags3DMultisampleANGLE (glad_gl_context.TexStorageMemFlags3DMultisampleANGLE)
#define glImportMemoryZirconHandleANGLE (glad_gl_context.ImportMemoryZirconHandleANGLE)
#define glImportSemaphoreZirconHandleANGLE (glad_gl_context.ImportSemaphoreZirconHandleANGLE)
#define glBlendBarrier (glad_gl_context.BlendBarrier)
#define glPrimitiveBoundingBox (glad_gl_context.PrimitiveBoundingBox)
#define glBlitFramebufferANGLE (glad_gl_context.BlitFramebufferANGLE)
#define glRenderbufferStorageMultisampleANGLE (glad_gl_context.RenderbufferStorageMultisampleANGLE)
#define glDrawArraysInstancedANGLE (glad_gl_context.DrawArraysInstancedANGLE)
#define glDrawElementsInstancedANGLE (glad_gl_context.DrawElementsInstancedANGLE)
#define glVertexAttribDivisorANGLE (glad_gl_context.VertexAttribDivisorANGLE)
#define glGetTranslatedShaderSourceANGLE (glad_gl_context.GetTranslatedShaderSourceANGLE)
#define glCopyTextureLevelsAPPLE (glad_gl_context.CopyTextureLevelsAPPLE)
#define glRenderbufferStorageMultisampleAPPLE (glad_gl_context.RenderbufferStorageMultisampleAPPLE)
#define glResolveMultisampleFramebufferAPPLE (glad_gl_context.ResolveMultisampleFramebufferAPPLE)
#define glFenceSyncAPPLE (glad_gl_context.FenceSyncAPPLE)
#define glIsSyncAPPLE (glad_gl_context.IsSyncAPPLE)
#define glDeleteSyncAPPLE (glad_gl_context.DeleteSyncAPPLE)
#define glClientWaitSyncAPPLE (glad_gl_context.ClientWaitSyncAPPLE)
#define glWaitSyncAPPLE (glad_gl_context.WaitSyncAPPLE)
#define glGetInteger64vAPPLE (glad_gl_context.GetInteger64vAPPLE)
#define glGetSyncivAPPLE (glad_gl_context.GetSyncivAPPLE)
#define glMaxActiveShaderCoresARM (glad_gl_context.MaxActiveShaderCoresARM)
#define glDrawArraysInstancedBaseInstanceEXT (glad_gl_context.DrawArraysInstancedBaseInstanceEXT)
#define glDrawElementsInstancedBaseInstanceEXT (glad_gl_context.DrawElementsInstancedBaseInstanceEXT)
#define glDrawElementsInstancedBaseVertexBaseInstanceEXT (glad_gl_context.DrawElementsInstancedBaseVertexBaseInstanceEXT)
#define glBindFragDataLocationIndexedEXT (glad_gl_context.BindFragDataLocationIndexedEXT)
#define glGetProgramResourceLocationIndexEXT (glad_gl_context.GetProgramResourceLocationIndexEXT)
#define glGetFragDataIndexEXT (glad_gl_context.GetFragDataIndexEXT)
#define glBufferStorageEXT (glad_gl_context.BufferStorageEXT)
#define glClearTexImageEXT (glad_gl_context.ClearTexImageEXT)
#define glClearTexSubImageEXT (glad_gl_context.ClearTexSubImageEXT)
#define glClipControlEXT (glad_gl_context.ClipControlEXT)
#define glCopyImageSubDataEXT (glad_gl_context.CopyImageSubDataEXT)
#define glDiscardFramebufferEXT (glad_gl_context.DiscardFramebufferEXT)
#define glGenQueriesEXT (glad_gl_context.GenQueriesEXT)
#define glDeleteQueriesEXT (glad_gl_context.DeleteQueriesEXT)
#define glIsQueryEXT (glad_gl_context.IsQueryEXT)
#define glBeginQueryEXT (glad_gl_context.BeginQueryEXT)
#define glEndQueryEXT (glad_gl_context.EndQueryEXT)
#define glQueryCounterEXT (glad_gl_context.QueryCounterEXT)
#define glGetQueryivEXT (glad_gl_context.GetQueryivEXT)
#define glGetQueryObjectivEXT (glad_gl_context.GetQueryObjectivEXT)
#define glGetQueryObjectuivEXT (glad_gl_context.GetQueryObjectuivEXT)
#define glGetInteger64vEXT (glad_gl_context.GetInteger64vEXT)
#define glDrawBuffersEXT (glad_gl_context.DrawBuffersEXT)
#define glEnableiEXT (glad_gl_context.EnableiEXT)
#define glDisableiEXT (glad_gl_context.DisableiEXT)
#define glBlendEquationiEXT (glad_gl_context.BlendEquationiEXT)
#define glBlendEquationSeparateiEXT (glad_gl_context.BlendEquationSeparateiEXT)
#define glBlendFunciEXT (glad_gl_context.BlendFunciEXT)
#define glBlendFuncSeparateiEXT (glad_gl_context.BlendFuncSeparateiEXT)
#define glColorMaskiEXT (glad_gl_context.ColorMaskiEXT)
#define glIsEnablediEXT (glad_gl_context.IsEnablediEXT)
#define glDrawElementsBaseVertexEXT (glad_gl_context.DrawElementsBaseVertexEXT)
#define glDrawRangeElementsBaseVertexEXT (glad_gl_context.DrawRangeElementsBaseVertexEXT)
#define glDrawElementsInstancedBaseVertexEXT (glad_gl_context.DrawElementsInstancedBaseVertexEXT)
#define glMultiDrawElementsBaseVertexEXT (glad_gl_context.MultiDrawElementsBaseVertexEXT)
#define glDrawTransformFeedbackEXT (glad_gl_context.DrawTransformFeedbackEXT)
#define glDrawTransformFeedbackInstancedEXT (glad_gl_context.DrawTransformFeedbackInstancedEXT)
#define glGetFragmentShadingRatesEXT (glad_gl_context.GetFragmentShadingRatesEXT)
#define glShadingRateEXT (glad_gl_context.ShadingRateEXT)
#define glShadingRateCombinerOpsEXT (glad_gl_context.ShadingRateCombinerOpsEXT)
#define glFramebufferShadingRateEXT (glad_gl_context.FramebufferShadingRateEXT)
#define glVertexAttribDivisorEXT (glad_gl_context.VertexAttribDivisorEXT)
#define glMapBufferRangeEXT (glad_gl_context.MapBufferRangeEXT)
#define glFlushMappedBufferRangeEXT (glad_gl_context.FlushMappedBufferRangeEXT)
#define glMultiDrawArraysIndirectEXT (glad_gl_context.MultiDrawArraysIndirectEXT)
#define glMultiDrawElementsIndirectEXT (glad_gl_context.MultiDrawElementsIndirectEXT)
#define glFramebufferTexture2DMultisampleEXT (glad_gl_context.FramebufferTexture2DMultisampleEXT)
#define glReadBufferIndexedEXT (glad_gl_context.ReadBufferIndexedEXT)
#define glDrawBuffersIndexedEXT (glad_gl_context.DrawBuffersIndexedEXT)
#define glGetIntegeri_vEXT (glad_gl_context.GetIntegeri_vEXT)
#define glPrimitiveBoundingBoxEXT (glad_gl_context.PrimitiveBoundingBoxEXT)
#define glGetGraphicsResetStatusEXT (glad_gl_context.GetGraphicsResetStatusEXT)
#define glReadnPixelsEXT (glad_gl_context.ReadnPixelsEXT)
#define glGetnUniformfvEXT (glad_gl_context.GetnUniformfvEXT)
#define glGetnUniformivEXT (glad_gl_context.GetnUniformivEXT)
#define glActiveShaderProgramEXT (glad_gl_context.ActiveShaderProgramEXT)
#define glBindProgramPipelineEXT (glad_gl_context.BindProgramPipelineEXT)
#define glCreateShaderProgramvEXT (glad_gl_context.CreateShaderProgramvEXT)
#define glDeleteProgramPipelinesEXT (glad_gl_context.DeleteProgramPipelinesEXT)
#define glGenProgramPipelinesEXT (glad_gl_context.GenProgramPipelinesEXT)
#define glGetProgramPipelineInfoLogEXT (glad_gl_context.GetProgramPipelineInfoLogEXT)
#define glGetProgramPipelineivEXT (glad_gl_context.GetProgramPipelineivEXT)
#define glIsProgramPipelineEXT (glad_gl_context.IsProgramPipelineEXT)
#define glUseProgramStagesEXT (glad_gl_context.UseProgramStagesEXT)
#define glValidateProgramPipelineEXT (glad_gl_context.ValidateProgramPipelineEXT)
#define glFramebufferPixelLocalStorageSizeEXT (glad_gl_context.FramebufferPixelLocalStorageSizeEXT)
#define glGetFramebufferPixelLocalStorageSizeEXT (glad_gl_context.GetFramebufferPixelLocalStorageSizeEXT)
#define glClearPixelLocalStorageuiEXT (glad_gl_context.ClearPixelLocalStorageuiEXT)
#define glTexPageCommitmentEXT (glad_gl_context.TexPageCommitmentEXT)
#define glPatchParameteriEXT (glad_gl_context.PatchParameteriEXT)
#define glSamplerParameterIivEXT (glad_gl_context.SamplerParameterIivEXT)
#define glSamplerParameterIuivEXT (glad_gl_context.SamplerParameterIuivEXT)
#define glGetSamplerParameterIivEXT (glad_gl_context.GetSamplerParameterIivEXT)
#define glGetSamplerParameterIuivEXT (glad_gl_context.GetSamplerParameterIuivEXT)
#define glTexBufferRangeEXT (glad_gl_context.TexBufferRangeEXT)
#define glTexStorageAttribs2DEXT (glad_gl_context.TexStorageAttribs2DEXT)
#define glTexStorageAttribs3DEXT (glad_gl_context.TexStorageAttribs3DEXT)
#define glTextureViewEXT (glad_gl_context.TextureViewEXT)
#define glGetTextureHandleIMG (glad_gl_context.GetTextureHandleIMG)
#define glGetTextureSamplerHandleIMG (glad_gl_context.GetTextureSamplerHandleIMG)
#define glUniformHandleui64IMG (glad_gl_context.UniformHandleui64IMG)
#define glUniformHandleui64vIMG (glad_gl_context.UniformHandleui64vIMG)
#define glProgramUniformHandleui64IMG (glad_gl_context.ProgramUniformHandleui64IMG)
#define glProgramUniformHandleui64vIMG (glad_gl_context.ProgramUniformHandleui64vIMG)
#define glFramebufferTexture2DDownsampleIMG (glad_gl_context.FramebufferTexture2DDownsampleIMG)
#define glFramebufferTextureLayerDownsampleIMG (glad_gl_context.FramebufferTextureLayerDownsampleIMG)
#define glRenderbufferStorageMultisampleIMG (glad_gl_context.RenderbufferStorageMultisampleIMG)
#define glFramebufferTexture2DMultisampleIMG (glad_gl_context.FramebufferTexture2DMultisampleIMG)
#define glDebugMessageControlKHR (glad_gl_context.DebugMessageControlKHR)
#define glDebugMessageInsertKHR (glad_gl_context.DebugMessageInsertKHR)
#define glDebugMessageCallbackKHR (glad_gl_context.DebugMessageCallbackKHR)
#define glGetDebugMessageLogKHR (glad_gl_context.GetDebugMessageLogKHR)
#define glPushDebugGroupKHR (glad_gl_context.PushDebugGroupKHR)
#define glPopDebugGroupKHR (glad_gl_context.PopDebugGroupKHR)
#define glObjectLabelKHR (glad_gl_context.ObjectLabelKHR)
#define glGetObjectLabelKHR (glad_gl_context.GetObjectLabelKHR)
#define glObjectPtrLabelKHR (glad_gl_context.ObjectPtrLabelKHR)
#define glGetObjectPtrLabelKHR (glad_gl_context.GetObjectPtrLabelKHR)
#define glGetPointervKHR (glad_gl_context.GetPointervKHR)
#define glGetGraphicsResetStatusKHR (glad_gl_context.GetGraphicsResetStatusKHR)
#define glReadnPixelsKHR (glad_gl_context.ReadnPixelsKHR)
#define glGetnUniformfvKHR (glad_gl_context.GetnUniformfvKHR)
#define glGetnUniformivKHR (glad_gl_context.GetnUniformivKHR)
#define glGetnUniformuivKHR (glad_gl_context.GetnUniformuivKHR)
#define glCopyBufferSubDataNV (glad_gl_context.CopyBufferSubDataNV)
#define glCoverageMaskNV (glad_gl_context.CoverageMaskNV)
#define glCoverageOperationNV (glad_gl_context.CoverageOperationNV)
#define glDrawBuffersNV (glad_gl_context.DrawBuffersNV)
#define glDrawArraysInstancedNV (glad_gl_context.DrawArraysInstancedNV)
#define glDrawElementsInstancedNV (glad_gl_context.DrawElementsInstancedNV)
#define glBlitFramebufferNV (glad_gl_context.BlitFramebufferNV)
#define glRenderbufferStorageMultisampleNV (glad_gl_context.RenderbufferStorageMultisampleNV)
#define glVertexAttribDivisorNV (glad_gl_context.VertexAttribDivisorNV)
#define glUniformMatrix2x3fvNV (glad_gl_context.UniformMatrix2x3fvNV)
#define glUniformMatrix3x2fvNV (glad_gl_context.UniformMatrix3x2fvNV)
#define glUniformMatrix2x4fvNV (glad_gl_context.UniformMatrix2x4fvNV)
#define glUniformMatrix4x2fvNV (glad_gl_context.UniformMatrix4x2fvNV)
#define glUniformMatrix3x4fvNV (glad_gl_context.UniformMatrix3x4fvNV)
#define glUniformMatrix4x3fvNV (glad_gl_context.UniformMatrix4x3fvNV)
#define glPolygonModeNV (glad_gl_context.PolygonModeNV)
#define glReadBufferNV (glad_gl_context.ReadBufferNV)
#define glViewportArrayvNV (glad_gl_context.ViewportArrayvNV)
#define glViewportIndexedfNV (glad_gl_context.ViewportIndexedfNV)
#define glViewportIndexedfvNV (glad_gl_context.ViewportIndexedfvNV)
#define glScissorArrayvNV (glad_gl_context.ScissorArrayvNV)
#define glScissorIndexedNV (glad_gl_context.ScissorIndexedNV)
#define glScissorIndexedvNV (glad_gl_context.ScissorIndexedvNV)
#define glDepthRangeArrayfvNV (glad_gl_context.DepthRangeArrayfvNV)
#define glDepthRangeIndexedfNV (glad_gl_context.DepthRangeIndexedfNV)
#define glGetFloati_vNV (glad_gl_context.GetFloati_vNV)
#define glEnableiNV (glad_gl_context.EnableiNV)
#define glDisableiNV (glad_gl_context.DisableiNV)
#define glIsEnablediNV (glad_gl_context.IsEnablediNV)
#define glEGLImageTargetTexture2DOES (glad_gl_context.EGLImageTargetTexture2DOES)
#define glEGLImageTargetRenderbufferStorageOES (glad_gl_context.EGLImageTargetRenderbufferStorageOES)
#define glCopyImageSubDataOES (glad_gl_context.CopyImageSubDataOES)
#define glEnableiOES (glad_gl_context.EnableiOES)
#define glDisableiOES (glad_gl_context.DisableiOES)
#define glBlendEquationiOES (glad_gl_context.BlendEquationiOES)
#define glBlendEquationSeparateiOES (glad_gl_context.BlendEquationSeparateiOES)
#define glBlendFunciOES (glad_gl_context.BlendFunciOES)
#define glBlendFuncSeparateiOES (glad_gl_context.BlendFuncSeparateiOES)
#define glColorMaskiOES (glad_gl_context.ColorMaskiOES)
#define glIsEnablediOES (glad_gl_context.IsEnablediOES)
#define glDrawElementsBaseVertexOES (glad_gl_context.DrawElementsBaseVertexOES)
#define glDrawRangeElementsBaseVertexOES (glad_gl_context.DrawRangeElementsBaseVertexOES)
#define glDrawElementsInstancedBaseVertexOES (glad_gl_context.DrawElementsInstancedBaseVertexOES)
#define glFramebufferTextureOES (glad_gl_context.FramebufferTextureOES)
#define glGetProgramBinaryOES (glad_gl_context.GetProgramBinaryOES)
#define glProgramBinaryOES (glad_gl_context.ProgramBinaryOES)
#define glMapBufferOES (glad_gl_context.MapBufferOES)
#define glUnmapBufferOES (glad_gl_context.UnmapBufferOES)
#define glGetBufferPointervOES (glad_gl_context.GetBufferPointervOES)
#define glPrimitiveBoundingBoxOES (glad_gl_context.PrimitiveBoundingBoxOES)
#define glMinSampleShadingOES (glad_gl_context.MinSampleShadingOES)
#define glPatchParameteriOES (glad_gl_context.PatchParameteriOES)
#define glTexImage3DOES (glad_gl_context.TexImage3DOES)
#define glTexSubImage3DOES (glad_gl_context.TexSubImage3DOES)
#define glCopyTexSubImage3DOES (glad_gl_context.CopyTexSubImage3DOES)
#define glCompressedTexImage3DOES (glad_gl_context.CompressedTexImage3DOES)
#define glCompressedTexSubImage3DOES (glad_gl_context.CompressedTexSubImage3DOES)
#define glFramebufferTexture3DOES (glad_gl_context.FramebufferTexture3DOES)
#define glTexParameterIivOES (glad_gl_context.TexParameterIivOES)
#define glTexParameterIuivOES (glad_gl_context.TexParameterIuivOES)
#define glGetTexParameterIivOES (glad_gl_context.GetTexParameterIivOES)
#define glGetTexParameterIuivOES (glad_gl_context.GetTexParameterIuivOES)
#define glSamplerParameterIivOES (glad_gl_context.SamplerParameterIivOES)
#define glSamplerParameterIuivOES (glad_gl_context.SamplerParameterIuivOES)
#define glGetSamplerParameterIivOES (glad_gl_context.GetSamplerParameterIivOES)
#define glGetSamplerParameterIuivOES (glad_gl_context.GetSamplerParameterIuivOES)
#define glTexBufferOES (glad_gl_context.TexBufferOES)
#define glTexBufferRangeOES (glad_gl_context.TexBufferRangeOES)
#define glTexStorage3DMultisampleOES (glad_gl_context.TexStorage3DMultisampleOES)
#define glTextureViewOES (glad_gl_context.TextureViewOES)
#define glBindVertexArrayOES (glad_gl_context.BindVertexArrayOES)
#define glDeleteVertexArraysOES (glad_gl_context.DeleteVertexArraysOES)
#define glGenVertexArraysOES (glad_gl_context.GenVertexArraysOES)
#define glIsVertexArrayOES (glad_gl_context.IsVertexArrayOES)
#define glViewportArrayvOES (glad_gl_context.ViewportArrayvOES)
#define glViewportIndexedfOES (glad_gl_context.ViewportIndexedfOES)
#define glViewportIndexedfvOES (glad_gl_context.ViewportIndexedfvOES)
#define glScissorArrayvOES (glad_gl_context.ScissorArrayvOES)
#define glScissorIndexedOES (glad_gl_context.ScissorIndexedOES)
#define glScissorIndexedvOES (glad_gl_context.ScissorIndexedvOES)
#define glDepthRangeArrayfvOES (glad_gl_context.DepthRangeArrayfvOES)
#define glDepthRangeIndexedfOES (glad_gl_context.DepthRangeIndexedfOES)
#define glGetFloati_vOES (glad_gl_context.GetFloati_vOES)
#define glFramebufferTextureMultisampleMultiviewOVR (glad_gl_context.FramebufferTextureMultisampleMultiviewOVR)
#define glAlphaFuncQCOM (glad_gl_context.AlphaFuncQCOM)
#define glGetDriverControlsQCOM (glad_gl_context.GetDriverControlsQCOM)
#define glGetDriverControlStringQCOM (glad_gl_context.GetDriverControlStringQCOM)
#define glEnableDriverControlQCOM (glad_gl_context.EnableDriverControlQCOM)
#define glDisableDriverControlQCOM (glad_gl_context.DisableDriverControlQCOM)
#define glExtGetTexturesQCOM (glad_gl_context.ExtGetTexturesQCOM)
#define glExtGetBuffersQCOM (glad_gl_context.ExtGetBuffersQCOM)
#define glExtGetRenderbuffersQCOM (glad_gl_context.ExtGetRenderbuffersQCOM)
#define glExtGetFramebuffersQCOM (glad_gl_context.ExtGetFramebuffersQCOM)
#define glExtGetTexLevelParameterivQCOM (glad_gl_context.ExtGetTexLevelParameterivQCOM)
#define glExtTexObjectStateOverrideiQCOM (glad_gl_context.ExtTexObjectStateOverrideiQCOM)
#define glExtGetTexSubImageQCOM (glad_gl_context.ExtGetTexSubImageQCOM)
#define glExtGetBufferPointervQCOM (glad_gl_context.ExtGetBufferPointervQCOM)
#define glExtGetShadersQCOM (glad_gl_context.ExtGetShadersQCOM)
#define glExtGetProgramsQCOM (glad_gl_context.ExtGetProgramsQCOM)
#define glExtIsProgramBinaryQCOM (glad_gl_context.ExtIsProgramBinaryQCOM)
#define glExtGetProgramBinarySourceQCOM (glad_gl_context.ExtGetProgramBinarySourceQCOM)
#define glFramebufferFoveationConfigQCOM (glad_gl_context.FramebufferFoveationConfigQCOM)
#define glFramebufferFoveationParametersQCOM (glad_gl_context.FramebufferFoveationParametersQCOM)
#define glTexEstimateMotionQCOM (glad_gl_context.TexEstimateMotionQCOM)
#define glTexEstimateMotionRegionsQCOM (glad_gl_context.TexEstimateMotionRegionsQCOM)
#define glExtrapolateTex2DQCOM (glad_gl_context.ExtrapolateTex2DQCOM)
#define glTextureFoveationParametersQCOM (glad_gl_context.TextureFoveationParametersQCOM)
#define glFramebufferFetchBarrierQCOM (glad_gl_context.FramebufferFetchBarrierQCOM)
#define glShadingRateQCOM (glad_gl_context.ShadingRateQCOM)
#define glStartTilingQCOM (glad_gl_context.StartTilingQCOM)
#define glEndTilingQCOM (glad_gl_context.EndTilingQCOM)
#define glBindUniformLocationCHROMIUM (glad_gl_context.BindUniformLocationCHROMIUM)
#define glCoverageModulationCHROMIUM (glad_gl_context.CoverageModulationCHROMIUM)
#define glCopyTextureCHROMIUM (glad_gl_context.CopyTextureCHROMIUM)
#define glCopySubTextureCHROMIUM (glad_gl_context.CopySubTextureCHROMIUM)
#define glCompressedCopyTextureCHROMIUM (glad_gl_context.CompressedCopyTextureCHROMIUM)
#define glRequestExtensionANGLE (glad_gl_context.RequestExtensionANGLE)
#define glDisableExtensionANGLE (glad_gl_context.DisableExtensionANGLE)
#define glAcquireTexturesANGLE (glad_gl_context.AcquireTexturesANGLE)
#define glReleaseTexturesANGLE (glad_gl_context.ReleaseTexturesANGLE)
#define glGetBooleanvRobustANGLE (glad_gl_context.GetBooleanvRobustANGLE)
#define glGetBufferParameterivRobustANGLE (glad_gl_context.GetBufferParameterivRobustANGLE)
#define glGetBufferParameteri64vRobustANGLE (glad_gl_context.GetBufferParameteri64vRobustANGLE)
#define glGetFloatvRobustANGLE (glad_gl_context.GetFloatvRobustANGLE)
#define glGetFramebufferAttachmentParameterivRobustANGLE (glad_gl_context.GetFramebufferAttachmentParameterivRobustANGLE)
#define glGetIntegervRobustANGLE (glad_gl_context.GetIntegervRobustANGLE)
#define glGetProgramivRobustANGLE (glad_gl_context.GetProgramivRobustANGLE)
#define glGetRenderbufferParameterivRobustANGLE (glad_gl_context.GetRenderbufferParameterivRobustANGLE)
#define glGetShaderivRobustANGLE (glad_gl_context.GetShaderivRobustANGLE)
#define glGetTexParameterfvRobustANGLE (glad_gl_context.GetTexParameterfvRobustANGLE)
#define glGetTexParameterivRobustANGLE (glad_gl_context.GetTexParameterivRobustANGLE)
#define glGetUniformfvRobustANGLE (glad_gl_context.GetUniformfvRobustANGLE)
#define glGetUniformivRobustANGLE (glad_gl_context.GetUniformivRobustANGLE)
#define glGetVertexAttribfvRobustANGLE (glad_gl_context.GetVertexAttribfvRobustANGLE)
#define glGetVertexAttribivRobustANGLE (glad_gl_context.GetVertexAttribivRobustANGLE)
#define glGetVertexAttribPointervRobustANGLE (glad_gl_context.GetVertexAttribPointervRobustANGLE)
#define glReadPixelsRobustANGLE (glad_gl_context.ReadPixelsRobustANGLE)
#define glTexImage2DRobustANGLE (glad_gl_context.TexImage2DRobustANGLE)
#define glTexParameterfvRobustANGLE (glad_gl_context.TexParameterfvRobustANGLE)
#define glTexParameterivRobustANGLE (glad_gl_context.TexParameterivRobustANGLE)
#define glTexSubImage2DRobustANGLE (glad_gl_context.TexSubImage2DRobustANGLE)
#define glTexImage3DRobustANGLE (glad_gl_context.TexImage3DRobustANGLE)
#define glTexSubImage3DRobustANGLE (glad_gl_context.TexSubImage3DRobustANGLE)
#define glCompressedTexImage2DRobustANGLE (glad_gl_context.CompressedTexImage2DRobustANGLE)
#define glCompressedTexSubImage2DRobustANGLE (glad_gl_context.CompressedTexSubImage2DRobustANGLE)
#define glCompressedTexImage3DRobustANGLE (glad_gl_context.CompressedTexImage3DRobustANGLE)
#define glCompressedTexSubImage3DRobustANGLE (glad_gl_context.CompressedTexSubImage3DRobustANGLE)
#define glGetQueryivRobustANGLE (glad_gl_context.GetQueryivRobustANGLE)
#define glGetQueryObjectuivRobustANGLE (glad_gl_context.GetQueryObjectuivRobustANGLE)
#define glGetBufferPointervRobustANGLE (glad_gl_context.GetBufferPointervRobustANGLE)
#define glGetIntegeri_vRobustANGLE (glad_gl_context.GetIntegeri_vRobustANGLE)
#define glGetInternalformativRobustANGLE (glad_gl_context.GetInternalformativRobustANGLE)
#define glGetVertexAttribIivRobustANGLE (glad_gl_context.GetVertexAttribIivRobustANGLE)
#define glGetVertexAttribIuivRobustANGLE (glad_gl_context.GetVertexAttribIuivRobustANGLE)
#define glGetUniformuivRobustANGLE (glad_gl_context.GetUniformuivRobustANGLE)
#define glGetActiveUniformBlockivRobustANGLE (glad_gl_context.GetActiveUniformBlockivRobustANGLE)
#define glGetInteger64vRobustANGLE (glad_gl_context.GetInteger64vRobustANGLE)
#define glGetInteger64i_vRobustANGLE (glad_gl_context.GetInteger64i_vRobustANGLE)
#define glSamplerParameterivRobustANGLE (glad_gl_context.SamplerParameterivRobustANGLE)
#define glSamplerParameterfvRobustANGLE (glad_gl_context.SamplerParameterfvRobustANGLE)
#define glGetSamplerParameterivRobustANGLE (glad_gl_context.GetSamplerParameterivRobustANGLE)
#define glGetSamplerParameterfvRobustANGLE (glad_gl_context.GetSamplerParameterfvRobustANGLE)
#define glGetFramebufferParameterivRobustANGLE (glad_gl_context.GetFramebufferParameterivRobustANGLE)
#define glGetProgramInterfaceivRobustANGLE (glad_gl_context.GetProgramInterfaceivRobustANGLE)
#define glGetBooleani_vRobustANGLE (glad_gl_context.GetBooleani_vRobustANGLE)
#define glGetMultisamplefvRobustANGLE (glad_gl_context.GetMultisamplefvRobustANGLE)
#define glGetTexLevelParameterivRobustANGLE (glad_gl_context.GetTexLevelParameterivRobustANGLE)
#define glGetTexLevelParameterfvRobustANGLE (glad_gl_context.GetTexLevelParameterfvRobustANGLE)
#define glGetPointervRobustANGLERobustANGLE (glad_gl_context.GetPointervRobustANGLERobustANGLE)
#define glReadnPixelsRobustANGLE (glad_gl_context.ReadnPixelsRobustANGLE)
#define glGetnUniformfvRobustANGLE (glad_gl_context.GetnUniformfvRobustANGLE)
#define glGetnUniformivRobustANGLE (glad_gl_context.GetnUniformivRobustANGLE)
#define glGetnUniformuivRobustANGLE (glad_gl_context.GetnUniformuivRobustANGLE)
#define glTexParameterIivRobustANGLE (glad_gl_context.TexParameterIivRobustANGLE)
#define glTexParameterIuivRobustANGLE (glad_gl_context.TexParameterIuivRobustANGLE)
#define glGetTexParameterIivRobustANGLE (glad_gl_context.GetTexParameterIivRobustANGLE)
#define glGetTexParameterIuivRobustANGLE (glad_gl_context.GetTexParameterIuivRobustANGLE)
#define glSamplerParameterIivRobustANGLE (glad_gl_context.SamplerParameterIivRobustANGLE)
#define glSamplerParameterIuivRobustANGLE (glad_gl_context.SamplerParameterIuivRobustANGLE)
#define glGetSamplerParameterIivRobustANGLE (glad_gl_context.GetSamplerParameterIivRobustANGLE)
#define glGetSamplerParameterIuivRobustANGLE (glad_gl_context.GetSamplerParameterIuivRobustANGLE)
#define glGetQueryObjectivRobustANGLE (glad_gl_context.GetQueryObjectivRobustANGLE)
#define glGetQueryObjecti64vRobustANGLE (glad_gl_context.GetQueryObjecti64vRobustANGLE)
#define glGetQueryObjectui64vRobustANGLE (glad_gl_context.GetQueryObjectui64vRobustANGLE)
#define glGetFramebufferPixelLocalStorageParameterfvRobustANGLE (glad_gl_context.GetFramebufferPixelLocalStorageParameterfvRobustANGLE)
#define glGetFramebufferPixelLocalStorageParameterivRobustANGLE (glad_gl_context.GetFramebufferPixelLocalStorageParameterivRobustANGLE)
#define glCopyTexture3DANGLE (glad_gl_context.CopyTexture3DANGLE)
#define glCopySubTexture3DANGLE (glad_gl_context.CopySubTexture3DANGLE)
#define glTexStorage2DMultisampleANGLE (glad_gl_context.TexStorage2DMultisampleANGLE)
#define glGetMultisamplefvANGLE (glad_gl_context.GetMultisamplefvANGLE)
#define glSampleMaskiANGLE (glad_gl_context.SampleMaskiANGLE)
#define glMultiDrawArraysANGLE (glad_gl_context.MultiDrawArraysANGLE)
#define glMultiDrawArraysInstancedANGLE (glad_gl_context.MultiDrawArraysInstancedANGLE)
#define glMultiDrawElementsANGLE (glad_gl_context.MultiDrawElementsANGLE)
#define glMultiDrawElementsInstancedANGLE (glad_gl_context.MultiDrawElementsInstancedANGLE)
#define glDrawArraysInstancedBaseInstanceANGLE (glad_gl_context.DrawArraysInstancedBaseInstanceANGLE)
#define glDrawElementsInstancedBaseVertexBaseInstanceANGLE (glad_gl_context.DrawElementsInstancedBaseVertexBaseInstanceANGLE)
#define glMultiDrawArraysInstancedBaseInstanceANGLE (glad_gl_context.MultiDrawArraysInstancedBaseInstanceANGLE)
#define glMultiDrawElementsInstancedBaseVertexBaseInstanceANGLE (glad_gl_context.MultiDrawElementsInstancedBaseVertexBaseInstanceANGLE)
#define glPolygonModeANGLE (glad_gl_context.PolygonModeANGLE)
#define glProvokingVertexANGLE (glad_gl_context.ProvokingVertexANGLE)
#define glLoseContextCHROMIUM (glad_gl_context.LoseContextCHROMIUM)
#define glGetTexImageANGLE (glad_gl_context.GetTexImageANGLE)
#define glGetCompressedTexImageANGLE (glad_gl_context.GetCompressedTexImageANGLE)
#define glGetRenderbufferImageANGLE (glad_gl_context.GetRenderbufferImageANGLE)
#define glGetTexLevelParameterfvANGLE (glad_gl_context.GetTexLevelParameterfvANGLE)
#define glGetTexLevelParameterivANGLE (glad_gl_context.GetTexLevelParameterivANGLE)
#define glFramebufferMemorylessPixelLocalStorageANGLE (glad_gl_context.FramebufferMemorylessPixelLocalStorageANGLE)
#define glFramebufferTexturePixelLocalStorageANGLE (glad_gl_context.FramebufferTexturePixelLocalStorageANGLE)
#define glFramebufferPixelLocalClearValuefvANGLE (glad_gl_context.FramebufferPixelLocalClearValuefvANGLE)
#define glFramebufferPixelLocalClearValueivANGLE (glad_gl_context.FramebufferPixelLocalClearValueivANGLE)
#define glFramebufferPixelLocalClearValueuivANGLE (glad_gl_context.FramebufferPixelLocalClearValueuivANGLE)
#define glBeginPixelLocalStorageANGLE (glad_gl_context.BeginPixelLocalStorageANGLE)
#define glEndPixelLocalStorageANGLE (glad_gl_context.EndPixelLocalStorageANGLE)
#define glPixelLocalStorageBarrierANGLE (glad_gl_context.PixelLocalStorageBarrierANGLE)
#define glFramebufferPixelLocalStorageInterruptANGLE (glad_gl_context.FramebufferPixelLocalStorageInterruptANGLE)
#define glFramebufferPixelLocalStorageRestoreANGLE (glad_gl_context.FramebufferPixelLocalStorageRestoreANGLE)
#define glGetFramebufferPixelLocalStorageParameterfvANGLE (glad_gl_context.GetFramebufferPixelLocalStorageParameterfvANGLE)
#define glGetFramebufferPixelLocalStorageParameterivANGLE (glad_gl_context.GetFramebufferPixelLocalStorageParameterivANGLE)
#define glLogicOpANGLE (glad_gl_context.LogicOpANGLE)
#define glBlobCacheCallbacksANGLE (glad_gl_context.BlobCacheCallbacksANGLE)
#define glGetPointervANGLE (glad_gl_context.GetPointervANGLE)
#endif


GLAD_API_CALL GladGLContext* gladGetGLContext(void);
GLAD_API_CALL void gladSetGLContext(GladGLContext *context);

GLAD_API_CALL int gladLoadGLContextUserPtr(GladGLContext *context, GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLContext(GladGLContext *context, GLADloadfunc load);

GLAD_API_CALL int gladLoadGLUserPtr(GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGL(GLADloadfunc load);
GLAD_API_CALL int gladLoadGLES2ContextUserPtr(GladGLContext *context, GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLES2Context(GladGLContext *context, GLADloadfunc load);

GLAD_API_CALL int gladLoadGLES2UserPtr(GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLES2(GLADloadfunc load);

#ifdef GLAD_GL

GLAD_API_CALL int gladLoaderLoadGLContext(GladGLContext *context);
GLAD_API_CALL void gladLoaderUnloadGLContext(GladGLContext *context);
GLAD_API_CALL void gladLoaderResetGLContext(GladGLContext *context);

GLAD_API_CALL int gladLoaderLoadGL(void);
GLAD_API_CALL void gladLoaderUnloadGL(void);
GLAD_API_CALL void gladLoaderResetGL(void);

#endif
#ifdef GLAD_GLES2

GLAD_API_CALL int gladLoaderLoadGLES2Context(GladGLContext *context);
GLAD_API_CALL void gladLoaderUnloadGLES2Context(GladGLContext *context);
GLAD_API_CALL void gladLoaderResetGLES2Context(GladGLContext *context);

GLAD_API_CALL int gladLoaderLoadGLES2(void);
GLAD_API_CALL void gladLoaderUnloadGLES2(void);
GLAD_API_CALL void gladLoaderResetGLES2(void);

#endif /* GLAD_GLES2 */


#ifdef __cplusplus
}
#endif
#endif
