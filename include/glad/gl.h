/**
 * Loader generated by glad 2.0.4 on -
 *
 * SPDX-License-Identifier: (WTFPL OR CC0-1.0) AND Apache-2.0
 *
 * Generator: C/C++
 * Specification: gl
 * Extensions: 55
 *
 * APIs:
 *  - gl:compatibility=1.2
 *  - gles2=3.2
 *
 * Options:
 *  - ALIAS = True
 *  - HEADER_ONLY = False
 *  - LOADER = True
 *  - MX = True
 *  - MX_GLOBAL = True
 *
 * Commandline:
 *    --merge --api='gl:compatibility=1.2,gles2=3.2' --extensions='GL_ANGLE_instanced_arrays,GL_APPLE_sync,GL_ARB_buffer_storage,GL_ARB_debug_output,GL_ARB_vertex_buffer_object,GL_EXT_copy_image,GL_EXT_copy_texture,GL_EXT_direct_state_access,GL_EXT_disjoint_timer_query,GL_EXT_draw_buffers,GL_EXT_draw_buffers_indexed,GL_EXT_draw_elements_base_vertex,GL_EXT_draw_instanced,GL_EXT_draw_range_elements,GL_EXT_geometry_shader,GL_EXT_instanced_arrays,GL_EXT_map_buffer_range,GL_EXT_multisampled_render_to_texture,GL_EXT_primitive_bounding_box,GL_EXT_robustness,GL_EXT_separate_shader_objects,GL_EXT_subtexture,GL_EXT_tessellation_shader,GL_EXT_texture3D,GL_EXT_texture_border_clamp,GL_EXT_texture_buffer,GL_EXT_texture_object,GL_EXT_texture_storage,GL_EXT_vertex_array,GL_KHR_blend_equation_advanced,GL_KHR_debug,GL_KHR_robustness,GL_MESA_sampler_objects,GL_NV_blend_equation_advanced,GL_NV_copy_buffer,GL_NV_draw_instanced,GL_NV_framebuffer_blit,GL_NV_framebuffer_multisample,GL_NV_instanced_arrays,GL_NV_non_square_matrices,GL_NV_viewport_array,GL_OES_copy_image,GL_OES_draw_buffers_indexed,GL_OES_draw_elements_base_vertex,GL_OES_geometry_shader,GL_OES_get_program_binary,GL_OES_mapbuffer,GL_OES_primitive_bounding_box,GL_OES_sample_shading,GL_OES_tessellation_shader,GL_OES_texture_border_clamp,GL_OES_texture_buffer,GL_OES_texture_storage_multisample_2d_array,GL_OES_vertex_array_object,GL_OES_viewport_array' c --alias --loader --mx --mx-global
 *
 * Online:
 *    http://glad.sh/#api=gl%3Acompatibility%3D1.2%2Cgles2%3D3.2&extensions=GL_ANGLE_instanced_arrays%2CGL_APPLE_sync%2CGL_ARB_buffer_storage%2CGL_ARB_debug_output%2CGL_ARB_vertex_buffer_object%2CGL_EXT_copy_image%2CGL_EXT_copy_texture%2CGL_EXT_direct_state_access%2CGL_EXT_disjoint_timer_query%2CGL_EXT_draw_buffers%2CGL_EXT_draw_buffers_indexed%2CGL_EXT_draw_elements_base_vertex%2CGL_EXT_draw_instanced%2CGL_EXT_draw_range_elements%2CGL_EXT_geometry_shader%2CGL_EXT_instanced_arrays%2CGL_EXT_map_buffer_range%2CGL_EXT_multisampled_render_to_texture%2CGL_EXT_primitive_bounding_box%2CGL_EXT_robustness%2CGL_EXT_separate_shader_objects%2CGL_EXT_subtexture%2CGL_EXT_tessellation_shader%2CGL_EXT_texture3D%2CGL_EXT_texture_border_clamp%2CGL_EXT_texture_buffer%2CGL_EXT_texture_object%2CGL_EXT_texture_storage%2CGL_EXT_vertex_array%2CGL_KHR_blend_equation_advanced%2CGL_KHR_debug%2CGL_KHR_robustness%2CGL_MESA_sampler_objects%2CGL_NV_blend_equation_advanced%2CGL_NV_copy_buffer%2CGL_NV_draw_instanced%2CGL_NV_framebuffer_blit%2CGL_NV_framebuffer_multisample%2CGL_NV_instanced_arrays%2CGL_NV_non_square_matrices%2CGL_NV_viewport_array%2CGL_OES_copy_image%2CGL_OES_draw_buffers_indexed%2CGL_OES_draw_elements_base_vertex%2CGL_OES_geometry_shader%2CGL_OES_get_program_binary%2CGL_OES_mapbuffer%2CGL_OES_primitive_bounding_box%2CGL_OES_sample_shading%2CGL_OES_tessellation_shader%2CGL_OES_texture_border_clamp%2CGL_OES_texture_buffer%2CGL_OES_texture_storage_multisample_2d_array%2CGL_OES_vertex_array_object%2CGL_OES_viewport_array&generator=c&options=MERGE%2CALIAS%2CLOADER%2CMX%2CMX_GLOBAL
 *
 */

#ifndef GLAD_GL_H_
#define GLAD_GL_H_


#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifdef __gl_h_
  #error OpenGL (gl.h) header already included (API: gl), remove previous include!
#endif
#define __gl_h_ 1
#ifdef __gl3_h_
  #error OpenGL (gl3.h) header already included (API: gl), remove previous include!
#endif
#define __gl3_h_ 1
#ifdef __glext_h_
  #error OpenGL (glext.h) header already included (API: gl), remove previous include!
#endif
#define __glext_h_ 1
#ifdef __gl3ext_h_
  #error OpenGL (gl3ext.h) header already included (API: gl), remove previous include!
#endif
#define __gl3ext_h_ 1
#ifdef __gl2_h_
  #error OpenGL ES 2 header already included (API: gles2), remove previous include!
#endif
#define __gl2_h_ 1
#ifdef __gles2_gl2_h_
  #error OpenGL ES 2 header already included (API: gles2), remove previous include!
#endif
#define __gles2_gl2_h_ 1
#ifdef __gles2_gl3_h_
  #error OpenGL ES 3 header already included (API: gles2), remove previous include!
#endif
#define __gles2_gl3_h_ 1
#ifdef __clang__
#pragma clang diagnostic pop
#endif

#define GLAD_GL
#define GLAD_GLES2
#define GLAD_OPTION_GL_ALIAS
#define GLAD_OPTION_GL_LOADER
#define GLAD_OPTION_GL_MX
#define GLAD_OPTION_GL_MX_GLOBAL

#ifdef __cplusplus
extern "C" {
#endif

#ifndef GLAD_PLATFORM_H_
#define GLAD_PLATFORM_H_

#ifndef GLAD_PLATFORM_WIN32
  #if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__MINGW32__)
    #define GLAD_PLATFORM_WIN32 1
  #else
    #define GLAD_PLATFORM_WIN32 0
  #endif
#endif

#ifndef GLAD_PLATFORM_APPLE
  #ifdef __APPLE__
    #define GLAD_PLATFORM_APPLE 1
  #else
    #define GLAD_PLATFORM_APPLE 0
  #endif
#endif

#ifndef GLAD_PLATFORM_EMSCRIPTEN
  #ifdef __EMSCRIPTEN__
    #define GLAD_PLATFORM_EMSCRIPTEN 1
  #else
    #define GLAD_PLATFORM_EMSCRIPTEN 0
  #endif
#endif

#ifndef GLAD_PLATFORM_UWP
  #if defined(_MSC_VER) && !defined(GLAD_INTERNAL_HAVE_WINAPIFAMILY)
    #ifdef __has_include
      #if __has_include(<winapifamily.h>)
        #define GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
      #endif
    #elif _MSC_VER >= 1700 && !_USING_V110_SDK71_
      #define GLAD_INTERNAL_HAVE_WINAPIFAMILY 1
    #endif
  #endif

  #ifdef GLAD_INTERNAL_HAVE_WINAPIFAMILY
    #include <winapifamily.h>
    #if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)
      #define GLAD_PLATFORM_UWP 1
    #endif
  #endif

  #ifndef GLAD_PLATFORM_UWP
    #define GLAD_PLATFORM_UWP 0
  #endif
#endif

#ifdef __GNUC__
  #define GLAD_GNUC_EXTENSION __extension__
#else
  #define GLAD_GNUC_EXTENSION
#endif

#define GLAD_UNUSED(x) (void)(x)

#ifndef GLAD_API_CALL
  #if defined(GLAD_API_CALL_EXPORT)
    #if GLAD_PLATFORM_WIN32 || defined(__CYGWIN__)
      #if defined(GLAD_API_CALL_EXPORT_BUILD)
        #if defined(__GNUC__)
          #define GLAD_API_CALL __attribute__ ((dllexport)) extern
        #else
          #define GLAD_API_CALL __declspec(dllexport) extern
        #endif
      #else
        #if defined(__GNUC__)
          #define GLAD_API_CALL __attribute__ ((dllimport)) extern
        #else
          #define GLAD_API_CALL __declspec(dllimport) extern
        #endif
      #endif
    #elif defined(__GNUC__) && defined(GLAD_API_CALL_EXPORT_BUILD)
      #define GLAD_API_CALL __attribute__ ((visibility ("default"))) extern
    #else
      #define GLAD_API_CALL extern
    #endif
  #else
    #define GLAD_API_CALL extern
  #endif
#endif

#ifdef APIENTRY
  #define GLAD_API_PTR APIENTRY
#elif GLAD_PLATFORM_WIN32
  #define GLAD_API_PTR __stdcall
#else
  #define GLAD_API_PTR
#endif

#ifndef GLAPI
#define GLAPI GLAD_API_CALL
#endif

#ifndef GLAPIENTRY
#define GLAPIENTRY GLAD_API_PTR
#endif

#define GLAD_MAKE_VERSION(major, minor) (major * 10000 + minor)
#define GLAD_VERSION_MAJOR(version) (version / 10000)
#define GLAD_VERSION_MINOR(version) (version % 10000)

#define GLAD_GENERATOR_VERSION "2.0.4"

typedef void (*GLADapiproc)(void);

typedef GLADapiproc (*GLADloadfunc)(const char *name);
typedef GLADapiproc (*GLADuserptrloadfunc)(void *userptr, const char *name);

typedef void (*GLADprecallback)(const char *name, GLADapiproc apiproc, int len_args, ...);
typedef void (*GLADpostcallback)(void *ret, const char *name, GLADapiproc apiproc, int len_args, ...);

#endif /* GLAD_PLATFORM_H_ */

#define GL_2D 0x0600
#define GL_2_BYTES 0x1407
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_3_BYTES 0x1408
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_4_BYTES 0x1409
#define GL_ACCUM 0x0100
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ADD 0x0104
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_ALPHA 0x1906
#define GL_ALPHA12 0x803D
#define GL_ALPHA16 0x803E
#define GL_ALPHA16F_EXT 0x881C
#define GL_ALPHA32F_EXT 0x8816
#define GL_ALPHA4 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA8_EXT 0x803C
#define GL_ALPHA_BIAS 0x0D1D
#define GL_ALPHA_BITS 0x0D55
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_ALWAYS 0x0207
#define GL_AMBIENT 0x1200
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_AND 0x1501
#define GL_AND_INVERTED 0x1504
#define GL_AND_REVERSE 0x1502
#define GL_ARRAY_BUFFER_ARB 0x8892
#define GL_ARRAY_BUFFER_BINDING_ARB 0x8894
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_AUTO_NORMAL 0x0D80
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_AUX_BUFFERS 0x0C00
#define GL_BACK 0x0405
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_BGRA8_EXT 0x93A1
#define GL_BITMAP 0x1A00
#define GL_BITMAP_TOKEN 0x0704
#define GL_BLEND 0x0BE2
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLUE 0x1905
#define GL_BLUE_BIAS 0x0D1B
#define GL_BLUE_BITS 0x0D54
#define GL_BLUE_SCALE 0x0D1A
#define GL_BUFFER 0x82E0
#define GL_BUFFER_ACCESS_ARB 0x88BB
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_MAPPED_ARB 0x88BC
#define GL_BUFFER_MAP_POINTER_ARB 0x88BD
#define GL_BUFFER_SIZE_ARB 0x8764
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_BUFFER_USAGE_ARB 0x8765
#define GL_BYTE 0x1400
#define GL_C3F_V3F 0x2A24
#define GL_C4F_N3F_V3F 0x2A26
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_CCW 0x0901
#define GL_CLAMP 0x2900
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_CLEAR 0x1500
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_COEFF 0x0A00
#define GL_COLOR 0x1800
#define GL_COLOR_ARRAY 0x8076
#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
#define GL_COLOR_ARRAY_COUNT_EXT 0x8084
#define GL_COLOR_ARRAY_EXT 0x8076
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_COLOR_ARRAY_POINTER_EXT 0x8090
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_SIZE_EXT 0x8081
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ARRAY_TYPE_EXT 0x8082
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_INDEX 0x1900
#define GL_COLOR_INDEXES 0x1603
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_COLOR_MATERIAL 0x0B57
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_COPY 0x1503
#define GL_COPY_INVERTED 0x150C
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_CURRENT_BIT 0x00000001
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_CW 0x0900
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#define GL_DECAL 0x2101
#define GL_DECR 0x1E03
#define GL_DEPTH 0x1801
#define GL_DEPTH_BIAS 0x0D1F
#define GL_DEPTH_BITS 0x0D56
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_COMPONENT 0x1902
#define GL_DEPTH_FUNC 0x0B74
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DIFFUSE 0x1201
#define GL_DISPLAY_LIST 0x82E7
#define GL_DITHER 0x0BD0
#define GL_DOMAIN 0x0A02
#define GL_DONT_CARE 0x1100
#define GL_DOUBLE 0x140A
#define GL_DOUBLEBUFFER 0x0C32
#define GL_DRAW_BUFFER 0x0C01
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_DST_ALPHA 0x0304
#define GL_DST_COLOR 0x0306
#define GL_DYNAMIC_COPY_ARB 0x88EA
#define GL_DYNAMIC_DRAW_ARB 0x88E8
#define GL_DYNAMIC_READ_ARB 0x88E9
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_EDGE_FLAG 0x0B43
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
#define GL_EDGE_FLAG_ARRAY_EXT 0x8079
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
#define GL_ELEMENT_ARRAY_BUFFER_ARB 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
#define GL_EMISSION 0x1600
#define GL_ENABLE_BIT 0x00002000
#define GL_EQUAL 0x0202
#define GL_EQUIV 0x1509
#define GL_EVAL_BIT 0x00010000
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_EXTENSIONS 0x1F03
#define GL_EYE_LINEAR 0x2400
#define GL_EYE_PLANE 0x2502
#define GL_FALSE 0
#define GL_FASTEST 0x1101
#define GL_FEEDBACK 0x1C01
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_FILL 0x1B02
#define GL_FLAT 0x1D00
#define GL_FLOAT 0x1406
#define GL_FOG 0x0B60
#define GL_FOG_BIT 0x00000080
#define GL_FOG_COLOR 0x0B66
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_END 0x0B64
#define GL_FOG_HINT 0x0C54
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_MODE 0x0B65
#define GL_FOG_START 0x0B63
#define GL_FRONT 0x0404
#define GL_FRONT_AND_BACK 0x0408
#define GL_FRONT_FACE 0x0B46
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_GEQUAL 0x0206
#define GL_GREATER 0x0204
#define GL_GREEN 0x1904
#define GL_GREEN_BIAS 0x0D19
#define GL_GREEN_BITS 0x0D53
#define GL_GREEN_SCALE 0x0D18
#define GL_HINT_BIT 0x00008000
#define GL_INCR 0x1E02
#define GL_INDEX_ARRAY 0x8077
#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
#define GL_INDEX_ARRAY_COUNT_EXT 0x8087
#define GL_INDEX_ARRAY_EXT 0x8077
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_INDEX_ARRAY_POINTER_EXT 0x8091
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_ARRAY_TYPE_EXT 0x8085
#define GL_INDEX_BITS 0x0D51
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_INDEX_MODE 0x0C30
#define GL_INDEX_OFFSET 0x0D13
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_INT 0x1404
#define GL_INTENSITY 0x8049
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY16 0x804D
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_OPERATION 0x0502
#define GL_INVALID_VALUE 0x0501
#define GL_INVERT 0x150A
#define GL_KEEP 0x1E00
#define GL_LEFT 0x0406
#define GL_LEQUAL 0x0203
#define GL_LESS 0x0201
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007
#define GL_LIGHTING 0x0B50
#define GL_LIGHTING_BIT 0x00000040
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LINE 0x1B01
#define GL_LINEAR 0x2601
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_LINES 0x0001
#define GL_LINE_BIT 0x00000004
#define GL_LINE_LOOP 0x0002
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LINE_STRIP 0x0003
#define GL_LINE_TOKEN 0x0702
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LIST_BASE 0x0B32
#define GL_LIST_BIT 0x00020000
#define GL_LIST_INDEX 0x0B33
#define GL_LIST_MODE 0x0B30
#define GL_LOAD 0x0101
#define GL_LOGIC_OP 0x0BF1
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE16F_EXT 0x881E
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_LUMINANCE32F_EXT 0x8818
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE8_ALPHA8_EXT 0x8045
#define GL_LUMINANCE8_EXT 0x8040
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_LUMINANCE_ALPHA16F_EXT 0x881F
#define GL_LUMINANCE_ALPHA32F_EXT 0x8819
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_STENCIL 0x0D11
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MATRIX_MODE 0x0BA0
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_MAX_3D_TEXTURE_SIZE_EXT 0x8073
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_MAX_ELEMENTS_INDICES_EXT 0x80E9
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_VERTICES_EXT 0x80E8
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_MODELVIEW 0x1700
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_MODULATE 0x2100
#define GL_MULT 0x0103
#define GL_N3F_V3F 0x2A25
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_NAND 0x150E
#define GL_NEAREST 0x2600
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_NEVER 0x0200
#define GL_NICEST 0x1102
#define GL_NONE 0
#define GL_NOOP 0x1505
#define GL_NOR 0x1508
#define GL_NORMALIZE 0x0BA1
#define GL_NORMAL_ARRAY 0x8075
#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
#define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
#define GL_NORMAL_ARRAY_EXT 0x8075
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
#define GL_NOTEQUAL 0x0205
#define GL_NO_ERROR 0
#define GL_OBJECT_LINEAR 0x2401
#define GL_OBJECT_PLANE 0x2501
#define GL_ONE 1
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_OR 0x1507
#define GL_ORDER 0x0A01
#define GL_OR_INVERTED 0x150D
#define GL_OR_REVERSE 0x150B
#define GL_OUT_OF_MEMORY 0x0505
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_PACK_IMAGE_HEIGHT_EXT 0x806C
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_SKIP_IMAGES_EXT 0x806B
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_POINT 0x1B00
#define GL_POINTS 0x0000
#define GL_POINT_BIT 0x00000002
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SMOOTH 0x0B10
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_POINT_TOKEN 0x0701
#define GL_POLYGON 0x0009
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_POLYGON_TOKEN 0x0703
#define GL_POSITION 0x1203
#define GL_PROGRAM 0x82E2
#define GL_PROGRAM_MATRIX_EXT 0x8E2D
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_PROJECTION 0x1701
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_PROXY_TEXTURE_3D_EXT 0x8070
#define GL_Q 0x2003
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_QUADS 0x0007
#define GL_QUAD_STRIP 0x0008
#define GL_QUERY 0x82E3
#define GL_R 0x2002
#define GL_R16F_EXT 0x822D
#define GL_R32F_EXT 0x822E
#define GL_R3_G3_B2 0x2A10
#define GL_R8_EXT 0x8229
#define GL_READ_BUFFER 0x0C02
#define GL_READ_ONLY_ARB 0x88B8
#define GL_READ_WRITE_ARB 0x88BA
#define GL_RED 0x1903
#define GL_RED_BIAS 0x0D15
#define GL_RED_BITS 0x0D52
#define GL_RED_SCALE 0x0D14
#define GL_RENDER 0x1C00
#define GL_RENDERER 0x1F01
#define GL_RENDER_MODE 0x0C40
#define GL_REPEAT 0x2901
#define GL_REPLACE 0x1E01
#define GL_RESCALE_NORMAL 0x803A
#define GL_RETURN 0x0102
#define GL_RG16F_EXT 0x822F
#define GL_RG32F_EXT 0x8230
#define GL_RG8_EXT 0x822B
#define GL_RGB 0x1907
#define GL_RGB10 0x8052
#define GL_RGB10_A2 0x8059
#define GL_RGB10_A2_EXT 0x8059
#define GL_RGB10_EXT 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGB16F_EXT 0x881B
#define GL_RGB32F_EXT 0x8815
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB5_A1 0x8057
#define GL_RGB8 0x8051
#define GL_RGBA 0x1908
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_RGBA16F_EXT 0x881A
#define GL_RGBA2 0x8055
#define GL_RGBA32F_EXT 0x8814
#define GL_RGBA4 0x8056
#define GL_RGBA8 0x8058
#define GL_RGBA_MODE 0x0C31
#define GL_RIGHT 0x0407
#define GL_S 0x2000
#define GL_SAMPLER 0x82E6
#define GL_SCISSOR_BIT 0x00080000
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
#define GL_SELECT 0x1C02
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_SET 0x150F
#define GL_SHADER 0x82E1
#define GL_SHADE_MODEL 0x0B54
#define GL_SHININESS 0x1601
#define GL_SHORT 0x1402
#define GL_SINGLE_COLOR 0x81F9
#define GL_SMOOTH 0x1D01
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SPECULAR 0x1202
#define GL_SPHERE_MAP 0x2402
#define GL_SPOT_CUTOFF 0x1206
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SRC_ALPHA 0x0302
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_SRC_COLOR 0x0300
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STATIC_COPY_ARB 0x88E6
#define GL_STATIC_DRAW_ARB 0x88E4
#define GL_STATIC_READ_ARB 0x88E5
#define GL_STENCIL 0x1802
#define GL_STENCIL_BITS 0x0D57
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_STEREO 0x0C33
#define GL_STREAM_COPY_ARB 0x88E2
#define GL_STREAM_DRAW_ARB 0x88E0
#define GL_STREAM_READ_ARB 0x88E1
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_T 0x2001
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_V3F 0x2A27
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#define GL_T4F_V4F 0x2A28
#define GL_TEXTURE 0x1702
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_1D_BINDING_EXT 0x8068
#define GL_TEXTURE_2D 0x0DE1
#define GL_TEXTURE_2D_BINDING_EXT 0x8069
#define GL_TEXTURE_3D 0x806F
#define GL_TEXTURE_3D_BINDING_EXT 0x806A
#define GL_TEXTURE_3D_EXT 0x806F
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_TEXTURE_BIT 0x00040000
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_BORDER 0x1005
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
#define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_DEPTH_EXT 0x8071
#define GL_TEXTURE_ENV 0x2300
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT 0x912F
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_PRIORITY_EXT 0x8066
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_TEXTURE_RESIDENT_EXT 0x8067
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_TEXTURE_WRAP_R_EXT 0x8072
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_TRANSFORM_BIT 0x00001000
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_FAN 0x0006
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRUE 1
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_UNPACK_IMAGE_HEIGHT_EXT 0x806E
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_SKIP_IMAGES_EXT 0x806D
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNSIGNED_BYTE 0x1401
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_INT 0x1405
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_SHORT 0x1403
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_VENDOR 0x1F00
#define GL_VERSION 0x1F02
#define GL_VERTEX_ARRAY 0x8074
#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
#define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
#define GL_VERTEX_ARRAY_EXT 0x8074
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
#define GL_VIEWPORT 0x0BA2
#define GL_VIEWPORT_BIT 0x00000800
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
#define GL_WRITE_ONLY_ARB 0x88B9
#define GL_XOR 0x1506
#define GL_ZERO 0
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_ACTIVE_PROGRAM_EXT 0x8259
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_ALL_SHADER_BITS_EXT 0xFFFFFFFF
#define GL_ALREADY_SIGNALED 0x911A
#define GL_ALREADY_SIGNALED_APPLE 0x911A
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_ARRAY_BUFFER 0x8892
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ARRAY_SIZE 0x92FB
#define GL_ARRAY_STRIDE 0x92FE
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_EQUATION 0x8009
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_BLEND_OVERLAP_NV 0x9281
#define GL_BLEND_PREMULTIPLIED_SRC_NV 0x9280
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLOCK_INDEX 0x92FD
#define GL_BLUE_NV 0x1905
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_ACCESS_OES 0x88BB
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_BUFFER_KHR 0x82E0
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAPPED_OES 0x88BC
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_BUFFER_MAP_POINTER_OES 0x88BD
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_BUFFER_USAGE 0x8765
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLAMP_TO_BORDER_EXT 0x812D
#define GL_CLAMP_TO_BORDER_OES 0x812D
#define GL_COLORBURN 0x929A
#define GL_COLORBURN_KHR 0x929A
#define GL_COLORBURN_NV 0x929A
#define GL_COLORDODGE 0x9299
#define GL_COLORDODGE_KHR 0x9299
#define GL_COLORDODGE_NV 0x9299
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_COMPILE_STATUS 0x8B81
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_RGBA_ASTC_10x10 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_10x5 0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x6 0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x8 0x93BA
#define GL_COMPRESSED_RGBA_ASTC_12x10 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x12 0x93BD
#define GL_COMPRESSED_RGBA_ASTC_4x4 0x93B0
#define GL_COMPRESSED_RGBA_ASTC_5x4 0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x5 0x93B2
#define GL_COMPRESSED_RGBA_ASTC_6x5 0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x6 0x93B4
#define GL_COMPRESSED_RGBA_ASTC_8x5 0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x6 0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x8 0x93B7
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 0x93DD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_COMPUTE_SHADER 0x91B9
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_CONDITION_SATISFIED 0x911C
#define GL_CONDITION_SATISFIED_APPLE 0x911C
#define GL_CONJOINT_NV 0x9284
#define GL_CONSTANT_ALPHA 0x8003
#define GL_CONSTANT_COLOR 0x8001
#define GL_CONTEXT_FLAGS 0x821E
#define GL_CONTEXT_FLAG_DEBUG_BIT_KHR 0x00000002
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_CONTEXT_LOST 0x0507
#define GL_CONTEXT_LOST_KHR 0x0507
#define GL_CONTEXT_ROBUST_ACCESS_EXT 0x90F3
#define GL_CONTEXT_ROBUST_ACCESS_KHR 0x90F3
#define GL_CONTRAST_NV 0x92A1
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_READ_BUFFER_NV 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_COPY_WRITE_BUFFER_NV 0x8F37
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_CURRENT_QUERY 0x8865
#define GL_CURRENT_QUERY_EXT 0x8865
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_DARKEN 0x9297
#define GL_DARKEN_KHR 0x9297
#define GL_DARKEN_NV 0x9297
#define GL_DEBUG_CALLBACK_FUNCTION_KHR 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM_KHR 0x8245
#define GL_DEBUG_GROUP_STACK_DEPTH_KHR 0x826D
#define GL_DEBUG_LOGGED_MESSAGES_KHR 0x9145
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR 0x8243
#define GL_DEBUG_OUTPUT_KHR 0x92E0
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR 0x8242
#define GL_DEBUG_SEVERITY_HIGH_KHR 0x9146
#define GL_DEBUG_SEVERITY_LOW_KHR 0x9148
#define GL_DEBUG_SEVERITY_MEDIUM_KHR 0x9147
#define GL_DEBUG_SEVERITY_NOTIFICATION_KHR 0x826B
#define GL_DEBUG_SOURCE_API_KHR 0x8246
#define GL_DEBUG_SOURCE_APPLICATION_KHR 0x824A
#define GL_DEBUG_SOURCE_OTHER_KHR 0x824B
#define GL_DEBUG_SOURCE_SHADER_COMPILER_KHR 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY_KHR 0x8249
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR 0x8247
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR 0x824D
#define GL_DEBUG_TYPE_ERROR_KHR 0x824C
#define GL_DEBUG_TYPE_MARKER_KHR 0x8268
#define GL_DEBUG_TYPE_OTHER_KHR 0x8251
#define GL_DEBUG_TYPE_PERFORMANCE_KHR 0x8250
#define GL_DEBUG_TYPE_POP_GROUP_KHR 0x826A
#define GL_DEBUG_TYPE_PORTABILITY_KHR 0x824F
#define GL_DEBUG_TYPE_PUSH_GROUP_KHR 0x8269
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR 0x824E
#define GL_DECR_WRAP 0x8508
#define GL_DELETE_STATUS 0x8B80
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH_STENCIL 0x84F9
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_DIFFERENCE 0x929E
#define GL_DIFFERENCE_KHR 0x929E
#define GL_DIFFERENCE_NV 0x929E
#define GL_DISJOINT_NV 0x9283
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER0_EXT 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER10_EXT 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER11_EXT 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER12_EXT 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER13_EXT 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER14_EXT 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_DRAW_BUFFER15_EXT 0x8834
#define GL_DRAW_BUFFER1_EXT 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER2_EXT 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER3_EXT 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER4_EXT 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER5_EXT 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER6_EXT 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER7_EXT 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER8_EXT 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER9_EXT 0x882E
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING_NV 0x8CA6
#define GL_DRAW_FRAMEBUFFER_NV 0x8CA9
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_DST_ATOP_NV 0x928F
#define GL_DST_IN_NV 0x928B
#define GL_DST_NV 0x9287
#define GL_DST_OUT_NV 0x928D
#define GL_DST_OVER_NV 0x9289
#define GL_DYNAMIC_COPY 0x88EA
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_EXCLUSION 0x92A0
#define GL_EXCLUSION_KHR 0x92A0
#define GL_EXCLUSION_NV 0x92A0
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
#define GL_FIRST_VERTEX_CONVENTION_OES 0x8E4D
#define GL_FIXED 0x140C
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x3_NV 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT2x4_NV 0x8B66
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x2_NV 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT3x4_NV 0x8B68
#define GL_FLOAT_MAT4 0x8B5C
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x2_NV 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_FLOAT_MAT4x3_NV 0x8B6A
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_FRACTIONAL_EVEN_EXT 0x8E7C
#define GL_FRACTIONAL_EVEN_OES 0x8E7C
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRACTIONAL_ODD_EXT 0x8E7B
#define GL_FRACTIONAL_ODD_OES 0x8E7B
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_FRAGMENT_SHADER_BIT_EXT 0x00000002
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_FRAMEBUFFER 0x8D40
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT 0x8D6C
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT 0x9312
#define GL_FRAMEBUFFER_DEFAULT_LAYERS_OES 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV 0x8D56
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_SUBTRACT 0x800A
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_LINKED_INPUT_TYPE_EXT 0x8917
#define GL_GEOMETRY_LINKED_INPUT_TYPE_OES 0x8917
#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT 0x8918
#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES 0x8918
#define GL_GEOMETRY_LINKED_VERTICES_OUT_EXT 0x8916
#define GL_GEOMETRY_LINKED_VERTICES_OUT_OES 0x8916
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_GEOMETRY_SHADER_BIT_EXT 0x00000004
#define GL_GEOMETRY_SHADER_BIT_OES 0x00000004
#define GL_GEOMETRY_SHADER_EXT 0x8DD9
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_GEOMETRY_SHADER_INVOCATIONS_EXT 0x887F
#define GL_GEOMETRY_SHADER_INVOCATIONS_OES 0x887F
#define GL_GEOMETRY_SHADER_OES 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GPU_DISJOINT_EXT 0x8FBB
#define GL_GREEN_NV 0x1904
#define GL_GUILTY_CONTEXT_RESET 0x8253
#define GL_GUILTY_CONTEXT_RESET_EXT 0x8253
#define GL_GUILTY_CONTEXT_RESET_KHR 0x8253
#define GL_HALF_FLOAT 0x140B
#define GL_HARDLIGHT 0x929B
#define GL_HARDLIGHT_KHR 0x929B
#define GL_HARDLIGHT_NV 0x929B
#define GL_HARDMIX_NV 0x92A9
#define GL_HIGH_FLOAT 0x8DF2
#define GL_HIGH_INT 0x8DF5
#define GL_HSL_COLOR 0x92AF
#define GL_HSL_COLOR_KHR 0x92AF
#define GL_HSL_COLOR_NV 0x92AF
#define GL_HSL_HUE 0x92AD
#define GL_HSL_HUE_KHR 0x92AD
#define GL_HSL_HUE_NV 0x92AD
#define GL_HSL_LUMINOSITY 0x92B0
#define GL_HSL_LUMINOSITY_KHR 0x92B0
#define GL_HSL_LUMINOSITY_NV 0x92B0
#define GL_HSL_SATURATION 0x92AE
#define GL_HSL_SATURATION_KHR 0x92AE
#define GL_HSL_SATURATION_NV 0x92AE
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_BUFFER_EXT 0x9051
#define GL_IMAGE_BUFFER_OES 0x9051
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_INCR_WRAP 0x8507
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#define GL_INNOCENT_CONTEXT_RESET_EXT 0x8254
#define GL_INNOCENT_CONTEXT_RESET_KHR 0x8254
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_BUFFER_EXT 0x905C
#define GL_INT_IMAGE_BUFFER_OES 0x905C
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910C
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#define GL_INT_SAMPLER_BUFFER_OES 0x8DD0
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_INVERT_OVG_NV 0x92B4
#define GL_INVERT_RGB_NV 0x92A3
#define GL_ISOLINES 0x8E7A
#define GL_ISOLINES_EXT 0x8E7A
#define GL_ISOLINES_OES 0x8E7A
#define GL_IS_PER_PATCH 0x92E7
#define GL_IS_PER_PATCH_EXT 0x92E7
#define GL_IS_PER_PATCH_OES 0x92E7
#define GL_IS_ROW_MAJOR 0x9300
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
#define GL_LAST_VERTEX_CONVENTION_OES 0x8E4E
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_LAYER_PROVOKING_VERTEX_EXT 0x825E
#define GL_LAYER_PROVOKING_VERTEX_OES 0x825E
#define GL_LIGHTEN 0x9298
#define GL_LIGHTEN_KHR 0x9298
#define GL_LIGHTEN_NV 0x9298
#define GL_LINEARBURN_NV 0x92A5
#define GL_LINEARDODGE_NV 0x92A4
#define GL_LINEARLIGHT_NV 0x92A7
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINES_ADJACENCY_EXT 0x000A
#define GL_LINES_ADJACENCY_OES 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#define GL_LINE_STRIP_ADJACENCY_OES 0x000B
#define GL_LINK_STATUS 0x8B82
#define GL_LOCATION 0x930E
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#define GL_LOSE_CONTEXT_ON_RESET_EXT 0x8252
#define GL_LOSE_CONTEXT_ON_RESET_KHR 0x8252
#define GL_LOW_FLOAT 0x8DF0
#define GL_LOW_INT 0x8DF3
#define GL_MAJOR_VERSION 0x821B
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_FLUSH_EXPLICIT_BIT_EXT 0x0010
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_INVALIDATE_BUFFER_BIT_EXT 0x0008
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_INVALIDATE_RANGE_BIT_EXT 0x0004
#define GL_MAP_READ_BIT_EXT 0x0001
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_MAP_UNSYNCHRONIZED_BIT_EXT 0x0020
#define GL_MAP_WRITE_BIT_EXT 0x0002
#define GL_MATRIX_STRIDE 0x92FF
#define GL_MAX 0x8008
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8A32
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8A32
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E1E
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E1F
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E1F
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR 0x826C
#define GL_MAX_DEBUG_LOGGED_MESSAGES_KHR 0x9144
#define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR 0x9143
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_MAX_DRAW_BUFFERS_EXT 0x8824
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_LAYERS_EXT 0x9317
#define GL_MAX_FRAMEBUFFER_LAYERS_OES 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT 0x92CF
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES 0x92CF
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT 0x90CD
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES 0x90CD
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT 0x9123
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES 0x8DE0
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT 0x90D7
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES 0x90D7
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES 0x8C29
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES 0x8DE1
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8DDF
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_LABEL_LENGTH_KHR 0x82E8
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_PATCH_VERTICES_EXT 0x8E7D
#define GL_MAX_PATCH_VERTICES_OES 0x8E7D
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_MAX_SAMPLES 0x8D57
#define GL_MAX_SAMPLES_EXT 0x8D57
#define GL_MAX_SAMPLES_NV 0x8D57
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_MAX_SERVER_WAIT_TIMEOUT_APPLE 0x9111
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT 0x92CD
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES 0x92CD
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT 0x90CB
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES 0x90CB
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT 0x886C
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES 0x886C
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT 0x8E83
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES 0x8E83
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT 0x90D8
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES 0x90D8
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT 0x8E81
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES 0x8E81
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT 0x8E85
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES 0x8E85
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E7F
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E7F
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT 0x92CE
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES 0x92CE
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT 0x90CC
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES 0x90CC
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT 0x886D
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES 0x886D
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT 0x8E86
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES 0x8E86
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT 0x90D9
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES 0x90D9
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT 0x8E82
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES 0x8E82
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E80
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E80
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_GEN_LEVEL_EXT 0x8E7E
#define GL_MAX_TESS_GEN_LEVEL_OES 0x8E7E
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TESS_PATCH_COMPONENTS_EXT 0x8E84
#define GL_MAX_TESS_PATCH_COMPONENTS_OES 0x8E84
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
#define GL_MAX_TEXTURE_BUFFER_SIZE_OES 0x8C2B
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VIEWPORTS_NV 0x825B
#define GL_MAX_VIEWPORTS_OES 0x825B
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_MEDIUM_INT 0x8DF4
#define GL_MIN 0x8007
#define GL_MINOR_VERSION 0x821C
#define GL_MINUS_CLAMPED_NV 0x92B3
#define GL_MINUS_NV 0x929F
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIN_SAMPLE_SHADING_VALUE_OES 0x8C37
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MULTIPLY 0x9294
#define GL_MULTIPLY_KHR 0x9294
#define GL_MULTIPLY_NV 0x9294
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY 0x9382
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE 0x9381
#define GL_NAME_LENGTH 0x92F9
#define GL_NO_RESET_NOTIFICATION 0x8261
#define GL_NO_RESET_NOTIFICATION_EXT 0x8261
#define GL_NO_RESET_NOTIFICATION_KHR 0x8261
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_NUM_EXTENSIONS 0x821D
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_NUM_PROGRAM_BINARY_FORMATS_OES 0x87FE
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_OBJECT_TYPE 0x9112
#define GL_OBJECT_TYPE_APPLE 0x9112
#define GL_OFFSET 0x92FC
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_OVERLAY 0x9296
#define GL_OVERLAY_KHR 0x9296
#define GL_OVERLAY_NV 0x9296
#define GL_PATCHES 0x000E
#define GL_PATCHES_EXT 0x000E
#define GL_PATCHES_OES 0x000E
#define GL_PATCH_VERTICES 0x8E72
#define GL_PATCH_VERTICES_EXT 0x8E72
#define GL_PATCH_VERTICES_OES 0x8E72
#define GL_PINLIGHT_NV 0x92A8
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_PLUS_CLAMPED_ALPHA_NV 0x92B2
#define GL_PLUS_CLAMPED_NV 0x92B1
#define GL_PLUS_DARKER_NV 0x9292
#define GL_PLUS_NV 0x9291
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#define GL_PRIMITIVES_GENERATED_OES 0x8C87
#define GL_PRIMITIVE_BOUNDING_BOX 0x92BE
#define GL_PRIMITIVE_BOUNDING_BOX_EXT 0x92BE
#define GL_PRIMITIVE_BOUNDING_BOX_OES 0x92BE
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES 0x8221
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_PROGRAM_BINARY_FORMATS_OES 0x87FF
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_PROGRAM_BINARY_LENGTH_OES 0x8741
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_KHR 0x82E2
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_PROGRAM_PIPELINE_BINDING_EXT 0x825A
#define GL_PROGRAM_PIPELINE_KHR 0x82E4
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_PROGRAM_SEPARABLE_EXT 0x8258
#define GL_QUADS_EXT 0x0007
#define GL_QUADS_OES 0x0007
#define GL_QUERY_COUNTER_BITS_EXT 0x8864
#define GL_QUERY_KHR 0x82E3
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_QUERY_RESULT_AVAILABLE_EXT 0x8867
#define GL_QUERY_RESULT_EXT 0x8866
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_R16F 0x822D
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32F 0x822E
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_R8 0x8229
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R8_SNORM 0x8F94
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_READ_FRAMEBUFFER_BINDING_NV 0x8CAA
#define GL_READ_FRAMEBUFFER_NV 0x8CA8
#define GL_READ_ONLY 0x88B8
#define GL_READ_WRITE 0x88BA
#define GL_RED_INTEGER 0x8D94
#define GL_RED_NV 0x1903
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_GEOMETRY_SHADER_EXT 0x9309
#define GL_REFERENCED_BY_GEOMETRY_SHADER_OES 0x9309
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT 0x9307
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT 0x9308
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES 0x9308
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_NV 0x8CAB
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#define GL_RESET_NOTIFICATION_STRATEGY_EXT 0x8256
#define GL_RESET_NOTIFICATION_STRATEGY_KHR 0x8256
#define GL_RG 0x8227
#define GL_RG16F 0x822F
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32F 0x8230
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_RG8 0x822B
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG8_SNORM 0x8F95
#define GL_RGB10_A2UI 0x906F
#define GL_RGB16F 0x881B
#define GL_RGB16I 0x8D89
#define GL_RGB16UI 0x8D77
#define GL_RGB32F 0x8815
#define GL_RGB32I 0x8D83
#define GL_RGB32UI 0x8D71
#define GL_RGB565 0x8D62
#define GL_RGB8I 0x8D8F
#define GL_RGB8UI 0x8D7D
#define GL_RGB8_SNORM 0x8F96
#define GL_RGB9_E5 0x8C3D
#define GL_RGBA16F 0x881A
#define GL_RGBA16I 0x8D88
#define GL_RGBA16UI 0x8D76
#define GL_RGBA32F 0x8814
#define GL_RGBA32I 0x8D82
#define GL_RGBA32UI 0x8D70
#define GL_RGBA8I 0x8D8E
#define GL_RGBA8UI 0x8D7C
#define GL_RGBA8_SNORM 0x8F97
#define GL_RGBA_INTEGER 0x8D99
#define GL_RGB_INTEGER 0x8D98
#define GL_RG_INTEGER 0x8228
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910B
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_BINDING 0x8919
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SAMPLER_BUFFER_EXT 0x8DC2
#define GL_SAMPLER_BUFFER_OES 0x8DC2
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_SAMPLER_KHR 0x82E6
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_SHADING 0x8C36
#define GL_SAMPLE_SHADING_OES 0x8C36
#define GL_SCREEN 0x9295
#define GL_SCREEN_KHR 0x9295
#define GL_SCREEN_NV 0x9295
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_SHADER_KHR 0x82E1
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_TYPE 0x8B4F
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_SIGNALED 0x9119
#define GL_SIGNALED_APPLE 0x9119
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_SOFTLIGHT 0x929C
#define GL_SOFTLIGHT_KHR 0x929C
#define GL_SOFTLIGHT_NV 0x929C
#define GL_SRC_ATOP_NV 0x928E
#define GL_SRC_IN_NV 0x928A
#define GL_SRC_NV 0x9286
#define GL_SRC_OUT_NV 0x928C
#define GL_SRC_OVER_NV 0x9288
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_STACK_OVERFLOW_KHR 0x0503
#define GL_STACK_UNDERFLOW_KHR 0x0504
#define GL_STATIC_COPY 0x88E6
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STREAM_COPY 0x88E2
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_CONDITION_APPLE 0x9113
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_FENCE_APPLE 0x9116
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FLAGS_APPLE 0x9115
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SYNC_FLUSH_COMMANDS_BIT_APPLE 0x00000001
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE 0x9117
#define GL_SYNC_OBJECT_APPLE 0x8A53
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_STATUS_APPLE 0x9114
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_CONTROL_OUTPUT_VERTICES_EXT 0x8E75
#define GL_TESS_CONTROL_OUTPUT_VERTICES_OES 0x8E75
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_CONTROL_SHADER_BIT_EXT 0x00000008
#define GL_TESS_CONTROL_SHADER_BIT_OES 0x00000008
#define GL_TESS_CONTROL_SHADER_EXT 0x8E88
#define GL_TESS_CONTROL_SHADER_OES 0x8E88
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_TESS_EVALUATION_SHADER_BIT_EXT 0x00000010
#define GL_TESS_EVALUATION_SHADER_BIT_OES 0x00000010
#define GL_TESS_EVALUATION_SHADER_EXT 0x8E87
#define GL_TESS_EVALUATION_SHADER_OES 0x8E87
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_MODE_EXT 0x8E76
#define GL_TESS_GEN_MODE_OES 0x8E76
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_TESS_GEN_POINT_MODE_EXT 0x8E79
#define GL_TESS_GEN_POINT_MODE_OES 0x8E79
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_SPACING_EXT 0x8E77
#define GL_TESS_GEN_SPACING_OES 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TESS_GEN_VERTEX_ORDER_EXT 0x8E78
#define GL_TESS_GEN_VERTEX_ORDER_OES 0x8E78
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES 0x9102
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES 0x9105
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
#define GL_TEXTURE_BINDING_BUFFER_OES 0x8C2C
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_BORDER_COLOR_EXT 0x1004
#define GL_TEXTURE_BORDER_COLOR_OES 0x1004
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING_EXT 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING_OES 0x8C2A
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES 0x8C2D
#define GL_TEXTURE_BUFFER_EXT 0x8C2A
#define GL_TEXTURE_BUFFER_OES 0x8C2A
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT 0x919F
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES 0x919F
#define GL_TEXTURE_BUFFER_OFFSET_EXT 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_OES 0x919D
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_BUFFER_SIZE_EXT 0x919E
#define GL_TEXTURE_BUFFER_SIZE_OES 0x919E
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_TIMEOUT_EXPIRED_APPLE 0x911B
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_TIMEOUT_IGNORED_APPLE 0xFFFFFFFFFFFFFFFF
#define GL_TIMESTAMP_EXT 0x8E28
#define GL_TIME_ELAPSED_EXT 0x88BF
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#define GL_TRIANGLES_ADJACENCY_OES 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#define GL_TRIANGLE_STRIP_ADJACENCY_OES 0x000D
#define GL_TYPE 0x92FA
#define GL_UNCORRELATED_NV 0x9282
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_UNDEFINED_VERTEX_EXT 0x8260
#define GL_UNDEFINED_VERTEX_OES 0x8260
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#define GL_UNKNOWN_CONTEXT_RESET_EXT 0x8255
#define GL_UNKNOWN_CONTEXT_RESET_KHR 0x8255
#define GL_UNSIGNALED 0x9118
#define GL_UNSIGNALED_APPLE 0x9118
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#define GL_UNSIGNED_INT_IMAGE_BUFFER_OES 0x9067
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910D
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_OES 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_VALIDATE_STATUS 0x8B83
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ARRAY_BINDING_OES 0x85B5
#define GL_VERTEX_ARRAY_KHR 0x8074
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_VERTEX_SHADER 0x8B31
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_VERTEX_SHADER_BIT_EXT 0x00000001
#define GL_VIEWPORT_BOUNDS_RANGE_NV 0x825D
#define GL_VIEWPORT_BOUNDS_RANGE_OES 0x825D
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV 0x825F
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES 0x825F
#define GL_VIEWPORT_SUBPIXEL_BITS_NV 0x825C
#define GL_VIEWPORT_SUBPIXEL_BITS_OES 0x825C
#define GL_VIVIDLIGHT_NV 0x92A6
#define GL_WAIT_FAILED 0x911D
#define GL_WAIT_FAILED_APPLE 0x911D
#define GL_WRITE_ONLY 0x88B9
#define GL_WRITE_ONLY_OES 0x88B9
#define GL_XOR_NV 0x1506


#include <KHR/khrplatform.h>
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef khronos_int8_t GLbyte;
typedef khronos_uint8_t GLubyte;
typedef khronos_int16_t GLshort;
typedef khronos_uint16_t GLushort;
typedef int GLint;
typedef unsigned int GLuint;
typedef khronos_int32_t GLclampx;
typedef int GLsizei;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void *GLeglClientBufferEXT;
typedef void *GLeglImageOES;
typedef char GLchar;
typedef char GLcharARB;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
typedef khronos_uint16_t GLhalf;
typedef khronos_uint16_t GLhalfARB;
typedef khronos_int32_t GLfixed;
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptr;
#else
typedef khronos_intptr_t GLintptr;
#endif
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_intptr_t GLintptrARB;
#else
typedef khronos_intptr_t GLintptrARB;
#endif
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptr;
#else
typedef khronos_ssize_t GLsizeiptr;
#endif
#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ > 1060)
typedef khronos_ssize_t GLsizeiptrARB;
#else
typedef khronos_ssize_t GLsizeiptrARB;
#endif
typedef khronos_int64_t GLint64;
typedef khronos_int64_t GLint64EXT;
typedef khronos_uint64_t GLuint64;
typedef khronos_uint64_t GLuint64EXT;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef void (GLAD_API_PTR *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLAD_API_PTR *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLAD_API_PTR *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLAD_API_PTR *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
typedef void (GLAD_API_PTR *GLVULKANPROCNV)(void);


#define GL_VERSION_1_0 1
#define GL_VERSION_1_1 1
#define GL_VERSION_1_2 1
#define GL_ES_VERSION_2_0 1
#define GL_ES_VERSION_3_0 1
#define GL_ES_VERSION_3_1 1
#define GL_ES_VERSION_3_2 1
#define GL_ANGLE_instanced_arrays 1
#define GL_APPLE_sync 1
#define GL_ARB_buffer_storage 1
#define GL_ARB_debug_output 1
#define GL_ARB_vertex_buffer_object 1
#define GL_EXT_copy_image 1
#define GL_EXT_copy_texture 1
#define GL_EXT_direct_state_access 1
#define GL_EXT_disjoint_timer_query 1
#define GL_EXT_draw_buffers 1
#define GL_EXT_draw_buffers_indexed 1
#define GL_EXT_draw_elements_base_vertex 1
#define GL_EXT_draw_instanced 1
#define GL_EXT_draw_range_elements 1
#define GL_EXT_geometry_shader 1
#define GL_EXT_instanced_arrays 1
#define GL_EXT_map_buffer_range 1
#define GL_EXT_multisampled_render_to_texture 1
#define GL_EXT_primitive_bounding_box 1
#define GL_EXT_robustness 1
#define GL_EXT_separate_shader_objects 1
#define GL_EXT_subtexture 1
#define GL_EXT_tessellation_shader 1
#define GL_EXT_texture3D 1
#define GL_EXT_texture_border_clamp 1
#define GL_EXT_texture_buffer 1
#define GL_EXT_texture_object 1
#define GL_EXT_texture_storage 1
#define GL_EXT_vertex_array 1
#define GL_KHR_blend_equation_advanced 1
#define GL_KHR_debug 1
#define GL_KHR_robustness 1
#define GL_MESA_sampler_objects 1
#define GL_NV_blend_equation_advanced 1
#define GL_NV_copy_buffer 1
#define GL_NV_draw_instanced 1
#define GL_NV_framebuffer_blit 1
#define GL_NV_framebuffer_multisample 1
#define GL_NV_instanced_arrays 1
#define GL_NV_non_square_matrices 1
#define GL_NV_viewport_array 1
#define GL_OES_copy_image 1
#define GL_OES_draw_buffers_indexed 1
#define GL_OES_draw_elements_base_vertex 1
#define GL_OES_geometry_shader 1
#define GL_OES_get_program_binary 1
#define GL_OES_mapbuffer 1
#define GL_OES_primitive_bounding_box 1
#define GL_OES_sample_shading 1
#define GL_OES_tessellation_shader 1
#define GL_OES_texture_border_clamp 1
#define GL_OES_texture_buffer 1
#define GL_OES_texture_storage_multisample_2d_array 1
#define GL_OES_vertex_array_object 1
#define GL_OES_viewport_array 1



typedef void (GLAD_API_PTR *PFNGLACCUMPROC)(GLenum op, GLfloat value);
typedef void (GLAD_API_PTR *PFNGLALPHAFUNCPROC)(GLenum func, GLfloat ref);
typedef GLboolean (GLAD_API_PTR *PFNGLARETEXTURESRESIDENTPROC)(GLsizei n, const GLuint * textures, GLboolean * residences);
typedef GLboolean (GLAD_API_PTR *PFNGLARETEXTURESRESIDENTEXTPROC)(GLsizei n, const GLuint * textures, GLboolean * residences);
typedef void (GLAD_API_PTR *PFNGLARRAYELEMENTPROC)(GLint i);
typedef void (GLAD_API_PTR *PFNGLARRAYELEMENTEXTPROC)(GLint i);
typedef void (GLAD_API_PTR *PFNGLBEGINPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERARBPROC)(GLenum target, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLBINDMULTITEXTUREEXTPROC)(GLenum texunit, GLenum target, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREEXTPROC)(GLenum target, GLuint texture);
typedef void (GLAD_API_PTR *PFNGLBITMAPPROC)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
typedef void (GLAD_API_PTR *PFNGLBUFFERDATAARBPROC)(GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
typedef void (GLAD_API_PTR *PFNGLBUFFERSTORAGEPROC)(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
typedef void (GLAD_API_PTR *PFNGLCALLLISTPROC)(GLuint list);
typedef void (GLAD_API_PTR *PFNGLCALLLISTSPROC)(GLsizei n, GLenum type, const void * lists);
typedef GLenum (GLAD_API_PTR *PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)(GLuint framebuffer, GLenum target);
typedef void (GLAD_API_PTR *PFNGLCLEARPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLCLEARACCUMPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHPROC)(GLdouble depth);
typedef void (GLAD_API_PTR *PFNGLCLEARINDEXPROC)(GLfloat c);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERDATAEXTPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
typedef void (GLAD_API_PTR *PFNGLCLEARSTENCILPROC)(GLint s);
typedef void (GLAD_API_PTR *PFNGLCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLCLIPPLANEPROC)(GLenum plane, const GLdouble * equation);
typedef void (GLAD_API_PTR *PFNGLCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3IPROC)(GLint red, GLint green, GLint blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UBVPROC)(const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3UIVPROC)(const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);
typedef void (GLAD_API_PTR *PFNGLCOLOR3USVPROC)(const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4BPROC)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4DPROC)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4FPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4IPROC)(GLint red, GLint green, GLint blue, GLint alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4SPROC)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBPROC)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UBVPROC)(const GLubyte * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UIPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4UIVPROC)(const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLCOLOR4USPROC)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
typedef void (GLAD_API_PTR *PFNGLCOLOR4USVPROC)(const GLushort * v);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (GLAD_API_PTR *PFNGLCOLORMATERIALPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLCOLORPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLCULLFACEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void * userParam);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKARBPROC)(GLDEBUGPROCARB callback, const void * userParam);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLARBPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTARBPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (GLAD_API_PTR *PFNGLDELETEBUFFERSARBPROC)(GLsizei n, const GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLDELETELISTSPROC)(GLuint list, GLsizei range);
typedef void (GLAD_API_PTR *PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLDELETETEXTURESEXTPROC)(GLsizei n, const GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLDEPTHFUNCPROC)(GLenum func);
typedef void (GLAD_API_PTR *PFNGLDEPTHMASKPROC)(GLboolean flag);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
typedef void (GLAD_API_PTR *PFNGLDISABLEPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLDISABLECLIENTSTATEPROC)(GLenum array);
typedef void (GLAD_API_PTR *PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLECLIENTSTATEIEXTPROC)(GLenum array, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEINDEXEDEXTPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXARRAYEXTPROC)(GLuint vaobj, GLenum array);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSEXTPROC)(GLenum mode, GLint first, GLsizei count);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERPROC)(GLenum buf);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLDRAWPIXELSPROC)(GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSEXTPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPROC)(GLboolean flag);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPOINTERPROC)(GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGPOINTEREXTPROC)(GLsizei stride, GLsizei count, const GLboolean * pointer);
typedef void (GLAD_API_PTR *PFNGLEDGEFLAGVPROC)(const GLboolean * flag);
typedef void (GLAD_API_PTR *PFNGLENABLEPROC)(GLenum cap);
typedef void (GLAD_API_PTR *PFNGLENABLECLIENTSTATEPROC)(GLenum array);
typedef void (GLAD_API_PTR *PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLECLIENTSTATEIEXTPROC)(GLenum array, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEINDEXEDEXTPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXARRAYEXTPROC)(GLuint vaobj, GLenum array);
typedef void (GLAD_API_PTR *PFNGLENDPROC)(void);
typedef void (GLAD_API_PTR *PFNGLENDLISTPROC)(void);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1DPROC)(GLdouble u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1DVPROC)(const GLdouble * u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1FPROC)(GLfloat u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1FVPROC)(const GLfloat * u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2DPROC)(GLdouble u, GLdouble v);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2DVPROC)(const GLdouble * u);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2FPROC)(GLfloat u, GLfloat v);
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2FVPROC)(const GLfloat * u);
typedef void (GLAD_API_PTR *PFNGLEVALMESH1PROC)(GLenum mode, GLint i1, GLint i2);
typedef void (GLAD_API_PTR *PFNGLEVALMESH2PROC)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
typedef void (GLAD_API_PTR *PFNGLEVALPOINT1PROC)(GLint i);
typedef void (GLAD_API_PTR *PFNGLEVALPOINT2PROC)(GLint i, GLint j);
typedef void (GLAD_API_PTR *PFNGLFEEDBACKBUFFERPROC)(GLsizei size, GLenum type, GLfloat * buffer);
typedef void (GLAD_API_PTR *PFNGLFINISHPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFLUSHPROC)(void);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLFOGFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLFOGFVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLFOGIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFOGIVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)(GLuint framebuffer, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)(GLuint framebuffer, GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERREADBUFFEREXTPROC)(GLuint framebuffer, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLFRONTFACEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLFRUSTUMPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLGENBUFFERSARBPROC)(GLsizei n, GLuint * buffers);
typedef GLuint (GLAD_API_PTR *PFNGLGENLISTSPROC)(GLsizei range);
typedef void (GLAD_API_PTR *PFNGLGENTEXTURESPROC)(GLsizei n, GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLGENTEXTURESEXTPROC)(GLsizei n, GLuint * textures);
typedef void (GLAD_API_PTR *PFNGLGENERATEMULTITEXMIPMAPEXTPROC)(GLenum texunit, GLenum target);
typedef void (GLAD_API_PTR *PFNGLGENERATETEXTUREMIPMAPEXTPROC)(GLuint texture, GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANINDEXEDVEXTPROC)(GLenum target, GLuint index, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVARBPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVARBPROC)(GLenum target, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
typedef void (GLAD_API_PTR *PFNGLGETCLIPPLANEPROC)(GLenum plane, GLdouble * equation);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)(GLenum texunit, GLenum target, GLint lod, void * img);
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)(GLuint texture, GLenum target, GLint lod, void * img);
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGARBPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEINDEXEDVEXTPROC)(GLenum target, GLuint index, GLdouble * data);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEI_VEXTPROC)(GLenum pname, GLuint index, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble * data);
typedef GLenum (GLAD_API_PTR *PFNGLGETERRORPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETFLOATINDEXEDVEXTPROC)(GLenum target, GLuint index, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETFLOATI_VEXTPROC)(GLenum pname, GLuint index, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETFLOATVPROC)(GLenum pname, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERINDEXEDVEXTPROC)(GLenum target, GLuint index, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERVPROC)(GLenum pname, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETLIGHTFVPROC)(GLenum light, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETLIGHTIVPROC)(GLenum light, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMAPDVPROC)(GLenum target, GLenum query, GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLGETMAPFVPROC)(GLenum target, GLenum query, GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLGETMAPIVPROC)(GLenum target, GLenum query, GLint * v);
typedef void (GLAD_API_PTR *PFNGLGETMATERIALFVPROC)(GLenum face, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMATERIALIVPROC)(GLenum face, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXENVFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXENVIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXGENDVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXGENFVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXGENIVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXIMAGEEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTITEXPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)(GLuint buffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)(GLuint buffer, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)(GLuint program, GLenum target, GLuint index, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)(GLuint program, GLenum target, GLuint index, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)(GLuint program, GLenum target, GLenum pname, void * string);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDPROGRAMIVEXTPROC)(GLuint program, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)(GLuint renderbuffer, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPTRLABELPROC)(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPFVPROC)(GLenum map, GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPUIVPROC)(GLenum map, GLuint * values);
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPUSVPROC)(GLenum map, GLushort * values);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERINDEXEDVEXTPROC)(GLenum target, GLuint index, void ** data);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERI_VEXTPROC)(GLenum pname, GLuint index, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVPROC)(GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVEXTPROC)(GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte * mask);
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGPROC)(GLenum name);
typedef void (GLAD_API_PTR *PFNGLGETTEXENVFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXENVIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENDVPROC)(GLenum coord, GLenum pname, GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENFVPROC)(GLenum coord, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXGENIVPROC)(GLenum coord, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREIMAGEEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYINTEGERVEXTPROC)(GLuint vaobj, GLenum pname, GLint * param);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC)(GLuint vaobj, GLuint index, GLenum pname, void ** param);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYPOINTERVEXTPROC)(GLuint vaobj, GLenum pname, void ** param);
typedef void (GLAD_API_PTR *PFNGLHINTPROC)(GLenum target, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLINDEXMASKPROC)(GLuint mask);
typedef void (GLAD_API_PTR *PFNGLINDEXPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLINDEXPOINTEREXTPROC)(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLINDEXDPROC)(GLdouble c);
typedef void (GLAD_API_PTR *PFNGLINDEXDVPROC)(const GLdouble * c);
typedef void (GLAD_API_PTR *PFNGLINDEXFPROC)(GLfloat c);
typedef void (GLAD_API_PTR *PFNGLINDEXFVPROC)(const GLfloat * c);
typedef void (GLAD_API_PTR *PFNGLINDEXIPROC)(GLint c);
typedef void (GLAD_API_PTR *PFNGLINDEXIVPROC)(const GLint * c);
typedef void (GLAD_API_PTR *PFNGLINDEXSPROC)(GLshort c);
typedef void (GLAD_API_PTR *PFNGLINDEXSVPROC)(const GLshort * c);
typedef void (GLAD_API_PTR *PFNGLINDEXUBPROC)(GLubyte c);
typedef void (GLAD_API_PTR *PFNGLINDEXUBVPROC)(const GLubyte * c);
typedef void (GLAD_API_PTR *PFNGLINITNAMESPROC)(void);
typedef void (GLAD_API_PTR *PFNGLINTERLEAVEDARRAYSPROC)(GLenum format, GLsizei stride, const void * pointer);
typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERARBPROC)(GLuint buffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDPROC)(GLenum cap);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDINDEXEDEXTPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISLISTPROC)(GLuint list);
typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREPROC)(GLuint texture);
typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREEXTPROC)(GLuint texture);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELFVPROC)(GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELIVPROC)(GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTFPROC)(GLenum light, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLLIGHTFVPROC)(GLenum light, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLLIGHTIPROC)(GLenum light, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLLIGHTIVPROC)(GLenum light, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLLINESTIPPLEPROC)(GLint factor, GLushort pattern);
typedef void (GLAD_API_PTR *PFNGLLINEWIDTHPROC)(GLfloat width);
typedef void (GLAD_API_PTR *PFNGLLISTBASEPROC)(GLuint base);
typedef void (GLAD_API_PTR *PFNGLLOADIDENTITYPROC)(void);
typedef void (GLAD_API_PTR *PFNGLLOADMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLLOADMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLLOADNAMEPROC)(GLuint name);
typedef void (GLAD_API_PTR *PFNGLLOGICOPPROC)(GLenum opcode);
typedef void (GLAD_API_PTR *PFNGLMAP1DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
typedef void (GLAD_API_PTR *PFNGLMAP1FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
typedef void (GLAD_API_PTR *PFNGLMAP2DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
typedef void (GLAD_API_PTR *PFNGLMAP2FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERARBPROC)(GLenum target, GLenum access);
typedef void (GLAD_API_PTR *PFNGLMAPGRID1DPROC)(GLint un, GLdouble u1, GLdouble u2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID1FPROC)(GLint un, GLfloat u1, GLfloat u2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID2DPROC)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
typedef void (GLAD_API_PTR *PFNGLMAPGRID2FPROC)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
typedef void * (GLAD_API_PTR *PFNGLMAPNAMEDBUFFEREXTPROC)(GLuint buffer, GLenum access);
typedef void * (GLAD_API_PTR *PFNGLMAPNAMEDBUFFERRANGEEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (GLAD_API_PTR *PFNGLMATERIALFPROC)(GLenum face, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLMATERIALFVPROC)(GLenum face, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMATERIALIPROC)(GLenum face, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMATERIALIVPROC)(GLenum face, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMATRIXFRUSTUMEXTPROC)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADIDENTITYEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADTRANSPOSEDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADTRANSPOSEFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXLOADFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMODEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULTTRANSPOSEDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULTTRANSPOSEFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULTDEXTPROC)(GLenum mode, const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXMULTFEXTPROC)(GLenum mode, const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMATRIXORTHOEXTPROC)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLMATRIXPOPEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLMATRIXPUSHEXTPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLMATRIXROTATEDEXTPROC)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLMATRIXROTATEFEXTPROC)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLMATRIXSCALEDEXTPROC)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLMATRIXSCALEFEXTPROC)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLMATRIXTRANSLATEDEXTPROC)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLMATRIXTRANSLATEFEXTPROC)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLMULTMATRIXDPROC)(const GLdouble * m);
typedef void (GLAD_API_PTR *PFNGLMULTMATRIXFPROC)(const GLfloat * m);
typedef void (GLAD_API_PTR *PFNGLMULTITEXBUFFEREXTPROC)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORDPOINTEREXTPROC)(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLMULTITEXENVFEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXENVFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXENVIEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXENVIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENDEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENDVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENFEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENFVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENIEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXGENIVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLMULTITEXIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERFEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERIEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLMULTITEXPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLMULTITEXRENDERBUFFEREXTPROC)(GLenum texunit, GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERDATAEXTPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEEXTPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
typedef void (GLAD_API_PTR *PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)(GLuint framebuffer, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLNAMEDPROGRAMSTRINGEXTPROC)(GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLNEWLISTPROC)(GLuint list, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLNORMAL3BPROC)(GLbyte nx, GLbyte ny, GLbyte nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3BVPROC)(const GLbyte * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3DPROC)(GLdouble nx, GLdouble ny, GLdouble nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3FPROC)(GLfloat nx, GLfloat ny, GLfloat nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3IPROC)(GLint nx, GLint ny, GLint nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLNORMAL3SPROC)(GLshort nx, GLshort ny, GLshort nz);
typedef void (GLAD_API_PTR *PFNGLNORMAL3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLNORMALPOINTERPROC)(GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLNORMALPOINTEREXTPROC)(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLOBJECTPTRLABELPROC)(const void * ptr, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLORTHOPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
typedef void (GLAD_API_PTR *PFNGLPASSTHROUGHPROC)(GLfloat token);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPFVPROC)(GLenum map, GLsizei mapsize, const GLfloat * values);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPUIVPROC)(GLenum map, GLsizei mapsize, const GLuint * values);
typedef void (GLAD_API_PTR *PFNGLPIXELMAPUSVPROC)(GLenum map, GLsizei mapsize, const GLushort * values);
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERFPROC)(GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERIPROC)(GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLPIXELZOOMPROC)(GLfloat xfactor, GLfloat yfactor);
typedef void (GLAD_API_PTR *PFNGLPOINTSIZEPROC)(GLfloat size);
typedef void (GLAD_API_PTR *PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
typedef void (GLAD_API_PTR *PFNGLPOLYGONSTIPPLEPROC)(const GLubyte * mask);
typedef void (GLAD_API_PTR *PFNGLPOPATTRIBPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPCLIENTATTRIBPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPDEBUGGROUPPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPMATRIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPNAMEPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPRIORITIZETEXTURESPROC)(GLsizei n, const GLuint * textures, const GLfloat * priorities);
typedef void (GLAD_API_PTR *PFNGLPRIORITIZETEXTURESEXTPROC)(GLsizei n, const GLuint * textures, const GLclampf * priorities);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DEXTPROC)(GLuint program, GLint location, GLdouble x);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FEXTPROC)(GLuint program, GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IEXTPROC)(GLuint program, GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIEXTPROC)(GLuint program, GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPUSHATTRIBPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (GLAD_API_PTR *PFNGLPUSHMATRIXPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPUSHNAMEPROC)(GLuint name);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2DPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2FPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2IPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2SPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3IPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLREADBUFFERPROC)(GLenum src);
typedef void (GLAD_API_PTR *PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
typedef void (GLAD_API_PTR *PFNGLRECTDPROC)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
typedef void (GLAD_API_PTR *PFNGLRECTDVPROC)(const GLdouble * v1, const GLdouble * v2);
typedef void (GLAD_API_PTR *PFNGLRECTFPROC)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
typedef void (GLAD_API_PTR *PFNGLRECTFVPROC)(const GLfloat * v1, const GLfloat * v2);
typedef void (GLAD_API_PTR *PFNGLRECTIPROC)(GLint x1, GLint y1, GLint x2, GLint y2);
typedef void (GLAD_API_PTR *PFNGLRECTIVPROC)(const GLint * v1, const GLint * v2);
typedef void (GLAD_API_PTR *PFNGLRECTSPROC)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
typedef void (GLAD_API_PTR *PFNGLRECTSVPROC)(const GLshort * v1, const GLshort * v2);
typedef GLint (GLAD_API_PTR *PFNGLRENDERMODEPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLROTATEDPROC)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLROTATEFPROC)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLSCALEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLSCALEFPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSELECTBUFFERPROC)(GLsizei size, GLuint * buffer);
typedef void (GLAD_API_PTR *PFNGLSHADEMODELPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKPROC)(GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1DPROC)(GLdouble s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1FPROC)(GLfloat s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1IPROC)(GLint s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1SPROC)(GLshort s);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2DPROC)(GLdouble s, GLdouble t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FPROC)(GLfloat s, GLfloat t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2IPROC)(GLint s, GLint t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2SPROC)(GLshort s, GLshort t);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3DPROC)(GLdouble s, GLdouble t, GLdouble r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3FPROC)(GLfloat s, GLfloat t, GLfloat r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3IPROC)(GLint s, GLint t, GLint r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3SPROC)(GLshort s, GLshort t, GLshort r);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4DPROC)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4IPROC)(GLint s, GLint t, GLint r, GLint q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4SPROC)(GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLTEXCOORDPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLTEXENVFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXENVFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXENVIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXENVIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXGENDPROC)(GLenum coord, GLenum pname, GLdouble param);
typedef void (GLAD_API_PTR *PFNGLTEXGENDVPROC)(GLenum coord, GLenum pname, const GLdouble * params);
typedef void (GLAD_API_PTR *PFNGLTEXGENFPROC)(GLenum coord, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXGENFVPROC)(GLenum coord, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXGENIPROC)(GLenum coord, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXGENIVPROC)(GLenum coord, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE1DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE1DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE2DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTUREBUFFEREXTPROC)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTEXTUREBUFFERRANGEEXTPROC)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTUREIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPAGECOMMITMENTEXTPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERFEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXTURERENDERBUFFEREXTPROC)(GLuint texture, GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE1DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE2DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE3DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
typedef void (GLAD_API_PTR *PFNGLTRANSLATEDPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLTRANSLATEFPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFERARBPROC)(GLenum target);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPNAMEDBUFFEREXTPROC)(GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLVERTEX2DPROC)(GLdouble x, GLdouble y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX2FPROC)(GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX2IPROC)(GLint x, GLint y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX2SPROC)(GLshort x, GLshort y);
typedef void (GLAD_API_PTR *PFNGLVERTEX2SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3DPROC)(GLdouble x, GLdouble y, GLdouble z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3FPROC)(GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3IPROC)(GLint x, GLint y, GLint z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX3SPROC)(GLshort x, GLshort y, GLshort z);
typedef void (GLAD_API_PTR *PFNGLVERTEX3SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4DVPROC)(const GLdouble * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4FVPROC)(const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4IPROC)(GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4IVPROC)(const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEX4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (GLAD_API_PTR *PFNGLVERTEX4SVPROC)(const GLshort * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYCOLOROFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYINDEXOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYNORMALOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC)(GLuint vaobj, GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
typedef void (GLAD_API_PTR *PFNGLVERTEXPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);
typedef void (GLAD_API_PTR *PFNGLACTIVESHADERPROGRAMEXTPROC)(GLuint pipeline, GLuint program);
typedef void (GLAD_API_PTR *PFNGLACTIVETEXTUREPROC)(GLenum texture);
typedef void (GLAD_API_PTR *PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYEXTPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
typedef void (GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
typedef void (GLAD_API_PTR *PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMPIPELINEEXTPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
typedef void (GLAD_API_PTR *PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXARRAYPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXARRAYOESPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
typedef void (GLAD_API_PTR *PFNGLBLENDBARRIERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLBLENDBARRIERKHRPROC)(void);
typedef void (GLAD_API_PTR *PFNGLBLENDBARRIERNVPROC)(void);
typedef void (GLAD_API_PTR *PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONPROC)(GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIEXTPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIOESPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIEXTPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIOESPROC)(GLuint buf, GLenum mode);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIEXTPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIOESPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIEXTPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIOESPROC)(GLuint buf, GLenum src, GLenum dst);
typedef void (GLAD_API_PTR *PFNGLBLENDPARAMETERINVPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERNVPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GLAD_API_PTR *PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
typedef void (GLAD_API_PTR *PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
typedef GLenum (GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHFPROC)(GLfloat d);
typedef GLenum (GLAD_API_PTR *PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef GLenum (GLAD_API_PTR *PFNGLCLIENTWAITSYNCAPPLEPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKIEXTPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (GLAD_API_PTR *PFNGLCOLORMASKIOESPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERPROC)(GLuint shader);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
typedef void (GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATANVPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAEXTPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAOESPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
typedef GLuint (GLAD_API_PTR *PFNGLCREATEPROGRAMPROC)(void);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROC)(GLenum type);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const* strings);
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROGRAMVEXTPROC)(GLenum type, GLsizei count, const GLchar *const* strings);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKKHRPROC)(GLDEBUGPROCKHR callback, const void * userParam);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLKHRPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTKHRPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
typedef void (GLAD_API_PTR *PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint * framebuffers);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPIPELINESEXTPROC)(GLsizei n, const GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESEXTPROC)(GLsizei n, const GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint * samplers);
typedef void (GLAD_API_PTR *PFNGLDELETESHADERPROC)(GLuint shader);
typedef void (GLAD_API_PTR *PFNGLDELETESYNCPROC)(GLsync sync);
typedef void (GLAD_API_PTR *PFNGLDELETESYNCAPPLEPROC)(GLsync sync);
typedef void (GLAD_API_PTR *PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSOESPROC)(GLsizei n, const GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEARRAYFVNVPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEARRAYFVOESPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDFNVPROC)(GLuint index, GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDFOESPROC)(GLuint index, GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);
typedef void (GLAD_API_PTR *PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEIPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEIEXTPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEINVPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISABLEIOESPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDANGLEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDEXTPROC)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDNVPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSEXTPROC)(GLsizei n, const GLenum * bufs);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXOESPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDANGLEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDNVPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEIPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEIEXTPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEINVPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENABLEIOESPROC)(GLenum target, GLuint index);
typedef void (GLAD_API_PTR *PFNGLENDQUERYPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLENDQUERYEXTPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKPROC)(void);
typedef GLsync (GLAD_API_PTR *PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
typedef GLsync (GLAD_API_PTR *PFNGLFENCESYNCAPPLEPROC)(GLenum condition, GLbitfield flags);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREEXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREOESPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (GLAD_API_PTR *PFNGLGENBUFFERSPROC)(GLsizei n, GLuint * buffers);
typedef void (GLAD_API_PTR *PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint * framebuffers);
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMPIPELINESEXTPROC)(GLsizei n, GLuint * pipelines);
typedef void (GLAD_API_PTR *PFNGLGENQUERIESPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLGENQUERIESEXTPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint * renderbuffers);
typedef void (GLAD_API_PTR *PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint * samplers);
typedef void (GLAD_API_PTR *PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint * ids);
typedef void (GLAD_API_PTR *PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLGENVERTEXARRAYSOESPROC)(GLsizei n, GLuint * arrays);
typedef void (GLAD_API_PTR *PFNGLGENERATEMIPMAPPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
typedef GLint (GLAD_API_PTR *PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean * data);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVOESPROC)(GLenum target, GLenum pname, void ** params);
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGKHRPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
typedef void (GLAD_API_PTR *PFNGLGETFLOATI_VNVPROC)(GLenum target, GLuint index, GLfloat * data);
typedef void (GLAD_API_PTR *PFNGLGETFLOATI_VOESPROC)(GLenum target, GLuint index, GLfloat * data);
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef GLenum (GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSPROC)(void);
typedef GLenum (GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSEXTPROC)(void);
typedef GLenum (GLAD_API_PTR *PFNGLGETGRAPHICSRESETSTATUSKHRPROC)(void);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VAPPLEPROC)(GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VEXTPROC)(GLenum pname, GLint64 * data);
typedef void (GLAD_API_PTR *PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint * data);
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat * val);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTLABELKHRPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPTRLABELKHRPROC)(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVKHRPROC)(GLenum pname, void ** params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMBINARYOESPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC)(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEIVEXTPROC)(GLuint pipeline, GLenum pname, GLint * params);
typedef GLuint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef GLint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VEXTPROC)(GLuint id, GLenum pname, GLint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVEXTPROC)(GLuint id, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VEXTPROC)(GLuint id, GLenum pname, GLuint64 * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVEXTPROC)(GLuint id, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVEXTPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVOESPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVEXTPROC)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVOESPROC)(GLuint sampler, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
typedef void (GLAD_API_PTR *PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
typedef void (GLAD_API_PTR *PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
typedef void (GLAD_API_PTR *PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint * params);
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);
typedef void (GLAD_API_PTR *PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (GLAD_API_PTR *PFNGLGETSYNCIVAPPLEPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVOESPROC)(GLenum target, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVOESPROC)(GLenum target, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
typedef GLuint (GLAD_API_PTR *PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar * uniformBlockName);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
typedef GLint (GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar * name);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void ** pointer);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVEXTPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMFVKHRPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVEXTPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMIVKHRPROC)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUIVKHRPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
typedef void (GLAD_API_PTR *PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments);
typedef void (GLAD_API_PTR *PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERPROC)(GLuint buffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIEXTPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDINVPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIOESPROC)(GLenum target, GLuint index);
typedef GLboolean (GLAD_API_PTR *PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPROC)(GLuint program);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPIPELINEEXTPROC)(GLuint pipeline);
typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYPROC)(GLuint id);
typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYEXTPROC)(GLuint id);
typedef GLboolean (GLAD_API_PTR *PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
typedef GLboolean (GLAD_API_PTR *PFNGLISSAMPLERPROC)(GLuint sampler);
typedef GLboolean (GLAD_API_PTR *PFNGLISSHADERPROC)(GLuint shader);
typedef GLboolean (GLAD_API_PTR *PFNGLISSYNCPROC)(GLsync sync);
typedef GLboolean (GLAD_API_PTR *PFNGLISSYNCAPPLEPROC)(GLsync sync);
typedef GLboolean (GLAD_API_PTR *PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXARRAYPROC)(GLuint array);
typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXARRAYOESPROC)(GLuint array);
typedef void (GLAD_API_PTR *PFNGLLINKPROGRAMPROC)(GLuint program);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFEROESPROC)(GLenum target, GLenum access);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERRANGEEXTPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);
typedef void (GLAD_API_PTR *PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
typedef void (GLAD_API_PTR *PFNGLMINSAMPLESHADINGOESPROC)(GLfloat value);
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
typedef void (GLAD_API_PTR *PFNGLOBJECTLABELKHRPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLOBJECTPTRLABELKHRPROC)(const void * ptr, GLsizei length, const GLchar * label);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERIEXTPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERIOESPROC)(GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPOPDEBUGGROUPKHRPROC)(void);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXEXTPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef void (GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXOESPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
typedef void (GLAD_API_PTR *PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (GLAD_API_PTR *PFNGLPROGRAMBINARYOESPROC)(GLuint program, GLenum binaryFormat, const void * binary, GLint length);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERIEXTPROC)(GLuint program, GLenum pname, GLint value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLPUSHDEBUGGROUPKHRPROC)(GLenum source, GLuint id, GLsizei length, const GLchar * message);
typedef void (GLAD_API_PTR *PFNGLQUERYCOUNTEREXTPROC)(GLuint id, GLenum target);
typedef void (GLAD_API_PTR *PFNGLREADNPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (GLAD_API_PTR *PFNGLREADNPIXELSEXTPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (GLAD_API_PTR *PFNGLREADNPIXELSKHRPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
typedef void (GLAD_API_PTR *PFNGLRELEASESHADERCOMPILERPROC)(void);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVEXTPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVOESPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVEXTPROC)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVOESPROC)(GLuint sampler, GLenum pname, const GLuint * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat * param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
typedef void (GLAD_API_PTR *PFNGLSCISSORARRAYVNVPROC)(GLuint first, GLsizei count, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORARRAYVOESPROC)(GLuint first, GLsizei count, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDNVPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDOESPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDVNVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDVOESPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
typedef void (GLAD_API_PTR *PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
typedef void (GLAD_API_PTR *PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFEREXTPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFEROESPROC)(GLenum target, GLenum internalformat, GLuint buffer);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERRANGEEXTPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERRANGEOESPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVOESPROC)(GLenum target, GLenum pname, const GLint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVOESPROC)(GLenum target, GLenum pname, const GLuint * params);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFERPROC)(GLenum target);
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFEROESPROC)(GLenum target);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMSTAGESEXTPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPROC)(GLuint program);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPIPELINEEXTPROC)(GLuint pipeline);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORANGLEPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISOREXTPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORNVPROC)(GLuint index, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint * v);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
typedef void (GLAD_API_PTR *PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTARRAYVNVPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTARRAYVOESPROC)(GLuint first, GLsizei count, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFNVPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFOESPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFVNVPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFVOESPROC)(GLuint index, const GLfloat * v);
typedef void (GLAD_API_PTR *PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (GLAD_API_PTR *PFNGLWAITSYNCAPPLEPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);

typedef struct GladGLContext {
    void* userptr;

    unsigned char VERSION_1_0;
    unsigned char VERSION_1_1;
    unsigned char VERSION_1_2;
    unsigned char ES_VERSION_2_0;
    unsigned char ES_VERSION_3_0;
    unsigned char ES_VERSION_3_1;
    unsigned char ES_VERSION_3_2;

    union {
        unsigned char extArray[55];
        struct {
        /*    0 */ unsigned char ANGLE_instanced_arrays;
        /*    1 */ unsigned char APPLE_sync;
        /*    2 */ unsigned char ARB_buffer_storage;
        /*    3 */ unsigned char ARB_debug_output;
        /*    4 */ unsigned char ARB_vertex_buffer_object;
        /*    5 */ unsigned char EXT_copy_image;
        /*    6 */ unsigned char EXT_copy_texture;
        /*    7 */ unsigned char EXT_direct_state_access;
        /*    8 */ unsigned char EXT_disjoint_timer_query;
        /*    9 */ unsigned char EXT_draw_buffers;
        /*   10 */ unsigned char EXT_draw_buffers_indexed;
        /*   11 */ unsigned char EXT_draw_elements_base_vertex;
        /*   12 */ unsigned char EXT_draw_instanced;
        /*   13 */ unsigned char EXT_draw_range_elements;
        /*   14 */ unsigned char EXT_geometry_shader;
        /*   15 */ unsigned char EXT_instanced_arrays;
        /*   16 */ unsigned char EXT_map_buffer_range;
        /*   17 */ unsigned char EXT_multisampled_render_to_texture;
        /*   18 */ unsigned char EXT_primitive_bounding_box;
        /*   19 */ unsigned char EXT_robustness;
        /*   20 */ unsigned char EXT_separate_shader_objects;
        /*   21 */ unsigned char EXT_subtexture;
        /*   22 */ unsigned char EXT_tessellation_shader;
        /*   23 */ unsigned char EXT_texture3D;
        /*   24 */ unsigned char EXT_texture_border_clamp;
        /*   25 */ unsigned char EXT_texture_buffer;
        /*   26 */ unsigned char EXT_texture_object;
        /*   27 */ unsigned char EXT_texture_storage;
        /*   28 */ unsigned char EXT_vertex_array;
        /*   29 */ unsigned char KHR_blend_equation_advanced;
        /*   30 */ unsigned char KHR_debug;
        /*   31 */ unsigned char KHR_robustness;
        /*   32 */ unsigned char MESA_sampler_objects;
        /*   33 */ unsigned char NV_blend_equation_advanced;
        /*   34 */ unsigned char NV_copy_buffer;
        /*   35 */ unsigned char NV_draw_instanced;
        /*   36 */ unsigned char NV_framebuffer_blit;
        /*   37 */ unsigned char NV_framebuffer_multisample;
        /*   38 */ unsigned char NV_instanced_arrays;
        /*   39 */ unsigned char NV_non_square_matrices;
        /*   40 */ unsigned char NV_viewport_array;
        /*   41 */ unsigned char OES_copy_image;
        /*   42 */ unsigned char OES_draw_buffers_indexed;
        /*   43 */ unsigned char OES_draw_elements_base_vertex;
        /*   44 */ unsigned char OES_geometry_shader;
        /*   45 */ unsigned char OES_get_program_binary;
        /*   46 */ unsigned char OES_mapbuffer;
        /*   47 */ unsigned char OES_primitive_bounding_box;
        /*   48 */ unsigned char OES_sample_shading;
        /*   49 */ unsigned char OES_tessellation_shader;
        /*   50 */ unsigned char OES_texture_border_clamp;
        /*   51 */ unsigned char OES_texture_buffer;
        /*   52 */ unsigned char OES_texture_storage_multisample_2d_array;
        /*   53 */ unsigned char OES_vertex_array_object;
        /*   54 */ unsigned char OES_viewport_array;
        };
    };

    union {
        void *pfnArray[1103];
        struct {
        /*    0 */ PFNGLACCUMPROC Accum;
        /*    1 */ PFNGLALPHAFUNCPROC AlphaFunc;
        /*    2 */ PFNGLARETEXTURESRESIDENTPROC AreTexturesResident;
        /*    3 */ PFNGLARETEXTURESRESIDENTEXTPROC AreTexturesResidentEXT;
        /*    4 */ PFNGLARRAYELEMENTPROC ArrayElement;
        /*    5 */ PFNGLARRAYELEMENTEXTPROC ArrayElementEXT;
        /*    6 */ PFNGLBEGINPROC Begin;
        /*    7 */ PFNGLBINDBUFFERARBPROC BindBufferARB;
        /*    8 */ PFNGLBINDMULTITEXTUREEXTPROC BindMultiTextureEXT;
        /*    9 */ PFNGLBINDTEXTUREPROC BindTexture;
        /*   10 */ PFNGLBINDTEXTUREEXTPROC BindTextureEXT;
        /*   11 */ PFNGLBITMAPPROC Bitmap;
        /*   12 */ PFNGLBLENDFUNCPROC BlendFunc;
        /*   13 */ PFNGLBUFFERDATAARBPROC BufferDataARB;
        /*   14 */ PFNGLBUFFERSTORAGEPROC BufferStorage;
        /*   15 */ PFNGLBUFFERSUBDATAARBPROC BufferSubDataARB;
        /*   16 */ PFNGLCALLLISTPROC CallList;
        /*   17 */ PFNGLCALLLISTSPROC CallLists;
        /*   18 */ PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC CheckNamedFramebufferStatusEXT;
        /*   19 */ PFNGLCLEARPROC Clear;
        /*   20 */ PFNGLCLEARACCUMPROC ClearAccum;
        /*   21 */ PFNGLCLEARCOLORPROC ClearColor;
        /*   22 */ PFNGLCLEARDEPTHPROC ClearDepth;
        /*   23 */ PFNGLCLEARINDEXPROC ClearIndex;
        /*   24 */ PFNGLCLEARNAMEDBUFFERDATAEXTPROC ClearNamedBufferDataEXT;
        /*   25 */ PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC ClearNamedBufferSubDataEXT;
        /*   26 */ PFNGLCLEARSTENCILPROC ClearStencil;
        /*   27 */ PFNGLCLIENTATTRIBDEFAULTEXTPROC ClientAttribDefaultEXT;
        /*   28 */ PFNGLCLIPPLANEPROC ClipPlane;
        /*   29 */ PFNGLCOLOR3BPROC Color3b;
        /*   30 */ PFNGLCOLOR3BVPROC Color3bv;
        /*   31 */ PFNGLCOLOR3DPROC Color3d;
        /*   32 */ PFNGLCOLOR3DVPROC Color3dv;
        /*   33 */ PFNGLCOLOR3FPROC Color3f;
        /*   34 */ PFNGLCOLOR3FVPROC Color3fv;
        /*   35 */ PFNGLCOLOR3IPROC Color3i;
        /*   36 */ PFNGLCOLOR3IVPROC Color3iv;
        /*   37 */ PFNGLCOLOR3SPROC Color3s;
        /*   38 */ PFNGLCOLOR3SVPROC Color3sv;
        /*   39 */ PFNGLCOLOR3UBPROC Color3ub;
        /*   40 */ PFNGLCOLOR3UBVPROC Color3ubv;
        /*   41 */ PFNGLCOLOR3UIPROC Color3ui;
        /*   42 */ PFNGLCOLOR3UIVPROC Color3uiv;
        /*   43 */ PFNGLCOLOR3USPROC Color3us;
        /*   44 */ PFNGLCOLOR3USVPROC Color3usv;
        /*   45 */ PFNGLCOLOR4BPROC Color4b;
        /*   46 */ PFNGLCOLOR4BVPROC Color4bv;
        /*   47 */ PFNGLCOLOR4DPROC Color4d;
        /*   48 */ PFNGLCOLOR4DVPROC Color4dv;
        /*   49 */ PFNGLCOLOR4FPROC Color4f;
        /*   50 */ PFNGLCOLOR4FVPROC Color4fv;
        /*   51 */ PFNGLCOLOR4IPROC Color4i;
        /*   52 */ PFNGLCOLOR4IVPROC Color4iv;
        /*   53 */ PFNGLCOLOR4SPROC Color4s;
        /*   54 */ PFNGLCOLOR4SVPROC Color4sv;
        /*   55 */ PFNGLCOLOR4UBPROC Color4ub;
        /*   56 */ PFNGLCOLOR4UBVPROC Color4ubv;
        /*   57 */ PFNGLCOLOR4UIPROC Color4ui;
        /*   58 */ PFNGLCOLOR4UIVPROC Color4uiv;
        /*   59 */ PFNGLCOLOR4USPROC Color4us;
        /*   60 */ PFNGLCOLOR4USVPROC Color4usv;
        /*   61 */ PFNGLCOLORMASKPROC ColorMask;
        /*   62 */ PFNGLCOLORMATERIALPROC ColorMaterial;
        /*   63 */ PFNGLCOLORPOINTERPROC ColorPointer;
        /*   64 */ PFNGLCOLORPOINTEREXTPROC ColorPointerEXT;
        /*   65 */ PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC CompressedMultiTexImage1DEXT;
        /*   66 */ PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC CompressedMultiTexImage2DEXT;
        /*   67 */ PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC CompressedMultiTexImage3DEXT;
        /*   68 */ PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC CompressedMultiTexSubImage1DEXT;
        /*   69 */ PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC CompressedMultiTexSubImage2DEXT;
        /*   70 */ PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC CompressedMultiTexSubImage3DEXT;
        /*   71 */ PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC CompressedTextureImage1DEXT;
        /*   72 */ PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC CompressedTextureImage2DEXT;
        /*   73 */ PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC CompressedTextureImage3DEXT;
        /*   74 */ PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC CompressedTextureSubImage1DEXT;
        /*   75 */ PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC CompressedTextureSubImage2DEXT;
        /*   76 */ PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC CompressedTextureSubImage3DEXT;
        /*   77 */ PFNGLCOPYMULTITEXIMAGE1DEXTPROC CopyMultiTexImage1DEXT;
        /*   78 */ PFNGLCOPYMULTITEXIMAGE2DEXTPROC CopyMultiTexImage2DEXT;
        /*   79 */ PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC CopyMultiTexSubImage1DEXT;
        /*   80 */ PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC CopyMultiTexSubImage2DEXT;
        /*   81 */ PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC CopyMultiTexSubImage3DEXT;
        /*   82 */ PFNGLCOPYPIXELSPROC CopyPixels;
        /*   83 */ PFNGLCOPYTEXIMAGE1DPROC CopyTexImage1D;
        /*   84 */ PFNGLCOPYTEXIMAGE1DEXTPROC CopyTexImage1DEXT;
        /*   85 */ PFNGLCOPYTEXIMAGE2DPROC CopyTexImage2D;
        /*   86 */ PFNGLCOPYTEXIMAGE2DEXTPROC CopyTexImage2DEXT;
        /*   87 */ PFNGLCOPYTEXSUBIMAGE1DPROC CopyTexSubImage1D;
        /*   88 */ PFNGLCOPYTEXSUBIMAGE1DEXTPROC CopyTexSubImage1DEXT;
        /*   89 */ PFNGLCOPYTEXSUBIMAGE2DPROC CopyTexSubImage2D;
        /*   90 */ PFNGLCOPYTEXSUBIMAGE2DEXTPROC CopyTexSubImage2DEXT;
        /*   91 */ PFNGLCOPYTEXSUBIMAGE3DPROC CopyTexSubImage3D;
        /*   92 */ PFNGLCOPYTEXSUBIMAGE3DEXTPROC CopyTexSubImage3DEXT;
        /*   93 */ PFNGLCOPYTEXTUREIMAGE1DEXTPROC CopyTextureImage1DEXT;
        /*   94 */ PFNGLCOPYTEXTUREIMAGE2DEXTPROC CopyTextureImage2DEXT;
        /*   95 */ PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC CopyTextureSubImage1DEXT;
        /*   96 */ PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC CopyTextureSubImage2DEXT;
        /*   97 */ PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC CopyTextureSubImage3DEXT;
        /*   98 */ PFNGLCULLFACEPROC CullFace;
        /*   99 */ PFNGLDEBUGMESSAGECALLBACKPROC DebugMessageCallback;
        /*  100 */ PFNGLDEBUGMESSAGECALLBACKARBPROC DebugMessageCallbackARB;
        /*  101 */ PFNGLDEBUGMESSAGECONTROLPROC DebugMessageControl;
        /*  102 */ PFNGLDEBUGMESSAGECONTROLARBPROC DebugMessageControlARB;
        /*  103 */ PFNGLDEBUGMESSAGEINSERTPROC DebugMessageInsert;
        /*  104 */ PFNGLDEBUGMESSAGEINSERTARBPROC DebugMessageInsertARB;
        /*  105 */ PFNGLDELETEBUFFERSARBPROC DeleteBuffersARB;
        /*  106 */ PFNGLDELETELISTSPROC DeleteLists;
        /*  107 */ PFNGLDELETETEXTURESPROC DeleteTextures;
        /*  108 */ PFNGLDELETETEXTURESEXTPROC DeleteTexturesEXT;
        /*  109 */ PFNGLDEPTHFUNCPROC DepthFunc;
        /*  110 */ PFNGLDEPTHMASKPROC DepthMask;
        /*  111 */ PFNGLDEPTHRANGEPROC DepthRange;
        /*  112 */ PFNGLDISABLEPROC Disable;
        /*  113 */ PFNGLDISABLECLIENTSTATEPROC DisableClientState;
        /*  114 */ PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC DisableClientStateIndexedEXT;
        /*  115 */ PFNGLDISABLECLIENTSTATEIEXTPROC DisableClientStateiEXT;
        /*  116 */ PFNGLDISABLEINDEXEDEXTPROC DisableIndexedEXT;
        /*  117 */ PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC DisableVertexArrayAttribEXT;
        /*  118 */ PFNGLDISABLEVERTEXARRAYEXTPROC DisableVertexArrayEXT;
        /*  119 */ PFNGLDRAWARRAYSPROC DrawArrays;
        /*  120 */ PFNGLDRAWARRAYSEXTPROC DrawArraysEXT;
        /*  121 */ PFNGLDRAWBUFFERPROC DrawBuffer;
        /*  122 */ PFNGLDRAWELEMENTSPROC DrawElements;
        /*  123 */ PFNGLDRAWPIXELSPROC DrawPixels;
        /*  124 */ PFNGLDRAWRANGEELEMENTSPROC DrawRangeElements;
        /*  125 */ PFNGLDRAWRANGEELEMENTSEXTPROC DrawRangeElementsEXT;
        /*  126 */ PFNGLEDGEFLAGPROC EdgeFlag;
        /*  127 */ PFNGLEDGEFLAGPOINTERPROC EdgeFlagPointer;
        /*  128 */ PFNGLEDGEFLAGPOINTEREXTPROC EdgeFlagPointerEXT;
        /*  129 */ PFNGLEDGEFLAGVPROC EdgeFlagv;
        /*  130 */ PFNGLENABLEPROC Enable;
        /*  131 */ PFNGLENABLECLIENTSTATEPROC EnableClientState;
        /*  132 */ PFNGLENABLECLIENTSTATEINDEXEDEXTPROC EnableClientStateIndexedEXT;
        /*  133 */ PFNGLENABLECLIENTSTATEIEXTPROC EnableClientStateiEXT;
        /*  134 */ PFNGLENABLEINDEXEDEXTPROC EnableIndexedEXT;
        /*  135 */ PFNGLENABLEVERTEXARRAYATTRIBEXTPROC EnableVertexArrayAttribEXT;
        /*  136 */ PFNGLENABLEVERTEXARRAYEXTPROC EnableVertexArrayEXT;
        /*  137 */ PFNGLENDPROC End;
        /*  138 */ PFNGLENDLISTPROC EndList;
        /*  139 */ PFNGLEVALCOORD1DPROC EvalCoord1d;
        /*  140 */ PFNGLEVALCOORD1DVPROC EvalCoord1dv;
        /*  141 */ PFNGLEVALCOORD1FPROC EvalCoord1f;
        /*  142 */ PFNGLEVALCOORD1FVPROC EvalCoord1fv;
        /*  143 */ PFNGLEVALCOORD2DPROC EvalCoord2d;
        /*  144 */ PFNGLEVALCOORD2DVPROC EvalCoord2dv;
        /*  145 */ PFNGLEVALCOORD2FPROC EvalCoord2f;
        /*  146 */ PFNGLEVALCOORD2FVPROC EvalCoord2fv;
        /*  147 */ PFNGLEVALMESH1PROC EvalMesh1;
        /*  148 */ PFNGLEVALMESH2PROC EvalMesh2;
        /*  149 */ PFNGLEVALPOINT1PROC EvalPoint1;
        /*  150 */ PFNGLEVALPOINT2PROC EvalPoint2;
        /*  151 */ PFNGLFEEDBACKBUFFERPROC FeedbackBuffer;
        /*  152 */ PFNGLFINISHPROC Finish;
        /*  153 */ PFNGLFLUSHPROC Flush;
        /*  154 */ PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC FlushMappedNamedBufferRangeEXT;
        /*  155 */ PFNGLFOGFPROC Fogf;
        /*  156 */ PFNGLFOGFVPROC Fogfv;
        /*  157 */ PFNGLFOGIPROC Fogi;
        /*  158 */ PFNGLFOGIVPROC Fogiv;
        /*  159 */ PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC FramebufferDrawBufferEXT;
        /*  160 */ PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC FramebufferDrawBuffersEXT;
        /*  161 */ PFNGLFRAMEBUFFERREADBUFFEREXTPROC FramebufferReadBufferEXT;
        /*  162 */ PFNGLFRONTFACEPROC FrontFace;
        /*  163 */ PFNGLFRUSTUMPROC Frustum;
        /*  164 */ PFNGLGENBUFFERSARBPROC GenBuffersARB;
        /*  165 */ PFNGLGENLISTSPROC GenLists;
        /*  166 */ PFNGLGENTEXTURESPROC GenTextures;
        /*  167 */ PFNGLGENTEXTURESEXTPROC GenTexturesEXT;
        /*  168 */ PFNGLGENERATEMULTITEXMIPMAPEXTPROC GenerateMultiTexMipmapEXT;
        /*  169 */ PFNGLGENERATETEXTUREMIPMAPEXTPROC GenerateTextureMipmapEXT;
        /*  170 */ PFNGLGETBOOLEANINDEXEDVEXTPROC GetBooleanIndexedvEXT;
        /*  171 */ PFNGLGETBOOLEANVPROC GetBooleanv;
        /*  172 */ PFNGLGETBUFFERPARAMETERIVARBPROC GetBufferParameterivARB;
        /*  173 */ PFNGLGETBUFFERPOINTERVARBPROC GetBufferPointervARB;
        /*  174 */ PFNGLGETBUFFERSUBDATAARBPROC GetBufferSubDataARB;
        /*  175 */ PFNGLGETCLIPPLANEPROC GetClipPlane;
        /*  176 */ PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC GetCompressedMultiTexImageEXT;
        /*  177 */ PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC GetCompressedTextureImageEXT;
        /*  178 */ PFNGLGETDEBUGMESSAGELOGPROC GetDebugMessageLog;
        /*  179 */ PFNGLGETDEBUGMESSAGELOGARBPROC GetDebugMessageLogARB;
        /*  180 */ PFNGLGETDOUBLEINDEXEDVEXTPROC GetDoubleIndexedvEXT;
        /*  181 */ PFNGLGETDOUBLEI_VEXTPROC GetDoublei_vEXT;
        /*  182 */ PFNGLGETDOUBLEVPROC GetDoublev;
        /*  183 */ PFNGLGETERRORPROC GetError;
        /*  184 */ PFNGLGETFLOATINDEXEDVEXTPROC GetFloatIndexedvEXT;
        /*  185 */ PFNGLGETFLOATI_VEXTPROC GetFloati_vEXT;
        /*  186 */ PFNGLGETFLOATVPROC GetFloatv;
        /*  187 */ PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC GetFramebufferParameterivEXT;
        /*  188 */ PFNGLGETINTEGERINDEXEDVEXTPROC GetIntegerIndexedvEXT;
        /*  189 */ PFNGLGETINTEGERVPROC GetIntegerv;
        /*  190 */ PFNGLGETLIGHTFVPROC GetLightfv;
        /*  191 */ PFNGLGETLIGHTIVPROC GetLightiv;
        /*  192 */ PFNGLGETMAPDVPROC GetMapdv;
        /*  193 */ PFNGLGETMAPFVPROC GetMapfv;
        /*  194 */ PFNGLGETMAPIVPROC GetMapiv;
        /*  195 */ PFNGLGETMATERIALFVPROC GetMaterialfv;
        /*  196 */ PFNGLGETMATERIALIVPROC GetMaterialiv;
        /*  197 */ PFNGLGETMULTITEXENVFVEXTPROC GetMultiTexEnvfvEXT;
        /*  198 */ PFNGLGETMULTITEXENVIVEXTPROC GetMultiTexEnvivEXT;
        /*  199 */ PFNGLGETMULTITEXGENDVEXTPROC GetMultiTexGendvEXT;
        /*  200 */ PFNGLGETMULTITEXGENFVEXTPROC GetMultiTexGenfvEXT;
        /*  201 */ PFNGLGETMULTITEXGENIVEXTPROC GetMultiTexGenivEXT;
        /*  202 */ PFNGLGETMULTITEXIMAGEEXTPROC GetMultiTexImageEXT;
        /*  203 */ PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC GetMultiTexLevelParameterfvEXT;
        /*  204 */ PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC GetMultiTexLevelParameterivEXT;
        /*  205 */ PFNGLGETMULTITEXPARAMETERIIVEXTPROC GetMultiTexParameterIivEXT;
        /*  206 */ PFNGLGETMULTITEXPARAMETERIUIVEXTPROC GetMultiTexParameterIuivEXT;
        /*  207 */ PFNGLGETMULTITEXPARAMETERFVEXTPROC GetMultiTexParameterfvEXT;
        /*  208 */ PFNGLGETMULTITEXPARAMETERIVEXTPROC GetMultiTexParameterivEXT;
        /*  209 */ PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC GetNamedBufferParameterivEXT;
        /*  210 */ PFNGLGETNAMEDBUFFERPOINTERVEXTPROC GetNamedBufferPointervEXT;
        /*  211 */ PFNGLGETNAMEDBUFFERSUBDATAEXTPROC GetNamedBufferSubDataEXT;
        /*  212 */ PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC GetNamedFramebufferAttachmentParameterivEXT;
        /*  213 */ PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC GetNamedFramebufferParameterivEXT;
        /*  214 */ PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC GetNamedProgramLocalParameterIivEXT;
        /*  215 */ PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC GetNamedProgramLocalParameterIuivEXT;
        /*  216 */ PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC GetNamedProgramLocalParameterdvEXT;
        /*  217 */ PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC GetNamedProgramLocalParameterfvEXT;
        /*  218 */ PFNGLGETNAMEDPROGRAMSTRINGEXTPROC GetNamedProgramStringEXT;
        /*  219 */ PFNGLGETNAMEDPROGRAMIVEXTPROC GetNamedProgramivEXT;
        /*  220 */ PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC GetNamedRenderbufferParameterivEXT;
        /*  221 */ PFNGLGETOBJECTLABELPROC GetObjectLabel;
        /*  222 */ PFNGLGETOBJECTPTRLABELPROC GetObjectPtrLabel;
        /*  223 */ PFNGLGETPIXELMAPFVPROC GetPixelMapfv;
        /*  224 */ PFNGLGETPIXELMAPUIVPROC GetPixelMapuiv;
        /*  225 */ PFNGLGETPIXELMAPUSVPROC GetPixelMapusv;
        /*  226 */ PFNGLGETPOINTERINDEXEDVEXTPROC GetPointerIndexedvEXT;
        /*  227 */ PFNGLGETPOINTERI_VEXTPROC GetPointeri_vEXT;
        /*  228 */ PFNGLGETPOINTERVPROC GetPointerv;
        /*  229 */ PFNGLGETPOINTERVEXTPROC GetPointervEXT;
        /*  230 */ PFNGLGETPOLYGONSTIPPLEPROC GetPolygonStipple;
        /*  231 */ PFNGLGETSTRINGPROC GetString;
        /*  232 */ PFNGLGETTEXENVFVPROC GetTexEnvfv;
        /*  233 */ PFNGLGETTEXENVIVPROC GetTexEnviv;
        /*  234 */ PFNGLGETTEXGENDVPROC GetTexGendv;
        /*  235 */ PFNGLGETTEXGENFVPROC GetTexGenfv;
        /*  236 */ PFNGLGETTEXGENIVPROC GetTexGeniv;
        /*  237 */ PFNGLGETTEXIMAGEPROC GetTexImage;
        /*  238 */ PFNGLGETTEXLEVELPARAMETERFVPROC GetTexLevelParameterfv;
        /*  239 */ PFNGLGETTEXLEVELPARAMETERIVPROC GetTexLevelParameteriv;
        /*  240 */ PFNGLGETTEXPARAMETERFVPROC GetTexParameterfv;
        /*  241 */ PFNGLGETTEXPARAMETERIVPROC GetTexParameteriv;
        /*  242 */ PFNGLGETTEXTUREIMAGEEXTPROC GetTextureImageEXT;
        /*  243 */ PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC GetTextureLevelParameterfvEXT;
        /*  244 */ PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC GetTextureLevelParameterivEXT;
        /*  245 */ PFNGLGETTEXTUREPARAMETERIIVEXTPROC GetTextureParameterIivEXT;
        /*  246 */ PFNGLGETTEXTUREPARAMETERIUIVEXTPROC GetTextureParameterIuivEXT;
        /*  247 */ PFNGLGETTEXTUREPARAMETERFVEXTPROC GetTextureParameterfvEXT;
        /*  248 */ PFNGLGETTEXTUREPARAMETERIVEXTPROC GetTextureParameterivEXT;
        /*  249 */ PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC GetVertexArrayIntegeri_vEXT;
        /*  250 */ PFNGLGETVERTEXARRAYINTEGERVEXTPROC GetVertexArrayIntegervEXT;
        /*  251 */ PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC GetVertexArrayPointeri_vEXT;
        /*  252 */ PFNGLGETVERTEXARRAYPOINTERVEXTPROC GetVertexArrayPointervEXT;
        /*  253 */ PFNGLHINTPROC Hint;
        /*  254 */ PFNGLINDEXMASKPROC IndexMask;
        /*  255 */ PFNGLINDEXPOINTERPROC IndexPointer;
        /*  256 */ PFNGLINDEXPOINTEREXTPROC IndexPointerEXT;
        /*  257 */ PFNGLINDEXDPROC Indexd;
        /*  258 */ PFNGLINDEXDVPROC Indexdv;
        /*  259 */ PFNGLINDEXFPROC Indexf;
        /*  260 */ PFNGLINDEXFVPROC Indexfv;
        /*  261 */ PFNGLINDEXIPROC Indexi;
        /*  262 */ PFNGLINDEXIVPROC Indexiv;
        /*  263 */ PFNGLINDEXSPROC Indexs;
        /*  264 */ PFNGLINDEXSVPROC Indexsv;
        /*  265 */ PFNGLINDEXUBPROC Indexub;
        /*  266 */ PFNGLINDEXUBVPROC Indexubv;
        /*  267 */ PFNGLINITNAMESPROC InitNames;
        /*  268 */ PFNGLINTERLEAVEDARRAYSPROC InterleavedArrays;
        /*  269 */ PFNGLISBUFFERARBPROC IsBufferARB;
        /*  270 */ PFNGLISENABLEDPROC IsEnabled;
        /*  271 */ PFNGLISENABLEDINDEXEDEXTPROC IsEnabledIndexedEXT;
        /*  272 */ PFNGLISLISTPROC IsList;
        /*  273 */ PFNGLISTEXTUREPROC IsTexture;
        /*  274 */ PFNGLISTEXTUREEXTPROC IsTextureEXT;
        /*  275 */ PFNGLLIGHTMODELFPROC LightModelf;
        /*  276 */ PFNGLLIGHTMODELFVPROC LightModelfv;
        /*  277 */ PFNGLLIGHTMODELIPROC LightModeli;
        /*  278 */ PFNGLLIGHTMODELIVPROC LightModeliv;
        /*  279 */ PFNGLLIGHTFPROC Lightf;
        /*  280 */ PFNGLLIGHTFVPROC Lightfv;
        /*  281 */ PFNGLLIGHTIPROC Lighti;
        /*  282 */ PFNGLLIGHTIVPROC Lightiv;
        /*  283 */ PFNGLLINESTIPPLEPROC LineStipple;
        /*  284 */ PFNGLLINEWIDTHPROC LineWidth;
        /*  285 */ PFNGLLISTBASEPROC ListBase;
        /*  286 */ PFNGLLOADIDENTITYPROC LoadIdentity;
        /*  287 */ PFNGLLOADMATRIXDPROC LoadMatrixd;
        /*  288 */ PFNGLLOADMATRIXFPROC LoadMatrixf;
        /*  289 */ PFNGLLOADNAMEPROC LoadName;
        /*  290 */ PFNGLLOGICOPPROC LogicOp;
        /*  291 */ PFNGLMAP1DPROC Map1d;
        /*  292 */ PFNGLMAP1FPROC Map1f;
        /*  293 */ PFNGLMAP2DPROC Map2d;
        /*  294 */ PFNGLMAP2FPROC Map2f;
        /*  295 */ PFNGLMAPBUFFERARBPROC MapBufferARB;
        /*  296 */ PFNGLMAPGRID1DPROC MapGrid1d;
        /*  297 */ PFNGLMAPGRID1FPROC MapGrid1f;
        /*  298 */ PFNGLMAPGRID2DPROC MapGrid2d;
        /*  299 */ PFNGLMAPGRID2FPROC MapGrid2f;
        /*  300 */ PFNGLMAPNAMEDBUFFEREXTPROC MapNamedBufferEXT;
        /*  301 */ PFNGLMAPNAMEDBUFFERRANGEEXTPROC MapNamedBufferRangeEXT;
        /*  302 */ PFNGLMATERIALFPROC Materialf;
        /*  303 */ PFNGLMATERIALFVPROC Materialfv;
        /*  304 */ PFNGLMATERIALIPROC Materiali;
        /*  305 */ PFNGLMATERIALIVPROC Materialiv;
        /*  306 */ PFNGLMATRIXFRUSTUMEXTPROC MatrixFrustumEXT;
        /*  307 */ PFNGLMATRIXLOADIDENTITYEXTPROC MatrixLoadIdentityEXT;
        /*  308 */ PFNGLMATRIXLOADTRANSPOSEDEXTPROC MatrixLoadTransposedEXT;
        /*  309 */ PFNGLMATRIXLOADTRANSPOSEFEXTPROC MatrixLoadTransposefEXT;
        /*  310 */ PFNGLMATRIXLOADDEXTPROC MatrixLoaddEXT;
        /*  311 */ PFNGLMATRIXLOADFEXTPROC MatrixLoadfEXT;
        /*  312 */ PFNGLMATRIXMODEPROC MatrixMode;
        /*  313 */ PFNGLMATRIXMULTTRANSPOSEDEXTPROC MatrixMultTransposedEXT;
        /*  314 */ PFNGLMATRIXMULTTRANSPOSEFEXTPROC MatrixMultTransposefEXT;
        /*  315 */ PFNGLMATRIXMULTDEXTPROC MatrixMultdEXT;
        /*  316 */ PFNGLMATRIXMULTFEXTPROC MatrixMultfEXT;
        /*  317 */ PFNGLMATRIXORTHOEXTPROC MatrixOrthoEXT;
        /*  318 */ PFNGLMATRIXPOPEXTPROC MatrixPopEXT;
        /*  319 */ PFNGLMATRIXPUSHEXTPROC MatrixPushEXT;
        /*  320 */ PFNGLMATRIXROTATEDEXTPROC MatrixRotatedEXT;
        /*  321 */ PFNGLMATRIXROTATEFEXTPROC MatrixRotatefEXT;
        /*  322 */ PFNGLMATRIXSCALEDEXTPROC MatrixScaledEXT;
        /*  323 */ PFNGLMATRIXSCALEFEXTPROC MatrixScalefEXT;
        /*  324 */ PFNGLMATRIXTRANSLATEDEXTPROC MatrixTranslatedEXT;
        /*  325 */ PFNGLMATRIXTRANSLATEFEXTPROC MatrixTranslatefEXT;
        /*  326 */ PFNGLMULTMATRIXDPROC MultMatrixd;
        /*  327 */ PFNGLMULTMATRIXFPROC MultMatrixf;
        /*  328 */ PFNGLMULTITEXBUFFEREXTPROC MultiTexBufferEXT;
        /*  329 */ PFNGLMULTITEXCOORDPOINTEREXTPROC MultiTexCoordPointerEXT;
        /*  330 */ PFNGLMULTITEXENVFEXTPROC MultiTexEnvfEXT;
        /*  331 */ PFNGLMULTITEXENVFVEXTPROC MultiTexEnvfvEXT;
        /*  332 */ PFNGLMULTITEXENVIEXTPROC MultiTexEnviEXT;
        /*  333 */ PFNGLMULTITEXENVIVEXTPROC MultiTexEnvivEXT;
        /*  334 */ PFNGLMULTITEXGENDEXTPROC MultiTexGendEXT;
        /*  335 */ PFNGLMULTITEXGENDVEXTPROC MultiTexGendvEXT;
        /*  336 */ PFNGLMULTITEXGENFEXTPROC MultiTexGenfEXT;
        /*  337 */ PFNGLMULTITEXGENFVEXTPROC MultiTexGenfvEXT;
        /*  338 */ PFNGLMULTITEXGENIEXTPROC MultiTexGeniEXT;
        /*  339 */ PFNGLMULTITEXGENIVEXTPROC MultiTexGenivEXT;
        /*  340 */ PFNGLMULTITEXIMAGE1DEXTPROC MultiTexImage1DEXT;
        /*  341 */ PFNGLMULTITEXIMAGE2DEXTPROC MultiTexImage2DEXT;
        /*  342 */ PFNGLMULTITEXIMAGE3DEXTPROC MultiTexImage3DEXT;
        /*  343 */ PFNGLMULTITEXPARAMETERIIVEXTPROC MultiTexParameterIivEXT;
        /*  344 */ PFNGLMULTITEXPARAMETERIUIVEXTPROC MultiTexParameterIuivEXT;
        /*  345 */ PFNGLMULTITEXPARAMETERFEXTPROC MultiTexParameterfEXT;
        /*  346 */ PFNGLMULTITEXPARAMETERFVEXTPROC MultiTexParameterfvEXT;
        /*  347 */ PFNGLMULTITEXPARAMETERIEXTPROC MultiTexParameteriEXT;
        /*  348 */ PFNGLMULTITEXPARAMETERIVEXTPROC MultiTexParameterivEXT;
        /*  349 */ PFNGLMULTITEXRENDERBUFFEREXTPROC MultiTexRenderbufferEXT;
        /*  350 */ PFNGLMULTITEXSUBIMAGE1DEXTPROC MultiTexSubImage1DEXT;
        /*  351 */ PFNGLMULTITEXSUBIMAGE2DEXTPROC MultiTexSubImage2DEXT;
        /*  352 */ PFNGLMULTITEXSUBIMAGE3DEXTPROC MultiTexSubImage3DEXT;
        /*  353 */ PFNGLNAMEDBUFFERDATAEXTPROC NamedBufferDataEXT;
        /*  354 */ PFNGLNAMEDBUFFERSTORAGEEXTPROC NamedBufferStorageEXT;
        /*  355 */ PFNGLNAMEDBUFFERSUBDATAEXTPROC NamedBufferSubDataEXT;
        /*  356 */ PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC NamedCopyBufferSubDataEXT;
        /*  357 */ PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC NamedFramebufferParameteriEXT;
        /*  358 */ PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC NamedFramebufferRenderbufferEXT;
        /*  359 */ PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC NamedFramebufferTexture1DEXT;
        /*  360 */ PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC NamedFramebufferTexture2DEXT;
        /*  361 */ PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC NamedFramebufferTexture3DEXT;
        /*  362 */ PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC NamedFramebufferTextureEXT;
        /*  363 */ PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC NamedFramebufferTextureFaceEXT;
        /*  364 */ PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC NamedFramebufferTextureLayerEXT;
        /*  365 */ PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC NamedProgramLocalParameter4dEXT;
        /*  366 */ PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC NamedProgramLocalParameter4dvEXT;
        /*  367 */ PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC NamedProgramLocalParameter4fEXT;
        /*  368 */ PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC NamedProgramLocalParameter4fvEXT;
        /*  369 */ PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC NamedProgramLocalParameterI4iEXT;
        /*  370 */ PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC NamedProgramLocalParameterI4ivEXT;
        /*  371 */ PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC NamedProgramLocalParameterI4uiEXT;
        /*  372 */ PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC NamedProgramLocalParameterI4uivEXT;
        /*  373 */ PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC NamedProgramLocalParameters4fvEXT;
        /*  374 */ PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC NamedProgramLocalParametersI4ivEXT;
        /*  375 */ PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC NamedProgramLocalParametersI4uivEXT;
        /*  376 */ PFNGLNAMEDPROGRAMSTRINGEXTPROC NamedProgramStringEXT;
        /*  377 */ PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC NamedRenderbufferStorageEXT;
        /*  378 */ PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC NamedRenderbufferStorageMultisampleCoverageEXT;
        /*  379 */ PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC NamedRenderbufferStorageMultisampleEXT;
        /*  380 */ PFNGLNEWLISTPROC NewList;
        /*  381 */ PFNGLNORMAL3BPROC Normal3b;
        /*  382 */ PFNGLNORMAL3BVPROC Normal3bv;
        /*  383 */ PFNGLNORMAL3DPROC Normal3d;
        /*  384 */ PFNGLNORMAL3DVPROC Normal3dv;
        /*  385 */ PFNGLNORMAL3FPROC Normal3f;
        /*  386 */ PFNGLNORMAL3FVPROC Normal3fv;
        /*  387 */ PFNGLNORMAL3IPROC Normal3i;
        /*  388 */ PFNGLNORMAL3IVPROC Normal3iv;
        /*  389 */ PFNGLNORMAL3SPROC Normal3s;
        /*  390 */ PFNGLNORMAL3SVPROC Normal3sv;
        /*  391 */ PFNGLNORMALPOINTERPROC NormalPointer;
        /*  392 */ PFNGLNORMALPOINTEREXTPROC NormalPointerEXT;
        /*  393 */ PFNGLOBJECTLABELPROC ObjectLabel;
        /*  394 */ PFNGLOBJECTPTRLABELPROC ObjectPtrLabel;
        /*  395 */ PFNGLORTHOPROC Ortho;
        /*  396 */ PFNGLPASSTHROUGHPROC PassThrough;
        /*  397 */ PFNGLPIXELMAPFVPROC PixelMapfv;
        /*  398 */ PFNGLPIXELMAPUIVPROC PixelMapuiv;
        /*  399 */ PFNGLPIXELMAPUSVPROC PixelMapusv;
        /*  400 */ PFNGLPIXELSTOREFPROC PixelStoref;
        /*  401 */ PFNGLPIXELSTOREIPROC PixelStorei;
        /*  402 */ PFNGLPIXELTRANSFERFPROC PixelTransferf;
        /*  403 */ PFNGLPIXELTRANSFERIPROC PixelTransferi;
        /*  404 */ PFNGLPIXELZOOMPROC PixelZoom;
        /*  405 */ PFNGLPOINTSIZEPROC PointSize;
        /*  406 */ PFNGLPOLYGONMODEPROC PolygonMode;
        /*  407 */ PFNGLPOLYGONOFFSETPROC PolygonOffset;
        /*  408 */ PFNGLPOLYGONSTIPPLEPROC PolygonStipple;
        /*  409 */ PFNGLPOPATTRIBPROC PopAttrib;
        /*  410 */ PFNGLPOPCLIENTATTRIBPROC PopClientAttrib;
        /*  411 */ PFNGLPOPDEBUGGROUPPROC PopDebugGroup;
        /*  412 */ PFNGLPOPMATRIXPROC PopMatrix;
        /*  413 */ PFNGLPOPNAMEPROC PopName;
        /*  414 */ PFNGLPRIORITIZETEXTURESPROC PrioritizeTextures;
        /*  415 */ PFNGLPRIORITIZETEXTURESEXTPROC PrioritizeTexturesEXT;
        /*  416 */ PFNGLPROGRAMUNIFORM1DEXTPROC ProgramUniform1dEXT;
        /*  417 */ PFNGLPROGRAMUNIFORM1DVEXTPROC ProgramUniform1dvEXT;
        /*  418 */ PFNGLPROGRAMUNIFORM1FEXTPROC ProgramUniform1fEXT;
        /*  419 */ PFNGLPROGRAMUNIFORM1FVEXTPROC ProgramUniform1fvEXT;
        /*  420 */ PFNGLPROGRAMUNIFORM1IEXTPROC ProgramUniform1iEXT;
        /*  421 */ PFNGLPROGRAMUNIFORM1IVEXTPROC ProgramUniform1ivEXT;
        /*  422 */ PFNGLPROGRAMUNIFORM1UIEXTPROC ProgramUniform1uiEXT;
        /*  423 */ PFNGLPROGRAMUNIFORM1UIVEXTPROC ProgramUniform1uivEXT;
        /*  424 */ PFNGLPROGRAMUNIFORM2DEXTPROC ProgramUniform2dEXT;
        /*  425 */ PFNGLPROGRAMUNIFORM2DVEXTPROC ProgramUniform2dvEXT;
        /*  426 */ PFNGLPROGRAMUNIFORM2FEXTPROC ProgramUniform2fEXT;
        /*  427 */ PFNGLPROGRAMUNIFORM2FVEXTPROC ProgramUniform2fvEXT;
        /*  428 */ PFNGLPROGRAMUNIFORM2IEXTPROC ProgramUniform2iEXT;
        /*  429 */ PFNGLPROGRAMUNIFORM2IVEXTPROC ProgramUniform2ivEXT;
        /*  430 */ PFNGLPROGRAMUNIFORM2UIEXTPROC ProgramUniform2uiEXT;
        /*  431 */ PFNGLPROGRAMUNIFORM2UIVEXTPROC ProgramUniform2uivEXT;
        /*  432 */ PFNGLPROGRAMUNIFORM3DEXTPROC ProgramUniform3dEXT;
        /*  433 */ PFNGLPROGRAMUNIFORM3DVEXTPROC ProgramUniform3dvEXT;
        /*  434 */ PFNGLPROGRAMUNIFORM3FEXTPROC ProgramUniform3fEXT;
        /*  435 */ PFNGLPROGRAMUNIFORM3FVEXTPROC ProgramUniform3fvEXT;
        /*  436 */ PFNGLPROGRAMUNIFORM3IEXTPROC ProgramUniform3iEXT;
        /*  437 */ PFNGLPROGRAMUNIFORM3IVEXTPROC ProgramUniform3ivEXT;
        /*  438 */ PFNGLPROGRAMUNIFORM3UIEXTPROC ProgramUniform3uiEXT;
        /*  439 */ PFNGLPROGRAMUNIFORM3UIVEXTPROC ProgramUniform3uivEXT;
        /*  440 */ PFNGLPROGRAMUNIFORM4DEXTPROC ProgramUniform4dEXT;
        /*  441 */ PFNGLPROGRAMUNIFORM4DVEXTPROC ProgramUniform4dvEXT;
        /*  442 */ PFNGLPROGRAMUNIFORM4FEXTPROC ProgramUniform4fEXT;
        /*  443 */ PFNGLPROGRAMUNIFORM4FVEXTPROC ProgramUniform4fvEXT;
        /*  444 */ PFNGLPROGRAMUNIFORM4IEXTPROC ProgramUniform4iEXT;
        /*  445 */ PFNGLPROGRAMUNIFORM4IVEXTPROC ProgramUniform4ivEXT;
        /*  446 */ PFNGLPROGRAMUNIFORM4UIEXTPROC ProgramUniform4uiEXT;
        /*  447 */ PFNGLPROGRAMUNIFORM4UIVEXTPROC ProgramUniform4uivEXT;
        /*  448 */ PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC ProgramUniformMatrix2dvEXT;
        /*  449 */ PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC ProgramUniformMatrix2fvEXT;
        /*  450 */ PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC ProgramUniformMatrix2x3dvEXT;
        /*  451 */ PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC ProgramUniformMatrix2x3fvEXT;
        /*  452 */ PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC ProgramUniformMatrix2x4dvEXT;
        /*  453 */ PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC ProgramUniformMatrix2x4fvEXT;
        /*  454 */ PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC ProgramUniformMatrix3dvEXT;
        /*  455 */ PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC ProgramUniformMatrix3fvEXT;
        /*  456 */ PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC ProgramUniformMatrix3x2dvEXT;
        /*  457 */ PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC ProgramUniformMatrix3x2fvEXT;
        /*  458 */ PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC ProgramUniformMatrix3x4dvEXT;
        /*  459 */ PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC ProgramUniformMatrix3x4fvEXT;
        /*  460 */ PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC ProgramUniformMatrix4dvEXT;
        /*  461 */ PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC ProgramUniformMatrix4fvEXT;
        /*  462 */ PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC ProgramUniformMatrix4x2dvEXT;
        /*  463 */ PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC ProgramUniformMatrix4x2fvEXT;
        /*  464 */ PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC ProgramUniformMatrix4x3dvEXT;
        /*  465 */ PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC ProgramUniformMatrix4x3fvEXT;
        /*  466 */ PFNGLPUSHATTRIBPROC PushAttrib;
        /*  467 */ PFNGLPUSHCLIENTATTRIBPROC PushClientAttrib;
        /*  468 */ PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC PushClientAttribDefaultEXT;
        /*  469 */ PFNGLPUSHDEBUGGROUPPROC PushDebugGroup;
        /*  470 */ PFNGLPUSHMATRIXPROC PushMatrix;
        /*  471 */ PFNGLPUSHNAMEPROC PushName;
        /*  472 */ PFNGLRASTERPOS2DPROC RasterPos2d;
        /*  473 */ PFNGLRASTERPOS2DVPROC RasterPos2dv;
        /*  474 */ PFNGLRASTERPOS2FPROC RasterPos2f;
        /*  475 */ PFNGLRASTERPOS2FVPROC RasterPos2fv;
        /*  476 */ PFNGLRASTERPOS2IPROC RasterPos2i;
        /*  477 */ PFNGLRASTERPOS2IVPROC RasterPos2iv;
        /*  478 */ PFNGLRASTERPOS2SPROC RasterPos2s;
        /*  479 */ PFNGLRASTERPOS2SVPROC RasterPos2sv;
        /*  480 */ PFNGLRASTERPOS3DPROC RasterPos3d;
        /*  481 */ PFNGLRASTERPOS3DVPROC RasterPos3dv;
        /*  482 */ PFNGLRASTERPOS3FPROC RasterPos3f;
        /*  483 */ PFNGLRASTERPOS3FVPROC RasterPos3fv;
        /*  484 */ PFNGLRASTERPOS3IPROC RasterPos3i;
        /*  485 */ PFNGLRASTERPOS3IVPROC RasterPos3iv;
        /*  486 */ PFNGLRASTERPOS3SPROC RasterPos3s;
        /*  487 */ PFNGLRASTERPOS3SVPROC RasterPos3sv;
        /*  488 */ PFNGLRASTERPOS4DPROC RasterPos4d;
        /*  489 */ PFNGLRASTERPOS4DVPROC RasterPos4dv;
        /*  490 */ PFNGLRASTERPOS4FPROC RasterPos4f;
        /*  491 */ PFNGLRASTERPOS4FVPROC RasterPos4fv;
        /*  492 */ PFNGLRASTERPOS4IPROC RasterPos4i;
        /*  493 */ PFNGLRASTERPOS4IVPROC RasterPos4iv;
        /*  494 */ PFNGLRASTERPOS4SPROC RasterPos4s;
        /*  495 */ PFNGLRASTERPOS4SVPROC RasterPos4sv;
        /*  496 */ PFNGLREADBUFFERPROC ReadBuffer;
        /*  497 */ PFNGLREADPIXELSPROC ReadPixels;
        /*  498 */ PFNGLRECTDPROC Rectd;
        /*  499 */ PFNGLRECTDVPROC Rectdv;
        /*  500 */ PFNGLRECTFPROC Rectf;
        /*  501 */ PFNGLRECTFVPROC Rectfv;
        /*  502 */ PFNGLRECTIPROC Recti;
        /*  503 */ PFNGLRECTIVPROC Rectiv;
        /*  504 */ PFNGLRECTSPROC Rects;
        /*  505 */ PFNGLRECTSVPROC Rectsv;
        /*  506 */ PFNGLRENDERMODEPROC RenderMode;
        /*  507 */ PFNGLROTATEDPROC Rotated;
        /*  508 */ PFNGLROTATEFPROC Rotatef;
        /*  509 */ PFNGLSCALEDPROC Scaled;
        /*  510 */ PFNGLSCALEFPROC Scalef;
        /*  511 */ PFNGLSCISSORPROC Scissor;
        /*  512 */ PFNGLSELECTBUFFERPROC SelectBuffer;
        /*  513 */ PFNGLSHADEMODELPROC ShadeModel;
        /*  514 */ PFNGLSTENCILFUNCPROC StencilFunc;
        /*  515 */ PFNGLSTENCILMASKPROC StencilMask;
        /*  516 */ PFNGLSTENCILOPPROC StencilOp;
        /*  517 */ PFNGLTEXCOORD1DPROC TexCoord1d;
        /*  518 */ PFNGLTEXCOORD1DVPROC TexCoord1dv;
        /*  519 */ PFNGLTEXCOORD1FPROC TexCoord1f;
        /*  520 */ PFNGLTEXCOORD1FVPROC TexCoord1fv;
        /*  521 */ PFNGLTEXCOORD1IPROC TexCoord1i;
        /*  522 */ PFNGLTEXCOORD1IVPROC TexCoord1iv;
        /*  523 */ PFNGLTEXCOORD1SPROC TexCoord1s;
        /*  524 */ PFNGLTEXCOORD1SVPROC TexCoord1sv;
        /*  525 */ PFNGLTEXCOORD2DPROC TexCoord2d;
        /*  526 */ PFNGLTEXCOORD2DVPROC TexCoord2dv;
        /*  527 */ PFNGLTEXCOORD2FPROC TexCoord2f;
        /*  528 */ PFNGLTEXCOORD2FVPROC TexCoord2fv;
        /*  529 */ PFNGLTEXCOORD2IPROC TexCoord2i;
        /*  530 */ PFNGLTEXCOORD2IVPROC TexCoord2iv;
        /*  531 */ PFNGLTEXCOORD2SPROC TexCoord2s;
        /*  532 */ PFNGLTEXCOORD2SVPROC TexCoord2sv;
        /*  533 */ PFNGLTEXCOORD3DPROC TexCoord3d;
        /*  534 */ PFNGLTEXCOORD3DVPROC TexCoord3dv;
        /*  535 */ PFNGLTEXCOORD3FPROC TexCoord3f;
        /*  536 */ PFNGLTEXCOORD3FVPROC TexCoord3fv;
        /*  537 */ PFNGLTEXCOORD3IPROC TexCoord3i;
        /*  538 */ PFNGLTEXCOORD3IVPROC TexCoord3iv;
        /*  539 */ PFNGLTEXCOORD3SPROC TexCoord3s;
        /*  540 */ PFNGLTEXCOORD3SVPROC TexCoord3sv;
        /*  541 */ PFNGLTEXCOORD4DPROC TexCoord4d;
        /*  542 */ PFNGLTEXCOORD4DVPROC TexCoord4dv;
        /*  543 */ PFNGLTEXCOORD4FPROC TexCoord4f;
        /*  544 */ PFNGLTEXCOORD4FVPROC TexCoord4fv;
        /*  545 */ PFNGLTEXCOORD4IPROC TexCoord4i;
        /*  546 */ PFNGLTEXCOORD4IVPROC TexCoord4iv;
        /*  547 */ PFNGLTEXCOORD4SPROC TexCoord4s;
        /*  548 */ PFNGLTEXCOORD4SVPROC TexCoord4sv;
        /*  549 */ PFNGLTEXCOORDPOINTERPROC TexCoordPointer;
        /*  550 */ PFNGLTEXCOORDPOINTEREXTPROC TexCoordPointerEXT;
        /*  551 */ PFNGLTEXENVFPROC TexEnvf;
        /*  552 */ PFNGLTEXENVFVPROC TexEnvfv;
        /*  553 */ PFNGLTEXENVIPROC TexEnvi;
        /*  554 */ PFNGLTEXENVIVPROC TexEnviv;
        /*  555 */ PFNGLTEXGENDPROC TexGend;
        /*  556 */ PFNGLTEXGENDVPROC TexGendv;
        /*  557 */ PFNGLTEXGENFPROC TexGenf;
        /*  558 */ PFNGLTEXGENFVPROC TexGenfv;
        /*  559 */ PFNGLTEXGENIPROC TexGeni;
        /*  560 */ PFNGLTEXGENIVPROC TexGeniv;
        /*  561 */ PFNGLTEXIMAGE1DPROC TexImage1D;
        /*  562 */ PFNGLTEXIMAGE2DPROC TexImage2D;
        /*  563 */ PFNGLTEXIMAGE3DPROC TexImage3D;
        /*  564 */ PFNGLTEXIMAGE3DEXTPROC TexImage3DEXT;
        /*  565 */ PFNGLTEXPARAMETERFPROC TexParameterf;
        /*  566 */ PFNGLTEXPARAMETERFVPROC TexParameterfv;
        /*  567 */ PFNGLTEXPARAMETERIPROC TexParameteri;
        /*  568 */ PFNGLTEXPARAMETERIVPROC TexParameteriv;
        /*  569 */ PFNGLTEXSTORAGE1DEXTPROC TexStorage1DEXT;
        /*  570 */ PFNGLTEXSTORAGE2DEXTPROC TexStorage2DEXT;
        /*  571 */ PFNGLTEXSTORAGE3DEXTPROC TexStorage3DEXT;
        /*  572 */ PFNGLTEXSUBIMAGE1DPROC TexSubImage1D;
        /*  573 */ PFNGLTEXSUBIMAGE1DEXTPROC TexSubImage1DEXT;
        /*  574 */ PFNGLTEXSUBIMAGE2DPROC TexSubImage2D;
        /*  575 */ PFNGLTEXSUBIMAGE2DEXTPROC TexSubImage2DEXT;
        /*  576 */ PFNGLTEXSUBIMAGE3DPROC TexSubImage3D;
        /*  577 */ PFNGLTEXSUBIMAGE3DEXTPROC TexSubImage3DEXT;
        /*  578 */ PFNGLTEXTUREBUFFEREXTPROC TextureBufferEXT;
        /*  579 */ PFNGLTEXTUREBUFFERRANGEEXTPROC TextureBufferRangeEXT;
        /*  580 */ PFNGLTEXTUREIMAGE1DEXTPROC TextureImage1DEXT;
        /*  581 */ PFNGLTEXTUREIMAGE2DEXTPROC TextureImage2DEXT;
        /*  582 */ PFNGLTEXTUREIMAGE3DEXTPROC TextureImage3DEXT;
        /*  583 */ PFNGLTEXTUREPAGECOMMITMENTEXTPROC TexturePageCommitmentEXT;
        /*  584 */ PFNGLTEXTUREPARAMETERIIVEXTPROC TextureParameterIivEXT;
        /*  585 */ PFNGLTEXTUREPARAMETERIUIVEXTPROC TextureParameterIuivEXT;
        /*  586 */ PFNGLTEXTUREPARAMETERFEXTPROC TextureParameterfEXT;
        /*  587 */ PFNGLTEXTUREPARAMETERFVEXTPROC TextureParameterfvEXT;
        /*  588 */ PFNGLTEXTUREPARAMETERIEXTPROC TextureParameteriEXT;
        /*  589 */ PFNGLTEXTUREPARAMETERIVEXTPROC TextureParameterivEXT;
        /*  590 */ PFNGLTEXTURERENDERBUFFEREXTPROC TextureRenderbufferEXT;
        /*  591 */ PFNGLTEXTURESTORAGE1DEXTPROC TextureStorage1DEXT;
        /*  592 */ PFNGLTEXTURESTORAGE2DEXTPROC TextureStorage2DEXT;
        /*  593 */ PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC TextureStorage2DMultisampleEXT;
        /*  594 */ PFNGLTEXTURESTORAGE3DEXTPROC TextureStorage3DEXT;
        /*  595 */ PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC TextureStorage3DMultisampleEXT;
        /*  596 */ PFNGLTEXTURESUBIMAGE1DEXTPROC TextureSubImage1DEXT;
        /*  597 */ PFNGLTEXTURESUBIMAGE2DEXTPROC TextureSubImage2DEXT;
        /*  598 */ PFNGLTEXTURESUBIMAGE3DEXTPROC TextureSubImage3DEXT;
        /*  599 */ PFNGLTRANSLATEDPROC Translated;
        /*  600 */ PFNGLTRANSLATEFPROC Translatef;
        /*  601 */ PFNGLUNMAPBUFFERARBPROC UnmapBufferARB;
        /*  602 */ PFNGLUNMAPNAMEDBUFFEREXTPROC UnmapNamedBufferEXT;
        /*  603 */ PFNGLVERTEX2DPROC Vertex2d;
        /*  604 */ PFNGLVERTEX2DVPROC Vertex2dv;
        /*  605 */ PFNGLVERTEX2FPROC Vertex2f;
        /*  606 */ PFNGLVERTEX2FVPROC Vertex2fv;
        /*  607 */ PFNGLVERTEX2IPROC Vertex2i;
        /*  608 */ PFNGLVERTEX2IVPROC Vertex2iv;
        /*  609 */ PFNGLVERTEX2SPROC Vertex2s;
        /*  610 */ PFNGLVERTEX2SVPROC Vertex2sv;
        /*  611 */ PFNGLVERTEX3DPROC Vertex3d;
        /*  612 */ PFNGLVERTEX3DVPROC Vertex3dv;
        /*  613 */ PFNGLVERTEX3FPROC Vertex3f;
        /*  614 */ PFNGLVERTEX3FVPROC Vertex3fv;
        /*  615 */ PFNGLVERTEX3IPROC Vertex3i;
        /*  616 */ PFNGLVERTEX3IVPROC Vertex3iv;
        /*  617 */ PFNGLVERTEX3SPROC Vertex3s;
        /*  618 */ PFNGLVERTEX3SVPROC Vertex3sv;
        /*  619 */ PFNGLVERTEX4DPROC Vertex4d;
        /*  620 */ PFNGLVERTEX4DVPROC Vertex4dv;
        /*  621 */ PFNGLVERTEX4FPROC Vertex4f;
        /*  622 */ PFNGLVERTEX4FVPROC Vertex4fv;
        /*  623 */ PFNGLVERTEX4IPROC Vertex4i;
        /*  624 */ PFNGLVERTEX4IVPROC Vertex4iv;
        /*  625 */ PFNGLVERTEX4SPROC Vertex4s;
        /*  626 */ PFNGLVERTEX4SVPROC Vertex4sv;
        /*  627 */ PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC VertexArrayBindVertexBufferEXT;
        /*  628 */ PFNGLVERTEXARRAYCOLOROFFSETEXTPROC VertexArrayColorOffsetEXT;
        /*  629 */ PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC VertexArrayEdgeFlagOffsetEXT;
        /*  630 */ PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC VertexArrayFogCoordOffsetEXT;
        /*  631 */ PFNGLVERTEXARRAYINDEXOFFSETEXTPROC VertexArrayIndexOffsetEXT;
        /*  632 */ PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC VertexArrayMultiTexCoordOffsetEXT;
        /*  633 */ PFNGLVERTEXARRAYNORMALOFFSETEXTPROC VertexArrayNormalOffsetEXT;
        /*  634 */ PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC VertexArraySecondaryColorOffsetEXT;
        /*  635 */ PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC VertexArrayTexCoordOffsetEXT;
        /*  636 */ PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC VertexArrayVertexAttribBindingEXT;
        /*  637 */ PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC VertexArrayVertexAttribDivisorEXT;
        /*  638 */ PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC VertexArrayVertexAttribFormatEXT;
        /*  639 */ PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC VertexArrayVertexAttribIFormatEXT;
        /*  640 */ PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC VertexArrayVertexAttribIOffsetEXT;
        /*  641 */ PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC VertexArrayVertexAttribLFormatEXT;
        /*  642 */ PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC VertexArrayVertexAttribLOffsetEXT;
        /*  643 */ PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC VertexArrayVertexAttribOffsetEXT;
        /*  644 */ PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC VertexArrayVertexBindingDivisorEXT;
        /*  645 */ PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC VertexArrayVertexOffsetEXT;
        /*  646 */ PFNGLVERTEXPOINTERPROC VertexPointer;
        /*  647 */ PFNGLVERTEXPOINTEREXTPROC VertexPointerEXT;
        /*  648 */ PFNGLVIEWPORTPROC Viewport;
        /*  649 */ PFNGLACTIVESHADERPROGRAMPROC ActiveShaderProgram;
        /*  650 */ PFNGLACTIVESHADERPROGRAMEXTPROC ActiveShaderProgramEXT;
        /*  651 */ PFNGLACTIVETEXTUREPROC ActiveTexture;
        /*  652 */ PFNGLATTACHSHADERPROC AttachShader;
        /*  653 */ PFNGLBEGINQUERYPROC BeginQuery;
        /*  654 */ PFNGLBEGINQUERYEXTPROC BeginQueryEXT;
        /*  655 */ PFNGLBEGINTRANSFORMFEEDBACKPROC BeginTransformFeedback;
        /*  656 */ PFNGLBINDATTRIBLOCATIONPROC BindAttribLocation;
        /*  657 */ PFNGLBINDBUFFERPROC BindBuffer;
        /*  658 */ PFNGLBINDBUFFERBASEPROC BindBufferBase;
        /*  659 */ PFNGLBINDBUFFERRANGEPROC BindBufferRange;
        /*  660 */ PFNGLBINDFRAMEBUFFERPROC BindFramebuffer;
        /*  661 */ PFNGLBINDIMAGETEXTUREPROC BindImageTexture;
        /*  662 */ PFNGLBINDPROGRAMPIPELINEPROC BindProgramPipeline;
        /*  663 */ PFNGLBINDPROGRAMPIPELINEEXTPROC BindProgramPipelineEXT;
        /*  664 */ PFNGLBINDRENDERBUFFERPROC BindRenderbuffer;
        /*  665 */ PFNGLBINDSAMPLERPROC BindSampler;
        /*  666 */ PFNGLBINDTRANSFORMFEEDBACKPROC BindTransformFeedback;
        /*  667 */ PFNGLBINDVERTEXARRAYPROC BindVertexArray;
        /*  668 */ PFNGLBINDVERTEXARRAYOESPROC BindVertexArrayOES;
        /*  669 */ PFNGLBINDVERTEXBUFFERPROC BindVertexBuffer;
        /*  670 */ PFNGLBLENDBARRIERPROC BlendBarrier;
        /*  671 */ PFNGLBLENDBARRIERKHRPROC BlendBarrierKHR;
        /*  672 */ PFNGLBLENDBARRIERNVPROC BlendBarrierNV;
        /*  673 */ PFNGLBLENDCOLORPROC BlendColor;
        /*  674 */ PFNGLBLENDEQUATIONPROC BlendEquation;
        /*  675 */ PFNGLBLENDEQUATIONSEPARATEPROC BlendEquationSeparate;
        /*  676 */ PFNGLBLENDEQUATIONSEPARATEIPROC BlendEquationSeparatei;
        /*  677 */ PFNGLBLENDEQUATIONSEPARATEIEXTPROC BlendEquationSeparateiEXT;
        /*  678 */ PFNGLBLENDEQUATIONSEPARATEIOESPROC BlendEquationSeparateiOES;
        /*  679 */ PFNGLBLENDEQUATIONIPROC BlendEquationi;
        /*  680 */ PFNGLBLENDEQUATIONIEXTPROC BlendEquationiEXT;
        /*  681 */ PFNGLBLENDEQUATIONIOESPROC BlendEquationiOES;
        /*  682 */ PFNGLBLENDFUNCSEPARATEPROC BlendFuncSeparate;
        /*  683 */ PFNGLBLENDFUNCSEPARATEIPROC BlendFuncSeparatei;
        /*  684 */ PFNGLBLENDFUNCSEPARATEIEXTPROC BlendFuncSeparateiEXT;
        /*  685 */ PFNGLBLENDFUNCSEPARATEIOESPROC BlendFuncSeparateiOES;
        /*  686 */ PFNGLBLENDFUNCIPROC BlendFunci;
        /*  687 */ PFNGLBLENDFUNCIEXTPROC BlendFunciEXT;
        /*  688 */ PFNGLBLENDFUNCIOESPROC BlendFunciOES;
        /*  689 */ PFNGLBLENDPARAMETERINVPROC BlendParameteriNV;
        /*  690 */ PFNGLBLITFRAMEBUFFERPROC BlitFramebuffer;
        /*  691 */ PFNGLBLITFRAMEBUFFERNVPROC BlitFramebufferNV;
        /*  692 */ PFNGLBUFFERDATAPROC BufferData;
        /*  693 */ PFNGLBUFFERSUBDATAPROC BufferSubData;
        /*  694 */ PFNGLCHECKFRAMEBUFFERSTATUSPROC CheckFramebufferStatus;
        /*  695 */ PFNGLCLEARBUFFERFIPROC ClearBufferfi;
        /*  696 */ PFNGLCLEARBUFFERFVPROC ClearBufferfv;
        /*  697 */ PFNGLCLEARBUFFERIVPROC ClearBufferiv;
        /*  698 */ PFNGLCLEARBUFFERUIVPROC ClearBufferuiv;
        /*  699 */ PFNGLCLEARDEPTHFPROC ClearDepthf;
        /*  700 */ PFNGLCLIENTWAITSYNCPROC ClientWaitSync;
        /*  701 */ PFNGLCLIENTWAITSYNCAPPLEPROC ClientWaitSyncAPPLE;
        /*  702 */ PFNGLCOLORMASKIPROC ColorMaski;
        /*  703 */ PFNGLCOLORMASKIEXTPROC ColorMaskiEXT;
        /*  704 */ PFNGLCOLORMASKIOESPROC ColorMaskiOES;
        /*  705 */ PFNGLCOMPILESHADERPROC CompileShader;
        /*  706 */ PFNGLCOMPRESSEDTEXIMAGE2DPROC CompressedTexImage2D;
        /*  707 */ PFNGLCOMPRESSEDTEXIMAGE3DPROC CompressedTexImage3D;
        /*  708 */ PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC CompressedTexSubImage2D;
        /*  709 */ PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC CompressedTexSubImage3D;
        /*  710 */ PFNGLCOPYBUFFERSUBDATAPROC CopyBufferSubData;
        /*  711 */ PFNGLCOPYBUFFERSUBDATANVPROC CopyBufferSubDataNV;
        /*  712 */ PFNGLCOPYIMAGESUBDATAPROC CopyImageSubData;
        /*  713 */ PFNGLCOPYIMAGESUBDATAEXTPROC CopyImageSubDataEXT;
        /*  714 */ PFNGLCOPYIMAGESUBDATAOESPROC CopyImageSubDataOES;
        /*  715 */ PFNGLCREATEPROGRAMPROC CreateProgram;
        /*  716 */ PFNGLCREATESHADERPROC CreateShader;
        /*  717 */ PFNGLCREATESHADERPROGRAMVPROC CreateShaderProgramv;
        /*  718 */ PFNGLCREATESHADERPROGRAMVEXTPROC CreateShaderProgramvEXT;
        /*  719 */ PFNGLDEBUGMESSAGECALLBACKKHRPROC DebugMessageCallbackKHR;
        /*  720 */ PFNGLDEBUGMESSAGECONTROLKHRPROC DebugMessageControlKHR;
        /*  721 */ PFNGLDEBUGMESSAGEINSERTKHRPROC DebugMessageInsertKHR;
        /*  722 */ PFNGLDELETEBUFFERSPROC DeleteBuffers;
        /*  723 */ PFNGLDELETEFRAMEBUFFERSPROC DeleteFramebuffers;
        /*  724 */ PFNGLDELETEPROGRAMPROC DeleteProgram;
        /*  725 */ PFNGLDELETEPROGRAMPIPELINESPROC DeleteProgramPipelines;
        /*  726 */ PFNGLDELETEPROGRAMPIPELINESEXTPROC DeleteProgramPipelinesEXT;
        /*  727 */ PFNGLDELETEQUERIESPROC DeleteQueries;
        /*  728 */ PFNGLDELETEQUERIESEXTPROC DeleteQueriesEXT;
        /*  729 */ PFNGLDELETERENDERBUFFERSPROC DeleteRenderbuffers;
        /*  730 */ PFNGLDELETESAMPLERSPROC DeleteSamplers;
        /*  731 */ PFNGLDELETESHADERPROC DeleteShader;
        /*  732 */ PFNGLDELETESYNCPROC DeleteSync;
        /*  733 */ PFNGLDELETESYNCAPPLEPROC DeleteSyncAPPLE;
        /*  734 */ PFNGLDELETETRANSFORMFEEDBACKSPROC DeleteTransformFeedbacks;
        /*  735 */ PFNGLDELETEVERTEXARRAYSPROC DeleteVertexArrays;
        /*  736 */ PFNGLDELETEVERTEXARRAYSOESPROC DeleteVertexArraysOES;
        /*  737 */ PFNGLDEPTHRANGEARRAYFVNVPROC DepthRangeArrayfvNV;
        /*  738 */ PFNGLDEPTHRANGEARRAYFVOESPROC DepthRangeArrayfvOES;
        /*  739 */ PFNGLDEPTHRANGEINDEXEDFNVPROC DepthRangeIndexedfNV;
        /*  740 */ PFNGLDEPTHRANGEINDEXEDFOESPROC DepthRangeIndexedfOES;
        /*  741 */ PFNGLDEPTHRANGEFPROC DepthRangef;
        /*  742 */ PFNGLDETACHSHADERPROC DetachShader;
        /*  743 */ PFNGLDISABLEVERTEXATTRIBARRAYPROC DisableVertexAttribArray;
        /*  744 */ PFNGLDISABLEIPROC Disablei;
        /*  745 */ PFNGLDISABLEIEXTPROC DisableiEXT;
        /*  746 */ PFNGLDISABLEINVPROC DisableiNV;
        /*  747 */ PFNGLDISABLEIOESPROC DisableiOES;
        /*  748 */ PFNGLDISPATCHCOMPUTEPROC DispatchCompute;
        /*  749 */ PFNGLDISPATCHCOMPUTEINDIRECTPROC DispatchComputeIndirect;
        /*  750 */ PFNGLDRAWARRAYSINDIRECTPROC DrawArraysIndirect;
        /*  751 */ PFNGLDRAWARRAYSINSTANCEDPROC DrawArraysInstanced;
        /*  752 */ PFNGLDRAWARRAYSINSTANCEDANGLEPROC DrawArraysInstancedANGLE;
        /*  753 */ PFNGLDRAWARRAYSINSTANCEDEXTPROC DrawArraysInstancedEXT;
        /*  754 */ PFNGLDRAWARRAYSINSTANCEDNVPROC DrawArraysInstancedNV;
        /*  755 */ PFNGLDRAWBUFFERSPROC DrawBuffers;
        /*  756 */ PFNGLDRAWBUFFERSEXTPROC DrawBuffersEXT;
        /*  757 */ PFNGLDRAWELEMENTSBASEVERTEXPROC DrawElementsBaseVertex;
        /*  758 */ PFNGLDRAWELEMENTSBASEVERTEXEXTPROC DrawElementsBaseVertexEXT;
        /*  759 */ PFNGLDRAWELEMENTSBASEVERTEXOESPROC DrawElementsBaseVertexOES;
        /*  760 */ PFNGLDRAWELEMENTSINDIRECTPROC DrawElementsIndirect;
        /*  761 */ PFNGLDRAWELEMENTSINSTANCEDPROC DrawElementsInstanced;
        /*  762 */ PFNGLDRAWELEMENTSINSTANCEDANGLEPROC DrawElementsInstancedANGLE;
        /*  763 */ PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC DrawElementsInstancedBaseVertex;
        /*  764 */ PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC DrawElementsInstancedBaseVertexEXT;
        /*  765 */ PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC DrawElementsInstancedBaseVertexOES;
        /*  766 */ PFNGLDRAWELEMENTSINSTANCEDEXTPROC DrawElementsInstancedEXT;
        /*  767 */ PFNGLDRAWELEMENTSINSTANCEDNVPROC DrawElementsInstancedNV;
        /*  768 */ PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC DrawRangeElementsBaseVertex;
        /*  769 */ PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC DrawRangeElementsBaseVertexEXT;
        /*  770 */ PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC DrawRangeElementsBaseVertexOES;
        /*  771 */ PFNGLENABLEVERTEXATTRIBARRAYPROC EnableVertexAttribArray;
        /*  772 */ PFNGLENABLEIPROC Enablei;
        /*  773 */ PFNGLENABLEIEXTPROC EnableiEXT;
        /*  774 */ PFNGLENABLEINVPROC EnableiNV;
        /*  775 */ PFNGLENABLEIOESPROC EnableiOES;
        /*  776 */ PFNGLENDQUERYPROC EndQuery;
        /*  777 */ PFNGLENDQUERYEXTPROC EndQueryEXT;
        /*  778 */ PFNGLENDTRANSFORMFEEDBACKPROC EndTransformFeedback;
        /*  779 */ PFNGLFENCESYNCPROC FenceSync;
        /*  780 */ PFNGLFENCESYNCAPPLEPROC FenceSyncAPPLE;
        /*  781 */ PFNGLFLUSHMAPPEDBUFFERRANGEPROC FlushMappedBufferRange;
        /*  782 */ PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC FlushMappedBufferRangeEXT;
        /*  783 */ PFNGLFRAMEBUFFERPARAMETERIPROC FramebufferParameteri;
        /*  784 */ PFNGLFRAMEBUFFERRENDERBUFFERPROC FramebufferRenderbuffer;
        /*  785 */ PFNGLFRAMEBUFFERTEXTUREPROC FramebufferTexture;
        /*  786 */ PFNGLFRAMEBUFFERTEXTURE2DPROC FramebufferTexture2D;
        /*  787 */ PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC FramebufferTexture2DMultisampleEXT;
        /*  788 */ PFNGLFRAMEBUFFERTEXTUREEXTPROC FramebufferTextureEXT;
        /*  789 */ PFNGLFRAMEBUFFERTEXTURELAYERPROC FramebufferTextureLayer;
        /*  790 */ PFNGLFRAMEBUFFERTEXTUREOESPROC FramebufferTextureOES;
        /*  791 */ PFNGLGENBUFFERSPROC GenBuffers;
        /*  792 */ PFNGLGENFRAMEBUFFERSPROC GenFramebuffers;
        /*  793 */ PFNGLGENPROGRAMPIPELINESPROC GenProgramPipelines;
        /*  794 */ PFNGLGENPROGRAMPIPELINESEXTPROC GenProgramPipelinesEXT;
        /*  795 */ PFNGLGENQUERIESPROC GenQueries;
        /*  796 */ PFNGLGENQUERIESEXTPROC GenQueriesEXT;
        /*  797 */ PFNGLGENRENDERBUFFERSPROC GenRenderbuffers;
        /*  798 */ PFNGLGENSAMPLERSPROC GenSamplers;
        /*  799 */ PFNGLGENTRANSFORMFEEDBACKSPROC GenTransformFeedbacks;
        /*  800 */ PFNGLGENVERTEXARRAYSPROC GenVertexArrays;
        /*  801 */ PFNGLGENVERTEXARRAYSOESPROC GenVertexArraysOES;
        /*  802 */ PFNGLGENERATEMIPMAPPROC GenerateMipmap;
        /*  803 */ PFNGLGETACTIVEATTRIBPROC GetActiveAttrib;
        /*  804 */ PFNGLGETACTIVEUNIFORMPROC GetActiveUniform;
        /*  805 */ PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC GetActiveUniformBlockName;
        /*  806 */ PFNGLGETACTIVEUNIFORMBLOCKIVPROC GetActiveUniformBlockiv;
        /*  807 */ PFNGLGETACTIVEUNIFORMSIVPROC GetActiveUniformsiv;
        /*  808 */ PFNGLGETATTACHEDSHADERSPROC GetAttachedShaders;
        /*  809 */ PFNGLGETATTRIBLOCATIONPROC GetAttribLocation;
        /*  810 */ PFNGLGETBOOLEANI_VPROC GetBooleani_v;
        /*  811 */ PFNGLGETBUFFERPARAMETERI64VPROC GetBufferParameteri64v;
        /*  812 */ PFNGLGETBUFFERPARAMETERIVPROC GetBufferParameteriv;
        /*  813 */ PFNGLGETBUFFERPOINTERVPROC GetBufferPointerv;
        /*  814 */ PFNGLGETBUFFERPOINTERVOESPROC GetBufferPointervOES;
        /*  815 */ PFNGLGETDEBUGMESSAGELOGKHRPROC GetDebugMessageLogKHR;
        /*  816 */ PFNGLGETFLOATI_VNVPROC GetFloati_vNV;
        /*  817 */ PFNGLGETFLOATI_VOESPROC GetFloati_vOES;
        /*  818 */ PFNGLGETFRAGDATALOCATIONPROC GetFragDataLocation;
        /*  819 */ PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC GetFramebufferAttachmentParameteriv;
        /*  820 */ PFNGLGETFRAMEBUFFERPARAMETERIVPROC GetFramebufferParameteriv;
        /*  821 */ PFNGLGETGRAPHICSRESETSTATUSPROC GetGraphicsResetStatus;
        /*  822 */ PFNGLGETGRAPHICSRESETSTATUSEXTPROC GetGraphicsResetStatusEXT;
        /*  823 */ PFNGLGETGRAPHICSRESETSTATUSKHRPROC GetGraphicsResetStatusKHR;
        /*  824 */ PFNGLGETINTEGER64I_VPROC GetInteger64i_v;
        /*  825 */ PFNGLGETINTEGER64VPROC GetInteger64v;
        /*  826 */ PFNGLGETINTEGER64VAPPLEPROC GetInteger64vAPPLE;
        /*  827 */ PFNGLGETINTEGER64VEXTPROC GetInteger64vEXT;
        /*  828 */ PFNGLGETINTEGERI_VPROC GetIntegeri_v;
        /*  829 */ PFNGLGETINTERNALFORMATIVPROC GetInternalformativ;
        /*  830 */ PFNGLGETMULTISAMPLEFVPROC GetMultisamplefv;
        /*  831 */ PFNGLGETOBJECTLABELKHRPROC GetObjectLabelKHR;
        /*  832 */ PFNGLGETOBJECTPTRLABELKHRPROC GetObjectPtrLabelKHR;
        /*  833 */ PFNGLGETPOINTERVKHRPROC GetPointervKHR;
        /*  834 */ PFNGLGETPROGRAMBINARYPROC GetProgramBinary;
        /*  835 */ PFNGLGETPROGRAMBINARYOESPROC GetProgramBinaryOES;
        /*  836 */ PFNGLGETPROGRAMINFOLOGPROC GetProgramInfoLog;
        /*  837 */ PFNGLGETPROGRAMINTERFACEIVPROC GetProgramInterfaceiv;
        /*  838 */ PFNGLGETPROGRAMPIPELINEINFOLOGPROC GetProgramPipelineInfoLog;
        /*  839 */ PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC GetProgramPipelineInfoLogEXT;
        /*  840 */ PFNGLGETPROGRAMPIPELINEIVPROC GetProgramPipelineiv;
        /*  841 */ PFNGLGETPROGRAMPIPELINEIVEXTPROC GetProgramPipelineivEXT;
        /*  842 */ PFNGLGETPROGRAMRESOURCEINDEXPROC GetProgramResourceIndex;
        /*  843 */ PFNGLGETPROGRAMRESOURCELOCATIONPROC GetProgramResourceLocation;
        /*  844 */ PFNGLGETPROGRAMRESOURCENAMEPROC GetProgramResourceName;
        /*  845 */ PFNGLGETPROGRAMRESOURCEIVPROC GetProgramResourceiv;
        /*  846 */ PFNGLGETPROGRAMIVPROC GetProgramiv;
        /*  847 */ PFNGLGETQUERYOBJECTI64VEXTPROC GetQueryObjecti64vEXT;
        /*  848 */ PFNGLGETQUERYOBJECTIVEXTPROC GetQueryObjectivEXT;
        /*  849 */ PFNGLGETQUERYOBJECTUI64VEXTPROC GetQueryObjectui64vEXT;
        /*  850 */ PFNGLGETQUERYOBJECTUIVPROC GetQueryObjectuiv;
        /*  851 */ PFNGLGETQUERYOBJECTUIVEXTPROC GetQueryObjectuivEXT;
        /*  852 */ PFNGLGETQUERYIVPROC GetQueryiv;
        /*  853 */ PFNGLGETQUERYIVEXTPROC GetQueryivEXT;
        /*  854 */ PFNGLGETRENDERBUFFERPARAMETERIVPROC GetRenderbufferParameteriv;
        /*  855 */ PFNGLGETSAMPLERPARAMETERIIVPROC GetSamplerParameterIiv;
        /*  856 */ PFNGLGETSAMPLERPARAMETERIIVEXTPROC GetSamplerParameterIivEXT;
        /*  857 */ PFNGLGETSAMPLERPARAMETERIIVOESPROC GetSamplerParameterIivOES;
        /*  858 */ PFNGLGETSAMPLERPARAMETERIUIVPROC GetSamplerParameterIuiv;
        /*  859 */ PFNGLGETSAMPLERPARAMETERIUIVEXTPROC GetSamplerParameterIuivEXT;
        /*  860 */ PFNGLGETSAMPLERPARAMETERIUIVOESPROC GetSamplerParameterIuivOES;
        /*  861 */ PFNGLGETSAMPLERPARAMETERFVPROC GetSamplerParameterfv;
        /*  862 */ PFNGLGETSAMPLERPARAMETERIVPROC GetSamplerParameteriv;
        /*  863 */ PFNGLGETSHADERINFOLOGPROC GetShaderInfoLog;
        /*  864 */ PFNGLGETSHADERPRECISIONFORMATPROC GetShaderPrecisionFormat;
        /*  865 */ PFNGLGETSHADERSOURCEPROC GetShaderSource;
        /*  866 */ PFNGLGETSHADERIVPROC GetShaderiv;
        /*  867 */ PFNGLGETSTRINGIPROC GetStringi;
        /*  868 */ PFNGLGETSYNCIVPROC GetSynciv;
        /*  869 */ PFNGLGETSYNCIVAPPLEPROC GetSyncivAPPLE;
        /*  870 */ PFNGLGETTEXPARAMETERIIVPROC GetTexParameterIiv;
        /*  871 */ PFNGLGETTEXPARAMETERIIVEXTPROC GetTexParameterIivEXT;
        /*  872 */ PFNGLGETTEXPARAMETERIIVOESPROC GetTexParameterIivOES;
        /*  873 */ PFNGLGETTEXPARAMETERIUIVPROC GetTexParameterIuiv;
        /*  874 */ PFNGLGETTEXPARAMETERIUIVEXTPROC GetTexParameterIuivEXT;
        /*  875 */ PFNGLGETTEXPARAMETERIUIVOESPROC GetTexParameterIuivOES;
        /*  876 */ PFNGLGETTRANSFORMFEEDBACKVARYINGPROC GetTransformFeedbackVarying;
        /*  877 */ PFNGLGETUNIFORMBLOCKINDEXPROC GetUniformBlockIndex;
        /*  878 */ PFNGLGETUNIFORMINDICESPROC GetUniformIndices;
        /*  879 */ PFNGLGETUNIFORMLOCATIONPROC GetUniformLocation;
        /*  880 */ PFNGLGETUNIFORMFVPROC GetUniformfv;
        /*  881 */ PFNGLGETUNIFORMIVPROC GetUniformiv;
        /*  882 */ PFNGLGETUNIFORMUIVPROC GetUniformuiv;
        /*  883 */ PFNGLGETVERTEXATTRIBIIVPROC GetVertexAttribIiv;
        /*  884 */ PFNGLGETVERTEXATTRIBIUIVPROC GetVertexAttribIuiv;
        /*  885 */ PFNGLGETVERTEXATTRIBPOINTERVPROC GetVertexAttribPointerv;
        /*  886 */ PFNGLGETVERTEXATTRIBFVPROC GetVertexAttribfv;
        /*  887 */ PFNGLGETVERTEXATTRIBIVPROC GetVertexAttribiv;
        /*  888 */ PFNGLGETNUNIFORMFVPROC GetnUniformfv;
        /*  889 */ PFNGLGETNUNIFORMFVEXTPROC GetnUniformfvEXT;
        /*  890 */ PFNGLGETNUNIFORMFVKHRPROC GetnUniformfvKHR;
        /*  891 */ PFNGLGETNUNIFORMIVPROC GetnUniformiv;
        /*  892 */ PFNGLGETNUNIFORMIVEXTPROC GetnUniformivEXT;
        /*  893 */ PFNGLGETNUNIFORMIVKHRPROC GetnUniformivKHR;
        /*  894 */ PFNGLGETNUNIFORMUIVPROC GetnUniformuiv;
        /*  895 */ PFNGLGETNUNIFORMUIVKHRPROC GetnUniformuivKHR;
        /*  896 */ PFNGLINVALIDATEFRAMEBUFFERPROC InvalidateFramebuffer;
        /*  897 */ PFNGLINVALIDATESUBFRAMEBUFFERPROC InvalidateSubFramebuffer;
        /*  898 */ PFNGLISBUFFERPROC IsBuffer;
        /*  899 */ PFNGLISENABLEDIPROC IsEnabledi;
        /*  900 */ PFNGLISENABLEDIEXTPROC IsEnablediEXT;
        /*  901 */ PFNGLISENABLEDINVPROC IsEnablediNV;
        /*  902 */ PFNGLISENABLEDIOESPROC IsEnablediOES;
        /*  903 */ PFNGLISFRAMEBUFFERPROC IsFramebuffer;
        /*  904 */ PFNGLISPROGRAMPROC IsProgram;
        /*  905 */ PFNGLISPROGRAMPIPELINEPROC IsProgramPipeline;
        /*  906 */ PFNGLISPROGRAMPIPELINEEXTPROC IsProgramPipelineEXT;
        /*  907 */ PFNGLISQUERYPROC IsQuery;
        /*  908 */ PFNGLISQUERYEXTPROC IsQueryEXT;
        /*  909 */ PFNGLISRENDERBUFFERPROC IsRenderbuffer;
        /*  910 */ PFNGLISSAMPLERPROC IsSampler;
        /*  911 */ PFNGLISSHADERPROC IsShader;
        /*  912 */ PFNGLISSYNCPROC IsSync;
        /*  913 */ PFNGLISSYNCAPPLEPROC IsSyncAPPLE;
        /*  914 */ PFNGLISTRANSFORMFEEDBACKPROC IsTransformFeedback;
        /*  915 */ PFNGLISVERTEXARRAYPROC IsVertexArray;
        /*  916 */ PFNGLISVERTEXARRAYOESPROC IsVertexArrayOES;
        /*  917 */ PFNGLLINKPROGRAMPROC LinkProgram;
        /*  918 */ PFNGLMAPBUFFEROESPROC MapBufferOES;
        /*  919 */ PFNGLMAPBUFFERRANGEPROC MapBufferRange;
        /*  920 */ PFNGLMAPBUFFERRANGEEXTPROC MapBufferRangeEXT;
        /*  921 */ PFNGLMEMORYBARRIERPROC MemoryBarrier;
        /*  922 */ PFNGLMEMORYBARRIERBYREGIONPROC MemoryBarrierByRegion;
        /*  923 */ PFNGLMINSAMPLESHADINGPROC MinSampleShading;
        /*  924 */ PFNGLMINSAMPLESHADINGOESPROC MinSampleShadingOES;
        /*  925 */ PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC MultiDrawElementsBaseVertexEXT;
        /*  926 */ PFNGLOBJECTLABELKHRPROC ObjectLabelKHR;
        /*  927 */ PFNGLOBJECTPTRLABELKHRPROC ObjectPtrLabelKHR;
        /*  928 */ PFNGLPATCHPARAMETERIPROC PatchParameteri;
        /*  929 */ PFNGLPATCHPARAMETERIEXTPROC PatchParameteriEXT;
        /*  930 */ PFNGLPATCHPARAMETERIOESPROC PatchParameteriOES;
        /*  931 */ PFNGLPAUSETRANSFORMFEEDBACKPROC PauseTransformFeedback;
        /*  932 */ PFNGLPOPDEBUGGROUPKHRPROC PopDebugGroupKHR;
        /*  933 */ PFNGLPRIMITIVEBOUNDINGBOXPROC PrimitiveBoundingBox;
        /*  934 */ PFNGLPRIMITIVEBOUNDINGBOXEXTPROC PrimitiveBoundingBoxEXT;
        /*  935 */ PFNGLPRIMITIVEBOUNDINGBOXOESPROC PrimitiveBoundingBoxOES;
        /*  936 */ PFNGLPROGRAMBINARYPROC ProgramBinary;
        /*  937 */ PFNGLPROGRAMBINARYOESPROC ProgramBinaryOES;
        /*  938 */ PFNGLPROGRAMPARAMETERIPROC ProgramParameteri;
        /*  939 */ PFNGLPROGRAMPARAMETERIEXTPROC ProgramParameteriEXT;
        /*  940 */ PFNGLPROGRAMUNIFORM1FPROC ProgramUniform1f;
        /*  941 */ PFNGLPROGRAMUNIFORM1FVPROC ProgramUniform1fv;
        /*  942 */ PFNGLPROGRAMUNIFORM1IPROC ProgramUniform1i;
        /*  943 */ PFNGLPROGRAMUNIFORM1IVPROC ProgramUniform1iv;
        /*  944 */ PFNGLPROGRAMUNIFORM1UIPROC ProgramUniform1ui;
        /*  945 */ PFNGLPROGRAMUNIFORM1UIVPROC ProgramUniform1uiv;
        /*  946 */ PFNGLPROGRAMUNIFORM2FPROC ProgramUniform2f;
        /*  947 */ PFNGLPROGRAMUNIFORM2FVPROC ProgramUniform2fv;
        /*  948 */ PFNGLPROGRAMUNIFORM2IPROC ProgramUniform2i;
        /*  949 */ PFNGLPROGRAMUNIFORM2IVPROC ProgramUniform2iv;
        /*  950 */ PFNGLPROGRAMUNIFORM2UIPROC ProgramUniform2ui;
        /*  951 */ PFNGLPROGRAMUNIFORM2UIVPROC ProgramUniform2uiv;
        /*  952 */ PFNGLPROGRAMUNIFORM3FPROC ProgramUniform3f;
        /*  953 */ PFNGLPROGRAMUNIFORM3FVPROC ProgramUniform3fv;
        /*  954 */ PFNGLPROGRAMUNIFORM3IPROC ProgramUniform3i;
        /*  955 */ PFNGLPROGRAMUNIFORM3IVPROC ProgramUniform3iv;
        /*  956 */ PFNGLPROGRAMUNIFORM3UIPROC ProgramUniform3ui;
        /*  957 */ PFNGLPROGRAMUNIFORM3UIVPROC ProgramUniform3uiv;
        /*  958 */ PFNGLPROGRAMUNIFORM4FPROC ProgramUniform4f;
        /*  959 */ PFNGLPROGRAMUNIFORM4FVPROC ProgramUniform4fv;
        /*  960 */ PFNGLPROGRAMUNIFORM4IPROC ProgramUniform4i;
        /*  961 */ PFNGLPROGRAMUNIFORM4IVPROC ProgramUniform4iv;
        /*  962 */ PFNGLPROGRAMUNIFORM4UIPROC ProgramUniform4ui;
        /*  963 */ PFNGLPROGRAMUNIFORM4UIVPROC ProgramUniform4uiv;
        /*  964 */ PFNGLPROGRAMUNIFORMMATRIX2FVPROC ProgramUniformMatrix2fv;
        /*  965 */ PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC ProgramUniformMatrix2x3fv;
        /*  966 */ PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC ProgramUniformMatrix2x4fv;
        /*  967 */ PFNGLPROGRAMUNIFORMMATRIX3FVPROC ProgramUniformMatrix3fv;
        /*  968 */ PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC ProgramUniformMatrix3x2fv;
        /*  969 */ PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC ProgramUniformMatrix3x4fv;
        /*  970 */ PFNGLPROGRAMUNIFORMMATRIX4FVPROC ProgramUniformMatrix4fv;
        /*  971 */ PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC ProgramUniformMatrix4x2fv;
        /*  972 */ PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC ProgramUniformMatrix4x3fv;
        /*  973 */ PFNGLPUSHDEBUGGROUPKHRPROC PushDebugGroupKHR;
        /*  974 */ PFNGLQUERYCOUNTEREXTPROC QueryCounterEXT;
        /*  975 */ PFNGLREADNPIXELSPROC ReadnPixels;
        /*  976 */ PFNGLREADNPIXELSEXTPROC ReadnPixelsEXT;
        /*  977 */ PFNGLREADNPIXELSKHRPROC ReadnPixelsKHR;
        /*  978 */ PFNGLRELEASESHADERCOMPILERPROC ReleaseShaderCompiler;
        /*  979 */ PFNGLRENDERBUFFERSTORAGEPROC RenderbufferStorage;
        /*  980 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC RenderbufferStorageMultisample;
        /*  981 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC RenderbufferStorageMultisampleEXT;
        /*  982 */ PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC RenderbufferStorageMultisampleNV;
        /*  983 */ PFNGLRESUMETRANSFORMFEEDBACKPROC ResumeTransformFeedback;
        /*  984 */ PFNGLSAMPLECOVERAGEPROC SampleCoverage;
        /*  985 */ PFNGLSAMPLEMASKIPROC SampleMaski;
        /*  986 */ PFNGLSAMPLERPARAMETERIIVPROC SamplerParameterIiv;
        /*  987 */ PFNGLSAMPLERPARAMETERIIVEXTPROC SamplerParameterIivEXT;
        /*  988 */ PFNGLSAMPLERPARAMETERIIVOESPROC SamplerParameterIivOES;
        /*  989 */ PFNGLSAMPLERPARAMETERIUIVPROC SamplerParameterIuiv;
        /*  990 */ PFNGLSAMPLERPARAMETERIUIVEXTPROC SamplerParameterIuivEXT;
        /*  991 */ PFNGLSAMPLERPARAMETERIUIVOESPROC SamplerParameterIuivOES;
        /*  992 */ PFNGLSAMPLERPARAMETERFPROC SamplerParameterf;
        /*  993 */ PFNGLSAMPLERPARAMETERFVPROC SamplerParameterfv;
        /*  994 */ PFNGLSAMPLERPARAMETERIPROC SamplerParameteri;
        /*  995 */ PFNGLSAMPLERPARAMETERIVPROC SamplerParameteriv;
        /*  996 */ PFNGLSCISSORARRAYVNVPROC ScissorArrayvNV;
        /*  997 */ PFNGLSCISSORARRAYVOESPROC ScissorArrayvOES;
        /*  998 */ PFNGLSCISSORINDEXEDNVPROC ScissorIndexedNV;
        /*  999 */ PFNGLSCISSORINDEXEDOESPROC ScissorIndexedOES;
        /* 1000 */ PFNGLSCISSORINDEXEDVNVPROC ScissorIndexedvNV;
        /* 1001 */ PFNGLSCISSORINDEXEDVOESPROC ScissorIndexedvOES;
        /* 1002 */ PFNGLSHADERBINARYPROC ShaderBinary;
        /* 1003 */ PFNGLSHADERSOURCEPROC ShaderSource;
        /* 1004 */ PFNGLSTENCILFUNCSEPARATEPROC StencilFuncSeparate;
        /* 1005 */ PFNGLSTENCILMASKSEPARATEPROC StencilMaskSeparate;
        /* 1006 */ PFNGLSTENCILOPSEPARATEPROC StencilOpSeparate;
        /* 1007 */ PFNGLTEXBUFFERPROC TexBuffer;
        /* 1008 */ PFNGLTEXBUFFEREXTPROC TexBufferEXT;
        /* 1009 */ PFNGLTEXBUFFEROESPROC TexBufferOES;
        /* 1010 */ PFNGLTEXBUFFERRANGEPROC TexBufferRange;
        /* 1011 */ PFNGLTEXBUFFERRANGEEXTPROC TexBufferRangeEXT;
        /* 1012 */ PFNGLTEXBUFFERRANGEOESPROC TexBufferRangeOES;
        /* 1013 */ PFNGLTEXPARAMETERIIVPROC TexParameterIiv;
        /* 1014 */ PFNGLTEXPARAMETERIIVEXTPROC TexParameterIivEXT;
        /* 1015 */ PFNGLTEXPARAMETERIIVOESPROC TexParameterIivOES;
        /* 1016 */ PFNGLTEXPARAMETERIUIVPROC TexParameterIuiv;
        /* 1017 */ PFNGLTEXPARAMETERIUIVEXTPROC TexParameterIuivEXT;
        /* 1018 */ PFNGLTEXPARAMETERIUIVOESPROC TexParameterIuivOES;
        /* 1019 */ PFNGLTEXSTORAGE2DPROC TexStorage2D;
        /* 1020 */ PFNGLTEXSTORAGE2DMULTISAMPLEPROC TexStorage2DMultisample;
        /* 1021 */ PFNGLTEXSTORAGE3DPROC TexStorage3D;
        /* 1022 */ PFNGLTEXSTORAGE3DMULTISAMPLEPROC TexStorage3DMultisample;
        /* 1023 */ PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC TexStorage3DMultisampleOES;
        /* 1024 */ PFNGLTRANSFORMFEEDBACKVARYINGSPROC TransformFeedbackVaryings;
        /* 1025 */ PFNGLUNIFORM1FPROC Uniform1f;
        /* 1026 */ PFNGLUNIFORM1FVPROC Uniform1fv;
        /* 1027 */ PFNGLUNIFORM1IPROC Uniform1i;
        /* 1028 */ PFNGLUNIFORM1IVPROC Uniform1iv;
        /* 1029 */ PFNGLUNIFORM1UIPROC Uniform1ui;
        /* 1030 */ PFNGLUNIFORM1UIVPROC Uniform1uiv;
        /* 1031 */ PFNGLUNIFORM2FPROC Uniform2f;
        /* 1032 */ PFNGLUNIFORM2FVPROC Uniform2fv;
        /* 1033 */ PFNGLUNIFORM2IPROC Uniform2i;
        /* 1034 */ PFNGLUNIFORM2IVPROC Uniform2iv;
        /* 1035 */ PFNGLUNIFORM2UIPROC Uniform2ui;
        /* 1036 */ PFNGLUNIFORM2UIVPROC Uniform2uiv;
        /* 1037 */ PFNGLUNIFORM3FPROC Uniform3f;
        /* 1038 */ PFNGLUNIFORM3FVPROC Uniform3fv;
        /* 1039 */ PFNGLUNIFORM3IPROC Uniform3i;
        /* 1040 */ PFNGLUNIFORM3IVPROC Uniform3iv;
        /* 1041 */ PFNGLUNIFORM3UIPROC Uniform3ui;
        /* 1042 */ PFNGLUNIFORM3UIVPROC Uniform3uiv;
        /* 1043 */ PFNGLUNIFORM4FPROC Uniform4f;
        /* 1044 */ PFNGLUNIFORM4FVPROC Uniform4fv;
        /* 1045 */ PFNGLUNIFORM4IPROC Uniform4i;
        /* 1046 */ PFNGLUNIFORM4IVPROC Uniform4iv;
        /* 1047 */ PFNGLUNIFORM4UIPROC Uniform4ui;
        /* 1048 */ PFNGLUNIFORM4UIVPROC Uniform4uiv;
        /* 1049 */ PFNGLUNIFORMBLOCKBINDINGPROC UniformBlockBinding;
        /* 1050 */ PFNGLUNIFORMMATRIX2FVPROC UniformMatrix2fv;
        /* 1051 */ PFNGLUNIFORMMATRIX2X3FVPROC UniformMatrix2x3fv;
        /* 1052 */ PFNGLUNIFORMMATRIX2X3FVNVPROC UniformMatrix2x3fvNV;
        /* 1053 */ PFNGLUNIFORMMATRIX2X4FVPROC UniformMatrix2x4fv;
        /* 1054 */ PFNGLUNIFORMMATRIX2X4FVNVPROC UniformMatrix2x4fvNV;
        /* 1055 */ PFNGLUNIFORMMATRIX3FVPROC UniformMatrix3fv;
        /* 1056 */ PFNGLUNIFORMMATRIX3X2FVPROC UniformMatrix3x2fv;
        /* 1057 */ PFNGLUNIFORMMATRIX3X2FVNVPROC UniformMatrix3x2fvNV;
        /* 1058 */ PFNGLUNIFORMMATRIX3X4FVPROC UniformMatrix3x4fv;
        /* 1059 */ PFNGLUNIFORMMATRIX3X4FVNVPROC UniformMatrix3x4fvNV;
        /* 1060 */ PFNGLUNIFORMMATRIX4FVPROC UniformMatrix4fv;
        /* 1061 */ PFNGLUNIFORMMATRIX4X2FVPROC UniformMatrix4x2fv;
        /* 1062 */ PFNGLUNIFORMMATRIX4X2FVNVPROC UniformMatrix4x2fvNV;
        /* 1063 */ PFNGLUNIFORMMATRIX4X3FVPROC UniformMatrix4x3fv;
        /* 1064 */ PFNGLUNIFORMMATRIX4X3FVNVPROC UniformMatrix4x3fvNV;
        /* 1065 */ PFNGLUNMAPBUFFERPROC UnmapBuffer;
        /* 1066 */ PFNGLUNMAPBUFFEROESPROC UnmapBufferOES;
        /* 1067 */ PFNGLUSEPROGRAMPROC UseProgram;
        /* 1068 */ PFNGLUSEPROGRAMSTAGESPROC UseProgramStages;
        /* 1069 */ PFNGLUSEPROGRAMSTAGESEXTPROC UseProgramStagesEXT;
        /* 1070 */ PFNGLVALIDATEPROGRAMPROC ValidateProgram;
        /* 1071 */ PFNGLVALIDATEPROGRAMPIPELINEPROC ValidateProgramPipeline;
        /* 1072 */ PFNGLVALIDATEPROGRAMPIPELINEEXTPROC ValidateProgramPipelineEXT;
        /* 1073 */ PFNGLVERTEXATTRIB1FPROC VertexAttrib1f;
        /* 1074 */ PFNGLVERTEXATTRIB1FVPROC VertexAttrib1fv;
        /* 1075 */ PFNGLVERTEXATTRIB2FPROC VertexAttrib2f;
        /* 1076 */ PFNGLVERTEXATTRIB2FVPROC VertexAttrib2fv;
        /* 1077 */ PFNGLVERTEXATTRIB3FPROC VertexAttrib3f;
        /* 1078 */ PFNGLVERTEXATTRIB3FVPROC VertexAttrib3fv;
        /* 1079 */ PFNGLVERTEXATTRIB4FPROC VertexAttrib4f;
        /* 1080 */ PFNGLVERTEXATTRIB4FVPROC VertexAttrib4fv;
        /* 1081 */ PFNGLVERTEXATTRIBBINDINGPROC VertexAttribBinding;
        /* 1082 */ PFNGLVERTEXATTRIBDIVISORPROC VertexAttribDivisor;
        /* 1083 */ PFNGLVERTEXATTRIBDIVISORANGLEPROC VertexAttribDivisorANGLE;
        /* 1084 */ PFNGLVERTEXATTRIBDIVISOREXTPROC VertexAttribDivisorEXT;
        /* 1085 */ PFNGLVERTEXATTRIBDIVISORNVPROC VertexAttribDivisorNV;
        /* 1086 */ PFNGLVERTEXATTRIBFORMATPROC VertexAttribFormat;
        /* 1087 */ PFNGLVERTEXATTRIBI4IPROC VertexAttribI4i;
        /* 1088 */ PFNGLVERTEXATTRIBI4IVPROC VertexAttribI4iv;
        /* 1089 */ PFNGLVERTEXATTRIBI4UIPROC VertexAttribI4ui;
        /* 1090 */ PFNGLVERTEXATTRIBI4UIVPROC VertexAttribI4uiv;
        /* 1091 */ PFNGLVERTEXATTRIBIFORMATPROC VertexAttribIFormat;
        /* 1092 */ PFNGLVERTEXATTRIBIPOINTERPROC VertexAttribIPointer;
        /* 1093 */ PFNGLVERTEXATTRIBPOINTERPROC VertexAttribPointer;
        /* 1094 */ PFNGLVERTEXBINDINGDIVISORPROC VertexBindingDivisor;
        /* 1095 */ PFNGLVIEWPORTARRAYVNVPROC ViewportArrayvNV;
        /* 1096 */ PFNGLVIEWPORTARRAYVOESPROC ViewportArrayvOES;
        /* 1097 */ PFNGLVIEWPORTINDEXEDFNVPROC ViewportIndexedfNV;
        /* 1098 */ PFNGLVIEWPORTINDEXEDFOESPROC ViewportIndexedfOES;
        /* 1099 */ PFNGLVIEWPORTINDEXEDFVNVPROC ViewportIndexedfvNV;
        /* 1100 */ PFNGLVIEWPORTINDEXEDFVOESPROC ViewportIndexedfvOES;
        /* 1101 */ PFNGLWAITSYNCPROC WaitSync;
        /* 1102 */ PFNGLWAITSYNCAPPLEPROC WaitSyncAPPLE;
        };
    };

    void* glad_loader_handle;
} GladGLContext;

GLAD_API_CALL GladGLContext glad_gl_context;

#define GLAD_GL_VERSION_1_0 (glad_gl_context.VERSION_1_0)
#define GLAD_GL_VERSION_1_1 (glad_gl_context.VERSION_1_1)
#define GLAD_GL_VERSION_1_2 (glad_gl_context.VERSION_1_2)
#define GLAD_GL_ES_VERSION_2_0 (glad_gl_context.ES_VERSION_2_0)
#define GLAD_GL_ES_VERSION_3_0 (glad_gl_context.ES_VERSION_3_0)
#define GLAD_GL_ES_VERSION_3_1 (glad_gl_context.ES_VERSION_3_1)
#define GLAD_GL_ES_VERSION_3_2 (glad_gl_context.ES_VERSION_3_2)
#define GLAD_GL_ANGLE_instanced_arrays (glad_gl_context.ANGLE_instanced_arrays)
#define GLAD_GL_APPLE_sync (glad_gl_context.APPLE_sync)
#define GLAD_GL_ARB_buffer_storage (glad_gl_context.ARB_buffer_storage)
#define GLAD_GL_ARB_debug_output (glad_gl_context.ARB_debug_output)
#define GLAD_GL_ARB_vertex_buffer_object (glad_gl_context.ARB_vertex_buffer_object)
#define GLAD_GL_EXT_copy_image (glad_gl_context.EXT_copy_image)
#define GLAD_GL_EXT_copy_texture (glad_gl_context.EXT_copy_texture)
#define GLAD_GL_EXT_direct_state_access (glad_gl_context.EXT_direct_state_access)
#define GLAD_GL_EXT_disjoint_timer_query (glad_gl_context.EXT_disjoint_timer_query)
#define GLAD_GL_EXT_draw_buffers (glad_gl_context.EXT_draw_buffers)
#define GLAD_GL_EXT_draw_buffers_indexed (glad_gl_context.EXT_draw_buffers_indexed)
#define GLAD_GL_EXT_draw_elements_base_vertex (glad_gl_context.EXT_draw_elements_base_vertex)
#define GLAD_GL_EXT_draw_instanced (glad_gl_context.EXT_draw_instanced)
#define GLAD_GL_EXT_draw_range_elements (glad_gl_context.EXT_draw_range_elements)
#define GLAD_GL_EXT_geometry_shader (glad_gl_context.EXT_geometry_shader)
#define GLAD_GL_EXT_instanced_arrays (glad_gl_context.EXT_instanced_arrays)
#define GLAD_GL_EXT_map_buffer_range (glad_gl_context.EXT_map_buffer_range)
#define GLAD_GL_EXT_multisampled_render_to_texture (glad_gl_context.EXT_multisampled_render_to_texture)
#define GLAD_GL_EXT_primitive_bounding_box (glad_gl_context.EXT_primitive_bounding_box)
#define GLAD_GL_EXT_robustness (glad_gl_context.EXT_robustness)
#define GLAD_GL_EXT_separate_shader_objects (glad_gl_context.EXT_separate_shader_objects)
#define GLAD_GL_EXT_subtexture (glad_gl_context.EXT_subtexture)
#define GLAD_GL_EXT_tessellation_shader (glad_gl_context.EXT_tessellation_shader)
#define GLAD_GL_EXT_texture3D (glad_gl_context.EXT_texture3D)
#define GLAD_GL_EXT_texture_border_clamp (glad_gl_context.EXT_texture_border_clamp)
#define GLAD_GL_EXT_texture_buffer (glad_gl_context.EXT_texture_buffer)
#define GLAD_GL_EXT_texture_object (glad_gl_context.EXT_texture_object)
#define GLAD_GL_EXT_texture_storage (glad_gl_context.EXT_texture_storage)
#define GLAD_GL_EXT_vertex_array (glad_gl_context.EXT_vertex_array)
#define GLAD_GL_KHR_blend_equation_advanced (glad_gl_context.KHR_blend_equation_advanced)
#define GLAD_GL_KHR_debug (glad_gl_context.KHR_debug)
#define GLAD_GL_KHR_robustness (glad_gl_context.KHR_robustness)
#define GLAD_GL_MESA_sampler_objects (glad_gl_context.MESA_sampler_objects)
#define GLAD_GL_NV_blend_equation_advanced (glad_gl_context.NV_blend_equation_advanced)
#define GLAD_GL_NV_copy_buffer (glad_gl_context.NV_copy_buffer)
#define GLAD_GL_NV_draw_instanced (glad_gl_context.NV_draw_instanced)
#define GLAD_GL_NV_framebuffer_blit (glad_gl_context.NV_framebuffer_blit)
#define GLAD_GL_NV_framebuffer_multisample (glad_gl_context.NV_framebuffer_multisample)
#define GLAD_GL_NV_instanced_arrays (glad_gl_context.NV_instanced_arrays)
#define GLAD_GL_NV_non_square_matrices (glad_gl_context.NV_non_square_matrices)
#define GLAD_GL_NV_viewport_array (glad_gl_context.NV_viewport_array)
#define GLAD_GL_OES_copy_image (glad_gl_context.OES_copy_image)
#define GLAD_GL_OES_draw_buffers_indexed (glad_gl_context.OES_draw_buffers_indexed)
#define GLAD_GL_OES_draw_elements_base_vertex (glad_gl_context.OES_draw_elements_base_vertex)
#define GLAD_GL_OES_geometry_shader (glad_gl_context.OES_geometry_shader)
#define GLAD_GL_OES_get_program_binary (glad_gl_context.OES_get_program_binary)
#define GLAD_GL_OES_mapbuffer (glad_gl_context.OES_mapbuffer)
#define GLAD_GL_OES_primitive_bounding_box (glad_gl_context.OES_primitive_bounding_box)
#define GLAD_GL_OES_sample_shading (glad_gl_context.OES_sample_shading)
#define GLAD_GL_OES_tessellation_shader (glad_gl_context.OES_tessellation_shader)
#define GLAD_GL_OES_texture_border_clamp (glad_gl_context.OES_texture_border_clamp)
#define GLAD_GL_OES_texture_buffer (glad_gl_context.OES_texture_buffer)
#define GLAD_GL_OES_texture_storage_multisample_2d_array (glad_gl_context.OES_texture_storage_multisample_2d_array)
#define GLAD_GL_OES_vertex_array_object (glad_gl_context.OES_vertex_array_object)
#define GLAD_GL_OES_viewport_array (glad_gl_context.OES_viewport_array)

#ifdef __INTELLISENSE__
void glAccum(GLenum op, GLfloat value);
void glAlphaFunc(GLenum func, GLfloat ref);
GLboolean glAreTexturesResident(GLsizei n, const GLuint * textures, GLboolean * residences);
GLboolean glAreTexturesResidentEXT(GLsizei n, const GLuint * textures, GLboolean * residences);
void glArrayElement(GLint i);
void glArrayElementEXT(GLint i);
void glBegin(GLenum mode);
void glBindBufferARB(GLenum target, GLuint buffer);
void glBindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture);
void glBindTexture(GLenum target, GLuint texture);
void glBindTextureEXT(GLenum target, GLuint texture);
void glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
void glBlendFunc(GLenum sfactor, GLenum dfactor);
void glBufferDataARB(GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
void glBufferStorage(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
void glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
void glCallList(GLuint list);
void glCallLists(GLsizei n, GLenum type, const void * lists);
GLenum glCheckNamedFramebufferStatusEXT(GLuint framebuffer, GLenum target);
void glClear(GLbitfield mask);
void glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glClearDepth(GLdouble depth);
void glClearIndex(GLfloat c);
void glClearNamedBufferDataEXT(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
void glClearNamedBufferSubDataEXT(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
void glClearStencil(GLint s);
void glClientAttribDefaultEXT(GLbitfield mask);
void glClipPlane(GLenum plane, const GLdouble * equation);
void glColor3b(GLbyte red, GLbyte green, GLbyte blue);
void glColor3bv(const GLbyte * v);
void glColor3d(GLdouble red, GLdouble green, GLdouble blue);
void glColor3dv(const GLdouble * v);
void glColor3f(GLfloat red, GLfloat green, GLfloat blue);
void glColor3fv(const GLfloat * v);
void glColor3i(GLint red, GLint green, GLint blue);
void glColor3iv(const GLint * v);
void glColor3s(GLshort red, GLshort green, GLshort blue);
void glColor3sv(const GLshort * v);
void glColor3ub(GLubyte red, GLubyte green, GLubyte blue);
void glColor3ubv(const GLubyte * v);
void glColor3ui(GLuint red, GLuint green, GLuint blue);
void glColor3uiv(const GLuint * v);
void glColor3us(GLushort red, GLushort green, GLushort blue);
void glColor3usv(const GLushort * v);
void glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void glColor4bv(const GLbyte * v);
void glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void glColor4dv(const GLdouble * v);
void glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glColor4fv(const GLfloat * v);
void glColor4i(GLint red, GLint green, GLint blue, GLint alpha);
void glColor4iv(const GLint * v);
void glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha);
void glColor4sv(const GLshort * v);
void glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void glColor4ubv(const GLubyte * v);
void glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha);
void glColor4uiv(const GLuint * v);
void glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha);
void glColor4usv(const GLushort * v);
void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void glColorMaterial(GLenum face, GLenum mode);
void glColorPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
void glColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glCompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
void glCompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
void glCompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
void glCompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
void glCompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
void glCompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
void glCompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
void glCompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
void glCompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
void glCompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
void glCompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
void glCompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
void glCopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void glCopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void glCopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void glCopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void glCullFace(GLenum mode);
void glDebugMessageCallback(GLDEBUGPROC callback, const void * userParam);
void glDebugMessageCallbackARB(GLDEBUGPROCARB callback, const void * userParam);
void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
void glDebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
void glDebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
void glDeleteBuffersARB(GLsizei n, const GLuint * buffers);
void glDeleteLists(GLuint list, GLsizei range);
void glDeleteTextures(GLsizei n, const GLuint * textures);
void glDeleteTexturesEXT(GLsizei n, const GLuint * textures);
void glDepthFunc(GLenum func);
void glDepthMask(GLboolean flag);
void glDepthRange(GLdouble n, GLdouble f);
void glDisable(GLenum cap);
void glDisableClientState(GLenum array);
void glDisableClientStateIndexedEXT(GLenum array, GLuint index);
void glDisableClientStateiEXT(GLenum array, GLuint index);
void glDisableIndexedEXT(GLenum target, GLuint index);
void glDisableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
void glDisableVertexArrayEXT(GLuint vaobj, GLenum array);
void glDrawArrays(GLenum mode, GLint first, GLsizei count);
void glDrawArraysEXT(GLenum mode, GLint first, GLsizei count);
void glDrawBuffer(GLenum buf);
void glDrawElements(GLenum mode, GLsizei count, GLenum type, const void * indices);
void glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
void glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
void glEdgeFlag(GLboolean flag);
void glEdgeFlagPointer(GLsizei stride, const void * pointer);
void glEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean * pointer);
void glEdgeFlagv(const GLboolean * flag);
void glEnable(GLenum cap);
void glEnableClientState(GLenum array);
void glEnableClientStateIndexedEXT(GLenum array, GLuint index);
void glEnableClientStateiEXT(GLenum array, GLuint index);
void glEnableIndexedEXT(GLenum target, GLuint index);
void glEnableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
void glEnableVertexArrayEXT(GLuint vaobj, GLenum array);
void glEnd(void);
void glEndList(void);
void glEvalCoord1d(GLdouble u);
void glEvalCoord1dv(const GLdouble * u);
void glEvalCoord1f(GLfloat u);
void glEvalCoord1fv(const GLfloat * u);
void glEvalCoord2d(GLdouble u, GLdouble v);
void glEvalCoord2dv(const GLdouble * u);
void glEvalCoord2f(GLfloat u, GLfloat v);
void glEvalCoord2fv(const GLfloat * u);
void glEvalMesh1(GLenum mode, GLint i1, GLint i2);
void glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void glEvalPoint1(GLint i);
void glEvalPoint2(GLint i, GLint j);
void glFeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer);
void glFinish(void);
void glFlush(void);
void glFlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length);
void glFogf(GLenum pname, GLfloat param);
void glFogfv(GLenum pname, const GLfloat * params);
void glFogi(GLenum pname, GLint param);
void glFogiv(GLenum pname, const GLint * params);
void glFramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode);
void glFramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, const GLenum * bufs);
void glFramebufferReadBufferEXT(GLuint framebuffer, GLenum mode);
void glFrontFace(GLenum mode);
void glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void glGenBuffersARB(GLsizei n, GLuint * buffers);
GLuint glGenLists(GLsizei range);
void glGenTextures(GLsizei n, GLuint * textures);
void glGenTexturesEXT(GLsizei n, GLuint * textures);
void glGenerateMultiTexMipmapEXT(GLenum texunit, GLenum target);
void glGenerateTextureMipmapEXT(GLuint texture, GLenum target);
void glGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean * data);
void glGetBooleanv(GLenum pname, GLboolean * data);
void glGetBufferParameterivARB(GLenum target, GLenum pname, GLint * params);
void glGetBufferPointervARB(GLenum target, GLenum pname, void ** params);
void glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
void glGetClipPlane(GLenum plane, GLdouble * equation);
void glGetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod, void * img);
void glGetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod, void * img);
GLuint glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLuint glGetDebugMessageLogARB(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
void glGetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble * data);
void glGetDoublei_vEXT(GLenum pname, GLuint index, GLdouble * params);
void glGetDoublev(GLenum pname, GLdouble * data);
GLenum glGetError(void);
void glGetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat * data);
void glGetFloati_vEXT(GLenum pname, GLuint index, GLfloat * params);
void glGetFloatv(GLenum pname, GLfloat * data);
void glGetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint * params);
void glGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint * data);
void glGetIntegerv(GLenum pname, GLint * data);
void glGetLightfv(GLenum light, GLenum pname, GLfloat * params);
void glGetLightiv(GLenum light, GLenum pname, GLint * params);
void glGetMapdv(GLenum target, GLenum query, GLdouble * v);
void glGetMapfv(GLenum target, GLenum query, GLfloat * v);
void glGetMapiv(GLenum target, GLenum query, GLint * v);
void glGetMaterialfv(GLenum face, GLenum pname, GLfloat * params);
void glGetMaterialiv(GLenum face, GLenum pname, GLint * params);
void glGetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
void glGetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
void glGetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
void glGetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
void glGetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint * params);
void glGetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
void glGetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
void glGetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
void glGetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
void glGetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint * params);
void glGetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
void glGetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
void glGetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint * params);
void glGetNamedBufferPointervEXT(GLuint buffer, GLenum pname, void ** params);
void glGetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
void glGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
void glGetNamedFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint * params);
void glGetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint * params);
void glGetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint * params);
void glGetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble * params);
void glGetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat * params);
void glGetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname, void * string);
void glGetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint * params);
void glGetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint * params);
void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
void glGetObjectPtrLabel(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
void glGetPixelMapfv(GLenum map, GLfloat * values);
void glGetPixelMapuiv(GLenum map, GLuint * values);
void glGetPixelMapusv(GLenum map, GLushort * values);
void glGetPointerIndexedvEXT(GLenum target, GLuint index, void ** data);
void glGetPointeri_vEXT(GLenum pname, GLuint index, void ** params);
void glGetPointerv(GLenum pname, void ** params);
void glGetPointervEXT(GLenum pname, void ** params);
void glGetPolygonStipple(GLubyte * mask);
const GLubyte * glGetString(GLenum name);
void glGetTexEnvfv(GLenum target, GLenum pname, GLfloat * params);
void glGetTexEnviv(GLenum target, GLenum pname, GLint * params);
void glGetTexGendv(GLenum coord, GLenum pname, GLdouble * params);
void glGetTexGenfv(GLenum coord, GLenum pname, GLfloat * params);
void glGetTexGeniv(GLenum coord, GLenum pname, GLint * params);
void glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params);
void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params);
void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params);
void glGetTexParameteriv(GLenum target, GLenum pname, GLint * params);
void glGetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
void glGetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
void glGetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
void glGetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint * params);
void glGetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint * params);
void glGetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat * params);
void glGetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint * params);
void glGetVertexArrayIntegeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
void glGetVertexArrayIntegervEXT(GLuint vaobj, GLenum pname, GLint * param);
void glGetVertexArrayPointeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, void ** param);
void glGetVertexArrayPointervEXT(GLuint vaobj, GLenum pname, void ** param);
void glHint(GLenum target, GLenum mode);
void glIndexMask(GLuint mask);
void glIndexPointer(GLenum type, GLsizei stride, const void * pointer);
void glIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glIndexd(GLdouble c);
void glIndexdv(const GLdouble * c);
void glIndexf(GLfloat c);
void glIndexfv(const GLfloat * c);
void glIndexi(GLint c);
void glIndexiv(const GLint * c);
void glIndexs(GLshort c);
void glIndexsv(const GLshort * c);
void glIndexub(GLubyte c);
void glIndexubv(const GLubyte * c);
void glInitNames(void);
void glInterleavedArrays(GLenum format, GLsizei stride, const void * pointer);
GLboolean glIsBufferARB(GLuint buffer);
GLboolean glIsEnabled(GLenum cap);
GLboolean glIsEnabledIndexedEXT(GLenum target, GLuint index);
GLboolean glIsList(GLuint list);
GLboolean glIsTexture(GLuint texture);
GLboolean glIsTextureEXT(GLuint texture);
void glLightModelf(GLenum pname, GLfloat param);
void glLightModelfv(GLenum pname, const GLfloat * params);
void glLightModeli(GLenum pname, GLint param);
void glLightModeliv(GLenum pname, const GLint * params);
void glLightf(GLenum light, GLenum pname, GLfloat param);
void glLightfv(GLenum light, GLenum pname, const GLfloat * params);
void glLighti(GLenum light, GLenum pname, GLint param);
void glLightiv(GLenum light, GLenum pname, const GLint * params);
void glLineStipple(GLint factor, GLushort pattern);
void glLineWidth(GLfloat width);
void glListBase(GLuint base);
void glLoadIdentity(void);
void glLoadMatrixd(const GLdouble * m);
void glLoadMatrixf(const GLfloat * m);
void glLoadName(GLuint name);
void glLogicOp(GLenum opcode);
void glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
void glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
void glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
void glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
void * glMapBufferARB(GLenum target, GLenum access);
void glMapGrid1d(GLint un, GLdouble u1, GLdouble u2);
void glMapGrid1f(GLint un, GLfloat u1, GLfloat u2);
void glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void * glMapNamedBufferEXT(GLuint buffer, GLenum access);
void * glMapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
void glMaterialf(GLenum face, GLenum pname, GLfloat param);
void glMaterialfv(GLenum face, GLenum pname, const GLfloat * params);
void glMateriali(GLenum face, GLenum pname, GLint param);
void glMaterialiv(GLenum face, GLenum pname, const GLint * params);
void glMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void glMatrixLoadIdentityEXT(GLenum mode);
void glMatrixLoadTransposedEXT(GLenum mode, const GLdouble * m);
void glMatrixLoadTransposefEXT(GLenum mode, const GLfloat * m);
void glMatrixLoaddEXT(GLenum mode, const GLdouble * m);
void glMatrixLoadfEXT(GLenum mode, const GLfloat * m);
void glMatrixMode(GLenum mode);
void glMatrixMultTransposedEXT(GLenum mode, const GLdouble * m);
void glMatrixMultTransposefEXT(GLenum mode, const GLfloat * m);
void glMatrixMultdEXT(GLenum mode, const GLdouble * m);
void glMatrixMultfEXT(GLenum mode, const GLfloat * m);
void glMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void glMatrixPopEXT(GLenum mode);
void glMatrixPushEXT(GLenum mode);
void glMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void glMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void glMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
void glMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
void glMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
void glMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
void glMultMatrixd(const GLdouble * m);
void glMultMatrixf(const GLfloat * m);
void glMultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
void glMultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
void glMultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
void glMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
void glMultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
void glMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
void glMultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
void glMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
void glMultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
void glMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
void glMultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param);
void glMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
void glMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
void glMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
void glMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
void glMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
void glMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
void glMultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
void glMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
void glMultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
void glMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
void glMultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer);
void glMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
void glMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glNamedBufferDataEXT(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
void glNamedBufferStorageEXT(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
void glNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
void glNamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void glNamedFramebufferParameteriEXT(GLuint framebuffer, GLenum pname, GLint param);
void glNamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void glNamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glNamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glNamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void glNamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
void glNamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
void glNamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
void glNamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glNamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, const GLdouble * params);
void glNamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glNamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, const GLfloat * params);
void glNamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void glNamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, const GLint * params);
void glNamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void glNamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, const GLuint * params);
void glNamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
void glNamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
void glNamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
void glNamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
void glNamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
void glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
void glNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glNewList(GLuint list, GLenum mode);
void glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz);
void glNormal3bv(const GLbyte * v);
void glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz);
void glNormal3dv(const GLdouble * v);
void glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);
void glNormal3fv(const GLfloat * v);
void glNormal3i(GLint nx, GLint ny, GLint nz);
void glNormal3iv(const GLint * v);
void glNormal3s(GLshort nx, GLshort ny, GLshort nz);
void glNormal3sv(const GLshort * v);
void glNormalPointer(GLenum type, GLsizei stride, const void * pointer);
void glNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
void glObjectPtrLabel(const void * ptr, GLsizei length, const GLchar * label);
void glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void glPassThrough(GLfloat token);
void glPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat * values);
void glPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint * values);
void glPixelMapusv(GLenum map, GLsizei mapsize, const GLushort * values);
void glPixelStoref(GLenum pname, GLfloat param);
void glPixelStorei(GLenum pname, GLint param);
void glPixelTransferf(GLenum pname, GLfloat param);
void glPixelTransferi(GLenum pname, GLint param);
void glPixelZoom(GLfloat xfactor, GLfloat yfactor);
void glPointSize(GLfloat size);
void glPolygonMode(GLenum face, GLenum mode);
void glPolygonOffset(GLfloat factor, GLfloat units);
void glPolygonStipple(const GLubyte * mask);
void glPopAttrib(void);
void glPopClientAttrib(void);
void glPopDebugGroup(void);
void glPopMatrix(void);
void glPopName(void);
void glPrioritizeTextures(GLsizei n, const GLuint * textures, const GLfloat * priorities);
void glPrioritizeTexturesEXT(GLsizei n, const GLuint * textures, const GLclampf * priorities);
void glProgramUniform1dEXT(GLuint program, GLint location, GLdouble x);
void glProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
void glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
void glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
void glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y);
void glProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
void glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
void glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
void glProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
void glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
void glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
void glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glPushAttrib(GLbitfield mask);
void glPushClientAttrib(GLbitfield mask);
void glPushClientAttribDefaultEXT(GLbitfield mask);
void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar * message);
void glPushMatrix(void);
void glPushName(GLuint name);
void glRasterPos2d(GLdouble x, GLdouble y);
void glRasterPos2dv(const GLdouble * v);
void glRasterPos2f(GLfloat x, GLfloat y);
void glRasterPos2fv(const GLfloat * v);
void glRasterPos2i(GLint x, GLint y);
void glRasterPos2iv(const GLint * v);
void glRasterPos2s(GLshort x, GLshort y);
void glRasterPos2sv(const GLshort * v);
void glRasterPos3d(GLdouble x, GLdouble y, GLdouble z);
void glRasterPos3dv(const GLdouble * v);
void glRasterPos3f(GLfloat x, GLfloat y, GLfloat z);
void glRasterPos3fv(const GLfloat * v);
void glRasterPos3i(GLint x, GLint y, GLint z);
void glRasterPos3iv(const GLint * v);
void glRasterPos3s(GLshort x, GLshort y, GLshort z);
void glRasterPos3sv(const GLshort * v);
void glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glRasterPos4dv(const GLdouble * v);
void glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glRasterPos4fv(const GLfloat * v);
void glRasterPos4i(GLint x, GLint y, GLint z, GLint w);
void glRasterPos4iv(const GLint * v);
void glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
void glRasterPos4sv(const GLshort * v);
void glReadBuffer(GLenum src);
void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
void glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void glRectdv(const GLdouble * v1, const GLdouble * v2);
void glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void glRectfv(const GLfloat * v1, const GLfloat * v2);
void glRecti(GLint x1, GLint y1, GLint x2, GLint y2);
void glRectiv(const GLint * v1, const GLint * v2);
void glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void glRectsv(const GLshort * v1, const GLshort * v2);
GLint glRenderMode(GLenum mode);
void glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void glScaled(GLdouble x, GLdouble y, GLdouble z);
void glScalef(GLfloat x, GLfloat y, GLfloat z);
void glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
void glSelectBuffer(GLsizei size, GLuint * buffer);
void glShadeModel(GLenum mode);
void glStencilFunc(GLenum func, GLint ref, GLuint mask);
void glStencilMask(GLuint mask);
void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
void glTexCoord1d(GLdouble s);
void glTexCoord1dv(const GLdouble * v);
void glTexCoord1f(GLfloat s);
void glTexCoord1fv(const GLfloat * v);
void glTexCoord1i(GLint s);
void glTexCoord1iv(const GLint * v);
void glTexCoord1s(GLshort s);
void glTexCoord1sv(const GLshort * v);
void glTexCoord2d(GLdouble s, GLdouble t);
void glTexCoord2dv(const GLdouble * v);
void glTexCoord2f(GLfloat s, GLfloat t);
void glTexCoord2fv(const GLfloat * v);
void glTexCoord2i(GLint s, GLint t);
void glTexCoord2iv(const GLint * v);
void glTexCoord2s(GLshort s, GLshort t);
void glTexCoord2sv(const GLshort * v);
void glTexCoord3d(GLdouble s, GLdouble t, GLdouble r);
void glTexCoord3dv(const GLdouble * v);
void glTexCoord3f(GLfloat s, GLfloat t, GLfloat r);
void glTexCoord3fv(const GLfloat * v);
void glTexCoord3i(GLint s, GLint t, GLint r);
void glTexCoord3iv(const GLint * v);
void glTexCoord3s(GLshort s, GLshort t, GLshort r);
void glTexCoord3sv(const GLshort * v);
void glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void glTexCoord4dv(const GLdouble * v);
void glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void glTexCoord4fv(const GLfloat * v);
void glTexCoord4i(GLint s, GLint t, GLint r, GLint q);
void glTexCoord4iv(const GLint * v);
void glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q);
void glTexCoord4sv(const GLshort * v);
void glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
void glTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glTexEnvf(GLenum target, GLenum pname, GLfloat param);
void glTexEnvfv(GLenum target, GLenum pname, const GLfloat * params);
void glTexEnvi(GLenum target, GLenum pname, GLint param);
void glTexEnviv(GLenum target, GLenum pname, const GLint * params);
void glTexGend(GLenum coord, GLenum pname, GLdouble param);
void glTexGendv(GLenum coord, GLenum pname, const GLdouble * params);
void glTexGenf(GLenum coord, GLenum pname, GLfloat param);
void glTexGenfv(GLenum coord, GLenum pname, const GLfloat * params);
void glTexGeni(GLenum coord, GLenum pname, GLint param);
void glTexGeniv(GLenum coord, GLenum pname, const GLint * params);
void glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexParameterf(GLenum target, GLenum pname, GLfloat param);
void glTexParameterfv(GLenum target, GLenum pname, const GLfloat * params);
void glTexParameteri(GLenum target, GLenum pname, GLint param);
void glTexParameteriv(GLenum target, GLenum pname, const GLint * params);
void glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
void glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glTextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
void glTextureBufferRangeEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
void glTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
void glTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
void glTexturePageCommitmentEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
void glTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, const GLint * params);
void glTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, const GLuint * params);
void glTextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param);
void glTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
void glTextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param);
void glTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, const GLint * params);
void glTextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer);
void glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void glTextureStorage2DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void glTextureStorage3DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void glTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
void glTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
void glTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
void glTranslated(GLdouble x, GLdouble y, GLdouble z);
void glTranslatef(GLfloat x, GLfloat y, GLfloat z);
GLboolean glUnmapBufferARB(GLenum target);
GLboolean glUnmapNamedBufferEXT(GLuint buffer);
void glVertex2d(GLdouble x, GLdouble y);
void glVertex2dv(const GLdouble * v);
void glVertex2f(GLfloat x, GLfloat y);
void glVertex2fv(const GLfloat * v);
void glVertex2i(GLint x, GLint y);
void glVertex2iv(const GLint * v);
void glVertex2s(GLshort x, GLshort y);
void glVertex2sv(const GLshort * v);
void glVertex3d(GLdouble x, GLdouble y, GLdouble z);
void glVertex3dv(const GLdouble * v);
void glVertex3f(GLfloat x, GLfloat y, GLfloat z);
void glVertex3fv(const GLfloat * v);
void glVertex3i(GLint x, GLint y, GLint z);
void glVertex3iv(const GLint * v);
void glVertex3s(GLshort x, GLshort y, GLshort z);
void glVertex3sv(const GLshort * v);
void glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void glVertex4dv(const GLdouble * v);
void glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glVertex4fv(const GLfloat * v);
void glVertex4i(GLint x, GLint y, GLint z, GLint w);
void glVertex4iv(const GLint * v);
void glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
void glVertex4sv(const GLshort * v);
void glVertexArrayBindVertexBufferEXT(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void glVertexArrayColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayEdgeFlagOffsetEXT(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
void glVertexArrayFogCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayIndexOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayNormalOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArraySecondaryColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayVertexAttribBindingEXT(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
void glVertexArrayVertexAttribDivisorEXT(GLuint vaobj, GLuint index, GLuint divisor);
void glVertexArrayVertexAttribFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void glVertexArrayVertexAttribIFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void glVertexArrayVertexAttribIOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayVertexAttribLFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void glVertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexArrayVertexAttribOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
void glVertexArrayVertexBindingDivisorEXT(GLuint vaobj, GLuint bindingindex, GLuint divisor);
void glVertexArrayVertexOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void glVertexPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
void glVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
void glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
void glActiveShaderProgram(GLuint pipeline, GLuint program);
void glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
void glActiveTexture(GLenum texture);
void glAttachShader(GLuint program, GLuint shader);
void glBeginQuery(GLenum target, GLuint id);
void glBeginQueryEXT(GLenum target, GLuint id);
void glBeginTransformFeedback(GLenum primitiveMode);
void glBindAttribLocation(GLuint program, GLuint index, const GLchar * name);
void glBindBuffer(GLenum target, GLuint buffer);
void glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glBindFramebuffer(GLenum target, GLuint framebuffer);
void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
void glBindProgramPipeline(GLuint pipeline);
void glBindProgramPipelineEXT(GLuint pipeline);
void glBindRenderbuffer(GLenum target, GLuint renderbuffer);
void glBindSampler(GLuint unit, GLuint sampler);
void glBindTransformFeedback(GLenum target, GLuint id);
void glBindVertexArray(GLuint array);
void glBindVertexArrayOES(GLuint array);
void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void glBlendBarrier(void);
void glBlendBarrierKHR(void);
void glBlendBarrierNV(void);
void glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void glBlendEquation(GLenum mode);
void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
void glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void glBlendEquationi(GLuint buf, GLenum mode);
void glBlendEquationiEXT(GLuint buf, GLenum mode);
void glBlendEquationiOES(GLuint buf, GLenum mode);
void glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void glBlendFunci(GLuint buf, GLenum src, GLenum dst);
void glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst);
void glBlendFunciOES(GLuint buf, GLenum src, GLenum dst);
void glBlendParameteriNV(GLenum pname, GLint value);
void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void glBufferData(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
GLenum glCheckFramebufferStatus(GLenum target);
void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value);
void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value);
void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value);
void glClearDepthf(GLfloat d);
GLenum glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLenum glClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void glCompileShader(GLuint shader);
void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLuint glCreateProgram(void);
GLuint glCreateShader(GLenum type);
GLuint glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings);
GLuint glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar *const* strings);
void glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void * userParam);
void glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
void glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
void glDeleteBuffers(GLsizei n, const GLuint * buffers);
void glDeleteFramebuffers(GLsizei n, const GLuint * framebuffers);
void glDeleteProgram(GLuint program);
void glDeleteProgramPipelines(GLsizei n, const GLuint * pipelines);
void glDeleteProgramPipelinesEXT(GLsizei n, const GLuint * pipelines);
void glDeleteQueries(GLsizei n, const GLuint * ids);
void glDeleteQueriesEXT(GLsizei n, const GLuint * ids);
void glDeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers);
void glDeleteSamplers(GLsizei count, const GLuint * samplers);
void glDeleteShader(GLuint shader);
void glDeleteSync(GLsync sync);
void glDeleteSyncAPPLE(GLsync sync);
void glDeleteTransformFeedbacks(GLsizei n, const GLuint * ids);
void glDeleteVertexArrays(GLsizei n, const GLuint * arrays);
void glDeleteVertexArraysOES(GLsizei n, const GLuint * arrays);
void glDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat * v);
void glDepthRangeArrayfvOES(GLuint first, GLsizei count, const GLfloat * v);
void glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f);
void glDepthRangeIndexedfOES(GLuint index, GLfloat n, GLfloat f);
void glDepthRangef(GLfloat n, GLfloat f);
void glDetachShader(GLuint program, GLuint shader);
void glDisableVertexAttribArray(GLuint index);
void glDisablei(GLenum target, GLuint index);
void glDisableiEXT(GLenum target, GLuint index);
void glDisableiNV(GLenum target, GLuint index);
void glDisableiOES(GLenum target, GLuint index);
void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
void glDispatchComputeIndirect(GLintptr indirect);
void glDrawArraysIndirect(GLenum mode, const void * indirect);
void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
void glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
void glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void glDrawBuffers(GLsizei n, const GLenum * bufs);
void glDrawBuffersEXT(GLsizei n, const GLenum * bufs);
void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect);
void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
void glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
void glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
void glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
void glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
void glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
void glEnableVertexAttribArray(GLuint index);
void glEnablei(GLenum target, GLuint index);
void glEnableiEXT(GLenum target, GLuint index);
void glEnableiNV(GLenum target, GLuint index);
void glEnableiOES(GLenum target, GLuint index);
void glEndQuery(GLenum target);
void glEndQueryEXT(GLenum target);
void glEndTransformFeedback(void);
GLsync glFenceSync(GLenum condition, GLbitfield flags);
GLsync glFenceSyncAPPLE(GLenum condition, GLbitfield flags);
void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
void glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
void glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
void glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level);
void glGenBuffers(GLsizei n, GLuint * buffers);
void glGenFramebuffers(GLsizei n, GLuint * framebuffers);
void glGenProgramPipelines(GLsizei n, GLuint * pipelines);
void glGenProgramPipelinesEXT(GLsizei n, GLuint * pipelines);
void glGenQueries(GLsizei n, GLuint * ids);
void glGenQueriesEXT(GLsizei n, GLuint * ids);
void glGenRenderbuffers(GLsizei n, GLuint * renderbuffers);
void glGenSamplers(GLsizei count, GLuint * samplers);
void glGenTransformFeedbacks(GLsizei n, GLuint * ids);
void glGenVertexArrays(GLsizei n, GLuint * arrays);
void glGenVertexArraysOES(GLsizei n, GLuint * arrays);
void glGenerateMipmap(GLenum target);
void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
void glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
GLint glGetAttribLocation(GLuint program, const GLchar * name);
void glGetBooleani_v(GLenum target, GLuint index, GLboolean * data);
void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params);
void glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params);
void glGetBufferPointerv(GLenum target, GLenum pname, void ** params);
void glGetBufferPointervOES(GLenum target, GLenum pname, void ** params);
GLuint glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
void glGetFloati_vNV(GLenum target, GLuint index, GLfloat * data);
void glGetFloati_vOES(GLenum target, GLuint index, GLfloat * data);
GLint glGetFragDataLocation(GLuint program, const GLchar * name);
void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params);
void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLenum glGetGraphicsResetStatus(void);
GLenum glGetGraphicsResetStatusEXT(void);
GLenum glGetGraphicsResetStatusKHR(void);
void glGetInteger64i_v(GLenum target, GLuint index, GLint64 * data);
void glGetInteger64v(GLenum pname, GLint64 * data);
void glGetInteger64vAPPLE(GLenum pname, GLint64 * params);
void glGetInteger64vEXT(GLenum pname, GLint64 * data);
void glGetIntegeri_v(GLenum target, GLuint index, GLint * data);
void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat * val);
void glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
void glGetObjectPtrLabelKHR(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
void glGetPointervKHR(GLenum pname, void ** params);
void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
void glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
void glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint * params);
void glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint * params);
GLuint glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar * name);
GLint glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar * name);
void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
void glGetProgramiv(GLuint program, GLenum pname, GLint * params);
void glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 * params);
void glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint * params);
void glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 * params);
void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params);
void glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint * params);
void glGetQueryiv(GLenum target, GLenum pname, GLint * params);
void glGetQueryivEXT(GLenum target, GLenum pname, GLint * params);
void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params);
void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint * params);
void glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint * params);
void glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint * params);
void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint * params);
void glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint * params);
void glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint * params);
void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params);
void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params);
void glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
void glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
void glGetShaderiv(GLuint shader, GLenum pname, GLint * params);
const GLubyte * glGetStringi(GLenum name, GLuint index);
void glGetSynciv(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
void glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
void glGetTexParameterIiv(GLenum target, GLenum pname, GLint * params);
void glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params);
void glGetTexParameterIivOES(GLenum target, GLenum pname, GLint * params);
void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint * params);
void glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params);
void glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint * params);
void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLuint glGetUniformBlockIndex(GLuint program, const GLchar * uniformBlockName);
void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
GLint glGetUniformLocation(GLuint program, const GLchar * name);
void glGetUniformfv(GLuint program, GLint location, GLfloat * params);
void glGetUniformiv(GLuint program, GLint location, GLint * params);
void glGetUniformuiv(GLuint program, GLint location, GLuint * params);
void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint * params);
void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params);
void glGetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer);
void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params);
void glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params);
void glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
void glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
void glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
void glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint * params);
void glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint * params);
void glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint * params);
void glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
void glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments);
void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLboolean glIsBuffer(GLuint buffer);
GLboolean glIsEnabledi(GLenum target, GLuint index);
GLboolean glIsEnablediEXT(GLenum target, GLuint index);
GLboolean glIsEnablediNV(GLenum target, GLuint index);
GLboolean glIsEnablediOES(GLenum target, GLuint index);
GLboolean glIsFramebuffer(GLuint framebuffer);
GLboolean glIsProgram(GLuint program);
GLboolean glIsProgramPipeline(GLuint pipeline);
GLboolean glIsProgramPipelineEXT(GLuint pipeline);
GLboolean glIsQuery(GLuint id);
GLboolean glIsQueryEXT(GLuint id);
GLboolean glIsRenderbuffer(GLuint renderbuffer);
GLboolean glIsSampler(GLuint sampler);
GLboolean glIsShader(GLuint shader);
GLboolean glIsSync(GLsync sync);
GLboolean glIsSyncAPPLE(GLsync sync);
GLboolean glIsTransformFeedback(GLuint id);
GLboolean glIsVertexArray(GLuint array);
GLboolean glIsVertexArrayOES(GLuint array);
void glLinkProgram(GLuint program);
void * glMapBufferOES(GLenum target, GLenum access);
void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void glMemoryBarrier(GLbitfield barriers);
void glMemoryBarrierByRegion(GLbitfield barriers);
void glMinSampleShading(GLfloat value);
void glMinSampleShadingOES(GLfloat value);
void glMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
void glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
void glObjectPtrLabelKHR(const void * ptr, GLsizei length, const GLchar * label);
void glPatchParameteri(GLenum pname, GLint value);
void glPatchParameteriEXT(GLenum pname, GLint value);
void glPatchParameteriOES(GLenum pname, GLint value);
void glPauseTransformFeedback(void);
void glPopDebugGroupKHR(void);
void glPrimitiveBoundingBox(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
void glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
void glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
void glProgramBinary(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
void glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void * binary, GLint length);
void glProgramParameteri(GLuint program, GLenum pname, GLint value);
void glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
void glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform1i(GLuint program, GLint location, GLint v0);
void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint * value);
void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar * message);
void glQueryCounterEXT(GLuint id, GLenum target);
void glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
void glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
void glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
void glReleaseShaderCompiler(void);
void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void glResumeTransformFeedback(void);
void glSampleCoverage(GLfloat value, GLboolean invert);
void glSampleMaski(GLuint maskNumber, GLbitfield mask);
void glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint * param);
void glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint * param);
void glSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint * param);
void glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint * param);
void glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint * param);
void glSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint * param);
void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param);
void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param);
void glScissorArrayvNV(GLuint first, GLsizei count, const GLint * v);
void glScissorArrayvOES(GLuint first, GLsizei count, const GLint * v);
void glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void glScissorIndexedOES(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void glScissorIndexedvNV(GLuint index, const GLint * v);
void glScissorIndexedvOES(GLuint index, const GLint * v);
void glShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
void glShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
void glStencilMaskSeparate(GLenum face, GLuint mask);
void glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
void glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
void glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer);
void glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void glTexParameterIiv(GLenum target, GLenum pname, const GLint * params);
void glTexParameterIivEXT(GLenum target, GLenum pname, const GLint * params);
void glTexParameterIivOES(GLenum target, GLenum pname, const GLint * params);
void glTexParameterIuiv(GLenum target, GLenum pname, const GLuint * params);
void glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params);
void glTexParameterIuivOES(GLenum target, GLenum pname, const GLuint * params);
void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
void glUniform1f(GLint location, GLfloat v0);
void glUniform1fv(GLint location, GLsizei count, const GLfloat * value);
void glUniform1i(GLint location, GLint v0);
void glUniform1iv(GLint location, GLsizei count, const GLint * value);
void glUniform1ui(GLint location, GLuint v0);
void glUniform1uiv(GLint location, GLsizei count, const GLuint * value);
void glUniform2f(GLint location, GLfloat v0, GLfloat v1);
void glUniform2fv(GLint location, GLsizei count, const GLfloat * value);
void glUniform2i(GLint location, GLint v0, GLint v1);
void glUniform2iv(GLint location, GLsizei count, const GLint * value);
void glUniform2ui(GLint location, GLuint v0, GLuint v1);
void glUniform2uiv(GLint location, GLsizei count, const GLuint * value);
void glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void glUniform3fv(GLint location, GLsizei count, const GLfloat * value);
void glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
void glUniform3iv(GLint location, GLsizei count, const GLint * value);
void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
void glUniform3uiv(GLint location, GLsizei count, const GLuint * value);
void glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void glUniform4fv(GLint location, GLsizei count, const GLfloat * value);
void glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void glUniform4iv(GLint location, GLsizei count, const GLint * value);
void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void glUniform4uiv(GLint location, GLsizei count, const GLuint * value);
void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
void glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLboolean glUnmapBuffer(GLenum target);
GLboolean glUnmapBufferOES(GLenum target);
void glUseProgram(GLuint program);
void glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program);
void glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program);
void glValidateProgram(GLuint program);
void glValidateProgramPipeline(GLuint pipeline);
void glValidateProgramPipelineEXT(GLuint pipeline);
void glVertexAttrib1f(GLuint index, GLfloat x);
void glVertexAttrib1fv(GLuint index, const GLfloat * v);
void glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
void glVertexAttrib2fv(GLuint index, const GLfloat * v);
void glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void glVertexAttrib3fv(GLuint index, const GLfloat * v);
void glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void glVertexAttrib4fv(GLuint index, const GLfloat * v);
void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
void glVertexAttribDivisor(GLuint index, GLuint divisor);
void glVertexAttribDivisorANGLE(GLuint index, GLuint divisor);
void glVertexAttribDivisorEXT(GLuint index, GLuint divisor);
void glVertexAttribDivisorNV(GLuint index, GLuint divisor);
void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
void glVertexAttribI4iv(GLuint index, const GLint * v);
void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void glVertexAttribI4uiv(GLuint index, const GLuint * v);
void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
void glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
void glViewportArrayvNV(GLuint first, GLsizei count, const GLfloat * v);
void glViewportArrayvOES(GLuint first, GLsizei count, const GLfloat * v);
void glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void glViewportIndexedfOES(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void glViewportIndexedfvNV(GLuint index, const GLfloat * v);
void glViewportIndexedfvOES(GLuint index, const GLfloat * v);
void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
void glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);

#else
#define glAccum (glad_gl_context.Accum)
#define glAlphaFunc (glad_gl_context.AlphaFunc)
#define glAreTexturesResident (glad_gl_context.AreTexturesResident)
#define glAreTexturesResidentEXT (glad_gl_context.AreTexturesResidentEXT)
#define glArrayElement (glad_gl_context.ArrayElement)
#define glArrayElementEXT (glad_gl_context.ArrayElementEXT)
#define glBegin (glad_gl_context.Begin)
#define glBindBufferARB (glad_gl_context.BindBufferARB)
#define glBindMultiTextureEXT (glad_gl_context.BindMultiTextureEXT)
#define glBindTexture (glad_gl_context.BindTexture)
#define glBindTextureEXT (glad_gl_context.BindTextureEXT)
#define glBitmap (glad_gl_context.Bitmap)
#define glBlendFunc (glad_gl_context.BlendFunc)
#define glBufferDataARB (glad_gl_context.BufferDataARB)
#define glBufferStorage (glad_gl_context.BufferStorage)
#define glBufferSubDataARB (glad_gl_context.BufferSubDataARB)
#define glCallList (glad_gl_context.CallList)
#define glCallLists (glad_gl_context.CallLists)
#define glCheckNamedFramebufferStatusEXT (glad_gl_context.CheckNamedFramebufferStatusEXT)
#define glClear (glad_gl_context.Clear)
#define glClearAccum (glad_gl_context.ClearAccum)
#define glClearColor (glad_gl_context.ClearColor)
#define glClearDepth (glad_gl_context.ClearDepth)
#define glClearIndex (glad_gl_context.ClearIndex)
#define glClearNamedBufferDataEXT (glad_gl_context.ClearNamedBufferDataEXT)
#define glClearNamedBufferSubDataEXT (glad_gl_context.ClearNamedBufferSubDataEXT)
#define glClearStencil (glad_gl_context.ClearStencil)
#define glClientAttribDefaultEXT (glad_gl_context.ClientAttribDefaultEXT)
#define glClipPlane (glad_gl_context.ClipPlane)
#define glColor3b (glad_gl_context.Color3b)
#define glColor3bv (glad_gl_context.Color3bv)
#define glColor3d (glad_gl_context.Color3d)
#define glColor3dv (glad_gl_context.Color3dv)
#define glColor3f (glad_gl_context.Color3f)
#define glColor3fv (glad_gl_context.Color3fv)
#define glColor3i (glad_gl_context.Color3i)
#define glColor3iv (glad_gl_context.Color3iv)
#define glColor3s (glad_gl_context.Color3s)
#define glColor3sv (glad_gl_context.Color3sv)
#define glColor3ub (glad_gl_context.Color3ub)
#define glColor3ubv (glad_gl_context.Color3ubv)
#define glColor3ui (glad_gl_context.Color3ui)
#define glColor3uiv (glad_gl_context.Color3uiv)
#define glColor3us (glad_gl_context.Color3us)
#define glColor3usv (glad_gl_context.Color3usv)
#define glColor4b (glad_gl_context.Color4b)
#define glColor4bv (glad_gl_context.Color4bv)
#define glColor4d (glad_gl_context.Color4d)
#define glColor4dv (glad_gl_context.Color4dv)
#define glColor4f (glad_gl_context.Color4f)
#define glColor4fv (glad_gl_context.Color4fv)
#define glColor4i (glad_gl_context.Color4i)
#define glColor4iv (glad_gl_context.Color4iv)
#define glColor4s (glad_gl_context.Color4s)
#define glColor4sv (glad_gl_context.Color4sv)
#define glColor4ub (glad_gl_context.Color4ub)
#define glColor4ubv (glad_gl_context.Color4ubv)
#define glColor4ui (glad_gl_context.Color4ui)
#define glColor4uiv (glad_gl_context.Color4uiv)
#define glColor4us (glad_gl_context.Color4us)
#define glColor4usv (glad_gl_context.Color4usv)
#define glColorMask (glad_gl_context.ColorMask)
#define glColorMaterial (glad_gl_context.ColorMaterial)
#define glColorPointer (glad_gl_context.ColorPointer)
#define glColorPointerEXT (glad_gl_context.ColorPointerEXT)
#define glCompressedMultiTexImage1DEXT (glad_gl_context.CompressedMultiTexImage1DEXT)
#define glCompressedMultiTexImage2DEXT (glad_gl_context.CompressedMultiTexImage2DEXT)
#define glCompressedMultiTexImage3DEXT (glad_gl_context.CompressedMultiTexImage3DEXT)
#define glCompressedMultiTexSubImage1DEXT (glad_gl_context.CompressedMultiTexSubImage1DEXT)
#define glCompressedMultiTexSubImage2DEXT (glad_gl_context.CompressedMultiTexSubImage2DEXT)
#define glCompressedMultiTexSubImage3DEXT (glad_gl_context.CompressedMultiTexSubImage3DEXT)
#define glCompressedTextureImage1DEXT (glad_gl_context.CompressedTextureImage1DEXT)
#define glCompressedTextureImage2DEXT (glad_gl_context.CompressedTextureImage2DEXT)
#define glCompressedTextureImage3DEXT (glad_gl_context.CompressedTextureImage3DEXT)
#define glCompressedTextureSubImage1DEXT (glad_gl_context.CompressedTextureSubImage1DEXT)
#define glCompressedTextureSubImage2DEXT (glad_gl_context.CompressedTextureSubImage2DEXT)
#define glCompressedTextureSubImage3DEXT (glad_gl_context.CompressedTextureSubImage3DEXT)
#define glCopyMultiTexImage1DEXT (glad_gl_context.CopyMultiTexImage1DEXT)
#define glCopyMultiTexImage2DEXT (glad_gl_context.CopyMultiTexImage2DEXT)
#define glCopyMultiTexSubImage1DEXT (glad_gl_context.CopyMultiTexSubImage1DEXT)
#define glCopyMultiTexSubImage2DEXT (glad_gl_context.CopyMultiTexSubImage2DEXT)
#define glCopyMultiTexSubImage3DEXT (glad_gl_context.CopyMultiTexSubImage3DEXT)
#define glCopyPixels (glad_gl_context.CopyPixels)
#define glCopyTexImage1D (glad_gl_context.CopyTexImage1D)
#define glCopyTexImage1DEXT (glad_gl_context.CopyTexImage1DEXT)
#define glCopyTexImage2D (glad_gl_context.CopyTexImage2D)
#define glCopyTexImage2DEXT (glad_gl_context.CopyTexImage2DEXT)
#define glCopyTexSubImage1D (glad_gl_context.CopyTexSubImage1D)
#define glCopyTexSubImage1DEXT (glad_gl_context.CopyTexSubImage1DEXT)
#define glCopyTexSubImage2D (glad_gl_context.CopyTexSubImage2D)
#define glCopyTexSubImage2DEXT (glad_gl_context.CopyTexSubImage2DEXT)
#define glCopyTexSubImage3D (glad_gl_context.CopyTexSubImage3D)
#define glCopyTexSubImage3DEXT (glad_gl_context.CopyTexSubImage3DEXT)
#define glCopyTextureImage1DEXT (glad_gl_context.CopyTextureImage1DEXT)
#define glCopyTextureImage2DEXT (glad_gl_context.CopyTextureImage2DEXT)
#define glCopyTextureSubImage1DEXT (glad_gl_context.CopyTextureSubImage1DEXT)
#define glCopyTextureSubImage2DEXT (glad_gl_context.CopyTextureSubImage2DEXT)
#define glCopyTextureSubImage3DEXT (glad_gl_context.CopyTextureSubImage3DEXT)
#define glCullFace (glad_gl_context.CullFace)
#define glDebugMessageCallback (glad_gl_context.DebugMessageCallback)
#define glDebugMessageCallbackARB (glad_gl_context.DebugMessageCallbackARB)
#define glDebugMessageControl (glad_gl_context.DebugMessageControl)
#define glDebugMessageControlARB (glad_gl_context.DebugMessageControlARB)
#define glDebugMessageInsert (glad_gl_context.DebugMessageInsert)
#define glDebugMessageInsertARB (glad_gl_context.DebugMessageInsertARB)
#define glDeleteBuffersARB (glad_gl_context.DeleteBuffersARB)
#define glDeleteLists (glad_gl_context.DeleteLists)
#define glDeleteTextures (glad_gl_context.DeleteTextures)
#define glDeleteTexturesEXT (glad_gl_context.DeleteTexturesEXT)
#define glDepthFunc (glad_gl_context.DepthFunc)
#define glDepthMask (glad_gl_context.DepthMask)
#define glDepthRange (glad_gl_context.DepthRange)
#define glDisable (glad_gl_context.Disable)
#define glDisableClientState (glad_gl_context.DisableClientState)
#define glDisableClientStateIndexedEXT (glad_gl_context.DisableClientStateIndexedEXT)
#define glDisableClientStateiEXT (glad_gl_context.DisableClientStateiEXT)
#define glDisableIndexedEXT (glad_gl_context.DisableIndexedEXT)
#define glDisableVertexArrayAttribEXT (glad_gl_context.DisableVertexArrayAttribEXT)
#define glDisableVertexArrayEXT (glad_gl_context.DisableVertexArrayEXT)
#define glDrawArrays (glad_gl_context.DrawArrays)
#define glDrawArraysEXT (glad_gl_context.DrawArraysEXT)
#define glDrawBuffer (glad_gl_context.DrawBuffer)
#define glDrawElements (glad_gl_context.DrawElements)
#define glDrawPixels (glad_gl_context.DrawPixels)
#define glDrawRangeElements (glad_gl_context.DrawRangeElements)
#define glDrawRangeElementsEXT (glad_gl_context.DrawRangeElementsEXT)
#define glEdgeFlag (glad_gl_context.EdgeFlag)
#define glEdgeFlagPointer (glad_gl_context.EdgeFlagPointer)
#define glEdgeFlagPointerEXT (glad_gl_context.EdgeFlagPointerEXT)
#define glEdgeFlagv (glad_gl_context.EdgeFlagv)
#define glEnable (glad_gl_context.Enable)
#define glEnableClientState (glad_gl_context.EnableClientState)
#define glEnableClientStateIndexedEXT (glad_gl_context.EnableClientStateIndexedEXT)
#define glEnableClientStateiEXT (glad_gl_context.EnableClientStateiEXT)
#define glEnableIndexedEXT (glad_gl_context.EnableIndexedEXT)
#define glEnableVertexArrayAttribEXT (glad_gl_context.EnableVertexArrayAttribEXT)
#define glEnableVertexArrayEXT (glad_gl_context.EnableVertexArrayEXT)
#define glEnd (glad_gl_context.End)
#define glEndList (glad_gl_context.EndList)
#define glEvalCoord1d (glad_gl_context.EvalCoord1d)
#define glEvalCoord1dv (glad_gl_context.EvalCoord1dv)
#define glEvalCoord1f (glad_gl_context.EvalCoord1f)
#define glEvalCoord1fv (glad_gl_context.EvalCoord1fv)
#define glEvalCoord2d (glad_gl_context.EvalCoord2d)
#define glEvalCoord2dv (glad_gl_context.EvalCoord2dv)
#define glEvalCoord2f (glad_gl_context.EvalCoord2f)
#define glEvalCoord2fv (glad_gl_context.EvalCoord2fv)
#define glEvalMesh1 (glad_gl_context.EvalMesh1)
#define glEvalMesh2 (glad_gl_context.EvalMesh2)
#define glEvalPoint1 (glad_gl_context.EvalPoint1)
#define glEvalPoint2 (glad_gl_context.EvalPoint2)
#define glFeedbackBuffer (glad_gl_context.FeedbackBuffer)
#define glFinish (glad_gl_context.Finish)
#define glFlush (glad_gl_context.Flush)
#define glFlushMappedNamedBufferRangeEXT (glad_gl_context.FlushMappedNamedBufferRangeEXT)
#define glFogf (glad_gl_context.Fogf)
#define glFogfv (glad_gl_context.Fogfv)
#define glFogi (glad_gl_context.Fogi)
#define glFogiv (glad_gl_context.Fogiv)
#define glFramebufferDrawBufferEXT (glad_gl_context.FramebufferDrawBufferEXT)
#define glFramebufferDrawBuffersEXT (glad_gl_context.FramebufferDrawBuffersEXT)
#define glFramebufferReadBufferEXT (glad_gl_context.FramebufferReadBufferEXT)
#define glFrontFace (glad_gl_context.FrontFace)
#define glFrustum (glad_gl_context.Frustum)
#define glGenBuffersARB (glad_gl_context.GenBuffersARB)
#define glGenLists (glad_gl_context.GenLists)
#define glGenTextures (glad_gl_context.GenTextures)
#define glGenTexturesEXT (glad_gl_context.GenTexturesEXT)
#define glGenerateMultiTexMipmapEXT (glad_gl_context.GenerateMultiTexMipmapEXT)
#define glGenerateTextureMipmapEXT (glad_gl_context.GenerateTextureMipmapEXT)
#define glGetBooleanIndexedvEXT (glad_gl_context.GetBooleanIndexedvEXT)
#define glGetBooleanv (glad_gl_context.GetBooleanv)
#define glGetBufferParameterivARB (glad_gl_context.GetBufferParameterivARB)
#define glGetBufferPointervARB (glad_gl_context.GetBufferPointervARB)
#define glGetBufferSubDataARB (glad_gl_context.GetBufferSubDataARB)
#define glGetClipPlane (glad_gl_context.GetClipPlane)
#define glGetCompressedMultiTexImageEXT (glad_gl_context.GetCompressedMultiTexImageEXT)
#define glGetCompressedTextureImageEXT (glad_gl_context.GetCompressedTextureImageEXT)
#define glGetDebugMessageLog (glad_gl_context.GetDebugMessageLog)
#define glGetDebugMessageLogARB (glad_gl_context.GetDebugMessageLogARB)
#define glGetDoubleIndexedvEXT (glad_gl_context.GetDoubleIndexedvEXT)
#define glGetDoublei_vEXT (glad_gl_context.GetDoublei_vEXT)
#define glGetDoublev (glad_gl_context.GetDoublev)
#define glGetError (glad_gl_context.GetError)
#define glGetFloatIndexedvEXT (glad_gl_context.GetFloatIndexedvEXT)
#define glGetFloati_vEXT (glad_gl_context.GetFloati_vEXT)
#define glGetFloatv (glad_gl_context.GetFloatv)
#define glGetFramebufferParameterivEXT (glad_gl_context.GetFramebufferParameterivEXT)
#define glGetIntegerIndexedvEXT (glad_gl_context.GetIntegerIndexedvEXT)
#define glGetIntegerv (glad_gl_context.GetIntegerv)
#define glGetLightfv (glad_gl_context.GetLightfv)
#define glGetLightiv (glad_gl_context.GetLightiv)
#define glGetMapdv (glad_gl_context.GetMapdv)
#define glGetMapfv (glad_gl_context.GetMapfv)
#define glGetMapiv (glad_gl_context.GetMapiv)
#define glGetMaterialfv (glad_gl_context.GetMaterialfv)
#define glGetMaterialiv (glad_gl_context.GetMaterialiv)
#define glGetMultiTexEnvfvEXT (glad_gl_context.GetMultiTexEnvfvEXT)
#define glGetMultiTexEnvivEXT (glad_gl_context.GetMultiTexEnvivEXT)
#define glGetMultiTexGendvEXT (glad_gl_context.GetMultiTexGendvEXT)
#define glGetMultiTexGenfvEXT (glad_gl_context.GetMultiTexGenfvEXT)
#define glGetMultiTexGenivEXT (glad_gl_context.GetMultiTexGenivEXT)
#define glGetMultiTexImageEXT (glad_gl_context.GetMultiTexImageEXT)
#define glGetMultiTexLevelParameterfvEXT (glad_gl_context.GetMultiTexLevelParameterfvEXT)
#define glGetMultiTexLevelParameterivEXT (glad_gl_context.GetMultiTexLevelParameterivEXT)
#define glGetMultiTexParameterIivEXT (glad_gl_context.GetMultiTexParameterIivEXT)
#define glGetMultiTexParameterIuivEXT (glad_gl_context.GetMultiTexParameterIuivEXT)
#define glGetMultiTexParameterfvEXT (glad_gl_context.GetMultiTexParameterfvEXT)
#define glGetMultiTexParameterivEXT (glad_gl_context.GetMultiTexParameterivEXT)
#define glGetNamedBufferParameterivEXT (glad_gl_context.GetNamedBufferParameterivEXT)
#define glGetNamedBufferPointervEXT (glad_gl_context.GetNamedBufferPointervEXT)
#define glGetNamedBufferSubDataEXT (glad_gl_context.GetNamedBufferSubDataEXT)
#define glGetNamedFramebufferAttachmentParameterivEXT (glad_gl_context.GetNamedFramebufferAttachmentParameterivEXT)
#define glGetNamedFramebufferParameterivEXT (glad_gl_context.GetNamedFramebufferParameterivEXT)
#define glGetNamedProgramLocalParameterIivEXT (glad_gl_context.GetNamedProgramLocalParameterIivEXT)
#define glGetNamedProgramLocalParameterIuivEXT (glad_gl_context.GetNamedProgramLocalParameterIuivEXT)
#define glGetNamedProgramLocalParameterdvEXT (glad_gl_context.GetNamedProgramLocalParameterdvEXT)
#define glGetNamedProgramLocalParameterfvEXT (glad_gl_context.GetNamedProgramLocalParameterfvEXT)
#define glGetNamedProgramStringEXT (glad_gl_context.GetNamedProgramStringEXT)
#define glGetNamedProgramivEXT (glad_gl_context.GetNamedProgramivEXT)
#define glGetNamedRenderbufferParameterivEXT (glad_gl_context.GetNamedRenderbufferParameterivEXT)
#define glGetObjectLabel (glad_gl_context.GetObjectLabel)
#define glGetObjectPtrLabel (glad_gl_context.GetObjectPtrLabel)
#define glGetPixelMapfv (glad_gl_context.GetPixelMapfv)
#define glGetPixelMapuiv (glad_gl_context.GetPixelMapuiv)
#define glGetPixelMapusv (glad_gl_context.GetPixelMapusv)
#define glGetPointerIndexedvEXT (glad_gl_context.GetPointerIndexedvEXT)
#define glGetPointeri_vEXT (glad_gl_context.GetPointeri_vEXT)
#define glGetPointerv (glad_gl_context.GetPointerv)
#define glGetPointervEXT (glad_gl_context.GetPointervEXT)
#define glGetPolygonStipple (glad_gl_context.GetPolygonStipple)
#define glGetString (glad_gl_context.GetString)
#define glGetTexEnvfv (glad_gl_context.GetTexEnvfv)
#define glGetTexEnviv (glad_gl_context.GetTexEnviv)
#define glGetTexGendv (glad_gl_context.GetTexGendv)
#define glGetTexGenfv (glad_gl_context.GetTexGenfv)
#define glGetTexGeniv (glad_gl_context.GetTexGeniv)
#define glGetTexImage (glad_gl_context.GetTexImage)
#define glGetTexLevelParameterfv (glad_gl_context.GetTexLevelParameterfv)
#define glGetTexLevelParameteriv (glad_gl_context.GetTexLevelParameteriv)
#define glGetTexParameterfv (glad_gl_context.GetTexParameterfv)
#define glGetTexParameteriv (glad_gl_context.GetTexParameteriv)
#define glGetTextureImageEXT (glad_gl_context.GetTextureImageEXT)
#define glGetTextureLevelParameterfvEXT (glad_gl_context.GetTextureLevelParameterfvEXT)
#define glGetTextureLevelParameterivEXT (glad_gl_context.GetTextureLevelParameterivEXT)
#define glGetTextureParameterIivEXT (glad_gl_context.GetTextureParameterIivEXT)
#define glGetTextureParameterIuivEXT (glad_gl_context.GetTextureParameterIuivEXT)
#define glGetTextureParameterfvEXT (glad_gl_context.GetTextureParameterfvEXT)
#define glGetTextureParameterivEXT (glad_gl_context.GetTextureParameterivEXT)
#define glGetVertexArrayIntegeri_vEXT (glad_gl_context.GetVertexArrayIntegeri_vEXT)
#define glGetVertexArrayIntegervEXT (glad_gl_context.GetVertexArrayIntegervEXT)
#define glGetVertexArrayPointeri_vEXT (glad_gl_context.GetVertexArrayPointeri_vEXT)
#define glGetVertexArrayPointervEXT (glad_gl_context.GetVertexArrayPointervEXT)
#define glHint (glad_gl_context.Hint)
#define glIndexMask (glad_gl_context.IndexMask)
#define glIndexPointer (glad_gl_context.IndexPointer)
#define glIndexPointerEXT (glad_gl_context.IndexPointerEXT)
#define glIndexd (glad_gl_context.Indexd)
#define glIndexdv (glad_gl_context.Indexdv)
#define glIndexf (glad_gl_context.Indexf)
#define glIndexfv (glad_gl_context.Indexfv)
#define glIndexi (glad_gl_context.Indexi)
#define glIndexiv (glad_gl_context.Indexiv)
#define glIndexs (glad_gl_context.Indexs)
#define glIndexsv (glad_gl_context.Indexsv)
#define glIndexub (glad_gl_context.Indexub)
#define glIndexubv (glad_gl_context.Indexubv)
#define glInitNames (glad_gl_context.InitNames)
#define glInterleavedArrays (glad_gl_context.InterleavedArrays)
#define glIsBufferARB (glad_gl_context.IsBufferARB)
#define glIsEnabled (glad_gl_context.IsEnabled)
#define glIsEnabledIndexedEXT (glad_gl_context.IsEnabledIndexedEXT)
#define glIsList (glad_gl_context.IsList)
#define glIsTexture (glad_gl_context.IsTexture)
#define glIsTextureEXT (glad_gl_context.IsTextureEXT)
#define glLightModelf (glad_gl_context.LightModelf)
#define glLightModelfv (glad_gl_context.LightModelfv)
#define glLightModeli (glad_gl_context.LightModeli)
#define glLightModeliv (glad_gl_context.LightModeliv)
#define glLightf (glad_gl_context.Lightf)
#define glLightfv (glad_gl_context.Lightfv)
#define glLighti (glad_gl_context.Lighti)
#define glLightiv (glad_gl_context.Lightiv)
#define glLineStipple (glad_gl_context.LineStipple)
#define glLineWidth (glad_gl_context.LineWidth)
#define glListBase (glad_gl_context.ListBase)
#define glLoadIdentity (glad_gl_context.LoadIdentity)
#define glLoadMatrixd (glad_gl_context.LoadMatrixd)
#define glLoadMatrixf (glad_gl_context.LoadMatrixf)
#define glLoadName (glad_gl_context.LoadName)
#define glLogicOp (glad_gl_context.LogicOp)
#define glMap1d (glad_gl_context.Map1d)
#define glMap1f (glad_gl_context.Map1f)
#define glMap2d (glad_gl_context.Map2d)
#define glMap2f (glad_gl_context.Map2f)
#define glMapBufferARB (glad_gl_context.MapBufferARB)
#define glMapGrid1d (glad_gl_context.MapGrid1d)
#define glMapGrid1f (glad_gl_context.MapGrid1f)
#define glMapGrid2d (glad_gl_context.MapGrid2d)
#define glMapGrid2f (glad_gl_context.MapGrid2f)
#define glMapNamedBufferEXT (glad_gl_context.MapNamedBufferEXT)
#define glMapNamedBufferRangeEXT (glad_gl_context.MapNamedBufferRangeEXT)
#define glMaterialf (glad_gl_context.Materialf)
#define glMaterialfv (glad_gl_context.Materialfv)
#define glMateriali (glad_gl_context.Materiali)
#define glMaterialiv (glad_gl_context.Materialiv)
#define glMatrixFrustumEXT (glad_gl_context.MatrixFrustumEXT)
#define glMatrixLoadIdentityEXT (glad_gl_context.MatrixLoadIdentityEXT)
#define glMatrixLoadTransposedEXT (glad_gl_context.MatrixLoadTransposedEXT)
#define glMatrixLoadTransposefEXT (glad_gl_context.MatrixLoadTransposefEXT)
#define glMatrixLoaddEXT (glad_gl_context.MatrixLoaddEXT)
#define glMatrixLoadfEXT (glad_gl_context.MatrixLoadfEXT)
#define glMatrixMode (glad_gl_context.MatrixMode)
#define glMatrixMultTransposedEXT (glad_gl_context.MatrixMultTransposedEXT)
#define glMatrixMultTransposefEXT (glad_gl_context.MatrixMultTransposefEXT)
#define glMatrixMultdEXT (glad_gl_context.MatrixMultdEXT)
#define glMatrixMultfEXT (glad_gl_context.MatrixMultfEXT)
#define glMatrixOrthoEXT (glad_gl_context.MatrixOrthoEXT)
#define glMatrixPopEXT (glad_gl_context.MatrixPopEXT)
#define glMatrixPushEXT (glad_gl_context.MatrixPushEXT)
#define glMatrixRotatedEXT (glad_gl_context.MatrixRotatedEXT)
#define glMatrixRotatefEXT (glad_gl_context.MatrixRotatefEXT)
#define glMatrixScaledEXT (glad_gl_context.MatrixScaledEXT)
#define glMatrixScalefEXT (glad_gl_context.MatrixScalefEXT)
#define glMatrixTranslatedEXT (glad_gl_context.MatrixTranslatedEXT)
#define glMatrixTranslatefEXT (glad_gl_context.MatrixTranslatefEXT)
#define glMultMatrixd (glad_gl_context.MultMatrixd)
#define glMultMatrixf (glad_gl_context.MultMatrixf)
#define glMultiTexBufferEXT (glad_gl_context.MultiTexBufferEXT)
#define glMultiTexCoordPointerEXT (glad_gl_context.MultiTexCoordPointerEXT)
#define glMultiTexEnvfEXT (glad_gl_context.MultiTexEnvfEXT)
#define glMultiTexEnvfvEXT (glad_gl_context.MultiTexEnvfvEXT)
#define glMultiTexEnviEXT (glad_gl_context.MultiTexEnviEXT)
#define glMultiTexEnvivEXT (glad_gl_context.MultiTexEnvivEXT)
#define glMultiTexGendEXT (glad_gl_context.MultiTexGendEXT)
#define glMultiTexGendvEXT (glad_gl_context.MultiTexGendvEXT)
#define glMultiTexGenfEXT (glad_gl_context.MultiTexGenfEXT)
#define glMultiTexGenfvEXT (glad_gl_context.MultiTexGenfvEXT)
#define glMultiTexGeniEXT (glad_gl_context.MultiTexGeniEXT)
#define glMultiTexGenivEXT (glad_gl_context.MultiTexGenivEXT)
#define glMultiTexImage1DEXT (glad_gl_context.MultiTexImage1DEXT)
#define glMultiTexImage2DEXT (glad_gl_context.MultiTexImage2DEXT)
#define glMultiTexImage3DEXT (glad_gl_context.MultiTexImage3DEXT)
#define glMultiTexParameterIivEXT (glad_gl_context.MultiTexParameterIivEXT)
#define glMultiTexParameterIuivEXT (glad_gl_context.MultiTexParameterIuivEXT)
#define glMultiTexParameterfEXT (glad_gl_context.MultiTexParameterfEXT)
#define glMultiTexParameterfvEXT (glad_gl_context.MultiTexParameterfvEXT)
#define glMultiTexParameteriEXT (glad_gl_context.MultiTexParameteriEXT)
#define glMultiTexParameterivEXT (glad_gl_context.MultiTexParameterivEXT)
#define glMultiTexRenderbufferEXT (glad_gl_context.MultiTexRenderbufferEXT)
#define glMultiTexSubImage1DEXT (glad_gl_context.MultiTexSubImage1DEXT)
#define glMultiTexSubImage2DEXT (glad_gl_context.MultiTexSubImage2DEXT)
#define glMultiTexSubImage3DEXT (glad_gl_context.MultiTexSubImage3DEXT)
#define glNamedBufferDataEXT (glad_gl_context.NamedBufferDataEXT)
#define glNamedBufferStorageEXT (glad_gl_context.NamedBufferStorageEXT)
#define glNamedBufferSubDataEXT (glad_gl_context.NamedBufferSubDataEXT)
#define glNamedCopyBufferSubDataEXT (glad_gl_context.NamedCopyBufferSubDataEXT)
#define glNamedFramebufferParameteriEXT (glad_gl_context.NamedFramebufferParameteriEXT)
#define glNamedFramebufferRenderbufferEXT (glad_gl_context.NamedFramebufferRenderbufferEXT)
#define glNamedFramebufferTexture1DEXT (glad_gl_context.NamedFramebufferTexture1DEXT)
#define glNamedFramebufferTexture2DEXT (glad_gl_context.NamedFramebufferTexture2DEXT)
#define glNamedFramebufferTexture3DEXT (glad_gl_context.NamedFramebufferTexture3DEXT)
#define glNamedFramebufferTextureEXT (glad_gl_context.NamedFramebufferTextureEXT)
#define glNamedFramebufferTextureFaceEXT (glad_gl_context.NamedFramebufferTextureFaceEXT)
#define glNamedFramebufferTextureLayerEXT (glad_gl_context.NamedFramebufferTextureLayerEXT)
#define glNamedProgramLocalParameter4dEXT (glad_gl_context.NamedProgramLocalParameter4dEXT)
#define glNamedProgramLocalParameter4dvEXT (glad_gl_context.NamedProgramLocalParameter4dvEXT)
#define glNamedProgramLocalParameter4fEXT (glad_gl_context.NamedProgramLocalParameter4fEXT)
#define glNamedProgramLocalParameter4fvEXT (glad_gl_context.NamedProgramLocalParameter4fvEXT)
#define glNamedProgramLocalParameterI4iEXT (glad_gl_context.NamedProgramLocalParameterI4iEXT)
#define glNamedProgramLocalParameterI4ivEXT (glad_gl_context.NamedProgramLocalParameterI4ivEXT)
#define glNamedProgramLocalParameterI4uiEXT (glad_gl_context.NamedProgramLocalParameterI4uiEXT)
#define glNamedProgramLocalParameterI4uivEXT (glad_gl_context.NamedProgramLocalParameterI4uivEXT)
#define glNamedProgramLocalParameters4fvEXT (glad_gl_context.NamedProgramLocalParameters4fvEXT)
#define glNamedProgramLocalParametersI4ivEXT (glad_gl_context.NamedProgramLocalParametersI4ivEXT)
#define glNamedProgramLocalParametersI4uivEXT (glad_gl_context.NamedProgramLocalParametersI4uivEXT)
#define glNamedProgramStringEXT (glad_gl_context.NamedProgramStringEXT)
#define glNamedRenderbufferStorageEXT (glad_gl_context.NamedRenderbufferStorageEXT)
#define glNamedRenderbufferStorageMultisampleCoverageEXT (glad_gl_context.NamedRenderbufferStorageMultisampleCoverageEXT)
#define glNamedRenderbufferStorageMultisampleEXT (glad_gl_context.NamedRenderbufferStorageMultisampleEXT)
#define glNewList (glad_gl_context.NewList)
#define glNormal3b (glad_gl_context.Normal3b)
#define glNormal3bv (glad_gl_context.Normal3bv)
#define glNormal3d (glad_gl_context.Normal3d)
#define glNormal3dv (glad_gl_context.Normal3dv)
#define glNormal3f (glad_gl_context.Normal3f)
#define glNormal3fv (glad_gl_context.Normal3fv)
#define glNormal3i (glad_gl_context.Normal3i)
#define glNormal3iv (glad_gl_context.Normal3iv)
#define glNormal3s (glad_gl_context.Normal3s)
#define glNormal3sv (glad_gl_context.Normal3sv)
#define glNormalPointer (glad_gl_context.NormalPointer)
#define glNormalPointerEXT (glad_gl_context.NormalPointerEXT)
#define glObjectLabel (glad_gl_context.ObjectLabel)
#define glObjectPtrLabel (glad_gl_context.ObjectPtrLabel)
#define glOrtho (glad_gl_context.Ortho)
#define glPassThrough (glad_gl_context.PassThrough)
#define glPixelMapfv (glad_gl_context.PixelMapfv)
#define glPixelMapuiv (glad_gl_context.PixelMapuiv)
#define glPixelMapusv (glad_gl_context.PixelMapusv)
#define glPixelStoref (glad_gl_context.PixelStoref)
#define glPixelStorei (glad_gl_context.PixelStorei)
#define glPixelTransferf (glad_gl_context.PixelTransferf)
#define glPixelTransferi (glad_gl_context.PixelTransferi)
#define glPixelZoom (glad_gl_context.PixelZoom)
#define glPointSize (glad_gl_context.PointSize)
#define glPolygonMode (glad_gl_context.PolygonMode)
#define glPolygonOffset (glad_gl_context.PolygonOffset)
#define glPolygonStipple (glad_gl_context.PolygonStipple)
#define glPopAttrib (glad_gl_context.PopAttrib)
#define glPopClientAttrib (glad_gl_context.PopClientAttrib)
#define glPopDebugGroup (glad_gl_context.PopDebugGroup)
#define glPopMatrix (glad_gl_context.PopMatrix)
#define glPopName (glad_gl_context.PopName)
#define glPrioritizeTextures (glad_gl_context.PrioritizeTextures)
#define glPrioritizeTexturesEXT (glad_gl_context.PrioritizeTexturesEXT)
#define glProgramUniform1dEXT (glad_gl_context.ProgramUniform1dEXT)
#define glProgramUniform1dvEXT (glad_gl_context.ProgramUniform1dvEXT)
#define glProgramUniform1fEXT (glad_gl_context.ProgramUniform1fEXT)
#define glProgramUniform1fvEXT (glad_gl_context.ProgramUniform1fvEXT)
#define glProgramUniform1iEXT (glad_gl_context.ProgramUniform1iEXT)
#define glProgramUniform1ivEXT (glad_gl_context.ProgramUniform1ivEXT)
#define glProgramUniform1uiEXT (glad_gl_context.ProgramUniform1uiEXT)
#define glProgramUniform1uivEXT (glad_gl_context.ProgramUniform1uivEXT)
#define glProgramUniform2dEXT (glad_gl_context.ProgramUniform2dEXT)
#define glProgramUniform2dvEXT (glad_gl_context.ProgramUniform2dvEXT)
#define glProgramUniform2fEXT (glad_gl_context.ProgramUniform2fEXT)
#define glProgramUniform2fvEXT (glad_gl_context.ProgramUniform2fvEXT)
#define glProgramUniform2iEXT (glad_gl_context.ProgramUniform2iEXT)
#define glProgramUniform2ivEXT (glad_gl_context.ProgramUniform2ivEXT)
#define glProgramUniform2uiEXT (glad_gl_context.ProgramUniform2uiEXT)
#define glProgramUniform2uivEXT (glad_gl_context.ProgramUniform2uivEXT)
#define glProgramUniform3dEXT (glad_gl_context.ProgramUniform3dEXT)
#define glProgramUniform3dvEXT (glad_gl_context.ProgramUniform3dvEXT)
#define glProgramUniform3fEXT (glad_gl_context.ProgramUniform3fEXT)
#define glProgramUniform3fvEXT (glad_gl_context.ProgramUniform3fvEXT)
#define glProgramUniform3iEXT (glad_gl_context.ProgramUniform3iEXT)
#define glProgramUniform3ivEXT (glad_gl_context.ProgramUniform3ivEXT)
#define glProgramUniform3uiEXT (glad_gl_context.ProgramUniform3uiEXT)
#define glProgramUniform3uivEXT (glad_gl_context.ProgramUniform3uivEXT)
#define glProgramUniform4dEXT (glad_gl_context.ProgramUniform4dEXT)
#define glProgramUniform4dvEXT (glad_gl_context.ProgramUniform4dvEXT)
#define glProgramUniform4fEXT (glad_gl_context.ProgramUniform4fEXT)
#define glProgramUniform4fvEXT (glad_gl_context.ProgramUniform4fvEXT)
#define glProgramUniform4iEXT (glad_gl_context.ProgramUniform4iEXT)
#define glProgramUniform4ivEXT (glad_gl_context.ProgramUniform4ivEXT)
#define glProgramUniform4uiEXT (glad_gl_context.ProgramUniform4uiEXT)
#define glProgramUniform4uivEXT (glad_gl_context.ProgramUniform4uivEXT)
#define glProgramUniformMatrix2dvEXT (glad_gl_context.ProgramUniformMatrix2dvEXT)
#define glProgramUniformMatrix2fvEXT (glad_gl_context.ProgramUniformMatrix2fvEXT)
#define glProgramUniformMatrix2x3dvEXT (glad_gl_context.ProgramUniformMatrix2x3dvEXT)
#define glProgramUniformMatrix2x3fvEXT (glad_gl_context.ProgramUniformMatrix2x3fvEXT)
#define glProgramUniformMatrix2x4dvEXT (glad_gl_context.ProgramUniformMatrix2x4dvEXT)
#define glProgramUniformMatrix2x4fvEXT (glad_gl_context.ProgramUniformMatrix2x4fvEXT)
#define glProgramUniformMatrix3dvEXT (glad_gl_context.ProgramUniformMatrix3dvEXT)
#define glProgramUniformMatrix3fvEXT (glad_gl_context.ProgramUniformMatrix3fvEXT)
#define glProgramUniformMatrix3x2dvEXT (glad_gl_context.ProgramUniformMatrix3x2dvEXT)
#define glProgramUniformMatrix3x2fvEXT (glad_gl_context.ProgramUniformMatrix3x2fvEXT)
#define glProgramUniformMatrix3x4dvEXT (glad_gl_context.ProgramUniformMatrix3x4dvEXT)
#define glProgramUniformMatrix3x4fvEXT (glad_gl_context.ProgramUniformMatrix3x4fvEXT)
#define glProgramUniformMatrix4dvEXT (glad_gl_context.ProgramUniformMatrix4dvEXT)
#define glProgramUniformMatrix4fvEXT (glad_gl_context.ProgramUniformMatrix4fvEXT)
#define glProgramUniformMatrix4x2dvEXT (glad_gl_context.ProgramUniformMatrix4x2dvEXT)
#define glProgramUniformMatrix4x2fvEXT (glad_gl_context.ProgramUniformMatrix4x2fvEXT)
#define glProgramUniformMatrix4x3dvEXT (glad_gl_context.ProgramUniformMatrix4x3dvEXT)
#define glProgramUniformMatrix4x3fvEXT (glad_gl_context.ProgramUniformMatrix4x3fvEXT)
#define glPushAttrib (glad_gl_context.PushAttrib)
#define glPushClientAttrib (glad_gl_context.PushClientAttrib)
#define glPushClientAttribDefaultEXT (glad_gl_context.PushClientAttribDefaultEXT)
#define glPushDebugGroup (glad_gl_context.PushDebugGroup)
#define glPushMatrix (glad_gl_context.PushMatrix)
#define glPushName (glad_gl_context.PushName)
#define glRasterPos2d (glad_gl_context.RasterPos2d)
#define glRasterPos2dv (glad_gl_context.RasterPos2dv)
#define glRasterPos2f (glad_gl_context.RasterPos2f)
#define glRasterPos2fv (glad_gl_context.RasterPos2fv)
#define glRasterPos2i (glad_gl_context.RasterPos2i)
#define glRasterPos2iv (glad_gl_context.RasterPos2iv)
#define glRasterPos2s (glad_gl_context.RasterPos2s)
#define glRasterPos2sv (glad_gl_context.RasterPos2sv)
#define glRasterPos3d (glad_gl_context.RasterPos3d)
#define glRasterPos3dv (glad_gl_context.RasterPos3dv)
#define glRasterPos3f (glad_gl_context.RasterPos3f)
#define glRasterPos3fv (glad_gl_context.RasterPos3fv)
#define glRasterPos3i (glad_gl_context.RasterPos3i)
#define glRasterPos3iv (glad_gl_context.RasterPos3iv)
#define glRasterPos3s (glad_gl_context.RasterPos3s)
#define glRasterPos3sv (glad_gl_context.RasterPos3sv)
#define glRasterPos4d (glad_gl_context.RasterPos4d)
#define glRasterPos4dv (glad_gl_context.RasterPos4dv)
#define glRasterPos4f (glad_gl_context.RasterPos4f)
#define glRasterPos4fv (glad_gl_context.RasterPos4fv)
#define glRasterPos4i (glad_gl_context.RasterPos4i)
#define glRasterPos4iv (glad_gl_context.RasterPos4iv)
#define glRasterPos4s (glad_gl_context.RasterPos4s)
#define glRasterPos4sv (glad_gl_context.RasterPos4sv)
#define glReadBuffer (glad_gl_context.ReadBuffer)
#define glReadPixels (glad_gl_context.ReadPixels)
#define glRectd (glad_gl_context.Rectd)
#define glRectdv (glad_gl_context.Rectdv)
#define glRectf (glad_gl_context.Rectf)
#define glRectfv (glad_gl_context.Rectfv)
#define glRecti (glad_gl_context.Recti)
#define glRectiv (glad_gl_context.Rectiv)
#define glRects (glad_gl_context.Rects)
#define glRectsv (glad_gl_context.Rectsv)
#define glRenderMode (glad_gl_context.RenderMode)
#define glRotated (glad_gl_context.Rotated)
#define glRotatef (glad_gl_context.Rotatef)
#define glScaled (glad_gl_context.Scaled)
#define glScalef (glad_gl_context.Scalef)
#define glScissor (glad_gl_context.Scissor)
#define glSelectBuffer (glad_gl_context.SelectBuffer)
#define glShadeModel (glad_gl_context.ShadeModel)
#define glStencilFunc (glad_gl_context.StencilFunc)
#define glStencilMask (glad_gl_context.StencilMask)
#define glStencilOp (glad_gl_context.StencilOp)
#define glTexCoord1d (glad_gl_context.TexCoord1d)
#define glTexCoord1dv (glad_gl_context.TexCoord1dv)
#define glTexCoord1f (glad_gl_context.TexCoord1f)
#define glTexCoord1fv (glad_gl_context.TexCoord1fv)
#define glTexCoord1i (glad_gl_context.TexCoord1i)
#define glTexCoord1iv (glad_gl_context.TexCoord1iv)
#define glTexCoord1s (glad_gl_context.TexCoord1s)
#define glTexCoord1sv (glad_gl_context.TexCoord1sv)
#define glTexCoord2d (glad_gl_context.TexCoord2d)
#define glTexCoord2dv (glad_gl_context.TexCoord2dv)
#define glTexCoord2f (glad_gl_context.TexCoord2f)
#define glTexCoord2fv (glad_gl_context.TexCoord2fv)
#define glTexCoord2i (glad_gl_context.TexCoord2i)
#define glTexCoord2iv (glad_gl_context.TexCoord2iv)
#define glTexCoord2s (glad_gl_context.TexCoord2s)
#define glTexCoord2sv (glad_gl_context.TexCoord2sv)
#define glTexCoord3d (glad_gl_context.TexCoord3d)
#define glTexCoord3dv (glad_gl_context.TexCoord3dv)
#define glTexCoord3f (glad_gl_context.TexCoord3f)
#define glTexCoord3fv (glad_gl_context.TexCoord3fv)
#define glTexCoord3i (glad_gl_context.TexCoord3i)
#define glTexCoord3iv (glad_gl_context.TexCoord3iv)
#define glTexCoord3s (glad_gl_context.TexCoord3s)
#define glTexCoord3sv (glad_gl_context.TexCoord3sv)
#define glTexCoord4d (glad_gl_context.TexCoord4d)
#define glTexCoord4dv (glad_gl_context.TexCoord4dv)
#define glTexCoord4f (glad_gl_context.TexCoord4f)
#define glTexCoord4fv (glad_gl_context.TexCoord4fv)
#define glTexCoord4i (glad_gl_context.TexCoord4i)
#define glTexCoord4iv (glad_gl_context.TexCoord4iv)
#define glTexCoord4s (glad_gl_context.TexCoord4s)
#define glTexCoord4sv (glad_gl_context.TexCoord4sv)
#define glTexCoordPointer (glad_gl_context.TexCoordPointer)
#define glTexCoordPointerEXT (glad_gl_context.TexCoordPointerEXT)
#define glTexEnvf (glad_gl_context.TexEnvf)
#define glTexEnvfv (glad_gl_context.TexEnvfv)
#define glTexEnvi (glad_gl_context.TexEnvi)
#define glTexEnviv (glad_gl_context.TexEnviv)
#define glTexGend (glad_gl_context.TexGend)
#define glTexGendv (glad_gl_context.TexGendv)
#define glTexGenf (glad_gl_context.TexGenf)
#define glTexGenfv (glad_gl_context.TexGenfv)
#define glTexGeni (glad_gl_context.TexGeni)
#define glTexGeniv (glad_gl_context.TexGeniv)
#define glTexImage1D (glad_gl_context.TexImage1D)
#define glTexImage2D (glad_gl_context.TexImage2D)
#define glTexImage3D (glad_gl_context.TexImage3D)
#define glTexImage3DEXT (glad_gl_context.TexImage3DEXT)
#define glTexParameterf (glad_gl_context.TexParameterf)
#define glTexParameterfv (glad_gl_context.TexParameterfv)
#define glTexParameteri (glad_gl_context.TexParameteri)
#define glTexParameteriv (glad_gl_context.TexParameteriv)
#define glTexStorage1DEXT (glad_gl_context.TexStorage1DEXT)
#define glTexStorage2DEXT (glad_gl_context.TexStorage2DEXT)
#define glTexStorage3DEXT (glad_gl_context.TexStorage3DEXT)
#define glTexSubImage1D (glad_gl_context.TexSubImage1D)
#define glTexSubImage1DEXT (glad_gl_context.TexSubImage1DEXT)
#define glTexSubImage2D (glad_gl_context.TexSubImage2D)
#define glTexSubImage2DEXT (glad_gl_context.TexSubImage2DEXT)
#define glTexSubImage3D (glad_gl_context.TexSubImage3D)
#define glTexSubImage3DEXT (glad_gl_context.TexSubImage3DEXT)
#define glTextureBufferEXT (glad_gl_context.TextureBufferEXT)
#define glTextureBufferRangeEXT (glad_gl_context.TextureBufferRangeEXT)
#define glTextureImage1DEXT (glad_gl_context.TextureImage1DEXT)
#define glTextureImage2DEXT (glad_gl_context.TextureImage2DEXT)
#define glTextureImage3DEXT (glad_gl_context.TextureImage3DEXT)
#define glTexturePageCommitmentEXT (glad_gl_context.TexturePageCommitmentEXT)
#define glTextureParameterIivEXT (glad_gl_context.TextureParameterIivEXT)
#define glTextureParameterIuivEXT (glad_gl_context.TextureParameterIuivEXT)
#define glTextureParameterfEXT (glad_gl_context.TextureParameterfEXT)
#define glTextureParameterfvEXT (glad_gl_context.TextureParameterfvEXT)
#define glTextureParameteriEXT (glad_gl_context.TextureParameteriEXT)
#define glTextureParameterivEXT (glad_gl_context.TextureParameterivEXT)
#define glTextureRenderbufferEXT (glad_gl_context.TextureRenderbufferEXT)
#define glTextureStorage1DEXT (glad_gl_context.TextureStorage1DEXT)
#define glTextureStorage2DEXT (glad_gl_context.TextureStorage2DEXT)
#define glTextureStorage2DMultisampleEXT (glad_gl_context.TextureStorage2DMultisampleEXT)
#define glTextureStorage3DEXT (glad_gl_context.TextureStorage3DEXT)
#define glTextureStorage3DMultisampleEXT (glad_gl_context.TextureStorage3DMultisampleEXT)
#define glTextureSubImage1DEXT (glad_gl_context.TextureSubImage1DEXT)
#define glTextureSubImage2DEXT (glad_gl_context.TextureSubImage2DEXT)
#define glTextureSubImage3DEXT (glad_gl_context.TextureSubImage3DEXT)
#define glTranslated (glad_gl_context.Translated)
#define glTranslatef (glad_gl_context.Translatef)
#define glUnmapBufferARB (glad_gl_context.UnmapBufferARB)
#define glUnmapNamedBufferEXT (glad_gl_context.UnmapNamedBufferEXT)
#define glVertex2d (glad_gl_context.Vertex2d)
#define glVertex2dv (glad_gl_context.Vertex2dv)
#define glVertex2f (glad_gl_context.Vertex2f)
#define glVertex2fv (glad_gl_context.Vertex2fv)
#define glVertex2i (glad_gl_context.Vertex2i)
#define glVertex2iv (glad_gl_context.Vertex2iv)
#define glVertex2s (glad_gl_context.Vertex2s)
#define glVertex2sv (glad_gl_context.Vertex2sv)
#define glVertex3d (glad_gl_context.Vertex3d)
#define glVertex3dv (glad_gl_context.Vertex3dv)
#define glVertex3f (glad_gl_context.Vertex3f)
#define glVertex3fv (glad_gl_context.Vertex3fv)
#define glVertex3i (glad_gl_context.Vertex3i)
#define glVertex3iv (glad_gl_context.Vertex3iv)
#define glVertex3s (glad_gl_context.Vertex3s)
#define glVertex3sv (glad_gl_context.Vertex3sv)
#define glVertex4d (glad_gl_context.Vertex4d)
#define glVertex4dv (glad_gl_context.Vertex4dv)
#define glVertex4f (glad_gl_context.Vertex4f)
#define glVertex4fv (glad_gl_context.Vertex4fv)
#define glVertex4i (glad_gl_context.Vertex4i)
#define glVertex4iv (glad_gl_context.Vertex4iv)
#define glVertex4s (glad_gl_context.Vertex4s)
#define glVertex4sv (glad_gl_context.Vertex4sv)
#define glVertexArrayBindVertexBufferEXT (glad_gl_context.VertexArrayBindVertexBufferEXT)
#define glVertexArrayColorOffsetEXT (glad_gl_context.VertexArrayColorOffsetEXT)
#define glVertexArrayEdgeFlagOffsetEXT (glad_gl_context.VertexArrayEdgeFlagOffsetEXT)
#define glVertexArrayFogCoordOffsetEXT (glad_gl_context.VertexArrayFogCoordOffsetEXT)
#define glVertexArrayIndexOffsetEXT (glad_gl_context.VertexArrayIndexOffsetEXT)
#define glVertexArrayMultiTexCoordOffsetEXT (glad_gl_context.VertexArrayMultiTexCoordOffsetEXT)
#define glVertexArrayNormalOffsetEXT (glad_gl_context.VertexArrayNormalOffsetEXT)
#define glVertexArraySecondaryColorOffsetEXT (glad_gl_context.VertexArraySecondaryColorOffsetEXT)
#define glVertexArrayTexCoordOffsetEXT (glad_gl_context.VertexArrayTexCoordOffsetEXT)
#define glVertexArrayVertexAttribBindingEXT (glad_gl_context.VertexArrayVertexAttribBindingEXT)
#define glVertexArrayVertexAttribDivisorEXT (glad_gl_context.VertexArrayVertexAttribDivisorEXT)
#define glVertexArrayVertexAttribFormatEXT (glad_gl_context.VertexArrayVertexAttribFormatEXT)
#define glVertexArrayVertexAttribIFormatEXT (glad_gl_context.VertexArrayVertexAttribIFormatEXT)
#define glVertexArrayVertexAttribIOffsetEXT (glad_gl_context.VertexArrayVertexAttribIOffsetEXT)
#define glVertexArrayVertexAttribLFormatEXT (glad_gl_context.VertexArrayVertexAttribLFormatEXT)
#define glVertexArrayVertexAttribLOffsetEXT (glad_gl_context.VertexArrayVertexAttribLOffsetEXT)
#define glVertexArrayVertexAttribOffsetEXT (glad_gl_context.VertexArrayVertexAttribOffsetEXT)
#define glVertexArrayVertexBindingDivisorEXT (glad_gl_context.VertexArrayVertexBindingDivisorEXT)
#define glVertexArrayVertexOffsetEXT (glad_gl_context.VertexArrayVertexOffsetEXT)
#define glVertexPointer (glad_gl_context.VertexPointer)
#define glVertexPointerEXT (glad_gl_context.VertexPointerEXT)
#define glViewport (glad_gl_context.Viewport)
#define glActiveShaderProgram (glad_gl_context.ActiveShaderProgram)
#define glActiveShaderProgramEXT (glad_gl_context.ActiveShaderProgramEXT)
#define glActiveTexture (glad_gl_context.ActiveTexture)
#define glAttachShader (glad_gl_context.AttachShader)
#define glBeginQuery (glad_gl_context.BeginQuery)
#define glBeginQueryEXT (glad_gl_context.BeginQueryEXT)
#define glBeginTransformFeedback (glad_gl_context.BeginTransformFeedback)
#define glBindAttribLocation (glad_gl_context.BindAttribLocation)
#define glBindBuffer (glad_gl_context.BindBuffer)
#define glBindBufferBase (glad_gl_context.BindBufferBase)
#define glBindBufferRange (glad_gl_context.BindBufferRange)
#define glBindFramebuffer (glad_gl_context.BindFramebuffer)
#define glBindImageTexture (glad_gl_context.BindImageTexture)
#define glBindProgramPipeline (glad_gl_context.BindProgramPipeline)
#define glBindProgramPipelineEXT (glad_gl_context.BindProgramPipelineEXT)
#define glBindRenderbuffer (glad_gl_context.BindRenderbuffer)
#define glBindSampler (glad_gl_context.BindSampler)
#define glBindTransformFeedback (glad_gl_context.BindTransformFeedback)
#define glBindVertexArray (glad_gl_context.BindVertexArray)
#define glBindVertexArrayOES (glad_gl_context.BindVertexArrayOES)
#define glBindVertexBuffer (glad_gl_context.BindVertexBuffer)
#define glBlendBarrier (glad_gl_context.BlendBarrier)
#define glBlendBarrierKHR (glad_gl_context.BlendBarrierKHR)
#define glBlendBarrierNV (glad_gl_context.BlendBarrierNV)
#define glBlendColor (glad_gl_context.BlendColor)
#define glBlendEquation (glad_gl_context.BlendEquation)
#define glBlendEquationSeparate (glad_gl_context.BlendEquationSeparate)
#define glBlendEquationSeparatei (glad_gl_context.BlendEquationSeparatei)
#define glBlendEquationSeparateiEXT (glad_gl_context.BlendEquationSeparateiEXT)
#define glBlendEquationSeparateiOES (glad_gl_context.BlendEquationSeparateiOES)
#define glBlendEquationi (glad_gl_context.BlendEquationi)
#define glBlendEquationiEXT (glad_gl_context.BlendEquationiEXT)
#define glBlendEquationiOES (glad_gl_context.BlendEquationiOES)
#define glBlendFuncSeparate (glad_gl_context.BlendFuncSeparate)
#define glBlendFuncSeparatei (glad_gl_context.BlendFuncSeparatei)
#define glBlendFuncSeparateiEXT (glad_gl_context.BlendFuncSeparateiEXT)
#define glBlendFuncSeparateiOES (glad_gl_context.BlendFuncSeparateiOES)
#define glBlendFunci (glad_gl_context.BlendFunci)
#define glBlendFunciEXT (glad_gl_context.BlendFunciEXT)
#define glBlendFunciOES (glad_gl_context.BlendFunciOES)
#define glBlendParameteriNV (glad_gl_context.BlendParameteriNV)
#define glBlitFramebuffer (glad_gl_context.BlitFramebuffer)
#define glBlitFramebufferNV (glad_gl_context.BlitFramebufferNV)
#define glBufferData (glad_gl_context.BufferData)
#define glBufferSubData (glad_gl_context.BufferSubData)
#define glCheckFramebufferStatus (glad_gl_context.CheckFramebufferStatus)
#define glClearBufferfi (glad_gl_context.ClearBufferfi)
#define glClearBufferfv (glad_gl_context.ClearBufferfv)
#define glClearBufferiv (glad_gl_context.ClearBufferiv)
#define glClearBufferuiv (glad_gl_context.ClearBufferuiv)
#define glClearDepthf (glad_gl_context.ClearDepthf)
#define glClientWaitSync (glad_gl_context.ClientWaitSync)
#define glClientWaitSyncAPPLE (glad_gl_context.ClientWaitSyncAPPLE)
#define glColorMaski (glad_gl_context.ColorMaski)
#define glColorMaskiEXT (glad_gl_context.ColorMaskiEXT)
#define glColorMaskiOES (glad_gl_context.ColorMaskiOES)
#define glCompileShader (glad_gl_context.CompileShader)
#define glCompressedTexImage2D (glad_gl_context.CompressedTexImage2D)
#define glCompressedTexImage3D (glad_gl_context.CompressedTexImage3D)
#define glCompressedTexSubImage2D (glad_gl_context.CompressedTexSubImage2D)
#define glCompressedTexSubImage3D (glad_gl_context.CompressedTexSubImage3D)
#define glCopyBufferSubData (glad_gl_context.CopyBufferSubData)
#define glCopyBufferSubDataNV (glad_gl_context.CopyBufferSubDataNV)
#define glCopyImageSubData (glad_gl_context.CopyImageSubData)
#define glCopyImageSubDataEXT (glad_gl_context.CopyImageSubDataEXT)
#define glCopyImageSubDataOES (glad_gl_context.CopyImageSubDataOES)
#define glCreateProgram (glad_gl_context.CreateProgram)
#define glCreateShader (glad_gl_context.CreateShader)
#define glCreateShaderProgramv (glad_gl_context.CreateShaderProgramv)
#define glCreateShaderProgramvEXT (glad_gl_context.CreateShaderProgramvEXT)
#define glDebugMessageCallbackKHR (glad_gl_context.DebugMessageCallbackKHR)
#define glDebugMessageControlKHR (glad_gl_context.DebugMessageControlKHR)
#define glDebugMessageInsertKHR (glad_gl_context.DebugMessageInsertKHR)
#define glDeleteBuffers (glad_gl_context.DeleteBuffers)
#define glDeleteFramebuffers (glad_gl_context.DeleteFramebuffers)
#define glDeleteProgram (glad_gl_context.DeleteProgram)
#define glDeleteProgramPipelines (glad_gl_context.DeleteProgramPipelines)
#define glDeleteProgramPipelinesEXT (glad_gl_context.DeleteProgramPipelinesEXT)
#define glDeleteQueries (glad_gl_context.DeleteQueries)
#define glDeleteQueriesEXT (glad_gl_context.DeleteQueriesEXT)
#define glDeleteRenderbuffers (glad_gl_context.DeleteRenderbuffers)
#define glDeleteSamplers (glad_gl_context.DeleteSamplers)
#define glDeleteShader (glad_gl_context.DeleteShader)
#define glDeleteSync (glad_gl_context.DeleteSync)
#define glDeleteSyncAPPLE (glad_gl_context.DeleteSyncAPPLE)
#define glDeleteTransformFeedbacks (glad_gl_context.DeleteTransformFeedbacks)
#define glDeleteVertexArrays (glad_gl_context.DeleteVertexArrays)
#define glDeleteVertexArraysOES (glad_gl_context.DeleteVertexArraysOES)
#define glDepthRangeArrayfvNV (glad_gl_context.DepthRangeArrayfvNV)
#define glDepthRangeArrayfvOES (glad_gl_context.DepthRangeArrayfvOES)
#define glDepthRangeIndexedfNV (glad_gl_context.DepthRangeIndexedfNV)
#define glDepthRangeIndexedfOES (glad_gl_context.DepthRangeIndexedfOES)
#define glDepthRangef (glad_gl_context.DepthRangef)
#define glDetachShader (glad_gl_context.DetachShader)
#define glDisableVertexAttribArray (glad_gl_context.DisableVertexAttribArray)
#define glDisablei (glad_gl_context.Disablei)
#define glDisableiEXT (glad_gl_context.DisableiEXT)
#define glDisableiNV (glad_gl_context.DisableiNV)
#define glDisableiOES (glad_gl_context.DisableiOES)
#define glDispatchCompute (glad_gl_context.DispatchCompute)
#define glDispatchComputeIndirect (glad_gl_context.DispatchComputeIndirect)
#define glDrawArraysIndirect (glad_gl_context.DrawArraysIndirect)
#define glDrawArraysInstanced (glad_gl_context.DrawArraysInstanced)
#define glDrawArraysInstancedANGLE (glad_gl_context.DrawArraysInstancedANGLE)
#define glDrawArraysInstancedEXT (glad_gl_context.DrawArraysInstancedEXT)
#define glDrawArraysInstancedNV (glad_gl_context.DrawArraysInstancedNV)
#define glDrawBuffers (glad_gl_context.DrawBuffers)
#define glDrawBuffersEXT (glad_gl_context.DrawBuffersEXT)
#define glDrawElementsBaseVertex (glad_gl_context.DrawElementsBaseVertex)
#define glDrawElementsBaseVertexEXT (glad_gl_context.DrawElementsBaseVertexEXT)
#define glDrawElementsBaseVertexOES (glad_gl_context.DrawElementsBaseVertexOES)
#define glDrawElementsIndirect (glad_gl_context.DrawElementsIndirect)
#define glDrawElementsInstanced (glad_gl_context.DrawElementsInstanced)
#define glDrawElementsInstancedANGLE (glad_gl_context.DrawElementsInstancedANGLE)
#define glDrawElementsInstancedBaseVertex (glad_gl_context.DrawElementsInstancedBaseVertex)
#define glDrawElementsInstancedBaseVertexEXT (glad_gl_context.DrawElementsInstancedBaseVertexEXT)
#define glDrawElementsInstancedBaseVertexOES (glad_gl_context.DrawElementsInstancedBaseVertexOES)
#define glDrawElementsInstancedEXT (glad_gl_context.DrawElementsInstancedEXT)
#define glDrawElementsInstancedNV (glad_gl_context.DrawElementsInstancedNV)
#define glDrawRangeElementsBaseVertex (glad_gl_context.DrawRangeElementsBaseVertex)
#define glDrawRangeElementsBaseVertexEXT (glad_gl_context.DrawRangeElementsBaseVertexEXT)
#define glDrawRangeElementsBaseVertexOES (glad_gl_context.DrawRangeElementsBaseVertexOES)
#define glEnableVertexAttribArray (glad_gl_context.EnableVertexAttribArray)
#define glEnablei (glad_gl_context.Enablei)
#define glEnableiEXT (glad_gl_context.EnableiEXT)
#define glEnableiNV (glad_gl_context.EnableiNV)
#define glEnableiOES (glad_gl_context.EnableiOES)
#define glEndQuery (glad_gl_context.EndQuery)
#define glEndQueryEXT (glad_gl_context.EndQueryEXT)
#define glEndTransformFeedback (glad_gl_context.EndTransformFeedback)
#define glFenceSync (glad_gl_context.FenceSync)
#define glFenceSyncAPPLE (glad_gl_context.FenceSyncAPPLE)
#define glFlushMappedBufferRange (glad_gl_context.FlushMappedBufferRange)
#define glFlushMappedBufferRangeEXT (glad_gl_context.FlushMappedBufferRangeEXT)
#define glFramebufferParameteri (glad_gl_context.FramebufferParameteri)
#define glFramebufferRenderbuffer (glad_gl_context.FramebufferRenderbuffer)
#define glFramebufferTexture (glad_gl_context.FramebufferTexture)
#define glFramebufferTexture2D (glad_gl_context.FramebufferTexture2D)
#define glFramebufferTexture2DMultisampleEXT (glad_gl_context.FramebufferTexture2DMultisampleEXT)
#define glFramebufferTextureEXT (glad_gl_context.FramebufferTextureEXT)
#define glFramebufferTextureLayer (glad_gl_context.FramebufferTextureLayer)
#define glFramebufferTextureOES (glad_gl_context.FramebufferTextureOES)
#define glGenBuffers (glad_gl_context.GenBuffers)
#define glGenFramebuffers (glad_gl_context.GenFramebuffers)
#define glGenProgramPipelines (glad_gl_context.GenProgramPipelines)
#define glGenProgramPipelinesEXT (glad_gl_context.GenProgramPipelinesEXT)
#define glGenQueries (glad_gl_context.GenQueries)
#define glGenQueriesEXT (glad_gl_context.GenQueriesEXT)
#define glGenRenderbuffers (glad_gl_context.GenRenderbuffers)
#define glGenSamplers (glad_gl_context.GenSamplers)
#define glGenTransformFeedbacks (glad_gl_context.GenTransformFeedbacks)
#define glGenVertexArrays (glad_gl_context.GenVertexArrays)
#define glGenVertexArraysOES (glad_gl_context.GenVertexArraysOES)
#define glGenerateMipmap (glad_gl_context.GenerateMipmap)
#define glGetActiveAttrib (glad_gl_context.GetActiveAttrib)
#define glGetActiveUniform (glad_gl_context.GetActiveUniform)
#define glGetActiveUniformBlockName (glad_gl_context.GetActiveUniformBlockName)
#define glGetActiveUniformBlockiv (glad_gl_context.GetActiveUniformBlockiv)
#define glGetActiveUniformsiv (glad_gl_context.GetActiveUniformsiv)
#define glGetAttachedShaders (glad_gl_context.GetAttachedShaders)
#define glGetAttribLocation (glad_gl_context.GetAttribLocation)
#define glGetBooleani_v (glad_gl_context.GetBooleani_v)
#define glGetBufferParameteri64v (glad_gl_context.GetBufferParameteri64v)
#define glGetBufferParameteriv (glad_gl_context.GetBufferParameteriv)
#define glGetBufferPointerv (glad_gl_context.GetBufferPointerv)
#define glGetBufferPointervOES (glad_gl_context.GetBufferPointervOES)
#define glGetDebugMessageLogKHR (glad_gl_context.GetDebugMessageLogKHR)
#define glGetFloati_vNV (glad_gl_context.GetFloati_vNV)
#define glGetFloati_vOES (glad_gl_context.GetFloati_vOES)
#define glGetFragDataLocation (glad_gl_context.GetFragDataLocation)
#define glGetFramebufferAttachmentParameteriv (glad_gl_context.GetFramebufferAttachmentParameteriv)
#define glGetFramebufferParameteriv (glad_gl_context.GetFramebufferParameteriv)
#define glGetGraphicsResetStatus (glad_gl_context.GetGraphicsResetStatus)
#define glGetGraphicsResetStatusEXT (glad_gl_context.GetGraphicsResetStatusEXT)
#define glGetGraphicsResetStatusKHR (glad_gl_context.GetGraphicsResetStatusKHR)
#define glGetInteger64i_v (glad_gl_context.GetInteger64i_v)
#define glGetInteger64v (glad_gl_context.GetInteger64v)
#define glGetInteger64vAPPLE (glad_gl_context.GetInteger64vAPPLE)
#define glGetInteger64vEXT (glad_gl_context.GetInteger64vEXT)
#define glGetIntegeri_v (glad_gl_context.GetIntegeri_v)
#define glGetInternalformativ (glad_gl_context.GetInternalformativ)
#define glGetMultisamplefv (glad_gl_context.GetMultisamplefv)
#define glGetObjectLabelKHR (glad_gl_context.GetObjectLabelKHR)
#define glGetObjectPtrLabelKHR (glad_gl_context.GetObjectPtrLabelKHR)
#define glGetPointervKHR (glad_gl_context.GetPointervKHR)
#define glGetProgramBinary (glad_gl_context.GetProgramBinary)
#define glGetProgramBinaryOES (glad_gl_context.GetProgramBinaryOES)
#define glGetProgramInfoLog (glad_gl_context.GetProgramInfoLog)
#define glGetProgramInterfaceiv (glad_gl_context.GetProgramInterfaceiv)
#define glGetProgramPipelineInfoLog (glad_gl_context.GetProgramPipelineInfoLog)
#define glGetProgramPipelineInfoLogEXT (glad_gl_context.GetProgramPipelineInfoLogEXT)
#define glGetProgramPipelineiv (glad_gl_context.GetProgramPipelineiv)
#define glGetProgramPipelineivEXT (glad_gl_context.GetProgramPipelineivEXT)
#define glGetProgramResourceIndex (glad_gl_context.GetProgramResourceIndex)
#define glGetProgramResourceLocation (glad_gl_context.GetProgramResourceLocation)
#define glGetProgramResourceName (glad_gl_context.GetProgramResourceName)
#define glGetProgramResourceiv (glad_gl_context.GetProgramResourceiv)
#define glGetProgramiv (glad_gl_context.GetProgramiv)
#define glGetQueryObjecti64vEXT (glad_gl_context.GetQueryObjecti64vEXT)
#define glGetQueryObjectivEXT (glad_gl_context.GetQueryObjectivEXT)
#define glGetQueryObjectui64vEXT (glad_gl_context.GetQueryObjectui64vEXT)
#define glGetQueryObjectuiv (glad_gl_context.GetQueryObjectuiv)
#define glGetQueryObjectuivEXT (glad_gl_context.GetQueryObjectuivEXT)
#define glGetQueryiv (glad_gl_context.GetQueryiv)
#define glGetQueryivEXT (glad_gl_context.GetQueryivEXT)
#define glGetRenderbufferParameteriv (glad_gl_context.GetRenderbufferParameteriv)
#define glGetSamplerParameterIiv (glad_gl_context.GetSamplerParameterIiv)
#define glGetSamplerParameterIivEXT (glad_gl_context.GetSamplerParameterIivEXT)
#define glGetSamplerParameterIivOES (glad_gl_context.GetSamplerParameterIivOES)
#define glGetSamplerParameterIuiv (glad_gl_context.GetSamplerParameterIuiv)
#define glGetSamplerParameterIuivEXT (glad_gl_context.GetSamplerParameterIuivEXT)
#define glGetSamplerParameterIuivOES (glad_gl_context.GetSamplerParameterIuivOES)
#define glGetSamplerParameterfv (glad_gl_context.GetSamplerParameterfv)
#define glGetSamplerParameteriv (glad_gl_context.GetSamplerParameteriv)
#define glGetShaderInfoLog (glad_gl_context.GetShaderInfoLog)
#define glGetShaderPrecisionFormat (glad_gl_context.GetShaderPrecisionFormat)
#define glGetShaderSource (glad_gl_context.GetShaderSource)
#define glGetShaderiv (glad_gl_context.GetShaderiv)
#define glGetStringi (glad_gl_context.GetStringi)
#define glGetSynciv (glad_gl_context.GetSynciv)
#define glGetSyncivAPPLE (glad_gl_context.GetSyncivAPPLE)
#define glGetTexParameterIiv (glad_gl_context.GetTexParameterIiv)
#define glGetTexParameterIivEXT (glad_gl_context.GetTexParameterIivEXT)
#define glGetTexParameterIivOES (glad_gl_context.GetTexParameterIivOES)
#define glGetTexParameterIuiv (glad_gl_context.GetTexParameterIuiv)
#define glGetTexParameterIuivEXT (glad_gl_context.GetTexParameterIuivEXT)
#define glGetTexParameterIuivOES (glad_gl_context.GetTexParameterIuivOES)
#define glGetTransformFeedbackVarying (glad_gl_context.GetTransformFeedbackVarying)
#define glGetUniformBlockIndex (glad_gl_context.GetUniformBlockIndex)
#define glGetUniformIndices (glad_gl_context.GetUniformIndices)
#define glGetUniformLocation (glad_gl_context.GetUniformLocation)
#define glGetUniformfv (glad_gl_context.GetUniformfv)
#define glGetUniformiv (glad_gl_context.GetUniformiv)
#define glGetUniformuiv (glad_gl_context.GetUniformuiv)
#define glGetVertexAttribIiv (glad_gl_context.GetVertexAttribIiv)
#define glGetVertexAttribIuiv (glad_gl_context.GetVertexAttribIuiv)
#define glGetVertexAttribPointerv (glad_gl_context.GetVertexAttribPointerv)
#define glGetVertexAttribfv (glad_gl_context.GetVertexAttribfv)
#define glGetVertexAttribiv (glad_gl_context.GetVertexAttribiv)
#define glGetnUniformfv (glad_gl_context.GetnUniformfv)
#define glGetnUniformfvEXT (glad_gl_context.GetnUniformfvEXT)
#define glGetnUniformfvKHR (glad_gl_context.GetnUniformfvKHR)
#define glGetnUniformiv (glad_gl_context.GetnUniformiv)
#define glGetnUniformivEXT (glad_gl_context.GetnUniformivEXT)
#define glGetnUniformivKHR (glad_gl_context.GetnUniformivKHR)
#define glGetnUniformuiv (glad_gl_context.GetnUniformuiv)
#define glGetnUniformuivKHR (glad_gl_context.GetnUniformuivKHR)
#define glInvalidateFramebuffer (glad_gl_context.InvalidateFramebuffer)
#define glInvalidateSubFramebuffer (glad_gl_context.InvalidateSubFramebuffer)
#define glIsBuffer (glad_gl_context.IsBuffer)
#define glIsEnabledi (glad_gl_context.IsEnabledi)
#define glIsEnablediEXT (glad_gl_context.IsEnablediEXT)
#define glIsEnablediNV (glad_gl_context.IsEnablediNV)
#define glIsEnablediOES (glad_gl_context.IsEnablediOES)
#define glIsFramebuffer (glad_gl_context.IsFramebuffer)
#define glIsProgram (glad_gl_context.IsProgram)
#define glIsProgramPipeline (glad_gl_context.IsProgramPipeline)
#define glIsProgramPipelineEXT (glad_gl_context.IsProgramPipelineEXT)
#define glIsQuery (glad_gl_context.IsQuery)
#define glIsQueryEXT (glad_gl_context.IsQueryEXT)
#define glIsRenderbuffer (glad_gl_context.IsRenderbuffer)
#define glIsSampler (glad_gl_context.IsSampler)
#define glIsShader (glad_gl_context.IsShader)
#define glIsSync (glad_gl_context.IsSync)
#define glIsSyncAPPLE (glad_gl_context.IsSyncAPPLE)
#define glIsTransformFeedback (glad_gl_context.IsTransformFeedback)
#define glIsVertexArray (glad_gl_context.IsVertexArray)
#define glIsVertexArrayOES (glad_gl_context.IsVertexArrayOES)
#define glLinkProgram (glad_gl_context.LinkProgram)
#define glMapBufferOES (glad_gl_context.MapBufferOES)
#define glMapBufferRange (glad_gl_context.MapBufferRange)
#define glMapBufferRangeEXT (glad_gl_context.MapBufferRangeEXT)
#define glMemoryBarrier (glad_gl_context.MemoryBarrier)
#define glMemoryBarrierByRegion (glad_gl_context.MemoryBarrierByRegion)
#define glMinSampleShading (glad_gl_context.MinSampleShading)
#define glMinSampleShadingOES (glad_gl_context.MinSampleShadingOES)
#define glMultiDrawElementsBaseVertexEXT (glad_gl_context.MultiDrawElementsBaseVertexEXT)
#define glObjectLabelKHR (glad_gl_context.ObjectLabelKHR)
#define glObjectPtrLabelKHR (glad_gl_context.ObjectPtrLabelKHR)
#define glPatchParameteri (glad_gl_context.PatchParameteri)
#define glPatchParameteriEXT (glad_gl_context.PatchParameteriEXT)
#define glPatchParameteriOES (glad_gl_context.PatchParameteriOES)
#define glPauseTransformFeedback (glad_gl_context.PauseTransformFeedback)
#define glPopDebugGroupKHR (glad_gl_context.PopDebugGroupKHR)
#define glPrimitiveBoundingBox (glad_gl_context.PrimitiveBoundingBox)
#define glPrimitiveBoundingBoxEXT (glad_gl_context.PrimitiveBoundingBoxEXT)
#define glPrimitiveBoundingBoxOES (glad_gl_context.PrimitiveBoundingBoxOES)
#define glProgramBinary (glad_gl_context.ProgramBinary)
#define glProgramBinaryOES (glad_gl_context.ProgramBinaryOES)
#define glProgramParameteri (glad_gl_context.ProgramParameteri)
#define glProgramParameteriEXT (glad_gl_context.ProgramParameteriEXT)
#define glProgramUniform1f (glad_gl_context.ProgramUniform1f)
#define glProgramUniform1fv (glad_gl_context.ProgramUniform1fv)
#define glProgramUniform1i (glad_gl_context.ProgramUniform1i)
#define glProgramUniform1iv (glad_gl_context.ProgramUniform1iv)
#define glProgramUniform1ui (glad_gl_context.ProgramUniform1ui)
#define glProgramUniform1uiv (glad_gl_context.ProgramUniform1uiv)
#define glProgramUniform2f (glad_gl_context.ProgramUniform2f)
#define glProgramUniform2fv (glad_gl_context.ProgramUniform2fv)
#define glProgramUniform2i (glad_gl_context.ProgramUniform2i)
#define glProgramUniform2iv (glad_gl_context.ProgramUniform2iv)
#define glProgramUniform2ui (glad_gl_context.ProgramUniform2ui)
#define glProgramUniform2uiv (glad_gl_context.ProgramUniform2uiv)
#define glProgramUniform3f (glad_gl_context.ProgramUniform3f)
#define glProgramUniform3fv (glad_gl_context.ProgramUniform3fv)
#define glProgramUniform3i (glad_gl_context.ProgramUniform3i)
#define glProgramUniform3iv (glad_gl_context.ProgramUniform3iv)
#define glProgramUniform3ui (glad_gl_context.ProgramUniform3ui)
#define glProgramUniform3uiv (glad_gl_context.ProgramUniform3uiv)
#define glProgramUniform4f (glad_gl_context.ProgramUniform4f)
#define glProgramUniform4fv (glad_gl_context.ProgramUniform4fv)
#define glProgramUniform4i (glad_gl_context.ProgramUniform4i)
#define glProgramUniform4iv (glad_gl_context.ProgramUniform4iv)
#define glProgramUniform4ui (glad_gl_context.ProgramUniform4ui)
#define glProgramUniform4uiv (glad_gl_context.ProgramUniform4uiv)
#define glProgramUniformMatrix2fv (glad_gl_context.ProgramUniformMatrix2fv)
#define glProgramUniformMatrix2x3fv (glad_gl_context.ProgramUniformMatrix2x3fv)
#define glProgramUniformMatrix2x4fv (glad_gl_context.ProgramUniformMatrix2x4fv)
#define glProgramUniformMatrix3fv (glad_gl_context.ProgramUniformMatrix3fv)
#define glProgramUniformMatrix3x2fv (glad_gl_context.ProgramUniformMatrix3x2fv)
#define glProgramUniformMatrix3x4fv (glad_gl_context.ProgramUniformMatrix3x4fv)
#define glProgramUniformMatrix4fv (glad_gl_context.ProgramUniformMatrix4fv)
#define glProgramUniformMatrix4x2fv (glad_gl_context.ProgramUniformMatrix4x2fv)
#define glProgramUniformMatrix4x3fv (glad_gl_context.ProgramUniformMatrix4x3fv)
#define glPushDebugGroupKHR (glad_gl_context.PushDebugGroupKHR)
#define glQueryCounterEXT (glad_gl_context.QueryCounterEXT)
#define glReadnPixels (glad_gl_context.ReadnPixels)
#define glReadnPixelsEXT (glad_gl_context.ReadnPixelsEXT)
#define glReadnPixelsKHR (glad_gl_context.ReadnPixelsKHR)
#define glReleaseShaderCompiler (glad_gl_context.ReleaseShaderCompiler)
#define glRenderbufferStorage (glad_gl_context.RenderbufferStorage)
#define glRenderbufferStorageMultisample (glad_gl_context.RenderbufferStorageMultisample)
#define glRenderbufferStorageMultisampleEXT (glad_gl_context.RenderbufferStorageMultisampleEXT)
#define glRenderbufferStorageMultisampleNV (glad_gl_context.RenderbufferStorageMultisampleNV)
#define glResumeTransformFeedback (glad_gl_context.ResumeTransformFeedback)
#define glSampleCoverage (glad_gl_context.SampleCoverage)
#define glSampleMaski (glad_gl_context.SampleMaski)
#define glSamplerParameterIiv (glad_gl_context.SamplerParameterIiv)
#define glSamplerParameterIivEXT (glad_gl_context.SamplerParameterIivEXT)
#define glSamplerParameterIivOES (glad_gl_context.SamplerParameterIivOES)
#define glSamplerParameterIuiv (glad_gl_context.SamplerParameterIuiv)
#define glSamplerParameterIuivEXT (glad_gl_context.SamplerParameterIuivEXT)
#define glSamplerParameterIuivOES (glad_gl_context.SamplerParameterIuivOES)
#define glSamplerParameterf (glad_gl_context.SamplerParameterf)
#define glSamplerParameterfv (glad_gl_context.SamplerParameterfv)
#define glSamplerParameteri (glad_gl_context.SamplerParameteri)
#define glSamplerParameteriv (glad_gl_context.SamplerParameteriv)
#define glScissorArrayvNV (glad_gl_context.ScissorArrayvNV)
#define glScissorArrayvOES (glad_gl_context.ScissorArrayvOES)
#define glScissorIndexedNV (glad_gl_context.ScissorIndexedNV)
#define glScissorIndexedOES (glad_gl_context.ScissorIndexedOES)
#define glScissorIndexedvNV (glad_gl_context.ScissorIndexedvNV)
#define glScissorIndexedvOES (glad_gl_context.ScissorIndexedvOES)
#define glShaderBinary (glad_gl_context.ShaderBinary)
#define glShaderSource (glad_gl_context.ShaderSource)
#define glStencilFuncSeparate (glad_gl_context.StencilFuncSeparate)
#define glStencilMaskSeparate (glad_gl_context.StencilMaskSeparate)
#define glStencilOpSeparate (glad_gl_context.StencilOpSeparate)
#define glTexBuffer (glad_gl_context.TexBuffer)
#define glTexBufferEXT (glad_gl_context.TexBufferEXT)
#define glTexBufferOES (glad_gl_context.TexBufferOES)
#define glTexBufferRange (glad_gl_context.TexBufferRange)
#define glTexBufferRangeEXT (glad_gl_context.TexBufferRangeEXT)
#define glTexBufferRangeOES (glad_gl_context.TexBufferRangeOES)
#define glTexParameterIiv (glad_gl_context.TexParameterIiv)
#define glTexParameterIivEXT (glad_gl_context.TexParameterIivEXT)
#define glTexParameterIivOES (glad_gl_context.TexParameterIivOES)
#define glTexParameterIuiv (glad_gl_context.TexParameterIuiv)
#define glTexParameterIuivEXT (glad_gl_context.TexParameterIuivEXT)
#define glTexParameterIuivOES (glad_gl_context.TexParameterIuivOES)
#define glTexStorage2D (glad_gl_context.TexStorage2D)
#define glTexStorage2DMultisample (glad_gl_context.TexStorage2DMultisample)
#define glTexStorage3D (glad_gl_context.TexStorage3D)
#define glTexStorage3DMultisample (glad_gl_context.TexStorage3DMultisample)
#define glTexStorage3DMultisampleOES (glad_gl_context.TexStorage3DMultisampleOES)
#define glTransformFeedbackVaryings (glad_gl_context.TransformFeedbackVaryings)
#define glUniform1f (glad_gl_context.Uniform1f)
#define glUniform1fv (glad_gl_context.Uniform1fv)
#define glUniform1i (glad_gl_context.Uniform1i)
#define glUniform1iv (glad_gl_context.Uniform1iv)
#define glUniform1ui (glad_gl_context.Uniform1ui)
#define glUniform1uiv (glad_gl_context.Uniform1uiv)
#define glUniform2f (glad_gl_context.Uniform2f)
#define glUniform2fv (glad_gl_context.Uniform2fv)
#define glUniform2i (glad_gl_context.Uniform2i)
#define glUniform2iv (glad_gl_context.Uniform2iv)
#define glUniform2ui (glad_gl_context.Uniform2ui)
#define glUniform2uiv (glad_gl_context.Uniform2uiv)
#define glUniform3f (glad_gl_context.Uniform3f)
#define glUniform3fv (glad_gl_context.Uniform3fv)
#define glUniform3i (glad_gl_context.Uniform3i)
#define glUniform3iv (glad_gl_context.Uniform3iv)
#define glUniform3ui (glad_gl_context.Uniform3ui)
#define glUniform3uiv (glad_gl_context.Uniform3uiv)
#define glUniform4f (glad_gl_context.Uniform4f)
#define glUniform4fv (glad_gl_context.Uniform4fv)
#define glUniform4i (glad_gl_context.Uniform4i)
#define glUniform4iv (glad_gl_context.Uniform4iv)
#define glUniform4ui (glad_gl_context.Uniform4ui)
#define glUniform4uiv (glad_gl_context.Uniform4uiv)
#define glUniformBlockBinding (glad_gl_context.UniformBlockBinding)
#define glUniformMatrix2fv (glad_gl_context.UniformMatrix2fv)
#define glUniformMatrix2x3fv (glad_gl_context.UniformMatrix2x3fv)
#define glUniformMatrix2x3fvNV (glad_gl_context.UniformMatrix2x3fvNV)
#define glUniformMatrix2x4fv (glad_gl_context.UniformMatrix2x4fv)
#define glUniformMatrix2x4fvNV (glad_gl_context.UniformMatrix2x4fvNV)
#define glUniformMatrix3fv (glad_gl_context.UniformMatrix3fv)
#define glUniformMatrix3x2fv (glad_gl_context.UniformMatrix3x2fv)
#define glUniformMatrix3x2fvNV (glad_gl_context.UniformMatrix3x2fvNV)
#define glUniformMatrix3x4fv (glad_gl_context.UniformMatrix3x4fv)
#define glUniformMatrix3x4fvNV (glad_gl_context.UniformMatrix3x4fvNV)
#define glUniformMatrix4fv (glad_gl_context.UniformMatrix4fv)
#define glUniformMatrix4x2fv (glad_gl_context.UniformMatrix4x2fv)
#define glUniformMatrix4x2fvNV (glad_gl_context.UniformMatrix4x2fvNV)
#define glUniformMatrix4x3fv (glad_gl_context.UniformMatrix4x3fv)
#define glUniformMatrix4x3fvNV (glad_gl_context.UniformMatrix4x3fvNV)
#define glUnmapBuffer (glad_gl_context.UnmapBuffer)
#define glUnmapBufferOES (glad_gl_context.UnmapBufferOES)
#define glUseProgram (glad_gl_context.UseProgram)
#define glUseProgramStages (glad_gl_context.UseProgramStages)
#define glUseProgramStagesEXT (glad_gl_context.UseProgramStagesEXT)
#define glValidateProgram (glad_gl_context.ValidateProgram)
#define glValidateProgramPipeline (glad_gl_context.ValidateProgramPipeline)
#define glValidateProgramPipelineEXT (glad_gl_context.ValidateProgramPipelineEXT)
#define glVertexAttrib1f (glad_gl_context.VertexAttrib1f)
#define glVertexAttrib1fv (glad_gl_context.VertexAttrib1fv)
#define glVertexAttrib2f (glad_gl_context.VertexAttrib2f)
#define glVertexAttrib2fv (glad_gl_context.VertexAttrib2fv)
#define glVertexAttrib3f (glad_gl_context.VertexAttrib3f)
#define glVertexAttrib3fv (glad_gl_context.VertexAttrib3fv)
#define glVertexAttrib4f (glad_gl_context.VertexAttrib4f)
#define glVertexAttrib4fv (glad_gl_context.VertexAttrib4fv)
#define glVertexAttribBinding (glad_gl_context.VertexAttribBinding)
#define glVertexAttribDivisor (glad_gl_context.VertexAttribDivisor)
#define glVertexAttribDivisorANGLE (glad_gl_context.VertexAttribDivisorANGLE)
#define glVertexAttribDivisorEXT (glad_gl_context.VertexAttribDivisorEXT)
#define glVertexAttribDivisorNV (glad_gl_context.VertexAttribDivisorNV)
#define glVertexAttribFormat (glad_gl_context.VertexAttribFormat)
#define glVertexAttribI4i (glad_gl_context.VertexAttribI4i)
#define glVertexAttribI4iv (glad_gl_context.VertexAttribI4iv)
#define glVertexAttribI4ui (glad_gl_context.VertexAttribI4ui)
#define glVertexAttribI4uiv (glad_gl_context.VertexAttribI4uiv)
#define glVertexAttribIFormat (glad_gl_context.VertexAttribIFormat)
#define glVertexAttribIPointer (glad_gl_context.VertexAttribIPointer)
#define glVertexAttribPointer (glad_gl_context.VertexAttribPointer)
#define glVertexBindingDivisor (glad_gl_context.VertexBindingDivisor)
#define glViewportArrayvNV (glad_gl_context.ViewportArrayvNV)
#define glViewportArrayvOES (glad_gl_context.ViewportArrayvOES)
#define glViewportIndexedfNV (glad_gl_context.ViewportIndexedfNV)
#define glViewportIndexedfOES (glad_gl_context.ViewportIndexedfOES)
#define glViewportIndexedfvNV (glad_gl_context.ViewportIndexedfvNV)
#define glViewportIndexedfvOES (glad_gl_context.ViewportIndexedfvOES)
#define glWaitSync (glad_gl_context.WaitSync)
#define glWaitSyncAPPLE (glad_gl_context.WaitSyncAPPLE)
#endif


GLAD_API_CALL GladGLContext* gladGetGLContext(void);
GLAD_API_CALL void gladSetGLContext(GladGLContext *context);


GLAD_API_CALL int gladLoadGLContextUserPtr(GladGLContext *context, GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLContext(GladGLContext *context, GLADloadfunc load);

GLAD_API_CALL int gladLoadGLUserPtr(GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGL(GLADloadfunc load);
GLAD_API_CALL int gladLoadGLES2ContextUserPtr(GladGLContext *context, GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLES2Context(GladGLContext *context, GLADloadfunc load);

GLAD_API_CALL int gladLoadGLES2UserPtr(GLADuserptrloadfunc load, void *userptr);
GLAD_API_CALL int gladLoadGLES2(GLADloadfunc load);

#ifdef GLAD_GL

GLAD_API_CALL int gladLoaderLoadGLContext(GladGLContext *context);
GLAD_API_CALL void gladLoaderUnloadGLContext(GladGLContext *context);
GLAD_API_CALL void gladLoaderResetGLContext(GladGLContext *context);
GLAD_API_CALL int gladLoaderLoadGL(void);
GLAD_API_CALL void gladLoaderUnloadGL(void);
GLAD_API_CALL void gladLoaderResetGL(void);

#endif
#ifdef GLAD_GLES2

GLAD_API_CALL int gladLoaderLoadGLES2Context(GladGLContext *context);
GLAD_API_CALL void gladLoaderUnloadGLES2Context(GladGLContext *context);
GLAD_API_CALL void gladLoaderResetGLES2Context(GladGLContext *context);
GLAD_API_CALL int gladLoaderLoadGLES2(void);
GLAD_API_CALL void gladLoaderUnloadGLES2(void);
GLAD_API_CALL void gladLoaderResetGLES2(void);

#endif /* GLAD_GLES2 */


#ifdef __cplusplus
}
#endif
#endif
